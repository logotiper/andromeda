//===========================================================================================
//Слив специально для Pawno-Info.Ru by Sasha_Grigor                                         =
//Мой профиль на Pawno-Info.Ru http://pawno-info.ru/member.php?u=45654                      =
//Скачал мод? Понравлось? поставь "Спасибо" под моим сообщением в теме где скачал мод.      =
//==========================[Ответы на частые вопросы]=======================================
//Пароль от админки - 00001111                                                              =
//Данные от MySQL базы прописывайте в scriptfiles >> mysql_settings.ini                     =
//В моде нет маппинга,его вы можете найти по отдельности на Pawno-Info.Ru в разделе [MAP]   =
//===========================================================================================
#include <a_samp>
#include <a_http>
#include <sql>
#include <sscanf2>
#include <streamer>
#include <regex>
#include <PointToPoint>
#include <strlib>
#include <mxINI>
#include <md5>
#include <foreach>
#include <YSI\y_ini> // Credits to Y_Less
#include <progress>
#include <getvehicledriver>
#include <dc_cmd>
#include <YSI\y_timers>
//*********************************************
#define D_SELOVER 1 // Кол-во человек для капта
#define D_SELOVER_MAFIA 1 // Кол-во человек для капта мафии
//*********************************************
#undef MAX_PLAYERS
#define MAX_PLAYERS 350
//************************
#include <Vectoral>
new PLAYERS;
new SQL:zConn;

new zbtpass = 75144772; //Администраторский пароль


PlayerText:CreateInfoCasino(playerid, Float:X, Float: Y, Nameb[] )
{
	new PlayerText: RestSript;
	RestSript = CreatePlayerTextDraw(playerid, X, Y, Nameb);
	PlayerTextDrawLetterSize(playerid, RestSript, 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid,RestSript, 21.000000, 23.229614);
	PlayerTextDrawAlignment(playerid,RestSript, 1);
	PlayerTextDrawColor(playerid,RestSript, -1);
	PlayerTextDrawSetShadow(playerid,RestSript, 0);
	PlayerTextDrawSetOutline(playerid,RestSript, 0);
	PlayerTextDrawFont(playerid,RestSript, 4);
	return RestSript;
}

Text:CreateSprite(Float:X,Float:Y,Nameb[])
{
	new Text:RetSprite;
	RetSprite = TextDrawCreate(X, Y, Nameb);
	TextDrawLetterSize(RetSprite, 0.000000, 0.000000);
	TextDrawTextSize(RetSprite, 51.999988, 60.977779);
	TextDrawAlignment(RetSprite, 1);
	TextDrawColor(RetSprite, -1);
	TextDrawSetShadow(RetSprite, 0);
	TextDrawSetOutline(RetSprite, 0);
	TextDrawFont(RetSprite, 4);
	return RetSprite;
}
new slotused[MAX_PLAYERS char];
new playerIp[MAX_PLAYERS][16];
new Patronboxv[MAX_VEHICLES],
    Text3D:VehPT[MAX_VEHICLES],
	VehicleEdenits[MAX_VEHICLES];
new PlayerText: MafiaCapture,
	MAFIA_A[50],
	MAFIA_B[50],
	MAFIA_SCORE[2],
	MAFIA_SCORE2[2],
	MAFIA_LOSTTIME = 0,
	MAFIA_TIME = 0,
	MAFIA_STARTZAXVAT = 0,
	MAFIA_STARTZAXVAT2 = 0,
	MAFIA_NAPAD = 0,
	MAFIA_ZONE = 0;
enum MafiaEnum
{
	mID,
	mGun[7],
	mMaterial,
	mEdenits
}
new gMafiaInfo[3][MafiaEnum];
new bool:gMafiaAcces[3][5];
new gMafiaValue[3];
new Text3D:gMafia3D[3];
new gMafiaPickup[3];
new BANDAA[50],
 	BANDAB[50],
 	SCORE1[50],
 	SCORE2[50],
 	stringText[45];
new Float: gMafiaCoord[12][6] = {
 	{976.9150, -1521.2280, 13.5017,   0.0000, 0.0000, 0.0000},
 	{680.78, -439.82, 16.17,   0.00, 0.00, 357.46},
  	{42.21, -246.57, 1.55,   0.00, 0.00, 86.66},
  	{-328.93, 1039.81, 19.72,   0.00, 0.00, 0.00},
  	{-762.57, 1608.49, 26.83,   0.00, 0.00, 355.36},
  	{-340.76, 1541.25, 75.50,   0.00, 0.00, 271.14},
  	{-98.56, 1379.38, 10.24,   0.00, 0.00, 278.12},
  	{1111.58, 1920.10, 10.58,   0.00, 0.00, 270.65},
  	{1642.31, 2358.86, 10.62,   0.00, 0.00, 270.85},
  	{-2177.42, 609.84, 35.10,   0.00, 0.00, 269.98},
  	{-1516.54, 1162.80, 8.50,   0.00, 0.00, 88.83},
  	{-2540.54, -613.08, 132.74,   0.00, 0.00, 90.13}
};
new SpdObj[MAX_PLAYERS][4];
new bool:UpdateSpeed[MAX_PLAYERS] = {false,...};
new Bar:Graffity[MAX_PLAYERS] = {INVALID_BAR_ID, ...};
new PlayerText: gInfoCasino[14];
new PlayerText: gCarInfoBuy;
//----------------------[Казино---------------------------------------------
#define MIN_IGROKOV (2)
#define MIN_STAVKA (1000)
#define MAX_STAVKA (5000000)
//000000000000000000000000000000000000000000000000000000000000000000000000000000
new
	TimeStavka[8] = 0;
new
	Text:KostiBox[8],
	Text:TableName[8],
	Text:KostiInfo[8],
	Text:KostiGameInfo[8],
	Text:KostiKeyExit,
	Text:KostiKeyDone,
	Text:KostiKeyStavka;

new
Float:StolCoor[8][3] ={
	{1958.67, 1028.13, 991.94},
	{1958.84, 1021.62, 991.94},
	{1958.87, 1015.71, 991.94},
	{1958.86, 1008.58, 991.94},
	{1964.22, 1008.55, 991.94},
	{1964.13, 1015.52, 991.94},
	{1964.08, 1021.56, 991.94},
	{1964.08, 1027.99, 991.94}
};

new Text3D:StolCoorText[8];
new
pickup, CasinoInfo[2];

enum Stol {
	Gamer[5],
	Stavka,
	Bank,
	Crupe,
	Igrokov,
	GameStart
}
new StolInfo[8][Stol];
new gCasinoCP[6];
new admpass = 00001111; //Администраторский пароль
//************************




#define G_STATE_NOT_GAMBLING    0
#define G_STATE_READY           1
#define G_STATE_GAMBLING        2
#define G_STATE_DISPLAY         3
#define G_STATE_PLAY_AGAIN      4

new Text:KeyStartGang, Text: KeyMoneyGang, Text: KeyExitGang, Text: KasinoGangBox, PlayerText: CasinoStavka, PlayerText: CasinoAllMoney;
new Text:Box,Text:Digit1[6],Text:Digit2[6],Text:Digit3[6],Slots[MAX_PLAYERS][3],SlotCounter[MAX_PLAYERS],Gambling[MAX_PLAYERS],SlotTimer[MAX_PLAYERS],Bet[MAX_PLAYERS],Balance[MAX_PLAYERS];
new PlayerText:RECON[MAX_PLAYERS],Menu:specmenu;
//**********************************
new ADG[MAX_PLAYERS][2];
//**********************************


#define scf(%0,%1,%2)			format(%1,sizeof(%1),%2), strcat(%0,%1)
#define Iter::					Iter_
new gLastCar				[MAX_PLAYERS];

//http://baskino.com/films/komedii/7927-odnazhdy-ukushennyy.html
new bool:VehicleCreate[MAX_VEHICLES];
new bool:unoccupied[MAX_VEHICLES];
#define SPECIAL_ACTION_USECELLPHONE      11
#define SPECIAL_ACTION_STOPUSECELLPHONE    13
new ghour,gminute,gsecond;

new bool:CaptureBegin = true;
///Гос новости///////
new PlayerGoverments[MAX_PLAYERS][3][128];
////////////////////
new PromoText[100];
//Банк ограбление
new
 	BreakDoorObject[5],
 	gBreakDoorPickup[3],
 	gDetonatePickup[1][2],
 	gDetonateArea[1][2],
 	bool:ActivDetonatr = false,
 	bool:ActivDetonatr1 = false,
 	CPForID[MAX_PLAYERS][4],
	gOtmiv[5];


new Float:gGraffityPos[][4] = {
	{2797.9265,-1097.3798,30.7188,178.6120}, // 0
	{2763.3245,-2012.1112,13.5547,93.4705}, // 1
	{2794.5254,-1906.4797,13.5394,182.7484}, // 2
	{2813.2878,-1942.0458,11.1094,90.6275}, // 3
	{2768.1199,-1621.4207,10.9272,89.4994}, // 4
	{2422.4924,-1682.1704,13.8019,262.8837}, //5
	{2522.1294,-1478.7338,23.9916,271.1560}, //6
	{2353.2900,-1508.1697,24.0000,282.0600}, //7
	{2392.2671,-1914.8724,13.5469,2.5249}, //8
	{2430.2698,-1998.2244,13.5469,2.3994}, //9
	{2587.6543,-2063.5120,4.5407,97.4795}, //10
	{1799.4580,-1708.7128,13.5275,79.9494}, //11
	{1888.9281,-1982.5775,13.5469,272.0155}, //12
	{1837.2257,-1813.8424,3.9844,171.4577}, //13
	{1910.0966,-1779.3435,17.9766,182.1970}, //14
	{2034.3284,-1801.9723,14.4844,3.8066}, //15
	{2065.3394,-1897.5507,13.5538,7.7313}, //16
	{2162.6868,-1786.4010,13.5190,5.2641}, //17
	{2272.8936,-1687.7472,13.6518,356.9920}, //18
	{2755.6975,-1388.1649,39.3797,263.5784}, //19
	{2668.2029,-1469.1185,30.5609,89.3241}, //20
	{2612.8069,-1391.1146,34.7276,4.3475}, //21
	{2580.6230,-1274.0964,46.1439,263.2028}, //22
	{2536.5747,-1352.7711,30.7753,92.9198}, //23
	{2542.6504,-1363.2739,31.3804,269.2654}, //24
	{1732.3861,-963.1152,40.9615,272.1625}, //25
	{2062.3591,-996.4717,47.9766,247.1190}, //26
	{2239.9287,-999.4714,59.5903,153.1180}, //27
	{1966.9635,-1175.0701,20.0307,8.0434}, //28
	{2122.2246,-1060.9802,25.1020,263.6789}, //29
	{1912.2295,-1064.5040,24.1247,81.2755}, //30
	{2076.4329,-1070.9404,27.1070,215.9868}, //31
	{2281.8049,-1118.9969,26.8984,84.9888}, //32
	{2119.3262,-1196.2495,23.8201,178.6998}, //33
	{2322.7500,-1254.4601,22.5000,81.5890}, //34
	{2224.4053,-1193.3636,25.6753,341.9714}, //35
	{2346.3691,-1351.1006,24.0177,351.9981}, //36
	{2132.4082,-1258.4141,23.9922,3.6383}, //37
	{1969.2720,-1289.6301,23.9844,265.9008}, //38
	{1974.0242,-1351.8376,23.8443,358.0216}, //39
	{1687.1205,-1238.7031,14.9844,182.2635}, //40
	{1746.7494,-1359.4213,15.7673,188.8668}, //41
	{2234.2900,-1367.8345,24.5313,80.1390}, //42
	{2399.3494,-1551.6814,28.0000,186.3366}, //43
	{2182.1958,-1467.5555,25.5391,173.8264}, //44
	{2093.6711,-1413.8092,23.9821,356.8148}, //45
	{2073.8311,-1579.0972,13.4550,256.8838}, //46
	{1959.2689,-1577.3779,13.5885,215.2101}, //47
	{2394.0203,-1468.5393,24.0121,5.0784}, //48
	{2522.1201,-1478.7433,23.9916,268.8842}//49
};
new gGraffityCP[51];
new gGraffityObject[51];
new gGraffityGang[51];


static Float:SkinOffSetGlasses[300][7] = {
	{0.098771, 0.030772, -0.000335, 85.342658, 84.122947, 4.236968 }, // - 0
	{0.100766, 0.028630, -0.003521, 87.936676, 82.110870, 4.236968 }, // - 1
	{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 }, // - 2
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 3
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 4
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 5
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 6
	{0.090066, 0.043458, -0.006523, 87.936676, 82.110870, 4.236968 }, // - 7
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 8
	{0.070977, 0.028663, 0.000147, 81.164970, 92.128402, 4.236968 }, // - 9
	{0.072317, 0.032179, -0.002934, 86.843269, 84.196006, 4.236968 }, // - 10
	{0.072317, 0.035465, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 11
	{0.072317, 0.028100, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 12
	{0.076569, 0.028100, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 13
	{0.091310, 0.049169, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 14
	{0.073734, 0.006292, -0.002755, 86.843269, 84.196006, 4.236968 }, // - 15
	{0.092845, 0.040331, 0.000183, 86.843269, 82.864280, 4.236968 }, // - 16
	{0.088241, 0.030184, -0.000157, 86.843269, 82.864280, 4.236968 }, // - 17
	{0.061677, 0.029596, -0.007398, 86.843269, 82.864280, 4.236968 }, // - 18
	{0.079911, 0.029596, -0.002934, 86.843269, 82.864280, 4.236968 }, // - 19
	{0.095079, 0.029596, -0.001718, 85.261871, 86.296562, 4.236968 }, // - 20
	{0.093728, 0.042083, -0.005781, 85.261871, 81.636192, 4.236968 }, // - 21
	{0.079585, 0.042083, -0.005781, 85.261871, 81.636192, 4.236968 }, // - 22
	{0.090786, 0.041737, -0.005263, 85.261871, 81.636192, 4.236968 }, // - 23
	{0.085247, 0.026941, -0.000317, 85.261871, 81.636192, 4.236968 }, // - 24
	{0.081646, 0.031448, -0.001113, 89.393653, 81.665985, 4.236968 }, // - 25
	{0.083700, 0.033814, -0.001960, 86.436462, 81.665985, 4.236968 }, // - 26
	{0.092498, 0.037321, -0.001960, 86.436462, 85.568023, 4.236968 }, // - 27
	{0.097068, 0.041360, -0.007881, 86.771400, 85.568023, 4.236968 }, // - 28
	{0.083456, 0.050595, 0.001011, 86.771400, 77.201461, 4.236968 }, // - 29
	{0.076983, 0.047168, -0.006161, 86.771400, 74.329719, 4.236968 }, // - 30
	{0.083798, 0.042184, -0.001869, 86.771400, 83.181861, 4.236968 }, // - 31
	{0.053021, -0.000587, -0.001869, 86.771400, 66.859710, 4.236968 },// - 32
	{0.034386, 0.013324, -0.001869, 86.771400, 80.314460, 4.236968 }, // - 33
	{0.104669, 0.037365, -0.001403, 86.771400, 87.178382, 4.236968 }, // - 34
	{0.102659, 0.037465, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 35
	{0.107638, 0.037465, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 36
	{0.107638, 0.035879, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 37
	{0.107638, 0.041106, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 38
	{0.080326, 0.035634, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 39
	{0.080326, 0.027371, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 40
	{0.084617, 0.039613, -0.001620, 86.771400, 93.020492, 4.236968 }, // - 41
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 42
	{0.040075, 0.025445, -0.000974, 86.771400, 92.964149, 4.236968 }, // - 43
	{0.077369, 0.028469, -0.000974, 86.771400, 78.435791, 4.236968 }, // - 44
	{0.064145, 0.028684, -0.000974, 86.771400, 84.762802, 4.236968 }, // - 45
	{0.091993, 0.056559, -0.000974, 86.771400, 84.762802, 4.236968 }, // - 46
	{0.084582, 0.051277, -0.005034, 86.771400, 84.762802, 4.236968 }, // - 47
	{0.092182, 0.042095, -0.003533, 86.771400, 84.762802, 4.236968 }, // - 48
	{0.086866, 0.032203, -0.001021, 86.771400, 84.762802, 4.236968 }, // - 49
	{0.099350, 0.009422, -0.005899, 86.771400, 84.762802, 4.236968 }, // - 50
	{0.099350, 0.030598, -0.005899, 86.771400, 84.762802, 4.236968 }, // - 51
	{0.099350, 0.030598, -0.003575, 86.771400, 84.762802, 4.236968 }, // - 52
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 53
	{0.079123, 0.030598, -0.003575, 86.771400, 84.762802, 4.236968 }, // - 54
	{0.063159, 0.029641, -0.003575, 86.771400, 84.762802, 4.236968 }, // - 55
	{0.070293, 0.029641, -0.000570, 86.771400, 84.762802, 4.236968 }, // - 56
	{0.111305, 0.045368, -0.000570, 86.771400, 84.458084, 4.236968 }, // - 57
	{0.084901, 0.020965, -0.000570, 86.771400, 79.542411, 4.236968 }, // - 58
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 59
	{0.090164, 0.044163, -0.004754, 86.771400, 79.542411, 4.236968 }, // - 60
	{0.087151, 0.041447, -0.000885, 90.928329, 89.598678, 0.000000 }, // - 61
	{0.094350, 0.041447, 0.005717, 90.928329, 89.598678, 0.000000 }, // - 62
	{0.075534, 0.041447, -0.001751, 90.928329, 89.598678, 0.000000 }, // - 63
	{0.075534, 0.041447, -0.001751, 90.928329, 89.598678, 0.000000 }, // - 64
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 65
	{0.104148, 0.034787, 0.001341, 90.928329, 89.598678, 0.000000 }, // - 66
	{0.104148, 0.034787, 0.001341, 90.928329, 89.598678, 0.000000 }, // - 67
	{0.087317, 0.039646, -0.004032, 90.928329, 89.598678, 0.000000 }, // - 68
	{0.074873, 0.039646, -0.003072, 90.928329, 89.598678, 0.000000 }, // - 69
	{0.090391, 0.042364, 0.005494, 90.928329, 89.598678, 0.000000 }, // - 70
	{0.090391, 0.022298, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 71
	{0.090391, 0.039580, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 72
	{0.090391, 0.038224, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 73
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 74
	{0.083113, 0.038224, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 75
	{0.072957, 0.028956, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 76
	{0.069398, 0.039981, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 77
	{0.105738, 0.010001, 0.004508, 90.928329, 79.030494, 0.000000 }, // - 78
	{0.078264, 0.019668, 0.004508, 90.928329, 79.030494, 0.000000 }, // - 79
	{0.087377, 0.022096, -0.001993, 90.928329, 79.030494, 0.000000 }, // - 80
	{0.087377, 0.022096, -0.001635, 90.928329, 79.030494, 0.000000 }, // - 81
	{0.100623, 0.043063, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 82
	{0.092528, 0.027493, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 83
	{0.102086, 0.027493, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 84
	{0.081954, 0.041672, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 85
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 86
	{0.077010, 0.046925, -0.003438, 90.928329, 91.590301, 0.000000 }, // - 87
	{0.069952, 0.042635, -0.003438, 90.928329, 86.722587, 0.000000 }, // - 88
	{0.093827, 0.019258, -0.003438, 90.928329, 86.722587, 0.000000 }, // - 89
	{0.066464, 0.035685, -0.000843, 90.928329, 86.722587, 0.000000 }, // - 90
	{0.066464, 0.035685, -0.000843, 90.928329, 86.722587, 0.000000 }, // - 91
	{0.066464, 0.038135, -0.000843, 90.928329, 86.722587, 0.000000 }, // - 92
	{0.066464, 0.038135, -0.001690, 90.928329, 86.722587, 0.000000 }, // - 93
	{0.048124, 0.010598, -0.001690, 90.928329, 86.722587, 0.000000 }, // - 94
	{0.084997, 0.006773, -0.001690, 90.928329, 86.722587, 0.000000 }, // - 95
	{0.100076, 0.026633, -0.001690, 90.928329, 80.020179, 0.000000 }, // - 96
	{0.061686, 0.027537, -0.001690, 90.928329, 80.020179, 0.000000 }, // - 97
	{0.098318, 0.053993, -0.001690, 90.928329, 89.237678, 0.000000 }, // - 98
	{0.098318, 0.033702, -0.001690, 90.928329, 89.237678, 0.000000 }, // - 99
	{0.086149, 0.042526, -0.001690, 90.928329, 77.587478, 0.000000 }, // - 100
	{0.081864, 0.030555, -0.001690, 90.928329, 78.145759, 0.000000 }, // - 101
	{0.081864, 0.047914, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 102
	{0.089607, 0.036717, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 103
	{0.079655, 0.042021, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 104
	{0.091779, 0.037620, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 105
	{0.084179, 0.035251, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 106
	{0.089387, 0.040297, -0.006006, 90.928329, 78.145759, 0.000000 }, // - 107
	{0.081930, 0.030756, 0.001523, 90.928329, 78.145759, 0.000000 }, // - 108
	{0.092857, 0.043070, -0.006084, 90.928329, 85.326652, 0.000000 }, // - 109
	{0.092857, 0.043070, -0.006084, 90.928329, 85.326652, 0.000000 }, // - 110
	{0.106601, 0.028021, -0.003537, 90.928329, 90.217376, 0.000000 }, // - 111
	{0.096335, 0.015873, -0.003537, 90.928329, 90.217376, 0.000000 }, // - 112
	{0.105827, 0.046620, -0.001395, 90.928329, 90.217376, 0.000000 }, // - 113
	{0.097520, 0.044296, -0.007286, 90.928329, 90.217376, 0.000000 }, // - 114
	{0.097408, 0.043470, -0.007286, 90.928329, 90.217376, 0.000000 }, // - 115
	{0.092588, 0.049832, -0.007286, 90.928329, 90.217376, 0.000000 }, // - 116
	{0.081444, 0.037602, -0.003125, 90.928329, 90.217376, 0.000000 }, // - 117
	{0.078678, 0.037602, -0.001816, 90.928329, 90.217376, 0.000000 }, // - 118
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 119
	{0.089214, 0.029291, -0.000784, 90.928329, 84.624763, 0.000000 }, // - 120
	{0.086825, 0.033424, -0.000784, 90.928329, 77.233818, 0.000000 }, // - 121
	{0.082869, 0.030783, -0.000950, 90.928329, 77.233818, 0.000000 }, // - 122
	{0.096117, 0.048957, -0.006245, 90.928329, 87.579650, 0.000000 }, // - 123
	{0.103663, 0.040022, 0.000449, 90.928329, 87.579650, 0.000000 }, // - 124
	{0.099326, 0.031202, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 125
	{0.099326, 0.031132, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 126
	{0.099326, 0.039279, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 127
	{0.099326, 0.047422, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 128
	{0.088817, 0.021210, 0.000730, 90.928329, 87.579650, 0.000000 }, // - 129
	{0.025784, 0.028323, 0.000730, 90.928329, 59.394767, 0.000000 }, // - 130
	{0.068455, 0.031841, -0.004470, 90.928329, 79.979003, 0.000000 }, // - 131
	{0.012930, 0.008392, -0.004470, 90.928329, 72.129173, 0.000000 }, // - 132
	{0.102457, 0.032260, -0.003338, 90.928329, 84.534217, 0.000000 }, // - 133
	{0.085976, 0.014956, -0.003338, 90.928329, 80.308830, 0.000000 }, // - 134
	{0.071574, 0.028186, -0.001588, 90.928329, 80.308830, 0.000000 }, // - 135
	{0.085219, 0.016666, -0.000738, 90.928329, 80.308830, 0.000000 }, // - 136
	{0.065114, 0.009318, -0.000738, 90.928329, 80.308830, 0.000000 }, // - 137
	{0.066890, 0.040024, -0.000738, 90.928329, 87.341934, 0.000000 }, // - 138
	{0.072037, 0.036141, -0.000702, 90.928329, 87.341934, 0.000000 }, // - 139
	{0.069108, 0.042194, -0.000436, 90.928329, 87.341934, 0.000000 }, // - 140
	{0.058717, 0.043547, -0.000436, 90.928329, 87.209770, 0.000000 }, // - 141
	{0.104196, 0.039601, -0.005481, 90.928329, 87.209770, 0.000000 }, // - 142
	{0.090929, 0.045881, -0.012780, 90.928329, 87.209770, 0.000000 }, // - 143
	{0.098291, 0.042464, -0.006952, 90.928329, 83.081665, 0.000000 }, // - 144
	{0.080087, 0.030122, 0.000606, 90.928329, 83.081665, 0.000000 }, // - 145
	{0.093500, 0.030690, -0.001545, 90.928329, 83.081665, 0.000000 }, // - 146
	{0.079566, 0.020138, 0.004838, 90.928329, 73.715591, 0.000000 }, // - 147
	{0.073564, 0.028430, -0.000527, 90.928329, 88.295433, 0.000000 }, // - 148
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 149
	{0.073564, 0.028430, -0.000527, 90.928329, 88.295433, 0.000000 }, // - 150
	{0.083426, 0.032359, -0.005717, 90.928329, 88.295433, 0.000000 }, // - 151
	{0.072349, 0.019623, -0.000747, 90.928329, 82.624351, 0.000000 }, // - 152
	{0.075065, 0.015351, 0.006545, 90.928329, 71.041442, 0.000000 }, // - 153
	{0.062227, 0.029731, -0.004938, 90.928329, 84.602760, 0.000000 }, // - 154
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 155
	{0.079936, 0.049000, -0.000304, 90.928329, 82.926010, 0.000000 }, // - 156
	{0.067550, 0.035686, -0.000017, 90.928329, 82.926010, 0.000000 }, // - 157
	{0.090676, 0.039383, -0.001726, 90.928329, 88.667900, 0.000000 }, // - 158
	{0.090676, 0.039383, -0.003532, 90.928329, 88.667900, 0.000000 }, // - 159
	{0.098662, 0.017441, -0.001589, 90.928329, 88.667900, 0.000000 }, // - 160
	{0.105388, 0.038409, 0.003155, 90.928329, 88.667900, 0.000000 }, // - 161
	{0.097415, 0.036904, -0.000525, 90.928329, 88.667900, 0.000000 }, // - 162
	{0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000 }, // - 163
	{0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000 }, // - 164
	{0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000 }, // - 165
	{0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000 }, // - 166
	{0.095996, 0.038787, 0.000484, 90.928329, 84.315711, 0.000000 }, // - 167
	{0.089094, 0.034001, -0.006451, 90.928329, 84.315711, 0.000000 }, // - 168
	{0.075700, 0.028082, -0.006451, 90.928329, 84.315711, 0.000000 }, // - 169
	{0.093751, 0.041968, -0.005545, 90.928329, 84.315711, 0.000000 }, // - 170
	{0.090124, 0.031055, -0.000505, 90.928329, 84.315711, 0.000000 }, // - 171
	{0.066033, 0.032915, -0.002713, 90.928329, 84.315711, 0.000000 }, // - 172
	{0.088287, 0.045350, -0.005384, 90.928329, 84.315711, 0.000000 }, // - 173
	{0.087750, 0.042129, -0.005384, 90.928329, 84.315711, 0.000000 }, // - 174
	{0.092384, 0.039294, -0.005384, 90.928329, 84.315711, 0.000000 }, // - 175
	{0.097661, 0.039065, -0.006344, 90.928329, 80.736480, 0.000000 }, // - 176
	{0.097114, 0.039641, -0.006692, 90.928329, 80.736480, 0.000000 }, // - 177
	{0.069354, 0.039641, -0.000474, 90.928329, 80.736480, 0.000000 }, // - 178
	{0.091414, 0.039641, -0.005617, 90.928329, 80.736480, 0.000000 }, // - 179
	{0.094914, 0.039641, -0.005617, 90.928329, 80.736480, 0.000000 }, // - 180
	{0.117232, 0.033217, -0.001099, 90.928329, 82.396362, 0.000000 }, // - 181
	{0.082569, 0.032748, -0.003248, 90.928329, 87.394371, 0.000000 }, // - 182
	{0.095527, 0.027237, -0.001960, 90.928329, 86.443649, 0.000000 }, // - 183
	{0.095527, 0.040994, -0.006878, 90.928329, 86.443649, 0.000000 }, // - 184
	{0.085663, 0.030601, -0.002345, 90.928329, 81.496513, 0.000000 }, // - 185
	{0.085663, 0.030601, -0.001015, 90.928329, 81.496513, 0.000000 }, // - 186
	{0.076527, 0.027211, 0.008500, 90.928329, 74.401092, 0.000000 }, // - 187
	{0.096669, 0.032578, 0.001662, 90.928329, 83.502502, 0.000000 }, // - 188
	{0.098753, 0.032129, -0.001659, 90.928329, 90.153724, 0.000000 }, // - 189
	{0.092821, 0.035572, -0.001659, 90.928329, 90.153724, 0.000000 }, // - 190
	{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 191
	{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 192
	{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 193
	{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 194
	{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 195
	{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 196
	{0.100630, 0.020568, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 197
	{0.077905, 0.028523, 0.000000, 89.675476, 89.270309, 0.000000 }, // - 198
	{0.099095, 0.022463, 0.000000, 89.675476, 89.270309, 0.000000 }, // - 199
	{0.103182, 0.031106, 0.000000, 89.675476, 89.270309, 0.000000 }, // - 200
	{0.078426, 0.038546, 0.000000, 89.675476, 89.270309, 0.000000 }, // - 201
	{0.101092, 0.035797, -0.002997, 89.675476, 82.081153, 0.000000 }, // - 202
	{0.092009, 0.042780, -0.005841, 89.675476, 84.463294, 0.000000 }, // - 203
	{0.092009, 0.042780, -0.005841, 89.675476, 84.463294, 0.000000 }, // - 204
	{0.092969, 0.027782, -0.002959, 89.675476, 84.463294, 0.000000 }, // - 205
	{0.105109, 0.036128, -0.000471, 89.675476, 84.463294, 0.000000 }, // - 206
	{0.066892, 0.024410, -0.002792, 89.675476, 84.463294, 0.000000 }, // - 207
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 208
	{0.084046, 0.013608, -0.002792, 89.675476, 81.667831, 0.000000 }, // - 209
	{0.084046, 0.013608, -0.001034, 89.675476, 81.667831, 0.000000 }, // - 210
	{0.067610, 0.033777, -0.001034, 89.675476, 85.214485, 0.000000 }, // - 211
	{0.094159, 0.020717, 0.000715, 89.675476, 85.214485, 0.000000 }, // - 212
	{0.098744, 0.036786, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 213
	{0.068755, 0.036786, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 214
	{0.068755, 0.026863, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 215
	{0.068755, 0.026863, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 216
	{0.095765, 0.030034, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 217
	{0.085486, 0.039427, -0.003311, 89.675476, 85.214485, 0.000000 }, // - 218
	{0.068874, 0.027850, -0.001021, 89.675476, 85.214485, 0.000000 }, // - 219
	{0.052931, 0.050390, -0.002062, 89.675476, 88.113647, 0.000000 }, // - 220
	{0.094479, 0.034432, 0.000875, 89.675476, 83.572830, 0.000000 }, // - 221
	{0.094479, 0.034432, -0.000596, 89.675476, 83.572830, 0.000000 }, // - 222
	{0.094479, 0.062073, -0.003098, 89.675476, 83.572830, 0.000000 }, // - 223
	{0.064458, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000 }, // - 224
	{0.064458, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000 }, // - 225
	{0.072095, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000 }, // - 226
	{0.110619, 0.043037, -0.001466, 89.675476, 86.927627, 0.000000 }, // - 227
	{0.099446, 0.050772, -0.001466, 89.675476, 85.103805, 0.000000 }, // - 228
	{0.078635, 0.023680, -0.000275, 89.675476, 73.445220, 0.000000 }, // - 229
	{0.043357, 0.028726, -0.000275, 89.675476, 73.445220, 0.000000 }, // - 230
	{0.092488, 0.049972, -0.000275, 89.675476, 88.981941, 0.000000 }, // - 231
	{0.092488, 0.016739, -0.000275, 89.675476, 88.981941, 0.000000 }, // - 232
	{0.071677, 0.037055, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 233
	{0.082745, 0.004209, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 234
	{0.057909, 0.021331, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 235
	{0.079016, 0.021331, -0.000419, 89.675476, 77.678733, 0.000000 }, // - 236
	{0.074572, 0.021331, -0.000419, 89.675476, 84.527442, 0.000000 }, // - 237
	{0.074572, 0.038346, -0.001500, 89.675476, 84.527442, 0.000000 }, // - 238
	{0.111645, 0.011549, 0.006237, 89.675476, 84.527442, 0.000000 }, // - 239
	{0.090766, 0.044221, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 240
	{0.069491, 0.049021, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 241
	{0.059706, 0.031911, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 242
	{0.065242, 0.031911, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 243
	{0.065242, 0.051077, -0.001103, 89.675476, 89.461883, 0.000000 }, // - 244
	{0.082393, 0.038233, 0.000410, 89.675476, 89.461883, 0.000000 }, // - 245
	{0.079338, 0.044859, -0.002535, 89.675476, 89.461883, 0.000000 }, // - 246
	{0.101566, 0.037019, 0.000750, 89.675476, 83.514060, 0.000000 }, // - 247
	{0.091887, 0.047776, -0.000040, 89.675476, 83.514060, 0.000000 }, // - 248
	{0.089745, 0.044044, 0.004071, 89.675476, 83.514060, 0.000000 }, // - 249
	{0.094214, 0.044044, -0.007274, 89.675476, 83.514060, 0.000000 }, // - 250
	{0.072282, 0.044044, -0.001468, 89.675476, 90.444763, 0.000000 }, // - 251
	{0.095764, 0.034224, -0.000264, 89.675476, 82.959915, 0.000000 }, // - 252
	{0.087454, 0.026208, -0.000264, 89.675476, 82.959915, 0.000000 }, // - 253
	{0.099198, 0.037362, -0.000264, 89.675476, 82.959915, 0.000000 }, // - 254
	{0.070845, 0.019943, 0.003505, 89.675476, 73.529716, 0.000000 }, // - 255
	{0.065373, 0.033656, -0.001141, 89.675476, 83.002151, 0.000000 }, // - 256
	{0.070077, 0.033656, -0.001141, 89.675476, 83.002151, 0.000000 }, // - 257
	{0.089536, 0.041904, 0.000715, 89.675476, 83.002151, 0.000000 }, // - 258
	{0.084822, 0.041904, 0.000715, 89.675476, 83.002151, 0.000000 }, // - 259
	{0.093009, 0.031491, -0.001568, 89.675476, 83.002151, 0.000000 }, // - 260
	{0.093009, 0.015023, -0.001477, 89.675476, 83.002151, 0.000000 }, // - 261
	{0.076580, 0.039782, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 262
	{0.076580, 0.028967, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 263
	{0.075424, 0.043059, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 264
	{0.089655, 0.021726, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 265
	{0.096792, 0.014114, -0.003062, 89.675476, 85.166038, 0.000000 }, // - 266
	{0.094886, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000 }, // - 267
	{0.094886, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000 }, // - 268
	{0.102252, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000 }, // - 269
	{0.102252, 0.024989, 0.000529, 89.675476, 85.166038, 0.000000 }, // - 270
	{0.096134, 0.025462, 0.000529, 89.675476, 79.225112, 0.000000 }, // - 271
	{0.099226, 0.032663, 0.000529, 89.675476, 79.225112, 0.000000 }, // - 272
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 273
	{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000 }, // - 274
	{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000 }, // - 275
	{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000 }, // - 276
	{0.082718, 0.062596, -0.000201, 89.675476, 88.636062, 0.000000 }, // - 277
	{0.082718, 0.062596, -0.000201, 89.675476, 88.636062, 0.000000 }, // - 278
	{0.087652, 0.059379, -0.000201, 89.675476, 88.636062, 0.000000 }, // - 279
	{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 280
	{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 281
	{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 282
	{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 283
	{0.090877, 0.053674, 0.009879, 89.675476, 88.636062, 0.000000 }, // - 284
	{0.104320, 0.041487, 0.008021, 89.675476, 88.636062, 0.000000 }, // - 285
	{0.087062, 0.021779, -0.003307, 89.675476, 88.636062, 0.000000 }, // - 286
	{0.073173, 0.048856, 0.005337, 89.675476, 92.561180, 0.000000 }, // - 287
	{0.090294, 0.027592, -0.003497, 89.675476, 92.561180, 0.000000 }, // - 288
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 289
	{0.086562, 0.042698, -0.000612, 89.675476, 92.561180, 0.000000 }, // - 290
	{0.096768, 0.039233, -0.000612, 89.675476, 83.550270, 0.000000 }, // - 291
	{0.079939, 0.020731, -0.005162, 89.675476, 83.550270, 0.000000 }, // - 292
	{0.097107, 0.027826, -0.005162, 89.675476, 88.505996, 0.000000 }, // - 293
	{0.097107, 0.037636, 0.000618, 89.675476, 88.505996, 0.000000 }, // - 294
	{0.079985, 0.035006, -0.000826, 89.675476, 87.533462, 0.000000 }, // - 295
	{0.088445, 0.024209, -0.002076, 89.675476, 73.285072, 0.000000 }, // - 296
	{0.094039, 0.035411, 0.000490, 89.675476, 84.277572, 0.000000 }, // - 297
	{0.099553, 0.024683, -0.002919, 89.675476, 84.277572, 0.000000 }, // - 298
	{0.099553, 0.044356, -0.000285, 89.675476, 84.277572, 0.000000 } // - 299
};

static Float: SkinBackCaps[50][9] = {
    {0.138000,0.002000,-0.009000,0.000000,0.000000,0.000000,1.116999,0.976000,1.016999 },//1
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//2
	{0.144000,0.016000,-0.004000,0.000000,0.000000,0.000000,1.088999,1.150999,1.016999 },//3
	{0.182000,0.005000,-0.007999,0.000000,0.000000,0.000000,1.012999,1.150999,1.069999 },//4
	{0.182000,0.005000,-0.007999,0.000000,0.000000,0.000000,1.012999,1.150999,1.069999 },//5
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//6
	{0.145000,0.017000,-0.007999,0.000000,0.000000,0.000000,1.012999,1.150999,1.069999 },//7
	{0.119000,0.010000,-0.007999,0.000000,0.000000,0.000000,1.012999,1.150999,1.069999 },//8
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//9
	{0.119000,0.010000,-0.007999,0.000000,0.000000,0.000000,1.012999,1.150999,1.069999 },//10
	{0.119000,0.010000,-0.007999,0.000000,0.000000,0.000000,1.012999,1.150999,1.069999 },//11
	{0.125000,-0.014999,-0.007999,0.000000,0.000000,0.000000,1.012999,1.150999,1.101999},//12
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//13
	{0.142000,0.015000,-0.007999,0.000000,0.000000,0.000000,1.012999,1.150999,1.101999},//14
	{0.126000,-0.010999,-0.007999,0.000000,0.000000,0.000000,0.981999,1.073999,1.040999},//15
	{0.148000,0.007000,-0.003999,0.000000,0.000000,0.000000,0.981999,1.073999,1.040999},//17
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//16
	{0.097000,0.007000,-0.010999,0.000000,0.000000,0.000000,0.981999,1.073999,1.040999},//18
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//19
	{0.143000,-0.000999,-0.008999,0.000000,0.000000,0.000000,0.981999,1.073999,1.040999},//20
	{0.143000,-0.000999,-0.008999,0.000000,0.000000,0.000000,0.981999,1.073999,1.040999},//21
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//22
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//23
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//24
	{0.123000,0.025000,-0.004999,0.000000,0.000000,0.000000,0.981999,1.073999,1.040999},//25
	{0.162000,0.006000,-0.004999,0.000000,0.000000,0.000000,0.981999,1.073999,1.040999},//26
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//27
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//28
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//29
	{0.135000,0.006000,-0.011999,0.000000,0.000000,0.000000,0.981999,1.234999,1.040999},//30
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//31
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//32
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//33
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//34
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//35
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//36
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//37
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//38
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//39
	{0.110000,0.006000,-0.004999,0.000000,0.000000,0.000000,1.118999,1.253999,1.152999},//40
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//41
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},//42
	{0.075000,0.003000,-0.004999,0.000000,0.000000,0.000000,1.118999,0.985000,1.036999},//43
	{0.101000,0.028000,-0.004999,0.000000,0.000000,0.000000,1.091999,0.947000,0.877999},//44
	{0.097000,0.002000,-0.004999,0.000000,0.000000,0.000000,1.077999,1.067999,0.989999},//45
	{0.130000,0.023000,-0.007999,0.000000,0.000000,0.000000,0.972999,1.110999,1.044999},//46
	{0.130000,0.023000,-0.007999,0.000000,0.000000,0.000000,1.062999,1.207999,1.087999},//47
	{0.151000,0.006000,-0.007999,0.000000,0.000000,0.000000,1.062999,1.273999,1.174999},//48
	{0.120000,0.014000,-0.011999,0.000000,0.000000,0.000000,1.062999,1.018999,1.043998},//49
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}//50
};


static Float: SkinOffSet[299][6] = {
	{0.135928, 0.002891, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 0
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 1
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 2
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 3
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 4
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 5
	{0.155785, 0.005998, -0.014326, 0.000000, 0.000000, 347.188201},//Skin - 6
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 7
	{0.131067, -0.013737, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 8
	{0.118922, -0.015322, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 9
	{0.125779, -0.001459, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 10
	{0.129249, -0.014101, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 11
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 12
	{0.161076, -0.015624, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 13
	{0.112204, -0.023196, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 14
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 15
	{0.150166, -0.008718, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 16
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 17
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 18
	{0.153609, -0.003207, -0.007717, 0.000000, 0.000000, 357.608825},//Skin - 19
	{0.143831, 0.001813, -0.010588, 0.000000, 0.000000, 357.608825}, //Skin - 20
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 21
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 22
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   //Skin - 23
	{0.127352, 0.009877, -0.006845, 0.726156, 359.666778, 348.825012},//Skin - 24
	{0.124666, -0.029373, -0.006845, 0.726156, 359.666778, 329.940704},//Skin - 25
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 26
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 27
	{0.128768, 0.041474, -0.007667, 0.726156, 359.666778, 355.429199}, //Skin - 28
	{0.166457, -0.006228, -0.012669, 0.726156, 359.666778, 354.612152},//Skin - 29
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 30
	{0.096077, -0.023233, -0.009101, 0.726156, 359.666778, 343.094055},//Skin - 31
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 32
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 33
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 34
	{0.155565, 0.014400, -0.009101, 0.726156, 359.666778, 6.131487},   //Skin - 35
	{0.156485, 0.013641, -0.009101, 0.726156, 359.666778, 6.131487},   //Skin - 36
	{0.144815, 0.013641, -0.009374, 0.156, 359.666778, 350.562103}, //Skin - 37
	{0.113347, -0.006682, -0.009374, 0.726156, 359.666778, 350.562103},//Skin - 38
	{0.147231, -0.014448, -0.004786, 0.726156, 359.666778, 357.303253},//Skin - 39
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 40
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 41
	{0.082446, 0.004202, -0.004786, 0.726156, 359.666778, 357.303253}, //Skin - 42
	{0.104901, 0.004013, -0.004786, 0.726156, 359.666778, 342.983184}, //Skin - 43
	{0.116172, -0.001954, -0.004786, 0.726156, 359.666778, 357.100677},//Skin - 44
	{0.153321, 0.025744, -0.008666, 0.726156, 359.666778, 10.704365},  //Skin - 45
	{0.160556, 0.007781, -0.010438, 0.726156, 359.666778, 0.991972},   //Skin - 46
	{0.179010, -0.035613, -0.010438, 0.726156, 359.666778, 347.956573},//Skin - 47
	{0.123363, 0.008694, -0.010438, 0.726156, 359.666778, 347.956573}, //Skin - 48
	{0.167061, -0.037899, -0.010438, 0.726156, 359.666778, 347.775817},//Skin - 49
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 50
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 51
	{0.129040, 0.016069, -0.010438, 0.726156, 359.666778, 347.775817}, //Skin - 52
	{0.129040, 0.016069, -0.006084, 0.726156, 359.666778, 347.775817}, //Skin - 53
	{0.137743, -0.016369, -0.011731, 0.726156, 359.666778, 355.812011},//Skin - 54
	{0.137743, -0.016369, -0.011731, 0.726156, 359.666778, 355.812011},//Skin - 55
	{0.174539, -0.000662, -0.007289, 0.726156, 359.666778, 352.847045},//Skin - 56
	{0.109382, -0.002955, -0.007289, 0.726156, 359.666778, 352.847045},//Skin - 57
	{0.152276, -0.029331, -0.008357, 0.726156, 359.666778, 332.070648},//Skin - 58
	{0.129599, -0.019172, -0.012204, 0.726156, 359.666778, 332.070648},//Skin - 59
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 60
	{0.130350, 0.000897, -0.000747, 0.726156, 359.666778, 332.070648}, //Skin - 61
	{0.150659, -0.035485, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 62
	{0.119340, -0.006483, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 63
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 64
	{0.133055, -0.000092, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 65
	{0.129061, -0.006499, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 66
	{0.127292, 0.010318, -0.006299, 0.726156, 359.666778, 341.617431}, //Skin - 67
	{0.138791, -0.025311, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 68
	{0.148132, 0.003970, -0.002304, 0.726156, 359.666778, 340.120025}, //Skin - 69
	{0.129753, 0.006469, -0.006376, 0.726156, 359.666778, 354.029815}, //Skin - 70
	{0.125663, 0.015428, -0.006376, 0.726156, 359.666778, 354.029815}, //Skin - 71
	{0.125663, 0.015428, -0.009030, 0.726156, 359.666778, 354.029815}, //Skin - 72
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 73
	{0.135729, -0.018656, -0.013554, 0.000000, 0.000000, 337.893737},  //Skin - 74
	{0.141888, -0.042810, -0.006206, 0.000000, 0.000000, 337.893737},  //Skin - 75
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 76
	{0.124348, -0.017813, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 77
	{0.124348, 0.000583, -0.006206, 0.000000, 0.000000, 346.786865},   //Skin - 78
	{0.102654, -0.010906, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 79
	{0.102654, -0.010906, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 81
	{0.167928, 0.031601, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 82
	{0.159998, 0.023540, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 83
	{0.169630, 0.019315, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 84
	{0.163052, -0.039735, -0.006206, 0.000000, 0.000000, 341.169891},  //Skin - 85
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 86
	{0.144811, -0.007521, -0.014207, 0.000000, 0.000000, 341.169891},  //Skin - 87
	{0.129932, -0.007521, -0.007289, 0.000000, 0.000000, 341.169891},  //Skin - 88
	{0.151147, -0.038608, -0.009597, 0.000000, 0.000000, 343.694549},  //Skin - 89
	{0.147416, -0.031632, -0.009597, 0.000000, 0.000000, 343.694549},  //Skin - 90
	{0.157728, -0.009677, -0.009597, 0.000000, 0.000000, 0.934848},    //Skin - 91
	{0.136577, -0.015592, -0.009597, 0.000000, 0.000000, 341.013824},  //Skin - 92
	{0.143821, 0.000631, -0.008385, 0.000000, 0.000000, 358.808868},   //Skin - 93
	{0.100521, 0.003151, -0.007624, 0.000000, 0.000000, 358.808868},   //Skin - 94
	{0.122833, -0.006031, -0.007624, 0.000000, 0.000000, 358.808868},  //Skin - 95
	{0.145296, 0.003959, -0.007624, 0.000000, 0.000000, 358.808868},   //Skin - 96
	{0.141658, 0.016474, -0.007624, 0.000000, 0.000000, 9.683902},     //Skin - 97
	{0.145276, -0.002846, -0.007624, 0.000000, 0.000000, 340.239593},  //Skin - 98
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 99
	{0.161745, -0.010244, -0.007624, 0.000000, 0.000000, 351.499267}, //Skin - 100
	{0.151006, -0.030994, -0.005366, 0.000000, 0.000000, 340.428894}, //Skin - 101
	{0.147111, 0.003794, -0.012433, 0.000000, 0.000000, 358.069244},  //Skin - 102
	{0.154213, -0.052348, -0.003511, 356.299316, 0.000000, 336.751647},//Skin - 103
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 104
	{0.153814, -0.039614, -0.006756, 356.299316, 0.000000, 336.930084},//Skin - 105
	{0.153638, -0.039614, -0.013630, 356.299316, 0.000000, 336.930084},//Skin - 106
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 107
	{0.140473, -0.026201, -0.000469, 0.390689, 355.405181, 335.554260},//Skin - 108
	{0.140904, -0.007227, -0.008114, 0.390689, 355.405181, 335.554260},//Skin - 109
	{0.140904, -0.007227, -0.008114, 0.390689, 355.405181, 335.554260},//Skin - 110
	{0.134860, 0.001485, -0.010145, 0.390689, 358.632415, 347.730010},//Skin - 111
	{0.124823, 0.001485, -0.009402, 0.390689, 358.632415, 347.730010},//Skin - 112
	{0.157999, -0.012039, -0.006082, 0.390689, 358.632415, 347.730010},//Skin - 113
	{0.144906, -0.005139, -0.009654, 0.390689, 358.632415, 336.830108},//Skin - 114
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 116
	{0.152829, -0.009735, -0.009654, 0.390689, 358.632415, 336.830108},//Skin - 117
	{0.113804, 0.009252, -0.009654, 0.390689, 358.632415, 345.244384},//Skin - 118
	{0.113804, 0.009252, -0.009654, 0.390689, 358.632415, 345.244384},//Skin - 119
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   //Skin -120
	{0.154275, -0.037484, -0.009654, 0.390689, 358.632415, 337.676666},//Skin - 121
	{0.155674, -0.015613, -0.004339, 0.390689, 358.632415, 350.571228},//Skin - 122
	{0.136433, -0.019181, -0.004339, 0.390689, 358.632415, 340.261840},//Skin - 123
	{0.163258, -0.032386, -0.013128, 0.390689, 358.632415, 340.261840},//Skin - 124
	{0.153242, -0.029651, -0.002434, 0.390689, 358.632415, 333.367614},//Skin - 125
	{0.127978, -0.001961, -0.008867, 0.390689, 358.632415, 347.279052},//Skin - 126
	{0.160856, -0.025356, -0.004428, 0.390689, 358.632415, 347.279052},//Skin - 127
	{0.150266, -0.009032, -0.006781, 0.390689, 358.632415, 347.223754},//Skin - 128
	{0.158060, 0.022907, -0.006781, 0.390689, 358.632415, 349.378875},//Skin - 129
	{0.111739, 0.012673, -0.006781, 0.390689, 358.632415, 349.378875},//Skin - 130
	{0.091638, -0.011600, -0.008686, 0.390689, 358.632415, 336.674468},//Skin - 131
	{0.125788, 0.000635, -0.005915, 0.390689, 358.632415, 343.007751},//Skin - 132
	{0.031324, -0.014154, -0.005915, 0.390689, 358.632415, 343.007751},//Skin - 133
	{0.142321, 0.015417, -0.005915, 0.243191, 358.632415, 350.329559},//Skin - 133
	{0.128780, -0.030750, 0.006687, 173.184967, 358.632415, 27.422966},//Skin - 134
	{0.115882, -0.004931, -0.003807, 358.837646, 358.632415, 346.206237},//Skin - 135
	{0.127531, -0.008916, -0.003807, 358.837646, 358.632415, 346.206237},//Skin - 136
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 137
	{0.148992, -0.017748, -0.006509, 358.837646, 358.632415, 350.742156},//Skin - 138
	{0.148992, -0.017748, -0.006509, 358.837646, 358.632415, 350.742156},//Skin - 139
	{0.147315, 0.001708, -0.006509, 358.837646, 358.632415, 354.390045},//Skin - 140
	{0.144315, -0.013571, -0.006509, 358.837646, 358.632415, 354.390045},//Skin - 141
	{0.144315, -0.002729, -0.010357, 358.837646, 358.632415, 354.390045},//Skin - 142
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 143
	{0.177516, -0.070868, -0.009114, 358.837646, 358.632415, 331.679321},//Skin - 144
	{0.139578, -0.008750, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 145
	{0.139578, -0.014406, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 146
	{0.115592, -0.010754, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 147
	{0.150735, -0.000459, -0.004405, 358.837646, 358.632415, 9.362450},//Skin - 148
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 149
	{0.149485, -0.008709, -0.006168, 358.837646, 358.632415, 2.276566},//Skin - 150
	{0.168162, -0.009708, -0.012160, 359.504821, 4.442328, 355.348114},//Skin - 151
	{0.156369, -0.024521, -0.012160, 359.504821, 0.415596, 355.348114},//Skin - 152
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 153
	{0.119297, -0.016080, -0.010776, 359.504821, 0.415596, 341.522827},//Skin - 154
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 155
	{0.172295, -0.065549, -0.007187, 359.504821, 0.415596, 336.175567},//Skin - 156
	{0.126340, -0.030764, -0.007187, 359.504821, 0.415596, 336.175567},//Skin - 157
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 158
	{0.154280, 0.002166, -0.010436, 359.504821, 0.415596, 357.792144},//Skin - 159
	{0.121469, -0.007383, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 160
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 161
	{0.139495, -0.007383, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 162
	{0.113212, -0.005302, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 163
	{0.120208, 0.003533, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 164
	{0.135111, 0.005091, -0.006407, 359.504821, 0.415596, 352.954559},//Skin - 165
	{0.122118, 0.005091, -0.006407, 359.504821, 0.415596, 352.954559},//Skin - 166
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 167
	{0.125229, 0.005091, -0.013084, 359.504821, 0.415596, 352.954559},//Skin - 168
	{0.153451, -0.018119, -0.013276, 359.504821, 0.415596, 358.219451},//Skin - 169
	{0.141395, -0.009131, -0.013276, 359.504821, 0.415596, 347.866027},//Skin - 170
	{0.157631, -0.028753, -0.006450, 359.504821, 0.415596, 339.935516},//Skin - 171
	{0.152687, -0.027057, -0.007731, 359.504821, 0.415596, 344.054809},//Skin - 172
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 173
	{0.165146, 0.015393, -0.007731, 359.504821, 0.415596, 344.001678},//Skin - 174
	{0.162788, -0.019696, -0.007731, 359.504821, 0.415596, 344.001678},//Skin - 175
	{0.157728, -0.027188, -0.012891, 359.504821, 0.415596, 345.804748},//Skin - 176
	{0.187507, 0.010472, -0.012891, 359.504821, 0.415596, 12.315887},//Skin - 177
	{0.153901, -0.027720, -0.007884, 359.504821, 0.415596, 344.553527},//Skin - 178
	{0.137445, -0.009757, -0.012987, 359.504821, 0.415596, 344.553527},//Skin - 179
	{0.173041, -0.006323, -0.012987, 359.504821, 0.415596, 3.267552},//Skin - 180
	{0.143467, 0.016897, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 181
	{0.114480, 0.006202, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 182
	{0.114480, 0.008813, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 183
	{0.128122, -0.012152, -0.013144, 359.504821, 0.415596, 336.326538},//Skin - 184
	{0.156171, 0.007268, -0.013144, 359.504821, 0.415596, 10.805211},//Skin - 185
	{0.156409, -0.034861, -0.007927, 359.504821, 0.415596, 336.978668},//Skin - 186
	{0.118034, -0.024105, -0.002947, 359.504821, 0.415596, 336.978668},//Skin - 187
	{0.128686, -0.029632, -0.002947, 358.201873, 0.415596, 329.325042},//Skin - 188
	{0.172639, -0.026749, -0.012705, 358.201873, 0.415596, 349.092590},//Skin - 189
	{0.180897, -0.026749, -0.007224, 358.201873, 0.415596, 349.092590},//Skin - 190
	{0.180897, -0.026749, -0.007224, 358.201873, 0.415596, 349.092590},//Skin - 191
	{0.178725, -0.010278, -0.007224, 358.201873, 0.415596, 354.053405},//Skin - 192
	{0.172020, -0.010278, -0.010734, 358.201873, 0.415596, 354.053405},//Skin - 193
	{0.172020, -0.010278, -0.010734, 358.201873, 0.415596, 354.053405},//Skin - 194
	{0.176089, -0.032526, -0.005110, 358.201873, 0.415596, 341.814422},//Skin - 195
	{0.118042, 0.007002, -0.005110, 358.201873, 0.415596, 341.814422},//Skin - 196
	{0.143840, -0.042712, -0.007556, 358.201873, 0.415596, 341.814422},//Skin - 197
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 198
	{0.148060, -0.032384, -0.009754, 358.201873, 0.415596, 333.484924},//Skin - 199
	{0.148060, -0.032384, -0.009754, 358.201873, 0.415596, 333.484924},//Skin - 200
	{0.140799, 0.025145, -0.009754, 358.201873, 0.415596, 5.040688},//Skin - 201
	{0.140799, 0.015851, -0.009754, 358.201873, 0.415596, 349.796478},//Skin - 202
	{0.140799, -0.004372, -0.013685, 358.201873, 0.415596, 349.796478},//Skin - 203
	{0.154274, 0.006245, -0.013685, 358.201873, 0.415596, 2.035465},//Skin - 204
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 205
	{0.154274, 0.016669, -0.013685, 358.201873, 0.415596, 2.035465},//Skin - 206
	{0.106604, 0.004805, -0.011840, 358.201873, 0.415596, 2.035465},//Skin - 207
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 208
	{0.148378, -0.003807, -0.011840, 358.201873, 0.415596, 2.035465},//Skin - 209
	{0.113854, 0.001969, -0.011840, 358.201873, 0.415596, 343.826263},//Skin - 210
	{0.149539, -0.028623, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 211
	{0.104024, -0.014549, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 212
	{0.145820, -0.029160, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 213
	{0.148646, -0.008515, -0.009621, 358.201873, 0.415596, 1.360260},//Skin - 214
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 215
	{0.148646, -0.005935, -0.004058, 358.201873, 0.415596, 1.360260},//Skin - 216
	{0.148646, -0.015611, -0.004058, 358.201873, 0.415596, 340.374938},//Skin - 217
	{0.133952, -0.030138, -0.009880, 358.201873, 0.415596, 340.374938},//Skin - 218
	{0.140503, -0.033425, -0.005693, 358.201873, 0.415596, 340.374938},//Skin - 219
	{0.114608, 0.009020, -0.009135, 358.201873, 0.415596, 352.932006},//Skin - 220
	{0.186516, -0.044762, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 221
	{0.186516, -0.044762, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 222
	{0.179908, -0.010779, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 223
	{0.156689, -0.015437, -0.009135, 358.201873, 0.415596, 352.741638},//Skin - 224
	{0.156689, -0.015437, -0.009135, 358.201873, 0.415596, 352.741638},//Skin - 225
	{0.134990, -0.034685, -0.009135, 358.201873, 0.415596, 340.812927},//Skin - 226
	{0.151760, 0.002680, -0.009135, 358.201873, 0.415596, 340.812927},//Skin - 227
	{0.167410, -0.028664, -0.009135, 358.201873, 0.415596, 340.250427},//Skin - 228
	{0.127699, -0.015571, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 229
	{0.100555, -0.007753, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 230
	{0.126940, 0.016886, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 231
	{0.132949, -0.017515, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 232
	{0.146124, -0.008425, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 233
	{0.125714, -0.021018, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 234
	{0.084982, -0.009809, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 235
	{0.114669, -0.005190, -0.008594, 358.201873, 0.415596, 351.301177},//Skin - 236
	{0.123264, -0.014946, -0.008594, 358.201873, 0.415596, 351.301177},//Skin - 237
	{0.146656, -0.023925, -0.006749, 358.201873, 0.415596, 334.356781},//Skin - 238
	{0.133769, -0.007373, -0.006749, 358.201873, 0.415596, 343.105895},//Skin - 239
	{0.165378, -0.020173, -0.005869, 358.201873, 0.415596, 348.352233},//Skin - 240
	{0.143331, -0.133577, -0.011472, 358.201873, 0.415596, 312.328857},//Skin - 241
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 242
	{0.098602, 0.002084, -0.011472, 358.201873, 0.415596, 348.195495},//Skin - 243
	{0.124240, -0.011682, -0.006423, 358.201873, 0.415596, 341.555999},//Skin - 244
	{0.158155, -0.044311, -0.005439, 358.201873, 0.415596, 336.024902},//Skin - 245
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 246
	{0.164307, -0.040974, -0.006797, 358.201873, 0.415596, 337.067047},//Skin - 247
	{0.191578, -0.040435, -0.010605, 358.201873, 0.415596, 340.908203},//Skin - 248
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 249
	{0.135208, -0.015243, -0.011916, 358.201873, 0.415596, 340.908203},//Skin - 250
	{0.134272, -0.027377, -0.006035, 358.201873, 0.415596, 333.416168},//Skin - 251
	{0.158813, -0.038977, -0.006035, 358.201873, 0.415596, 336.013519},//Skin - 252
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 253
	{0.165106, -0.048880, -0.009719, 358.201873, 0.415596, 331.050933},//Skin - 254
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 255
	{0.142586, 0.020829, -0.008549, 358.201873, 0.415596, 2.765411},//Skin - 256
	{0.134018, -0.024462, -0.008549, 358.201873, 0.415596, 339.642486},//Skin - 257
	{0.147750, -0.042854, -0.008114, 0.951334, 0.415596, 330.441131},//Skin - 258
	{0.147750, -0.042854, -0.008114, 0.951334, 0.415596, 330.441131},//Skin - 259
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 260
	{0.134710, 0.006798, -0.008114, 358.188964, 0.415596, 352.703582},//Skin - 261
	{0.111691, 0.006798, -0.008114, 358.188964, 0.415596, 352.703582},//Skin - 262
	{0.146077, -0.005195, -0.008114, 358.188964, 0.415596, 3.866970},//Skin - 263
	{0.135858, -0.157842, -0.008114, 358.188964, 0.415596, 314.852203},//Skin - 264
	{0.127964, 0.000132, -0.008114, 358.188964, 0.415596, 352.699432},//Skin - 265
	{0.127964, -0.002646, -0.008114, 358.188964, 0.415596, 352.699432},//Skin - 266
	{0.132329, -0.014261, -0.007384, 1.504234, 0.415596, 352.699432},//Skin - 267
	{0.145951, -0.043442, -0.010053, 1.504234, 0.415596, 320.469390},//Skin - 268
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 269
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 270
	{0.141851, -0.034538, -0.010580, 1.504234, 0.415596, 340.349456},//Skin - 271
	{0.136473, -0.057088, -0.008204, 1.504234, 0.415596, 318.134399},//Skin - 272
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 273
	{0.124270, 0.003252, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 274
	{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 275
	{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 276
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 277
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 278
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 279
	{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 280
	{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 281
	{0.140515, 0.009018, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 282
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 283
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 284
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 285
	{0.140515, 0.001933, -0.008204, 1.504234, 0.415596, 346.744995}, //Skin - 286
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 287
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 288
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 289
	{0.128789, -0.014062, -0.007850, 1.504234, 0.415596, 340.341094},//Skin - 290
	{0.158929, -0.027358, -0.010655, 1.504234, 0.415596, 337.298858},//Skin - 291
	{0.113309, -0.012434, -0.010655, 1.504234, 0.415596, 337.298858},//Skin - 292
	{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 293
	{0.158438, -0.023891, -0.007217, 1.504234, 0.415596, 337.298858},//Skin - 294
	{0.145000, -0.032054, -0.007217, 1.504234, 0.415596, 336.385589},//Skin - 295
	{0.139293, -0.069554, -0.010619, 1.504234, 0.415596, 320.746429},//Skin - 296
	{0.148252, -0.066463, -0.010619, 1.504234, 0.415596, 320.729705},//Skin - 297
	{0.126423, -0.066463, -0.010619, 1.504234, 0.415596, 320.729705},//Skin - 298
	{0.144949, -0.040691, -0.008599, 1.504234, 0.415596, 320.729705}//Skin - 299
};


//______________________________________________________________________________
new Float:UNI_001[][] = {
  {1268.058227,-1854.881835,13.382812, 1315.011474,-1854.332885,13.382812},
  {1315.011474,-1854.332885,13.382812, 1315.001342,-1734.736206,13.382812},
  {1315.001342,-1734.736206,13.382812, 1366.849121,-1734.758056,13.382812},
  {1366.849121,-1734.758056,13.382812, 1432.033447,-1734.014648,13.382812},
  {1432.033447,-1734.014648,13.382812, 1431.897338,-1611.868408,13.382812},
  {1431.897338,-1611.868408,13.382812, 1442.624023,-1523.597045,13.382812},
  {1442.624023,-1523.597045,13.382812, 1456.695800,-1460.187255,13.360664},
  {1456.695800,-1460.187255,13.360664, 1457.345703,-1438.217651,13.390609},
  {1457.345703,-1438.217651,13.390609, 1423.342529,-1435.178955,13.382812},
  {1423.342529,-1435.178955,13.382812, 1421.481567,-1394.286132,13.382812},
  {1421.481567,-1394.286132,13.382812, 1329.496704,-1392.526977,13.389518},
  {1329.496704,-1392.526977,13.389518, 1226.241943,-1392.384277,13.214551},
  {1226.241943,-1392.384277,13.214551, 1151.073608,-1392.588500,13.596304},
  {1151.073608,-1392.588500,13.596304, 1060.840576,-1392.651367,13.486910},
  {1060.840576,-1392.651367,13.486910, 1060.279907,-1319.618041,13.382812},
  {1060.279907,-1319.618041,13.382812, 979.661010,-1319.927246,13.373908},
  {979.661010,-1319.927246,13.373908, 833.317626,-1317.170532,13.375000},
  {833.317626,-1317.170532,13.375000, 779.918579,-1317.523315,13.382812},
  {779.918579,-1317.523315,13.382812, 649.605834,-1317.177978,13.354375},
  {649.605834,-1317.177978,13.354375, 630.071289,-1316.647460,13.634984},
  {630.071289,-1316.647460,13.634984, 629.808654,-1429.782226,13.880362},
  {629.808654,-1429.782226,13.880362, 629.890319,-1535.496215,15.071702},
  {629.890319,-1535.496215,15.071702, 632.066162,-1659.002441,15.487267},
  {632.066162,-1659.002441,15.487267, 626.033203,-1727.005737,13.962516},
  {626.033203,-1727.005737,13.962516, 547.860900,-1715.376098,13.008186},
  {547.860900,-1715.376098,13.008186, 458.872314,-1703.649047,10.847402},
  {458.872314,-1703.649047,10.847402, 351.377777,-1698.558837,6.664685},
  {351.377777,-1698.558837,6.664685, 239.403900,-1659.236572,11.220006},
  {239.403900,-1659.236572,11.220006, 166.570938,-1571.642333,12.394568},
  {166.570938,-1571.642333,12.394568, 147.216873,-1567.091064,11.009482},
  {147.216873,-1567.091064,11.009482, 161.193557,-1595.160400,13.198340},
  {161.193557,-1595.160400,13.198340, 229.764389,-1677.347412,10.812872},
  {229.764389,-1677.347412,10.812872, 359.311553,-1719.437255,6.733899},
  {359.311553,-1719.437255,6.733899, 503.836883,-1729.636718,11.566817},
  {503.836883,-1729.636718,11.566817, 719.929443,-1774.164794,13.762620},
  {719.929443,-1774.164794,13.762620, 830.572387,-1786.233276,13.735905},
  {830.572387,-1786.233276,13.735905, 963.535400,-1798.626708,14.104541},
  {963.535400,-1798.626708,14.104541, 1028.696533,-1819.574829,13.758069},
  {1028.696533,-1819.574829,13.758069, 1043.739257,-1855.333374,13.405532},
  {1043.739257,-1855.333374,13.405532, 1105.832763,-1854.821899,13.382812},
  {1105.832763,-1854.821899,13.382812, 1228.168823,-1854.622070,13.382812},
  {1228.168823,-1854.622070,13.382812, 1331.377685,-1856.221435,13.382812},
  {1331.377685,-1856.221435,13.382812, 1423.838745,-1874.375732,13.382812},
  {1423.838745,-1874.375732,13.382812, 1420.933227,-1920.798461,15.083457},
  {1420.933227,-1920.798461,15.083457, 1262.262207,-1905.634399,29.428916},
  {1262.262207,-1905.634399,29.428916, 1283.153198,-1952.573120,29.137971},
  {1283.153198,-1952.573120,29.137971, 1386.364013,-1971.478027,36.358249},
  {1386.364013,-1971.478027,36.358249, 1422.142700,-1987.777954,48.335613},
  {1422.142700,-1987.777954,48.335613, 1412.852661,-2033.408203,53.223892},
  {1412.852661,-2033.408203,53.223892, 1279.229980,-2053.605712,58.902351},
  {1279.229980,-2053.605712,58.902351, 1248.982666,-2052.867675,59.742759},
  {1248.982666,-2052.867675,59.742759, 1276.111206,-2058.941406,58.986045},
  {1276.111206,-2058.941406,58.986045, 1374.469238,-2053.650634,55.750362},
  {1374.469238,-2053.650634,55.750362, 1433.275024,-2011.401855,51.318431},
  {1433.275024,-2011.401855,51.318431, 1423.484008,-1981.476318,47.465744},
  {1423.484008,-1981.476318,47.465744, 1294.482055,-1950.479858,29.079343},
  {1294.482055,-1950.479858,29.079343, 1252.883666,-1924.010864,31.197380},
  {1252.883666,-1924.010864,31.197380, 1312.227172,-1914.748535,23.604196},
  {1312.227172,-1914.748535,23.604196, 1401.965942,-1930.863159,16.730852},
  {1401.965942,-1930.863159,16.730852, 1428.985351,-1886.878906,13.477985},
  {1428.985351,-1886.878906,13.477985, 1370.351440,-1868.297363,13.382812},
  {1370.351440,-1868.297363,13.382812, 1215.880004,-1850.046142,13.382812},
  {1215.880004,-1850.046142,13.382812, 1215.166625,-1828.118041,13.408430},
  {1215.166625,-1828.118041,13.408430, 0.0,0.0,0.0}
};
new Float:LS_001[][] = {

  {1270.156860,-1841.725830,13.396673, 1270.211181,-1842.082275,13.397716},
  {1270.211181,-1842.082275,13.397716, 1312.574218,-1845.412353,13.382812},
  {1312.574218,-1845.412353,13.382812, 1314.591674,-1796.136352,13.382812},
  {1314.591674,-1796.136352,13.382812, 1316.402954,-1734.858032,13.382812},
  {1316.402954,-1734.858032,13.382812, 1367.161254,-1735.877929,13.382812},
  {1367.161254,-1735.877929,13.382812, 1427.259277,-1724.258911,13.382812},
  {1427.259277,-1724.258911,13.382812, 1425.779174,-1674.706176,13.382812},
  {1425.779174,-1674.706176,13.382812, 1427.170043,-1607.946899,13.382812},
  {1427.170043,-1607.946899,13.382812, 1438.338623,-1539.716674,13.374356},
  {1438.338623,-1539.716674,13.374356, 1457.603027,-1460.819580,13.360047},
  {1457.603027,-1460.819580,13.360047, 1440.669921,-1440.792358,13.382812},
  {1440.669921,-1440.792358,13.382812, 1418.131103,-1431.964355,13.382812},
  {1418.131103,-1431.964355,13.382812, 1416.432006,-1396.684204,13.382812},
  {1416.432006,-1396.684204,13.382812, 1394.672851,-1396.470092,13.390527},
  {1394.672851,-1396.470092,13.390527, 1349.717163,-1394.660278,13.381741},
  {1349.717163,-1394.660278,13.381741, 1327.439941,-1394.122680,13.357876},
  {1327.439941,-1394.122680,13.357876, 1244.407470,-1393.925659,13.079830},
  {1244.407470,-1393.925659,13.079830, 1225.881347,-1392.214721,13.220413},
  {1225.881347,-1392.214721,13.220413, 1209.059814,-1387.365112,13.230934},
  {1209.059814,-1387.365112,13.230934, 1208.384521,-1368.755737,13.316686},
  {1208.384521,-1368.755737,13.316686, 1208.619384,-1303.725341,13.388962},
  {1208.619384,-1303.725341,13.388962, 1185.713012,-1281.350830,13.288889},
  {1185.713012,-1281.350830,13.288889, 1132.155151,-1282.041259,13.567897},
  {1132.155151,-1282.041259,13.567897, 1072.550415,-1282.778076,13.382812},
  {1072.550415,-1282.778076,13.382812, 1051.863647,-1313.244873,13.382812},
  {1051.863647,-1313.244873,13.382812, 1034.012573,-1319.107177,13.394600},
  {1034.012573,-1319.107177,13.394600, 969.062683,-1318.746337,13.358379},
  {969.062683,-1318.746337,13.358379, 906.588012,-1319.067138,13.471856},
  {906.588012,-1319.067138,13.471856, 848.253662,-1316.812255,13.405620},
  {848.253662,-1316.812255,13.405620, 833.538085,-1316.751098,13.375000},
  {833.538085,-1316.751098,13.375000, 803.658874,-1316.976074,13.382812},
  {803.658874,-1316.976074,13.382812, 800.192810,-1295.515502,13.382812},
  {800.192810,-1295.515502,13.382812, 799.944396,-1219.828491,15.495854},
  {799.944396,-1219.828491,15.495854, 799.938171,-1164.933105,23.316242},
  {799.938171,-1164.933105,23.316242, 800.597778,-1109.449096,23.676954},
  {800.597778,-1109.449096,23.676954, 799.911682,-1081.352905,24.143777},
  {799.911682,-1081.352905,24.143777, 799.842529,-1072.594238,24.345823},
  {799.842529,-1072.594238,24.345823, 798.007873,-1033.509277,24.783260},
  {798.007873,-1033.509277,24.783260, 798.008483,-994.296752,32.027587},
  {798.008483,-994.296752,32.027587, 793.492919,-929.670715,42.500144},
  {793.492919,-929.670715,42.500144, 753.329406,-892.180664,43.008857},
  {753.329406,-892.180664,43.008857, 699.536682,-845.734130,42.996627},
  {699.536682,-845.734130,42.996627, 690.272949,-802.926147,37.406364},
  {690.272949,-802.926147,37.406364, 684.637451,-739.200317,17.984201},
  {684.637451,-739.200317,17.984201, 684.637329,-706.091247,16.154594},
  {684.637329,-706.091247,16.154594, 684.567077,-637.304321,16.187500},
  {684.567077,-637.304321,16.187500, 685.865966,-580.275329,16.186576},
  {685.865966,-580.275329,16.186576, 685.823852,-572.146301,16.187500},
  {685.823852,-572.146301,16.187500, 685.531677,-556.929992,16.187500},
  {685.531677,-556.929992,16.187500, 684.771118,-521.763732,16.184360},
  {684.771118,-521.763732,16.184360, 678.736145,-491.752624,16.179122},//50
  {678.736145,-491.752624,16.179122, 645.247497,-476.643341,16.182380},
  {645.247497,-476.643341,16.182380, 640.331420,-414.539550,16.187500},
  {640.331420,-414.539550,16.187500, 580.541931,-411.242523,25.099517},
  {580.541931,-411.242523,25.099517, 542.035705,-412.854888,28.460269},
  {542.035705,-412.854888,28.460269, 481.743011,-409.119598,28.195123},
  {481.743011,-409.119598,28.195123, 456.236511,-405.005706,28.182018},
  {456.236511,-405.005706,28.182018, 409.109741,-400.199188,26.689884},
  {409.109741,-400.199188,26.689884, 368.901031,-393.429901,22.952505},
  {368.901031,-393.429901,22.952505, 292.827239,-378.869628,9.071132},
  {292.827239,-378.869628,9.071132, 239.478225,-363.504791,8.132291},
  {239.478225,-363.504791,8.132291, 213.908920,-331.311401,2.760083},
  {213.908920,-331.311401,2.760083, 207.294448,-290.411834,1.429049},
  {207.294448,-290.411834,1.429049, 183.197692,-272.454742,1.429687},
  {183.197692,-272.454742,1.429687, 186.657455,-241.067657,1.429687},
  {186.657455,-241.067657,1.429687, 186.797576,-232.122451,1.430296},
  {186.797576,-232.122451,1.430296, 184.838439,-220.032485,1.425234},
  {184.838439,-220.032485,1.425234, 153.331832,-210.830871,1.432583},
  {153.331832,-210.830871,1.432583, 112.672760,-208.914474,1.429687},
  {112.672760,-208.914474,1.429687, 49.884990,-206.929931,1.460684},
  {49.884990,-206.929931,1.460684, -5.661371,-203.200500,1.575465},
  {-5.661371,-203.200500,1.575465, -49.298473,-198.645141,1.657833},
  {-49.298473,-198.645141,1.657833, -91.599502,-192.025512,1.765437},
  {-91.599502,-192.025512,1.765437, -136.025039,-182.925994,1.921784},
  {-136.025039,-182.925994,1.921784, -146.629577,-180.779067,1.951964},
  {-146.629577,-180.779067,1.951964, -159.657318,-180.074081,1.972109},
  {-159.657318,-180.074081,1.972109, -215.937164,-168.802795,2.174461},
  {-215.937164,-168.802795,2.174461, -272.195922,-153.721557,2.430720},//77
  {-272.195922,-153.721557,2.430720, -300.238708,-155.875442,1.075686},
  {-300.238708,-155.875442,1.075686, -290.687408,-208.112777,1.078125},
  {-290.687408,-208.112777,1.078125, -240.083847,-284.373168,1.078125},
  {-240.083847,-284.373168,1.078125, -225.238815,-301.913055,1.078125},
  {-225.238815,-301.913055,1.078125, -215.134918,-313.800262,1.078125},
  {-215.134918,-313.800262,1.078125, -188.454772,-342.817962,1.078125},
  {-188.454772,-342.817962,1.078125, -168.050384,-363.325042,1.078125},
  {-168.050384,-363.325042,1.078125, -150.723602,-380.490936,1.078125},
  {-150.723602,-380.490936,1.078125, -143.887283,-386.763641,1.078125},
  {-143.887283,-386.763641,1.078125, -140.056015,-390.992980,1.078125},
  {-140.056015,-390.992980,1.078125, -96.322967,-423.424774,1.078125},
  {-96.322967,-423.424774,1.078125, 21.521350,-504.915496,9.274432},
  {21.521350,-504.915496,9.274432, 46.571197,-551.236145,10.173366},
  {46.571197,-551.236145,10.173366, 33.480773,-638.996337,3.019956},
  {33.480773,-638.996337,3.019956, 4.572443,-714.288452,5.985572},
  {4.572443,-714.288452,5.985572, -25.850017,-780.727539,9.489748},
  {-25.850017,-780.727539,9.489748, -55.099018,-843.494689,13.041973},
  {-55.099018,-843.494689,13.041973, -79.387817,-892.548706,16.032432},
  {-79.387817,-892.548706,16.032432, -96.658515,-926.555725,19.405033},
  {-96.658515,-926.555725,19.405033, -122.623558,-980.496704,26.199024},
  {-122.623558,-980.496704,26.199024, -92.599555,-1035.724731,24.154951},
  {-92.599555,-1035.724731,24.154951, -91.090003,-1108.397338,2.266894},
  {-91.090003,-1108.397338,2.266894, -118.550575,-1169.885864,2.695312},
  {-118.550575,-1169.885864,2.695312, -148.652374,-1279.246826,2.695312},
  {-148.652374,-1279.246826,2.695312, -155.422073,-1383.116943,2.695312},
  {-155.422073,-1383.116943,2.695312, -112.450500,-1483.869506,2.695312},
  {-112.450500,-1483.869506,2.695312, -48.658298,-1518.957763,1.820312},
  {-48.658298,-1518.957763,1.820312, 35.067371,-1536.721679,5.250936},//105
  {35.067371,-1536.721679,5.250936, 97.480781,-1547.406127,6.252382},
  {97.480781,-1547.406127,6.252382, 187.519424,-1630.110473,14.411092},
  {187.519424,-1630.110473,14.411092, 244.782531,-1689.206787,9.453516},
  {244.782531,-1689.206787,9.453516, 404.873046,-1719.742675,8.533966},
  {404.873046,-1719.742675,8.533966, 515.944213,-1731.270141,11.844933},
  {515.944213,-1731.270141,11.844933, 560.834411,-1737.020874,12.723369},
  {560.834411,-1737.020874,12.723369, 610.775939,-1745.188232,13.360141},
  {610.775939,-1745.188232,13.360141, 711.971374,-1771.334960,13.798028},
  {711.971374,-1771.334960,13.798028, 793.589538,-1787.278808,13.197848},
  {793.589538,-1787.278808,13.197848, 866.747192,-1786.148925,13.691342},
  {866.747192,-1786.148925,13.691342, 923.365600,-1791.774291,13.379796},
  {923.365600,-1791.774291,13.379796, 1031.132324,-1822.580932,13.706237},
  {1031.132324,-1822.580932,13.706237, 1074.449951,-1854.506225,13.391283},
  {1074.449951,-1854.506225,13.391283, 1152.897094,-1855.387207,13.395042},
  {1152.897094,-1855.387207,13.395042, 1200.269042,-1855.688720,13.391760},
  {1200.269042,-1855.688720,13.391760, 1211.179443,-1843.620117,13.382812},
  {1211.179443,-1843.620117,13.382812, 1223.169189,-1835.072631,13.388080},
  {1223.169189,-1835.072631,13.388080, 0.0,0.0,0.0}///123
};

new Float:LS_002[][] = {
  {1270.229370,-1854.878662,13.382812, 1315.067504,-1854.905517,13.382812},
  {1315.067504,-1854.905517,13.382812, 1314.698974,-1771.356079,13.382812},
  {1314.698974,-1771.356079,13.382812, 1314.825073,-1690.676513,13.382812},
  {1314.825073,-1690.676513,13.382812, 1315.027465,-1595.100708,13.382812},
  {1315.027465,-1595.100708,13.382812, 1322.864746,-1528.548095,13.382812},
  {1322.864746,-1528.548095,13.382812, 1353.568847,-1466.152709,13.382812},
  {1353.568847,-1466.152709,13.382812, 1360.436889,-1394.919677,13.462874},
  {1360.436889,-1394.919677,13.462874, 1288.283935,-1392.607299,13.268484},
  {1288.283935,-1392.607299,13.268484, 1226.246948,-1392.261596,13.216974},
  {1226.246948,-1392.261596,13.216974, 1181.925415,-1392.631591,13.268976},
  {1181.925415,-1392.631591,13.268976, 1108.138427,-1392.570434,13.458685},
  {1108.138427,-1392.570434,13.458685, 1028.965820,-1392.263183,13.208562},
  {1028.965820,-1392.263183,13.208562, 933.676879,-1392.786621,13.246431},
  {933.676879,-1392.786621,13.246431, 869.835021,-1392.603759,13.289554},
  {869.835021,-1392.603759,13.289554, 799.296020,-1392.773803,13.518101},
  {799.296020,-1392.773803,13.518101, 800.447082,-1354.387451,13.382812},
  {800.447082,-1354.387451,13.382812, 799.757751,-1302.930786,13.382812},
  {799.757751,-1302.930786,13.382812, 800.056823,-1200.290039,18.459270},
  {800.056823,-1200.290039,18.459270, 800.138977,-1126.695434,23.772468},
  {800.138977,-1126.695434,23.772468, 798.844909,-1072.079711,24.365690},
  {798.844909,-1072.079711,24.365690, 798.103759,-1023.183532,26.179006},
  {798.103759,-1023.183532,26.179006, 798.114074,-958.008178,38.747123},
  {798.114074,-958.008178,38.747123, 787.352233,-915.310607,43.022518},
  {787.352233,-915.310607,43.022518, 699.277221,-847.987121,43.045768},
  {699.277221,-847.987121,43.045768, 684.840332,-732.633728,16.985456},
  {684.840332,-732.633728,16.985456, 684.227233,-635.197021,16.187500},
  {684.227233,-635.197021,16.187500, 685.181640,-570.781677,16.187500},
  {685.181640,-570.781677,16.187500, 683.935729,-533.060302,16.179687},
  {683.935729,-533.060302,16.179687, 758.379699,-533.038208,16.187500},
  {758.379699,-533.038208,16.187500, 825.084106,-533.638427,16.187500},
  {825.084106,-533.638427,16.187500, 828.736450,-571.124328,16.187500},
  {828.736450,-571.124328,16.187500, 869.996826,-565.543029,18.222314},
  {869.996826,-565.543029,18.222314, 927.014770,-535.040954,32.214462},
  {927.014770,-535.040954,32.214462, 970.230102,-498.646667,46.164714},
  {970.230102,-498.646667,46.164714, 1000.273803,-477.032592,49.745300},
  {1000.273803,-477.032592,49.745300, 1043.140258,-453.097045,51.691696},
  {1043.140258,-453.097045,51.691696, 1090.951171,-441.496398,45.608192},
  {1090.951171,-441.496398,45.608192, 1161.707885,-429.550109,23.793603},
  {1161.707885,-429.550109,23.793603, 1257.905151,-418.141479,2.460937},
  {1257.905151,-418.141479,2.460937, 1239.546142,-524.459655,31.843444},
  {1239.546142,-524.459655,31.843444, 1210.934692,-607.990356,53.739459},
  {1210.934692,-607.990356,53.739459, 1188.201660,-661.150329,60.939876},
  {1188.201660,-661.150329,60.939876, 1160.025146,-732.834472,61.151813},
  {1160.025146,-732.834472,61.151813, 1152.142456,-838.658325,50.517478},
  {1152.142456,-838.658325,50.517478, 1156.375122,-930.950805,43.030261},
  {1156.375122,-930.950805,43.030261, 1160.335327,-984.188415,39.361434},
  {1160.335327,-984.188415,39.361434, 1160.096313,-1061.805541,29.418670},
  {1160.096313,-1061.805541,29.418670, 1160.257934,-1140.234008,23.656250},
  {1160.257934,-1140.234008,23.656250, 1055.758300,-1141.452758,23.661586},
  {1055.758300,-1141.452758,23.661586, 1056.069702,-1213.786376,17.053476},
  {1056.069702,-1213.786376,17.053476, 1056.027587,-1353.887573,13.390569},
  {1056.027587,-1353.887573,13.390569, 1058.862670,-1444.552490,13.361046},
  {1058.862670,-1444.552490,13.361046, 1035.492675,-1556.613525,13.356954},
  {1035.492675,-1556.613525,13.356954, 1034.320312,-1714.538330,13.382812},
  {1034.320312,-1714.538330,13.382812, 1113.273193,-1714.903564,13.382812},
  {1113.273193,-1714.903564,13.382812, 1173.083129,-1713.842651,13.626757},
  {1173.083129,-1713.842651,13.626757, 1171.895629,-1763.668212,13.398437},
  {1171.895629,-1763.668212,13.398437, 1173.757568,-1854.593017,13.398437},
  {1173.757568,-1854.593017,13.398437, 1210.967651,-1854.862182,13.382812},
  {1210.967651,-1854.862182,13.382812, 1215.500488,-1834.535522,13.391527},
  {1215.500488,-1834.535522,13.391527, 0.0,0.0,0.0}
};


//******************************************************************************

new NEWLIST[MAX_PLAYERS][3];


new TOTALYUNIVER = 0,
 	UniversetyPickup1[21],
 	LearnObject[MAX_PLAYERS],
 	LearnTimer[MAX_PLAYERS],
	Float:UniversetyPickup[][][] = {
	{//Математика
	    {29.9991,57.5402,1200.7729},
	    {27.8198,57.5832,1200.7729},
	    {27.7284,52.2251,1200.7729},
	    {29.9998,52.2171,1200.7729},
	    {33.7193,53.1813,1200.7729}//Учитель
	},
	{//Информатика
	    {30.5452,47.5712,1200.7729},
	    {27.9769,47.4551,1200.7729},
	    {27.9834,40.8884,1200.7729},
	    {30.5423,41.0234,1200.7729},
	    {33.5306,45.7768,1200.7729}//Учитель
	},
	{//История
	    {28.0416,36.8449,1200.7729},
	    {31.0310,36.7164,1200.7729},
	    {28.0882,30.6544,1200.7729},
	    {31.0304,30.8412,1200.7729},
	    {34.0836,31.9099,1200.7729}//Учитель

	},
    {//Русский язык
        {28.2647,26.6376,1200.7729},
	    {31.0069,26.6219,1200.7729},
	    {28.1596,22.6137,1200.7729},
	    {30.9867,22.6461,1200.7729},
	    {33.2571,23.7390,1200.7729}//Учитель

	},
	{//Биология
        {27.9120,14.6192,1200.7729},
	    {30.5409,14.5180,1200.7729},
	    {30.4516,7.8342,1200.7729},
	    {27.9655,8.1718,1200.7729},
	    {33.2578,12.2517,1200.7729}//Учитель
	}
};

new IDPhoneMoney[MAX_PLAYERS][32];


/*new Float:GangZoneForNark[][4] = {
    {-1856.7654,806.0432,112.5469,179.8550}, // 1
	{-2977.4280,503.0778,2.4297,90.8650}, // 2
	{2101.8015,-104.0994,2.3140,128.4435}, // 3
	{-938.7270,2643.4785,42.3553,136.2779}, // 4
	{-2834.1995,-2389.0608,0.6273,100.8709}, // 5
	{-1571.1746,51.5642,17.3281,138.1813} // 6
};*/
//new TOTALAUTO = 0;
enum AUTO_MAIN
{
	AUTO_NAME[32],
	AUTO_AREA[2]
};
static const AutoS[][AUTO_MAIN] = {
    {"Infernus",{411,500000}},
	{"Turismo",{451,250000}},
	{"Bullet",{541,200000}},
	{"Windsor",{555,195000}},
	{"Stafford",{580,180000}},
	{"Super GT",{506,150000}},
	{"NRG-500",{522,120000}},
	{"Banshee",{429,110000}},
	{"Cheetah",{415,100000}},
	{"Sultan",{560,97000}},
	{"Jester",{559,95000}},
	{"ZR-350",{477,90000}},
	{"FCR-900",{521,89000}},
	{"Hotknife",{434,88000}},
	{"Huntley",{541,85000}},
	{"Alpha",{602,83000}},
	{"Euros",{587,80000}},
	{"Buffalo",{402,77000}},
	{"Comet",{480,75000}},
	{"Rancher",{489,73000}},
	{"Washington",{421,70000}},
	{"Elegy",{562,69000}},
	{"Phoenix",{603,65000}},
	{"PCJ-600",{461,63000}},
	{"Merit",{551,60000}},
	{"Freeway",{463,57000}},
	{"Landstalker",{400,55000}},
	{"Sentinel",{405,53000}},
	{"Remington",{534,50000}},
	{"Uranus",{558,47000}},
	{"Stratum",{561,45000}},
	{"Flash",{565,44000}},
	{"Wayfarer",{586,43000}},
	{"Feltzer",{533,42000}},
	{"Solair",{458,41000}},
	{"Virgo",{491,40000}},
	{"Blista Compact",{496,37000}},
	{"Nebula",{516,35000}},
	{"Elegant",{507,33000}},
	{"Slamvan",{535,32000}},
	{"Sunrise",{550,31000}},
	{"Tahoma",{566,30000}},
	{"Emperor",{585,28000}},
	{"Esperanto",{419,27000}},
	{"Bravura",{401,25000}},
	{"Voodoo",{412,24000}},
	{"Premier",{426,23500}},
	{"Stallion",{439,23000}},
	{"Admiral",{445,22000}},
	{"Previon",{436,21500}},
	{"Manana",{410,21000}},
	{"Solair",{458,20700}},
	{"Greenwood",{492,20500}},
	{"Majestic",{517,20300}},
	{"Buccaneer",{518,20200}},
	{"Willard",{529,20100}},
	{"Slamvan",{535,20000}},
	{"Blade",{536,19800}},
	{"Vincent",{540,19500}},
	{"Intruder",{546,19300}},
	{"Primo",{401,19200}},
	{"Tahoma",{566,19000}},
	{"Savanna",{567,18800}},
	{"Broadway",{575,18500}},
	{"Lowriders",{576,18000}},
	{"Fortune",{526,17000}},
	{"Cadrona",{527,16500}},
	{"Glendale",{466,16000}},
	{"Oceanic",{467,15500}},
	{"Sanchez",{468,15000}},
	{"Sabre",{475,14800}},
	{"Hermes",{474,14500}},
	{"Hustler",{545,12500}},
	{"Sadler",{543,12000}},
	{"Tampa",{549,11000}},
	{"Clover",{542,10000}},
	{"Perenniel",{404,9000}},
	{"Mountain Bike",{510,3000}},
	{"Bike",{509,2000}},
	{"BMX",{481,1000}}
	//{"Infernus",{411,80000}}
};
//*********************************************

//Завод вино-водочный
new Float:PickUpVodka[][3] = {
    {-884.2031,1902.5507,20.2616}, // 1
	{-883.5751,1899.3170,20.2616}, // 2
	{-884.3135,1892.6394,20.2616}, // 3
	{-883.8155,1890.0736,20.2616}, // 4
	{-885.0640,1883.5768,20.2616}, // 5
	{-884.3624,1880.3872,20.2616}, // 6
	{-884.1295,1873.8341,20.2616}, // 7
	{-883.6124,1871.0969,20.2616}, // 8
	{-884.2602,1863.8180,20.2616}, // 9
	{-883.6873,1860.7976,20.2616}, // 10
	{-884.2950,1852.9801,20.2616}, // 11
	{-883.6384,1849.5227,20.2616}, // 12
	{-890.6647,1880.2483,20.2616}, // 1
	{-894.6757,1877.2285,20.2616}, // 2
	{-891.2111,1883.0566,20.2616}, // 3
	{-890.5290,1890.0204,20.2616}, // 4
	{-890.9947,1892.4232,20.2616}, // 5
	{-894.7311,1887.0394,20.2616}, // 6
	{-890.6304,1901.3451,20.2616}, // 7
	{-891.0163,1903.3159,20.2616}, // 8
	{-895.1288,1897.7606,20.2616}, // 9
	{-880.4817,1897.6348,20.2616}, // 10
	{-880.6976,1887.7697,20.2616}, // 11
	{-880.6117,1878.4459,20.2616}, // 12
	{-880.4688,1868.7683,20.2616}, // 13
	{-881.1475,1858.8242,20.2616}, // 14
	{-880.9727,1855.5675,20.2616} // 15
};
new	PickUpVodka1[27];
new Text3D:Viska3D[20];
new WaitCapture[13];
#define NAME_SERVER "Dallas Role Play | Alpha | ОБТ"
//*********************************************
//new PlayerText:ReconNickID, PlayerText:ReconArmour, PlayerText:ReconHealth, PlayerText:ReconCarHealth, PlayerText:ReconMoney, PlayerText:ReconGun, PlayerText:ReconAmmo, PlayerText:ReconWarns, PlayerText:ReconPing, PlayerText:ReconSpeed;
#define D_ADMIN_PRISON_TIME             14999
#define D_ADMIN_KICK_REASON     		15000
#define D_ADMIN_WARN_REASON     		15001
#define D_ADMIN_BAN_REASON      		15002
#define D_ADMIN_MUTE_TIME_REASON    	15003
//*********************************************
#define COLOR_AQUA				0xFFCD00FF//0x7FC0E3FF//0x7FC0E3FF
#define COLOR_GREEN    			0x33AAFFFF//0x27C400FF//0x27C400FF
//*********************************************
new mes[1024];
#define f(%1, 					format(%1, sizeof(%1),
//*********************************************


//*********************************************

new gTree[15],
	gTreeHealth[15] = {100, ...},
	gTreeCP[15],
	bool:gTreeStatus[15];
new Float:ObjectTree[][3] = {
	{1030.50977, -310.28210, 69.38030},
	{1018.77686, -310.36716, 69.38030},
	{1041.71082, -310.32391, 69.38030},
	{1052.90796, -310.22421, 69.38030},
	{1063.77588, -310.77939, 69.38030},
	{1063.92090, -300.04129, 69.38030},
	{1052.72327, -300.57681, 69.38030},
	{1041.12012, -300.01431, 69.38030},
	{1030.03711, -300.55710, 69.38030},
	{1018.57959, -300.37961, 69.38030},
	{1018.41962, -291.12119, 69.38030},
	{1030.04858, -290.98010, 69.38030},
	{1041.28101, -291.09641, 69.38030},
	{1052.85083, -291.22961, 69.38030},
	{1064.06470, -290.82520, 69.38030}
};


new Text3D:InFactory3DText[28];
new bool:StatusFactory[28];

//*********************************************

new Float:LicTest[][6] = {
	{-2067.847900,-91.407318,34.906822, -2046.923583,-81.834526,34.906494},
	{-2046.923583,-81.834526,34.906494, -2024.341918,-72.655906,34.913349},
	{-2024.341918,-72.655906,34.913349, -2004.603759,-35.064193,34.866008},
	{-2004.603759,-35.064193,34.866008, -2004.286499,15.229150,32.763946},
	{-2004.286499,15.229150,32.763946, -2003.359375,106.100662,27.280149},
	{-2003.359375,106.100662,27.280149, -2003.576049,194.443130,27.280536},
	{-2003.576049,194.443130,27.280536, -2001.074218,263.712310,31.156949},
	{-2001.074218,263.712310,31.156949, -2000.715087,312.454925,34.761833},
	{-2000.715087,312.454925,34.761833, -2053.206054,322.805450,34.757087},
	{-2053.206054,322.805450,34.757087, -2109.254150,322.722778,34.757438},
	{-2109.254150,322.722778,34.757438, -2143.792724,345.001739,34.913406},
	{-2143.792724,345.001739,34.913406, -2143.673583,384.274597,34.913654},
	{-2143.673583,384.274597,34.913654, -2140.940429,442.057128,34.757259},
	{-2140.940429,442.057128,34.757259, -2140.310546,488.716766,34.757053},
	{-2140.310546,488.716766,34.757053, -2163.508300,507.342285,34.756679},
	{-2163.508300,507.342285,34.756679, -2203.298828,509.793334,34.757175},
	{-2203.298828,509.793334,34.757175, -2271.185058,510.956542,34.748722},
	{-2271.185058,510.956542,34.748722, -2308.959228,511.181823,33.258632},
	{-2308.959228,511.181823,33.258632, -2350.290283,511.073242,29.087160},
	{-2350.290283,511.073242,29.087160, -2373.449707,497.727905,29.420711},
	{-2373.449707,497.727905,29.420711, -2330.257568,437.216491,34.193912},
	{-2330.257568,437.216491,34.193912, -2279.667724,386.383331,34.345291},
	{-2279.667724,386.383331,34.345291, -2255.086181,300.178161,34.905624},
	{-2255.086181,300.178161,34.905624, -2255.122558,202.519058,34.913021},
	{-2255.122558,202.519058,34.913021, -2255.948730,104.993690,34.913322},
	{-2255.948730,104.993690,34.913322, -2260.145507,15.859828,34.913448},
	{-2260.145507,15.859828,34.913448, -2261.687500,-33.157043,34.913715},
	{-2261.687500,-33.157043,34.913715, -2221.802734,-73.364868,34.913440},
	{-2221.802734,-73.364868,34.913440, -2134.545410,-72.908638,34.917270},
	{-2134.545410,-72.908638,34.917270, -2090.747070,-72.791618,34.913383},
	{-2090.747070,-72.791618,34.913383, -2051.328613,-77.624473,34.910236},
	{-2051.328613,-77.624473,34.910236, -2050.685546,-97.034332,34.908390},
	{-2050.685546,-97.034332,34.908390, 0.0,0.0,0.0}
};
#define COLOR_ORANGERED 0xFF6600AA
new wallzal1, wallzal2, wallzal3;
new CheckGang[8];
//new loto = 0;
new ConsertSuper[15] = {-1,...};
new Float:gEffectConsert[][] = {
	{ 90.11957, 85.87970, 984.45081,   0.00000, 0.00000, 0.00000},
	{ 94.35976, 85.79526, 984.45081,   0.00000, 0.00000, 0.00000},
	{ 98.06371, 85.61851, 984.45081,   0.00000, 0.00000, 0.00000},
	{ 100.80877, 85.56772, 984.45081,   0.00000, 0.00000, 0.00000},
	{ 104.32584, 85.53915, 984.45081,   0.00000, 0.00000, 0.00000},
	{ 108.60915, 85.48167, 984.45081,   0.00000, 0.00000, 0.00000},
	{ 111.71041, 85.43760, 984.45081,   0.00000, 0.00000, 0.00000},
	{ 114.53512, 85.42054, 984.45081,   0.00000, 0.00000, 0.00000},
	{ 117.45293, 85.42920, 984.45081,   0.00000, 0.00000, 0.00000},
	{ 120.09538, 85.39757, 984.45081,   0.00000, 0.00000, 0.00000},
	{ 122.86331, 85.40655, 984.45081,   0.00000, 0.00000, 0.00000},
	{ 125.59190, 85.47595, 984.45081,   0.00000, 0.00000, 0.00000},
	{ 128.76421, 85.46370, 984.45081,   0.00000, 0.00000, 0.00000}
};
new Text:State99[MAX_PLAYERS];
new Text:State999[MAX_PLAYERS];
//*********************************************

new arGang[6],
	arGangExit[6];

new SMSEARS = 0;


//*********************************************

////////////////////////////////////////////////////////////

//new STRS = 0;
new Text:GPSDraw[MAX_PLAYERS];
//Система гонок.
#define MAX_RACE 9
	new Result[MAX_RACE+1] = {-1, ...},
	ResultFirst[MAX_RACE+1] = {-1, ...},
	ResultTime[MAX_RACE+1] = {-1, ...},
	TotalRace = 0,
//	RaceStart = 0,
	RaceStartT[2] = 0,
	pPressed[MAX_PLAYERS],
//	GZRaceTime = 180,
	GZRace[MAX_PLAYERS],
	RaceStart1 = 0,
	BRace = 0,
	PlaceNumber[MAX_PLAYERS],
//	gRaceRating[MAX_RACE+1] = {80,60,40,10,6},
//	RaceAll = 0,
//	RaceCar[5] = {402, 439, 457, 503, 541},
//	RaceCar2[5] = {574, 457, 481, 572, 571},
	RaceCar1 = 0;

//*********************************************

/*enum pTemp33
{
	Text: TD1,
	Text: TD2,
	Text: TD3,
	Text: TD4,
	Text: TD5
};
new RacerS[MAX_PLAYERS][pTemp33];
*/

new Float:gRaceCar[2][MAX_RACE][4] = {
	{
		{806.7733,1877.3236,4.2879,1.0434},
		{809.8416,1877.5419,4.2990,1.5838},
		{812.9384,1877.5220,4.2900,0.3067},
		{806.7844,1871.7228,4.1514,359.9547},
		{809.9934,1871.6635,4.1732,0.5170},
		{812.8549,1871.7963,4.1534,359.4990},
		{812.6997,1865.6665,4.0104,359.2681},
		{809.8427,1865.8026,4.0095,359.4857},
		{806.7106,1865.8951,4.0463,358.5284}
	},
	{
		{-2389.0867,-2192.3206,32.9887,276.3921},
		{-2388.6838,-2195.9155,32.9887,276.3921},
		{-2388.3152,-2199.2119,32.9887,276.3921},
		{-2395.8237,-2193.2532,32.9941,278.5633},
		{-2395.3271,-2196.6326,32.9942,276.4851},
		{-2394.7422,-2199.9414,33.0165,275.3500},
		{-2401.7097,-2193.8989,32.9940,276.3902},
		{-2401.3359,-2197.2397,33.0126,276.3921},
		{-2400.9597,-2200.6008,33.0126,276.3921}
	}
};
new gRacePlaceCar[10] = {0,0,0,0,0,0,0,0,0};
/*new Float:gRaceCheckpoint[2][][] = {
	{
		{810.050109,1890.794433,4.657272, 811.022094,1910.500488,5.259983},
		{811.022094,1910.500488,5.259983, 815.930664,1964.826538,7.376093},
		{815.930664,1964.826538,7.376093, 819.237792,2034.140869,10.097106},
		{819.237792,2034.140869,10.097106, 819.851501,2092.281494,10.932404},
		{819.851501,2092.281494,10.932404, 817.454895,2129.750488,10.744028},
		{817.454895,2129.750488,10.744028, 791.933776,2221.877441,8.947423},
		{791.933776,2221.877441,8.947423, 743.336853,2359.109863,13.524701},
		{743.336853,2359.109863,13.524701, 752.998107,2430.974365,20.367305},
		{752.998107,2430.974365,20.367305, 818.560119,2497.774902,28.346115},
		{818.560119,2497.774902,28.346115, 844.832946,2517.314453,29.405239},
		{844.832946,2517.314453,29.405239, 854.237976,2489.147705,29.347387},
		{854.237976,2489.147705,29.347387, 862.743774,2441.275634,29.382093},
		{862.743774,2441.275634,29.382093, 837.293762,2378.273925,27.901559},
		{837.293762,2378.273925,27.901559, 776.018737,2344.793457,27.690105},
		{776.018737,2344.793457,27.690105, 725.335449,2350.031982,29.400794},
		{725.335449,2350.031982,29.400794, 684.698425,2389.594726,31.141054},
		{684.698425,2389.594726,31.141054, 667.635864,2473.613281,31.237483},
		{667.635864,2473.613281,31.237483, 703.752014,2565.423583,27.002578},
		{703.752014,2565.423583,27.002578, 757.801025,2611.859375,18.638853},
		{757.801025,2611.859375,18.638853, 830.463989,2620.798583,12.087043},
		{830.463989,2620.798583,12.087043, 947.786682,2572.437011,10.308593},
		{947.786682,2572.437011,10.308593, 1057.855590,2503.914306,10.317432},
		{1057.855590,2503.914306,10.317432, 1178.696044,2416.439941,10.821259},
		{1178.696044,2416.439941,10.821259, 1364.117431,2406.213134,8.816472},
		{1364.117431,2406.213134,8.816472, 1444.724121,2450.791259,6.439810},
		{1444.724121,2450.791259,6.439810, 1554.669433,2453.661865,6.439814},
		{1554.669433,2453.661865,6.439814, 1660.155517,2448.608398,6.586018},
		{1660.155517,2448.608398,6.586018, 1723.661254,2421.938232,6.504340},
		{1723.661254,2421.938232,6.504340, 1774.741333,2370.470214,6.477999},
		{1774.741333,2370.470214,6.477999, 1787.773193,2269.105468,5.110562},
		{1787.773193,2269.105468,5.110562, 1788.100830,2149.652832,3.611632},
		{1788.100830,2149.652832,3.611632, 1788.235595,1917.589599,6.068006},
		{1788.235595,1917.589599,6.068006, 1788.177734,1683.317871,6.439844},
		{1788.177734,1683.317871,6.439844, 1787.996215,1440.683349,6.443673},
		{1787.996215,1440.683349,6.443673, 1788.435424,1162.982055,6.443706},
		{1788.435424,1162.982055,6.443706, 1788.631958,1025.280883,6.439829}//36
	},
	{
		{-2329.726074,-2176.174804,36.056446, -2329.726074,-2176.174804,36.056446},
		{-2329.726074,-2176.174804,36.056446, -2290.263427,-2157.483398,47.464756},
		{-2290.263427,-2157.483398,47.464756, -2235.690429,-2118.860351,67.197143},
		{-2235.690429,-2118.860351,67.197143, -2190.106445,-2070.618164,83.032722},
		{-2190.106445,-2070.618164,83.032722, -2144.733398,-2008.719726,94.708099},
		{-2144.733398,-2008.719726,94.708099, -2109.051513,-1921.760986,102.753288},
		{-2109.051513,-1921.760986,102.753288, -2101.714111,-1885.660522,110.201835},
		{-2101.714111,-1885.660522,110.201835, -2127.014648,-1907.563354,114.733947},
		{-2127.014648,-1907.563354,114.733947, -2155.366943,-1976.328002,118.183929},
		{-2155.366943,-1976.328002,118.183929, -2209.819580,-2037.252563,119.407661},
		{-2209.819580,-2037.252563,119.407661, -2285.019042,-2082.829345,117.621536},
		{-2285.019042,-2082.829345,117.621536, -2380.918701,-2100.432617,116.050949},
		{-2380.918701,-2100.432617,116.050949, -2426.128417,-2089.984375,122.314605},
		{-2426.128417,-2089.984375,122.314605, -2467.241699,-2068.935546,133.107528},
		{-2467.241699,-2068.935546,133.107528, -2505.080078,-2007.597167,161.833099},
		{-2505.080078,-2007.597167,161.833099, -2576.799316,-1896.525756,197.910842},
		{-2576.799316,-1896.525756,197.910842, -2649.930908,-1786.227050,236.299591},
		{-2649.930908,-1786.227050,236.299591, -2651.857910,-1734.254150,257.228149},
		{-2651.857910,-1734.254150,257.228149, -2620.101562,-1763.853759,260.878997},
		{-2620.101562,-1763.853759,260.878997, -2578.492187,-1832.107543,272.481170},
		{-2578.492187,-1832.107543,272.481170, -2549.158691,-1870.302856,287.325164},
		{-2549.158691,-1870.302856,287.325164, -2535.594726,-1848.657470,308.197021},
		{-2535.594726,-1848.657470,308.197021, -2598.856689,-1754.581176,320.546112},
		{-2598.856689,-1754.581176,320.546112, -2597.117431,-1632.286376,343.122772},
		{-2597.117431,-1632.286376,343.122772, -2584.732666,-1672.421142,351.899627},
		{-2584.732666,-1672.421142,351.899627, -2583.210449,-1733.760498,349.364074},
		{-2583.210449,-1733.760498,349.364074, -2557.279785,-1789.900634,367.563964},
		{-2557.279785,-1789.900634,367.563964, -2529.457519,-1786.476562,378.406860},
		{-2529.457519,-1786.476562,378.406860, -2564.470703,-1707.531005,390.283355},
		{-2564.470703,-1707.531005,390.283355, -2537.480468,-1683.797973,400.978729},
		{-2537.480468,-1683.797973,400.978729, -2508.308593,-1761.761840,401.911163},
		{-2508.308593,-1761.761840,401.911163, -2447.119384,-1811.442993,409.794494},
		{-2447.119384,-1811.442993,409.794494, -2443.788330,-1719.539428,432.150543},
		{-2443.788330,-1719.539428,432.150543, -2402.050048,-1780.934448,431.702880},
		{-2402.050048,-1780.934448,431.702880, -2318.857666,-1807.636474,438.441314},
		{-2318.857666,-1807.636474,438.441314, -2321.112060,-1633.217163,483.407745}
	}
};*/
//*********************************************
new Kanistra[MAX_PLAYERS], VehK;



new bool:Hospital_hStatus[24][4];
new Text3D:hospital[24][4];
new Float:hospos[24][4] = {


	{195.9506,206.4141,501.0859,91.5901},//0
	{196.0164,208.4666,501.0859,95.3502},
	{196.2529,210.6036,501.0859,91.2768},
	{196.0237,212.6099,501.0859,90.6502},
	{195.9477,214.7625,501.0859,86.5768},
	{196.1731,216.9108,501.0859,94.0968},
	{195.9994,218.8967,501.0859,94.0969},
	{203.1078,216.9182,501.0859,267.3718},
	{203.1685,214.8069,501.0859,268.9385},
	{203.2104,212.7527,501.0859,262.3585},
	{203.0694,210.5998,501.0859,270.5052},//10
	{202.8923,208.5424,501.0859,270.8186},
	{196.0456,181.1684,501.0859,95.0369},
	{196.0944,183.2069,501.0859,86.8901},
	{195.9130,185.2607,501.0859,85.9501},
	{195.9774,187.2454,501.0859,90.3368},
	{195.9261,189.3134,501.0859,91.9035},
	{195.9030,191.4376,501.0859,88.7701},
	{195.9308,193.4610,501.0859,92.5302},
	{203.1813,191.4058,501.0859,277.3752},
	{203.1241,189.4291,501.0859,268.2884},//20
	{203.1094,187.2469,501.0859,270.7951},
	{203.1982,185.3294,501.0859,271.7351},
	{203.1719,183.2531,501.0859,272.0485}

    /*{1147.7242,68.5987,1025.0862,81.4312},
	{1147.5197,66.3689,1025.0862,92.7113},
	{1147.8508,63.8599,1025.0862,92.7113},
	{1147.6163,57.1695,1025.0859,84.2512},
	{1148.0129,54.9950,1025.0859,88.0113},
	{1147.6521,52.7635,1025.0859,78.9245},
	{1152.6587,52.3573,1025.0859,264.7096},
	{1152.7047,54.6623,1025.0859,266.2762},
	{1152.7002,56.9453,1025.0859,259.0695},
	{1152.6929,59.2293,1025.0859,264.3962},
	{1152.6118,61.5156,1025.0859,269.0963},
	{1152.7845,63.7293,1025.0859,257.5028},
	{1152.8545,66.1253,1025.0859,255.9361},
	{1152.8846,68.3463,1025.0859,265.0228},
	{1146.1281,38.9498,1025.0859,271.9525},
	{1149.5555,38.9882,1025.0859,271.9525},
	{1152.8013,38.9615,1025.0859,271.9525},
	{1152.5238,36.7236,1025.0859,271.0125},
	{1149.6198,36.7073,1025.0859,258.1657},
	{1145.9971,36.7073,1025.0859,263.4925},
	{1145.7955,34.2547,1025.0859,251.2724},
	{1149.3989,34.2514,1025.0859,261.6124},
	{1152.7688,34.2515,1025.0859,261.6124}*/
};


/*enum pTemp3
{
	Text: Textdraw01,
	Text: Textdraw11,
	Text: Textdraw21,
	Text: Textdraw31,
	Text: Textdraw41,
	Text: Textdraw51,
	Text: Textdraw61,
	Text: Textdraw71,
	Text: Textdraw81,
	Text: Textdraw91,
	Text: Textdraw101
};
new Speedometr[MAX_PLAYERS][pTemp3];*/
//new Text:SpeedText[2];
//new	PlayerText:SpeedPlayerText[MAX_PLAYERS][4];

//*********************************************

//forward UpdateSpeedometr(playerid, SpeedUpdate);

forward MaskOff(playerid);

enum TextMafia
{
	Text:Textdraw0
};
new CAPTU[MAX_PLAYERS][TextMafia];



new PustZone = 0;



enum SAZONE_MAIN
{
	SAZONE_NAME[28],
	Float:SAZONE_AREA[6]
};

static const gSAZones[][SAZONE_MAIN] = {
	{"The Big Ear",                 {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
	{"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
	{"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
	{"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
	{"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
	{"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
	{"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
	{"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
	{"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
	{"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
	{"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
	{"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
	{"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
	{"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
	{"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
	{"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
	{"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
	{"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},
	{"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
	{"Blackfield Intersection",     {1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
	{"Blackfield Intersection",     {1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
	{"Blackfield Intersection",     {1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
	{"Blackfield Intersection",     {1375.60,823.20,-89.00,1457.30,919.40,110.90}},
	{"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},
	{"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
	{"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},
	{"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
	{"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
	{"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
	{"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
	{"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
	{"Come-A-Lot",                  {2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
	{"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
	{"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
	{"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
	{"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
	{"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
	{"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
	{"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
	{"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
	{"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
	{"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
	{"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
	{"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
	{"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
	{"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
	{"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
	{"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
	{"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
	{"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
	{"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
	{"Downtown Los Santos",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
	{"Downtown Los Santos",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
	{"Downtown Los Santos",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
	{"Downtown Los Santos",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
	{"Downtown Los Santos",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
	{"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
	{"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
	{"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
	{"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
	{"East Los Santos",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
	{"East Los Santos",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
	{"East Los Santos",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
	{"East Los Santos",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
	{"East Los Santos",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
	{"East Los Santos",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
	{"East Los Santos",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
	{"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
	{"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
	{"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
	{"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
	{"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
	{"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
	{"Easter Bay Chemicals",        {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
	{"Easter Bay Chemicals",        {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
	{"El Castillo del Diablo",      {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
	{"El Castillo del Diablo",      {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
	{"El Castillo del Diablo",      {-208.50,2337.10,0.00,8.40,2487.10,200.00}},
	{"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
	{"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
	{"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
	{"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
	{"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
	{"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
	{"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
	{"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
	{"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
	{"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
	{"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},
	{"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},
	{"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
	{"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
	{"Flint Intersection",          {-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
	{"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
	{"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},
	{"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
	{"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
	{"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
	{"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
	{"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
	{"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
	{"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
	{"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
	{"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
	{"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
	{"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
	{"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
	{"Glen Park",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
	{"Glen Park",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
	{"Glen Park",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
	{"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},
	{"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
	{"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
	{"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},
	{"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},
	{"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
	{"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
	{"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
	{"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
	{"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
	{"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
	{"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
	{"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
	{"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
	{"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
	{"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
	{"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
	{"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
	{"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
	{"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
	{"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
	{"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
	{"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
	{"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
	{"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
	{"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
	{"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
	{"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
	{"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
	{"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
	{"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
	{"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
	{"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
	{"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
	{"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
	{"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
	{"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
	{"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
	{"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
	{"K.A.C.C. Military Fuels",     {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
	{"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
	{"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
	{"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
	{"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
	{"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
	{"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
	{"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
	{"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
	{"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
	{"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
	{"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
	{"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
	{"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
	{"Las Colinas",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
	{"Las Colinas",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
	{"Las Colinas",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
	{"Las Colinas",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
	{"Las Colinas",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
	{"Las Colinas",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
	{"Las Colinas",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
	{"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
	{"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
	{"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
	{"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},
	{"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
	{"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
	{"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
	{"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
	{"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
	{"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
	{"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
	{"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
	{"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
	{"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
	{"Los Santos International",    {1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
	{"Los Santos International",    {1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
	{"Los Santos International",    {1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
	{"Los Santos International",    {1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
	{"Los Santos International",    {1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
	{"Los Santos International",    {2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
	{"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
	{"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
	{"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
	{"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
	{"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
	{"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
	{"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
	{"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
	{"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},
	{"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
	{"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
	{"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},
	{"Montgomery Intersection",     {1546.60,208.10,0.00,1745.80,347.40,200.00}},
	{"Montgomery Intersection",     {1582.40,347.40,0.00,1664.60,401.70,200.00}},
	{"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
	{"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
	{"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
	{"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
	{"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
	{"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
	{"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},
	{"Mulholland",                  {687.80,-860.60,-89.00,911.80,-768.00,110.90}},
	{"Mulholland",                  {737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
	{"Mulholland",                  {1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
	{"Mulholland",                  {952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
	{"Mulholland",                  {911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
	{"Mulholland",                  {861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
	{"Mulholland Intersection",     {1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
	{"North Rock",                  {2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
	{"Ocean Docks",                 {2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
	{"Ocean Docks",                 {2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
	{"Ocean Docks",                 {2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
	{"Ocean Docks",                 {2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
	{"Ocean Docks",                 {2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
	{"Ocean Docks",                 {2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
	{"Ocean Docks",                 {2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
	{"Ocean Flats",                 {-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
	{"Octane Springs",              {338.60,1228.50,0.00,664.30,1655.00,200.00}},
	{"Old Venturas Strip",          {2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
	{"Palisades",                   {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
	{"Palomino Creek",              {2160.20,-149.00,0.00,2576.90,228.30,200.00}},
	{"Paradiso",                    {-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
	{"Pershing Square",             {1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
	{"Pilgrim",                     {2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
	{"Pilgrim",                     {2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
	{"Pilson Intersection",         {1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
	{"Pirates in Men's Pants",      {1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
	{"Playa del Seville",           {2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
	{"Prickle Pine",                {1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
	{"Prickle Pine",                {1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
	{"Prickle Pine",                {1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
	{"Prickle Pine",                {1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
	{"Queens",                      {-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
	{"Queens",                      {-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
	{"Queens",                      {-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
	{"Randolph Industrial Estate",  {1558.00,596.30,-89.00,1823.00,823.20,110.90}},
	{"Redsands East",               {1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
	{"Redsands East",               {1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
	{"Redsands East",               {1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
	{"Redsands West",               {1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
	{"Redsands West",               {1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
	{"Redsands West",               {1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
	{"Redsands West",               {1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
	{"Regular Tom",                 {-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
	{"Richman",                     {647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
	{"Richman",                     {647.50,-954.60,-89.00,768.60,-860.60,110.90}},
	{"Richman",                     {225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
	{"Richman",                     {225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
	{"Richman",                     {72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
	{"Richman",                     {72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
	{"Richman",                     {321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
	{"Richman",                     {321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
	{"Richman",                     {321.30,-860.60,-89.00,687.80,-768.00,110.90}},
	{"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},
	{"Robada Intersection",         {-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
	{"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
	{"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
	{"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},
	{"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},
	{"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
	{"Rodeo",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
	{"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
	{"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
	{"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
	{"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
	{"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
	{"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
	{"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
	{"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
	{"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
	{"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
	{"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
	{"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
	{"San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},
	{"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
	{"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
	{"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
	{"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
	{"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
	{"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
	{"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
	{"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
	{"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
	{"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
	{"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
	{"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
	{"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
	{"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
	{"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
	{"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
	{"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
	{"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
	{"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
	{"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
	{"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
	{"The Four Dragons Casino",     {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
	{"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
	{"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},
	{"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
	{"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
	{"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
	{"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
	{"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
	{"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
	{"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
	{"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
	{"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
	{"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
	{"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
	{"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
	{"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
	{"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
	{"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},
	{"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
	{"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
	{"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
	{"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
	{"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
	{"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
	{"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
	{"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
	{"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
	{"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
	{"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
	{"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
	{"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
	{"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
	{"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
	{"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
	{"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
	{"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
	{"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
	// Main Zones
	{"Los Santos",       {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
	{"Las Venturas",     {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Bone County",      {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
	{"Tierra Robada",    {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
	{"Tierra Robada",    {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Fierro",       {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
	{"Red County",       {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
	{"Flint County",     {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
	{"Whetstone",        {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};
new zGangTime[8];
new Float:VehPos[MAX_VEHICLES][4];
new bool: BanCar[MAX_VEHICLES];
new WVehicleDriver[MAX_VEHICLES];
new aFuel[3];
new fuelOrders;
bool: UseCar(carid);
new barrier[12];
new poluch[MAX_PLAYERS];
new Vor[MAX_PLAYERS];
new Text3D:Mafia3d[3];
new MafiaMoney[3];
new MafiaEd[3];
new MafiaDrug[3];
new MafiaPatr[3];
new TyritPT[2];
new bool:times[MAX_PLAYERS];
new bool:IsAFireWork[MAX_OBJECTS];
new bool:IsAFireWorkTwo[MAX_OBJECTS];
new num[MAX_PLAYERS];
new object[MAX_PLAYERS];
new starts[MAX_PLAYERS];
new spark[MAX_PLAYERS], dim[MAX_PLAYERS];


forward UpdateVehiclePos(vehicleid, type);
forward destroyFlare(playerid);
forward startone(playerid);
forward startonex(playerid);
forward dimstart(playerid);
forward svetstart(playerid);
forward AntiBH(playerid);
forward OnPlayerAmmoChange(playerid, newammo, oldammo);
forward FireWorkStart(box_objectid, first_objectid, end_objectid, count, playerid);
forward BigFireWorkStart(box_objectidtwo, first_objectidtwo, end_objectidtwo, counttwo, playerid);
//===============================
new gGateFBI[2];
new gGateMayor[3];
new lift[4];
new doorlift[4];
new liftstatus[2];
new GrabBank[6] = {0, ...};
new CaptureTimes[6] = {0, ...};
//================================
#define MAX_GZONE 104
#define MAX_GANGS 30
new ZoneOnBattle[MAX_GZONE];
new allowedfactions[] = { 3, 4, 5, 6, 7};
new GZSafeTime = -1;
new TOTALGZ;
enum Ganginfa
{
	capture,
	score,
	captureid,
	gangnumber
}
new GangInfo[MAX_GANGS][Ganginfa];
new IsCapture;
//===============
#define SetProp(%0,%1)			setproperty(.name = %0, .value= %1)
#define GetProp(%0)				getproperty(.name = %0)
#define F_BALLAS 3
#define F_GROVE  4
#define F_AZTEC  5
#define F_VAGOS  6
#define F_RIFA   7
#define KEY_NUM4				(8192)
#define KEY_NUM6 				(16384)
#define ADMIN_SPEC_TYPE_NONE 0
#define ADMIN_SPEC_TYPE_PLAYER 1
#define ADMIN_SPEC_TYPE_VEHICLE 2

//===============
#define BYTES_PER_CELL (cellbits / 8)
#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define SFCM(%0,%1,%2) do{new ssss[256];format(ssss,256,%2);SendClientMessage(%0,%1,ssss) ;}while(FALSE)
#define SPFDD(%0,%1,%2,%3,%4,%5,%6) do{new ssss[256];format(ssss,256,%6);ShowPlayerDialog(%0,%1,%2,%3,ssss,%4,%5) ;}while(FALSE)
#define FailMessage(%0) SendClientMessage(%0,CWHITE,"{fe0000}Ошибка: {ffffff}Вам не доступна эта функция")
#define IsValidEmail(%1) \
	regex_match(%1, "|([a-z0-9_\\.\\-]{1,20})@([a-z0-9\\.\\-]{1,20})\\.([a-z]{2,4})|is")
#define RandomEx(%1,%2) (random(%2-%1)+%1)
#define HOLDING(%0) \
	((newkeys & (%0)) == (%0))
#define INVALID_HOUSE_ID INVALID_PLAYER_ID
// ----------===== [Цвета] =====----------
#define CGRAY 0xAFAFAFAA
#define CGREEN 0x33AA33AA
#define CRED 0xFF0000AA
#define CLIGHTRED 0xFF0033FF
#define CYELLOW 0xFFFF00AA
#define CWHITE 0xFFFFFFFF
#define CBLUE 0x4682B4AA
#define CLIGHTBLUE 0x33CCFFAA
#define CORANGE 0xFF9900AA
#define CSYSTEM 0xEFEFF7AA
#define CPINK 0xDD90FFAA
#define CBRIGHTRED 0xB2222200
#define CDARKGREEN 0x004400AA
#define CLIGHTGREEN 0x00FF00AA
#define CCON_GREEN 0x00FF00FF
#define CBROWN 0x8b4513FF
#define CINFO 0x269BD8FF
#define CBADINFO 0xFF182DFF
#define CADMIN 0xF36223FF
#define CDEPARTMENT 0x007FFFFF
#define CRADIO 0x6B8E23FF
#define cGRAY AFAFAF
#define cGREEN 33AA33
#define cRED FF0000
#define cLIGHTRED FF0033
#define cYELLOW FFFF00
#define cWHITE FFFFFF
#define cBLUE 4682B4
#define cLIGHTBLUE 33CCFF
#define cORANGE FF9900
#define cSYSTEM EFEFF7
#define cPINK E75480
#define cBRIGHTRED B22222
#define cDARKGREEN 004400
#define cLIGHTGREEN 00FF00
#define cCON_GREEN 00FF00
#define cBROWN 8b4513
#define cINFO 269BD8
#define cBADINFO FF182D
#define cDEPARTMENT 007FFF
#define cRADIO 6B8E23

#define COLOR_SEA 			0x00808000
#define COLOR_GRAD1 		0xB4B5B7FF
#define COLOR_GRAD2 		0xBFC0C2FF
#define COLOR_GRAD3 		0xCBCCCEFF
#define COLOR_GRAD4 		0xD8D8D8FF
#define COLOR_GRAD5 		0xE3E3E3FF
#define COLOR_GRAD6 		0xF0F0F0FF
#define COLOR_GREY 			0xAFAFAFAA
#define COLOR_RED 			0xAA3333AA
#define COLOR_LIGHTYELLOW 	0xFFFF00AA
#define COLOR_LIGHTRED 		0xFF5030AA
#define COLOR_LIGHTRED2 	0xFF0000FF
#define COLOR_LIGHTBLUE 	0x33CCFFAA
#define COLOR_LIGHTGREEN 	0x9ACD32AA
#define COLOR_YELLOW 		0xFFFF00AA
#define COLOR_YELLOW2 		0xF5DEB3AA
#define COLOR_WHITE 		0xFFFFFFAA
#define COLOR_FADE1 		0xE6E6E6E6
#define COLOR_FADE2 		0xC8C8C8C8
#define COLOR_TOMATO 		0xFF6347AA
#define COLOR_FADE3 		0xAAAAAAAA
#define COLOR_FADE4 		0x8C8C8C8C
#define COLOR_BLUE 			0x33AAFFFF
#define COLOR_ENTER 		0x3333FFAA
#define COLOR_FADE5 		0x6E6E6E6E
#define COLOR_PURPLE		0xDD90FFAA
#define COLOR_LIME			0x66CC00AA
#define COLOR_DBLUE 		0x2641FEAA
#define COLOR_ALLDEPT 		0xFF8282AA
#define COLOR_NEWS 			0xFFA500AA
#define COLOR_OOC 			0xE0FFFFAA
#define COLOR_ORANGE 		0xFF9900AA
#define TEAM_BLUE_COLOR 	0x8D8DFF00
#define COLOR_BLACK 		0x000000AA
#define COLOR_BOX   		0x00000050
#define COLOR_BBLUE 		0x20A9FFAA
#define COLOR_BORDER 		0x00000AA
#define COLOR_INDIGO 		0x4B00B0AA
#define TEAM_GROVE_COLOR 	0x00D900C8
#define TEAM_VAGOS_COLOR 	0xFFC801C8
#define TEAM_BALLAS_COLOR 	0x6666FFC8
#define TEAM_AZTECAS_COLOR 	0x01FCFFC8
#define COLOR_ISPOLZUY 0x7FB151FF
#define COLOR_SYSTEM 0xEFEFF7AA

// ----------===== [Цвета (конец)] =====----------

// ----------===== [Языки] =====----------
#define LANG_NONE           "1000000"
#define LANG_ENGLISH		0
#define LANG_RUSSIAN        1
#define LANG_SPAIN          2
#define LANG_PORTUGAL       3
#define LANG_ITALIAN        4
#define LANG_JAPAN          5
#define LANG_FRENCH         6

// ----------===== [Языки (конец)] =====----------

// ----------===== [ПВар] ====------------

#define GivePVarInt(%1,%2,%3) 								SetPVarInt(%1,%2,GetPVarInt(%1,%2) + %3)

///////////////////////////////////////////

// ----------===== [Лицензии] =====----------
#define LIC_DRIVING 0
#define LIC_FLY 1
#define LIC_BOAT 2
#define LIC_WEAP 3
#define LIC_VISKA 4
// ----------===== [Лицензии (конец)] =====----------

// ----------===== [Типы т/с] =====----------
#define VEHICLE_TYPE_CAR 0
#define VEHICLE_TYPE_BOAT 1
#define VEHICLE_TYPE_PLANE 2
#define VEHICLE_TYPE_TWOWEELS 3
// ----------===== [Типы т/с (конец)] =====----------


// ----------===== [Цвета ников] =====----------
#define pcDISABLED 0xFFFFFF00
#define pcWHITE 0xF2E8C9FF
// ----------===== [Цвета ников (конец)] =====----------


#define MAX_BUSINESS_COUNT 77 //Макс к-во бизнесов

// ----------===== [Основные настройки] =====----------
#define MAX_LOGIN_ATTEMPTS 3 //Максимальное количество неудачных попыток ввода пароля
#define BUS_LEVEL_2 100 //К-во рейсов автобуса для перехода на 2 уровень
#define BUS_LEVEL_3 200 //К-во рейсов автобуса для перехода на 3 уровень
#define BUS_ROUTE_COUNT 2 //К-во маршрутов

#define TRUCK_LEVEL_2 30000
#define TRUCK_LEVEL_3 70000
#define TRUCK_LOAD_1 5000
#define TRUCK_LOAD_2 7000
#define TRUCK_LOAD_3 10000
#define MAX_HOUSE_COUNT 334//Макс. к-во домов
#define HINTS_COUNT 43//Точное к-во хинтов
#define FILLING_COUNT 18//Точное к-во заправок
#define SHOP_OBJECTS 10//Точное к-во предметов в 24/7
//#define REPAIR_OBJECTS 1//Точное к-во предметов в автомастерских
#define HOTEL_COUNT 3//Точно к-во отелей
#define FRACTION_COUNT 15 //К-во фракций
#define SUBFRACTION_COUNT 5 //К-во фракций
#define BINT_COUNT 32	 //Точное к-во интерьеров бизнесов
#define BUSINESS_TYPE_COUNT 13 //К-во типов бизнесов
#define MAX_ONFOOT_SPEED 15 //Макс скорость, с которой игрок может перемещаться не в транспорте
#define MAX_INCAR_SPEED 90 //Макс скорость, с которой игрок может перемещаться в транспорте
#define MAX_SPEED 190 //Общая максим. скорость
#define ATM_COUNT 10//К-во банкоматов
#define SHOP_COUNT 0//К-во 24/7
#define WANTED_TIME 40//Время исчезновения звезды в минутах
#define JAIL_QUATE 600 //Время заключения в секундах за каждую звезду
#define WARN_TIME 7 //К-во дней до снятия варна
#define SETTINGS_COUNT 4 //К-во настроек
#define CLIENT_TIMEOUT 180 //Таймаут клиента
#define MAX_ADVERT_COUNT 15 //Максимальное кол-во объявлений
#define FILLING_ID_OFFSET 1000 //Смещение ID для заправок в pData[][pBusiness]
#define DELIVERY_COUNT 15 //К-во мест в очереди на заказ продуктов
#define DELIVERY_DFT_COUNT 4 //х3 :D
#define REPAIR_ID_OFFSET 49 //Стоимость починки
#define TELEPORTS_COUNT 53 // Количество обычных телепортов


#define IsKicked(%0) GetPVarInt(%0, "kicked")
// ----------===== [Основные настройки (конец)] =====----------

enum MYSQL_SETTINGS
{
	HOST,
	USERNAME,
	PASSWORD,
	DATABASE
}
enum //Диалоги
{
	dMes,
	dGovNews,
	dLogin,
	dLogin2,
	dRegMenu,
	dRegister,
	dRegister2,
	dRegister22,
	dRegisterPhone,
	dRegisterPhone2,
	dRegister3,
	dRegister4,
	dRegister5,
	dRegister6,
	dPlayerMenu,
	dEmplHistory,
	dPlayerMenuSecurity,
	dPlayerMenuSecurityEConfirm,
	dPlayerMenuSecurityEConfirm2,
	dPlayerMenuSettingsAction,
	dPlayerMenuSettingsMafia,
	dPlayerMenuSettingsMafia2,
	dPlayerMenuSettingsAction1,
	dElevator,
	dDozerwork,
	dCoalwork,
	dWoodwork,
	dGruzWork,
    dBenzWork,
	dVodkaWork,
	dPesokWork,
	//dGruzWork,
	dJob123,
	dBuyBomb,
	dBuyTuning,

	EXIT_DIALOG,
	DIALOG_CRP,
	DIALOG_PAY,
	DIALOG_PAY1,
	dCancelInfoCasino,
	dChoosingMebel,
	dChoosingMebel1,
	dBuyPhoneSot,
	dBuyPhoneSot1,
	dBuyObjectPlayer,
	dJob1234,
	dGunWork,
	dHire,
	dBusRent,
	dLearn,
	dBusRoute,
	dBusPrice,
	dBusEnd,
	dFuelList,
	dTruckWEnd,
	dTaxiWEnd,
	dTruckRent,
	dTruckLoad,
	dTaxiRent,
	dLoginAdmins,
	dLoginAdmins1,
	dCreatehouse1,
	dCreatehouse2,
	dCreatehouse3,
	dHints,
	dHouseInfo,
	dSetRadio,
	dSetSpawn,
	dSetSpawn1,
	dHouseBuy,
	dHouseMenu,
	dHouseImprove,
	dHouseImprove2,
	dHouseStat,
	dSellHouse,
	dBuyCarSalon,
	dBuyCar,
	dBuyCarC1,
	dBuyCarC1Edit,
	dBuyCarC2,
	dBuyCarC2Edit,
	dSellCar,
	dSearchBusines,
	dSearchHouse,
	dSearchHouse1,
 	dSearchHouse2,
	dHotelGetMoney,
	dHotelSetCar,
	dHotelSetEnter,
	dHotelSell,
	dHotelOwnMenu,
	dHotelEnter,
	dHotelBuy2,
	dHotelBuy,
	dHotelReject,
	dHotelRentEx,
	dHotelExtend,
	dHotelRent2,
	dHotelRent,
	dHotel,
	dReception,
	dActPlayerMenu,
	dActPlayerMenuMoney,
	dChangePassCode,
	dChangePassPass,
	dChangePass1,
	dChangePass2,
	dCode,
	dCodeMes,
	dCodeSet1,
	dCodeSet2,
	dCodeChange1,
	dMaskirovka,
	dFillingBuy,
	dFillingSell,
	dFillingInfo,
	dFillingPrice,
	dFillingPrice2,
	dFillingEquip,
	dFillingTankSize,
	dFillingTankSize2,
	dFillingPumps,
	dFillingBank,
	dFillingCheck,
	dFillingPut,
	dFillingGet,
	dFillingOrderAmount,
	dFillingOrder,
	dBuyFuel,
	dBuyFuel1,
	dDelSkin,
	dSafe,
	dSafeCode,
	dSafeCodeChange,
	dSafeCodeChange2,
	dSafeAction,
	dSafePutMoney,
	dSafeGetMoney,
	dSafePutDrug,
	dSafeGetDrug,
	dFreez,
	dBuySkin,
	dBuySkin2,
	dGrocer,
	dGrocer2,
	dGPS,
	dInfoProject,
	dGPSWork,
	dGPSMain,
	dGPSAuto,
	dGPSTruck,
	dGPSTruck1,
	dGPSMafiiBandi,
	dGPSGosOrg,
	dGPSGosOrg1,
	dGPSBanki,
	dBuyFood,
	dLeaderskin,
	dLeaderskinAdm,
	dMakeleader,
	dInvite,
	dInviteSkin,
	dFractionSkin,
	dAutoExam1,
	dAutoExam2,
	dAutoExam3,
	dExamType,
	dAutoTest1,
	dAutoTest2,
	dAutoTest3,
	dAutoTest4,
	dAutoTest5,
	dAirExam1,
	dAirExam2,
	dAirExam3,
	dAirExam4,
	dAirExam5,
	dAirExam6,
	dAirExam7,
	dAirExam8,
	dAirExam9,
	dAirExam10,
	dAirExam11,
	dBoatExam1,
	dExamResult,
	dHeal,
	dReport,
	dNameChange1,
	dNameChange,
	dKiosk,
	dATM,
	dATMWatch,
	dATMGet,
	dShop,
	dRestoran,
	dRestoranMenu1,
	dRestoranMenu2,
	dRestoranMenu3,
	dRestoranMenu4,
	dGangLeader,
	dGangRank,
	dGangRank2,
	dGangCode,
	dSellGangCar,
	dSellGangCar2,
	dCredentials,
	dCredentials2,
	dMakeGun,
	dMakeGun2,
	dBuyGangCar,
	dATMPut,
	dATMPhone,
	dATMPhone1,
	dCommandList,
	dCommandShow,
	dCommandMain,
	dBank,
	dSelveh,
	dCreaterace,
	dSelrace,
	dAnimliber,
	dBuyBusinessentpr,
	dBuyShop,
	dBuyShop2,
	dEnterShop,
	dSubleader,
	dStopLoad,
	dService,
	dEmergencyCall,
	dMechRent,
	dTow,
	dUnfill,
	dGobGun,
	dGobAmmo,
	dDissolution,
	dEmergencyPolice1,
	dEmergencyMedic1,
	dEmergencyMechanic1,
	dBuyBusiness1,
	dBuyBusiness2,
	dBusiness,
	dBusinessStat,
	dBusinessBank,
	dBusinessGet,
	dBusinessPut,
	dBusinessSell,
	dBusinessEnter,
	dBusinessOrder1,
	dBusinessOrder2,
	dBusinessPrice,
	dBusinessBuyProd1,
	dBusinessBuyProd2,
	dBusinessDelivery1,
	dBusinessDelivery2,
	dDeliveryList,
	dBints,
	dBar,
	dAdvertSend,
	dAdvertList,
	dAdvertAction,
	dAdvertEdit,
	dNewsDial,
	dNumberPhone,
	dPresentPhone,
	dUnemplyment,
	dDFTRent,
	dDonate,
	dDonateSex,
	dDonateWarn,
	dDonateInfo,
	dDonateMoney1,
	dDonateMoney2,
	dDonateNickname1,
	dDonateNickname2,
	dDonateNation1,
	dDonateNation2,
	dDonateNation3,
	dDonateAge1,
	dDonateAge2,
	dPhoneConfirm1,
	dPhoneConfirm2,
	dRecolor,
	dWeather,
	dSellZone,
	dSellZone2,
	dZaxvat,
	dDutyGun,
	dDutyGunFbi,
	dObshakEd,
	dObshakPt,
	dObshakMn,
	dObshakPttake,
	dObshakPtput,
	dObshakEdput,
	dObshakEdtake,
	dObshakMntake,
	dObshakMnput,
	dObshak,

	dObshakDrugDrug,
	dObshakDrugPut,
	dObshakDrugTake,

	dLoto,
	dBuyCarDialog,
	dBuyCarDialog2,
	dBuyCarDialog3,
	//
	dOBankMenu,
	dOBankMenu2,
	dOBankMenu3,
	dOBankMenu4,
	//Банк
	dBankMenu,
	dBankMenuATM,
	dBankMenu1,
	dBankMenu2,
	dBankMenu3,
	dBankMenu4,
	dBankMenu5,
	///////
	dFerma,
	dFerma2,
	dFerma3,
	///////
	dGun,
	dGun1,
	dGun2,
	dGun3,
	dGun4,
	dGun5,
	dGun6,
	dRentCar,
	dDebtor,
	dDebtorHouse,
	dDebtorHouse1,
	dDebtorHouse2,
	dRadio,
	dRegisterPovtor,
	dInviteLeader,
	dInviteSkinLeader,
	dMafia1,
	dMafia,
	dMafia2,
	dMafia3,
	dMafia4,
	dMafia5,
	dMafia6,
	dMafia7,
	dMafia8,
	dBizWar,
	dMafiaGang,
    dMafiaGang2,
    dMafiaGang3,
    dMafiaPut,
    dMafiaMenu,
    dMafiaTake,

	dRace1,
	dRace2,
	dRace3,
}

enum //Слоты иконок
{
	iconTaxi
}



enum (<<=1)//Настройки игрока
{
	setAdminInfo=1,
	setFractionChat,
	setPlayerIDChat,
	setShowNickname,
	setGlasses=1,
	setHats
}



/*enum aInfo
{
	aID,            // - Unknown -
	aPlayerID,      // - Unknown -
	aModel,			//Model
	aCost,			//Цена
	Float:aPos_X,	//Кордината X
	Float:aPos_Y,	//Кордината Y
	Float:aPos_Z,	//Кордината Z
	Float:aPos_A,	//Угол поворота
	aColor_1,		//Цвет 1
	aColor_2		//Цвет 2
};

new ArendInfo[][aInfo] =
{//ID, Цена, Координаты X, Y, Z, Цвет 1, Цвет 2
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 509, 300 ,2138.3989,-1126.6970,25.0160,58.6281,-1,-1 }, // Моторынок1
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 481, 350 ,2138.4587,-1129.0098,25.0999,49.9570,-1,-1 }, // Моторынок2
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 510, 420 ,2138.1296,-1131.4419,25.2898,54.5768,-1,-1 }, // Моторынок3
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 630 ,2137.8953,-1133.8783,25.1824,45.8075,-1,-1 }, // Моторынок4
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 450 ,2137.9802,-1136.1702,25.3131,49.2190,-1,-1 }, // Моторынок5
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 586, 600 ,2137.7561,-1138.4803,25.0568,57.4296,-1,-1 }, // Моторынок6
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 463, 1200 ,2138.0029,-1141.3444,24.7695,42.6967,-1,-1 }, // Моторынок7
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 468, 1250 ,2137.7283,-1143.4132,24.6677,36.9370,-1,-1 }, // Моторынок8
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 461, 1550 ,2137.5427,-1145.8390,24.3161,41.2718,-1,-1 }, // Моторынок9
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 521, 3000 ,2137.5464,-1148.2080,24.0404,39.0885,-1,-1 }, // Моторынок10
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 522, 10000 ,2137.0188,-1150.2847,23.8100,43.2673,-1,-1 }, // Моторынок11
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 549, 880 ,567.7411,-1289.9541,16.9023,102.4603,-1,-1 }, // Авторынок ЛС 1
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 517, 1400 ,566.4779,-1285.7397,17.1062,103.0531,-1,-1 }, // Авторынок ЛС 2
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 404, 850 ,565.5590,-1281.8456,16.9926,103.0280,-1,-1 }, // Авторынок ЛС 3
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 410, 1700 ,565.2111,-1277.9575,16.9003,102.7820,-1,-1 }, // Авторынок ЛС 4
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 413, 1550 ,563.8026,-1273.8774,17.3212,102.7136,-1,-1 }, // Авторынок ЛС 5
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 479, 1370 ,562.9036,-1269.7040,17.0541,101.4529,-1,-1 }, // Авторынок ЛС 6
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 419, 3000 ,551.7404,-1263.8223,17.0030,212.2984,-1,-1 }, // Авторынок ЛС 7
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 422, 2200 ,548.4000,-1265.9045,17.2344,211.5931,-1,-1 }, // Авторынок ЛС 8
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 467, 3800 ,545.6901,-1268.2334,17.0022,211.2404,-1,-1 }, // Авторынок ЛС 9
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 542, 750 ,542.4440,-1270.7157,17.0088,214.6165,-1,-1 }, // Авторынок ЛС 10
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 600, 920 ,539.0390,-1272.9336,16.9829,216.9707,-1,-1 }, // Авторынок ЛС 11
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 439, 1750 ,536.0904,-1275.5901,17.1553,217.0152,-1,-1 }, // Авторынок ЛС 12
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 401, 1320 ,532.7888,-1277.6384,16.9990,218.3660,-1,-1 }, // Авторынок ЛС 13
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 474, 1800 ,528.7848,-1290.6345,16.9687,359.6989,-1,-1 }, // Авторынок ЛС 14
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 576, 2500 ,524.7858,-1290.5372,16.8845,0.1671,-1,-1 }, // Авторынок ЛС 15
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 496, 2700 ,-1969.8522,307.0460,34.8905,181.1986,-1,-1 }, // Авторынок СФ 1
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 507, 3200 ,-1973.4025,306.1534,34.9865,181.2821,-1,-1 }, // Авторынок СФ 2
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 526, 3100 ,-1988.5404,307.9772,34.9408,269.3918,-1,-1 }, // Авторынок СФ 3
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 445, 2750 ,-1988.0979,304.3044,34.9996,270.0682,-1,-1 }, // Авторынок СФ 4
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 580, 4100 ,-1987.9697,300.3725,34.9949,270.4717,-1,-1 }, // Авторынок СФ 5
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 426, 3550 ,-1989.3358,276.0218,34.9263,267.7980,-1,-1 }, // Авторынок СФ 6
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 558, 3600 ,-1989.8579,272.3896,34.7981,266.1813,-1,-1 }, // Авторынок СФ 7
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 533, 4100 ,-1990.2920,268.7908,34.9114,266.9391,-1,-1 }, // Авторынок СФ 8
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 561, 4250 ,-1990.4771,265.2222,34.9373,267.0046,-1,-1 }, // Авторынок СФ 9
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 421, 4900 ,-1990.4192,261.3848,35.0217,266.6927,-1,-1 }, // Авторынок СФ 10
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 589, 4400 ,-1991.1045,257.9108,34.8161,266.3199,-1,-1 }, // Авторынок СФ 11
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 566, 4100 ,-1991.7557,250.2282,34.9528,261.2961,-1,-1 }, // Авторынок СФ 12
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 535, 2700 ,-1991.4877,254.2502,34.9367,262.7495,-1,-1 }, // Авторынок СФ 13
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 527, 2660 ,-1993.0313,246.0543,34.8875,261.7697,-1,-1 }, // Авторынок СФ 14
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 489, 3950 ,-1982.2109,242.2534,35.2498,359.3475,-1,-1 }, // Авторынок СФ 15
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 579, 4200 ,-1978.4880,242.2893,35.0851,0.7097,-1,-1 }, // Авторынок СФ 16
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 400, 4000 ,-1974.5654,241.8802,35.2519,1.1602,-1,-1 }, // Авторынок СФ 17
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 500, 3700 ,-1971.1576,241.5307,35.3121,0.3465,-1,-1 }, // Авторынок СФ 18
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 602, 15100 ,1674.8523,2220.2839,10.6337,90.2718,-1,-1 }, // Авторынок ЛВ 1
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 587, 14900 ,1674.6687,2216.2927,10.4988,90.9156,-1,-1 }, // Авторынок ЛВ 2
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 559, 16200 ,1674.9752,2212.3328,10.4928,90.7857,-1,-1 }, // Авторынок ЛВ 3
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 434, 15700 ,1674.9614,2208.5774,10.7933,91.2392,-1,-1 }, // Авторынок ЛВ 4
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 560, 17100 ,1674.8262,2204.8352,10.4902,91.7820,-1,-1 }, // Авторынок ЛВ 5
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 562, 14300 ,1675.0105,2201.4592,10.4715,90.3050,-1,-1 }, // Авторынок ЛВ 6
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 506, 15800 ,1674.6909,2198.0222,10.4987,88.8147,-1,-1 }, // Авторынок ЛВ 7
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 480, 17400 ,1674.8149,2194.6936,10.6082,89.9012,-1,-1 }, // Авторынок ЛВ 8
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 402, 18200 ,1674.3173,2190.9592,10.5983,90.1075,-1,-1 }, // Авторынок ЛВ 9
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 429, 18800 ,1649.3253,2197.7485,10.5263,178.2108,-1,-1 }, // Авторынок ЛВ 10
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 415, 20000 ,1643.7244,2197.7029,10.4354,179.8881,-1,-1 }, // Авторынок ЛВ 11
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 477, 18500 ,1638.1572,2197.6831,10.6041,182.8852,-1,-1 }, // Авторынок ЛВ 12
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 541, 23500 ,1632.4949,2197.7153,10.4514,180.8835,-1,-1 }, // Авторынок ЛВ 13
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 451, 35000 ,1626.6339,2197.5586,10.5419,180.2225,-1,-1 }, // Авторынок ЛВ 14
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 454, 25000, 203.6210022,-1937.1319580,0.0000000,180.0000000,-1,-1 }, // Прокат лодок 1
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 484, 15000, 218.9459991,-1925.6689453,0.0000000,270.0000000,-1,-1 }, // Прокат лодок 2
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 493, 28000, 202.3679962,-1917.5870361,0.0000000,90.0000000,-1,-1 }, // Прокат лодок 3
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 452, 24500, 216.3730011,-1917.4420166,0.0000000,270.0000000,-1,-1 }, // Прокат лодок 4
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 446, 22000, 201.7180023,-1925.7469482,0.0000000,90.0000000,-1,-1 }, // Прокат лодок 5
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 454, 25000, 215.0939941,-1937.2070312,0.0000000,180.0000000,-1,-1 } // Прокат лодок 6
};
*/
enum PDATA
{
	pMysqlID,
	pNickname[32],
	pPassword[32],
	pEmail[64],
	pRegIP[16],
	pRPhone[24],
	pMarried,
	pMask,
	pMasked,
	pDivorce[32],
	pWarn,
	pWarnc,
	pMut,
	pEConfirmed,
	pSex,
	pColor,
	pAge,
	pNation,
	pSkin,
	pFractionSkin,
Float:pHealth,
	pHouse,
	pHotel,
	pHotelRoom,
	pCar,
	pJob,
	pSalary,
	pMoney,
	pBank,
	pLevel,
	pExp,
	pPhone,
	pPhoneMoney,
	pWanted,
	pJail,
	pPrison,
	pDrugs,
	pAmmo,
	pGunAmount,
	pSpouse,
	pFraction,
	pSubfraction,
	pRank,
	pBusiness,
	pWatch,
	pCode[25],
	pCodeSet,
	pRequestCode,
	pLanguage[7],
	pAdmin,
	pLicenses[5],
	pStatus,
	pSettings,
	pSett,
	pUnemployment,
	pDonate,
	pVehicleKey,
	pTime,
	pArmyTime,
	pArmyRank,
	pBankNomer,
	pBankPin[32],
	pBank1,
	pDrunk,
	pZakon,
	pPick,
	pSkills[80],
	pRadio,
 pSpawn,
	pGetIP[16],

	pHouseVost,
	pBizzVost,
	pSkillGun,

	pNarkZav,

	pDiplom,
	pMath,
	pHistory,
	pBiology,
	pInform,
	pRussian,

	//
	pSumka,
	pPhoneModel,

	pAdminOnline,
	pOnlineGame,
	pTicketForBussines,
	pObjectHat,
	pObjectGlasses,

	pObjectHouse,
	pMaterialN
}

enum GZINFO
{
	idm,
Float:gCoords[4],
	gFrak,
	gNapad
}

enum PTEMP
{
pObjectMebel,
bool:pBuyMebel,
bool:pJoined,
bool:pLogined,
bool:pChoosingGlasses,
bool:pChoosingHats,
bool:pChoosingMebel,
bool:pChoosingElectro,
	pLoginAttempt,
bool:pChoosingSkin,
	pOldVehicleid,
	AntiCrack,
bool:pHatOn,
	PlayerStoned,
	FBISkip,
	PDSkip,
	pWork, //Временная работа. Берется по найму. 0-нет, 1-водитель дозера, 2-Железощик
Text3D:pDozerText,
	//pDozerSpawnTimer,
	pDozerID,
	pWorkSalary,
bool:pJustTP,
	pCarInfoTimer,
	pBusID,

	pPesokID,
	pVinogradID,

	pCarDriver,
	pBusRoute,
	pBusPos,
	pBusPrice,
	pShowLicpl,
	pInviteSubLeader1,
	pShowSkillpl,
	pShowPasspl,
	pShowPassact,

	pShowPasspl1,
	pShowPassact1,



	pShowLicact,
Text3D:pBusText,
bool:pSpectating,
	pSpectator,
	pSpectatee,
	pBusSpawnTimer,
	pTaxiSpawnTimer,


	pPesokSpawnTimer,
	pVinogradSpawnTimer,

	bool:pInCarLodka,

	pTruckSpawnTimer,
Float:pBusDemage,
	pTruckID,
	pTruckWagonID,
Text3D:pTruckWagonText,
	pTruckWagonTime,
	pTruckWeight,
	pTruckLoadID,
	pTaxiID,
	pTaxiPrice,
	pTaxiTurn[2],
Text3D:pTaxi3DText,
Text3D:pRace3DText,
Text3D:pVodka3DText,
Text3D:pPesok3DText,
bool:pTaxiGoing,
Float:pTaxiStart,
	pTaxiPass,
bool:pIsInHouse,
	pSelectedHouseID,
	pSellHouseOffer,
	pInviteSubLeader,
	pSellHouseOffee,
	pSellHousePrice,
	pSellHouseID,
	pSettleHouseOffer,
	pSettleHouseOffee,
	pSettleHouseID,
bool:pSellCarSelect,
PlayerText:pSellCarText,
	pSellCarOffer,
	pSellCarOffee,
	pSellCarPrice,
	pSellCarID,
	pSellBusinessOffer,
	pSellBusinessOffee,
	pSellBusinessPrice,
	pSellBusinessID,
	pActPlayer,
	pCheckAD,
	pGiveExp,
	pAFK,
bool:pIsAFK,
Text3D:pAFKText,
bool:pShowNicknames,
	pFillingID,
	pFillingPrice,
	pSellFillingOffer,
	pSellFillingOffee,
	pSellFillingPrice,
bool:pFillGoing,
bool:pSelectStoreGun,
	pStoreGun,
Float:pHealth,
bool:pChangingSkin,
	pCarryProducts,
	pEat,
bool:pGPS,
bool:Marked,
bool:pUseButton,
	pOfferFraction,
	pOfferFractionid,
	pOfferFraction1,
	pTestQNumber,
bool:pWaitingExam,
	pExamType,
bool:pOnExam,
	pExamCandidate,
bool:pCheat,
Float:pX,
Float:pY,
Float:pZ,
bool:pAbletoTP,
	pAbletoGun,
bool:pAbletoHP,
Float:pArmour,
	pOff,
	pNotReport,
	pLoginTime,
	pShaxTime,
bool:pAntiDM,
	pHealing,
	pCaller,
	pCallee,
bool:pCall,
	pIP[32],
	pDM,
	pDarkAFK,
bool:pDead,
bool:pInHospital,
bool:pGangKey,
	pEnterVehicle,
Float:pAngle,
	pKick,
	pKick2,
	pKick3,
	pTakeGun,
bool:pDetonator,
	pMechID,


	pMechOffer,
	pMechOffee,
	pMechTrailer,
	pTazer,
	pCuffer,
	pCuffee,
	pControllable,
	pWorld,
	pRadioOnline,
	pWorldKick,
	pKick5,
	pKick6,
	pKick7,
	pKick8,
	pCoalmanTime,
bool:pTPhone,
	pCSkin,
	pBangam,
	pSLimit,
bool:pEconomicLog,
	pSelectedBusinessID,
bool:pEther,
	pAdvertTime,
	pAntiCleoWood,
	pAntiCleoWoodKick,
bool:pPresentOn,
bool:pDeliving,
	pDeliveryid,
	pDeliveryNumber,
	pDFTID,
Float:pSpeed0,
Float:pAcceleration,
bool:pDialog,
bool:pTazerGun,
	pAbleToStart,
	pWantedListIndex,
	pLastTick,
	pLastTick2,
	pSpecOn,
bool:pREGISKL,
bool:pDebtor,
bool:pLogin4,
	pInviteLeader1,
	pInviteInvite,
	pInviteSell,
	pGunSkill[6],
bool:BizWar,
	hotelEnter,
	pHospital,
bool:pLec,
	pHospitalVW,
	pTempLeader,
	pRaceIvite,
	pRaceID,
	pGraffity,
	pGraffityID,
	pGraffityStop,

	pGraffity1,
	pGraffityID1,
	pGraffityStop1,
	pGraffity1Timer,

	pWorkGruz,
	pWorkGruzSkin,
	pWorkGruzObject,
	BuyVehicle,
 	bool:pTextDrawCapture,
 	bool:pTextDrawMafia,



 	pObjectGlasses,
 	///////////////////
 	dust,
 	AntiID,
 	PlayerGovermentList,
 	PlayerLoad,
 	PlayerLastTick,
 	lictest_Time,
 	bool:GPSON,
 	GPS_CP,
 	carshoter,
 	checkcs,
 	admloged,
 	NewWVehicle,
 	WVehicle,
 	EnterWVehicleTime,
 	TimeUpdate,

 	STimer,
 	pTimerPlayer,
	bool:LoadCar,

	pChoosingTable,
	pCasinoMoney,
	pCasinoNumber,
	bool:pCasinoStart,
	pCasinoTimer,
	pCarTesting,
}

enum TDs
{
	Text:tdNextSkin,
	Text:tdBackSkin,
	Text:tdSelSkin
}

enum CPs
{
	cpHire, //Нанятие на работу
	cpBinco //Магаз одежды
}


enum ARs
{
	arCoalman, //Работа Железощика
	arGruz,
	arGruz1,
	arInfo[12],
	arGruz2,
	arCoalLoad1,
	arCoalLoad2,
	arCoalLoad3,
	arCoalUnload1,
	arCoalUnload2,
	arCoalmanLoad1,
	arCoalmanLoad2,
	arCoalmanLoad3,
	arCoalmanLoad4,
	arCoalmanLoad5,
	arCoalmanUnload1,
	arCoalmanUnload2,
	arCoalCenter,
	arWood,
	arWood1,
	arWood2,
	arWood3,
	arWood4,
	arBuyCars,
	//arWoodLoad1,
	//arWoodLoad2,
	//arWoodLoad3,
	//arWoodLoad4,
	arWoodUnload,
	arWoodUnload1,
	arGunWork,
//	arGunWorkLoad[6],
//	arGunWorkWork[10],
	arGunWorkUnload,
	arGunWorkUnload1,
	arTruckLoadCoal,
	arTruckWagonCoal,
	//arTruckUnload,
	arTruckLoadWood,
	arTruckWagonWood,
	arSellCar[4],
	arHotelReception,
	arHotelExit,
	arHotelEnters[8],
	arHotelExits[8],
	//arFilling[FILLING_COUNT],
	arFill[FILLING_COUNT],
	arAutoExam,
	arAutoExamEnter,
	arAutoExamExit,
	arInstructorBarrier,
	arKiosk,
	arGreenZone[15],
	arDorm,
	//	arGangBuyCar,
	arHire,
	arAntiCleo,
	arAntiCleoWood,
	arBarrier[3],
	arArmyAmmo,
	//	arPDAmmo,
	arArrest[3],
	arDoorLS,
	arDoorLSn,
	arDoornew,
	arDoornewn,
	arDor,
	arDorn,
	arKioskPay,
	arKioskPays,
//	arCristmas[10],
	//	arDrugDelivery[3],
	//	arBusinessBuyProd,
	arBusinessDelivery,
	arDeliLoad[3],
	arGunFraction[4],
	arGunPolice[3],
	arBronArmy[2],
	arBankMenu[3],
	arMaskirovka,
	DrugsPick,
	OplataHoBiz,
	arRace[3],
}

enum VISKA_DATA
{
	vvID,
	vvOwner[MAX_PLAYER_NAME],
	vvFuel,
	vvMoney,
	vvStatus,
	Float:vvX,
	Float:vvY,
	Float:vvZ
}

enum NARK_DATA
{
	nID,
	nCena,
	nOwner,
	Text3D:nText
}

enum VEHICLE_DATA
{
	vID,
Float:vX,
Float:vY,
Float:vZ,
Float: vA,
bool: vCheckDelay,
bool: vOccupied,
bool: vSpawned,
bool: vEngine,
Float:vDrived,
Float:vFuel,
Float:vHealth,
	vDemages[4],
	vPJ,
	vLock,
	vOwnerid,
	vArea,
	vProbability,
	vColor[2]
}

enum TRANSPORT_DATA
{
	trID,
	trModel,
	trName[35],
	trPrice,
	trTank,
	trConsumption,
	trClass,
	trFuelable,
	trSellable,
}

enum CREATE_HOUSE_DATA
{
	chouseHint,
	chousePrice
}

enum HOUSE_DATA
{
	houseID,
	houseClass,
	houseApartmentCount,
	houseDays,
	housePrice,
	houseHint,
	houseImprove[7],
	houseGun[9],
	houseSkin[4],
	houseSafeCode,
	houseSafeMoney,
	houseDrugs,
	houseProducts,
	houseClose,
	Float:houseX,
	Float:houseY,
	Float:houseZ,
	Float:houseR,
	Float:houseParkX,
	Float:houseParkY,
	Float:houseParkZ,
	Float:houseParkR,
	houseOwnerID,
	houseOwner[MAX_PLAYER_NAME],
	houseHabitID[3],
	Float:hShx,//26
	Float:hShy,//27
	Float:hShz,
	houseMats,
	houseMoney
}

enum HINT_DATA
{
	hintID,
Float:hintX,
Float:hintY,
Float:hintZ,
Float:hintR,
Float:hintSX,
Float:hintSY,
Float:hintSZ,
Float:hintSR,
	hintInterior,
	hintDescription[55]
}

enum CAR_DATA
{
	carMysqlID,
	carOwnerid,
	carModelid,
	carPlate[12],
	Float:carFuel,
	Float:carDrived,
	Float:carHealth,
	carColor1,
	carColor2,
	carTuning[14],
	carPaintJob,
	carSell,
	carVid

}

enum FILLING_DATA
{
	fillMysqlID,
	fillOwnerID,
	fillOwner[MAX_PLAYER_NAME],
	fillPrice,
	fillBank,
bool:fillWorking,
	fillPumps,
	fillTanks[5],
	fillFuel,
	fillFuelPrice,
	fillDay
}

enum HOTEL_DATA
{
	hotelMysqlID,
	hotelOwnerid,
	hotelOwner[MAX_PLAYER_NAME],
	hotelPrice,
	hotelBank,
	hEnterPrice,
	hCarPrice
}

enum VGUN_DATA
{
	vGunVid,
	vGunArea,
	vGunGunAmount,
	vGunAmmo,
Text3D:vGunText,
bool:vGunLoading,
bool:vGunUnloading,
	vGunPickup
}


enum DRUGS_DATA
{
Text3D:MatsText,
	MatsPickup,
	MatsArea,
bool:DrugsStatus,
	DrugsKG
}

enum BINT_DATA
{
	bintID,
	bintInterior,
Float:bintX,
Float:bintY,
Float:bintZ,
Float:bintR,
Float:bintXB,
Float:bintYB,
Float:bintZB,
	bintName[32]
}

enum ADVERT_DATA
{
	adSender[24],
	adCheker[24],
	adRang[24],
	adPhone,
	adText[100],
	adTime,
	adMoney,
	adSlot,
	adSenderID,
	adChekerID,
bool:adCheked,
bool:adBusy,
bool:adEditoAndCheck,
bool:adCheking
}


enum BUSINESS_DATA
{
	busiID,
	busiName[64],
	busiType, //1-прод магаз, 2-закусн, 3 - 24/7, 4-бар, 5-клуб, 6-спортзал, 7-Амунация
	busiBint,
	busiOwnerID,
	busiSellPrice,
	busiBank,
	busiPrice,
	busiProduct,
	busiStatus,
Float:busiX,
Float:busiY,
Float:busiZ,
Float:busiR,
	busiOrder,
	busiDeliving,
	busiDelivingArea,
	busiDay,
	busiMafia,
	busiEnterPrice,
    busiLic,
    busiTicket
}

enum CALL_DATA
{
	g_caller,
	g_callee
}

enum DELIVERY_DATA
{
	deliBusinessid,
	deliCustomer[MAX_PLAYER_NAME],
	deliPerformerid[6],
	deliPrice,
	deliCount,
	deliPerforming,
	deliProduct[6],
bool:deliBusy
}

/*enum TRAY_DATA
{
	trayEat,
	trayAreaID,
	trayPickupID,
	trayTimerID
}*/


forward OnPlayerJoin(playerid);
//forward CoalLoaded(playerid); //Железо загружен
//forward CoalUnloaded(playerid); //Железо разгружен
//forward DozerSpawn(playerid); //Железо разгружен
forward AnimationDelay(playerid,id);
forward WoodLoaded(playerid);
forward AbleToSelectCar(playerid);
//forward GunReady(playerid);
forward BusStop(playerid);
forward BusSpawn(playerid);
forward BusSpawnEx(playerid);
forward UpdateCarInfo(playerid,const vehicleid,speedonly);
forward FuelTmier();
forward PlayerPlaySoundDelay(playerid,soundid);
forward PayDay();
forward OnSMS(index, response_code, data[]);
forward OnSMS2(index, response_code, data[]);
forward ReplayChurchTimer(playerid);


// Закусочные
new Text:gEateryTextDraw[10];
new PlayerText:gEateryCostTextDraw[MAX_PLAYERS][4];
new gEateryCosts[] = {160, 40, 200, 20};
new gEateryObj[] = {2215, 2354, 2220, 1546};
new gEateryNames[][] = {{"Hamburger"}, {"Salat"}, {"Pizza"}, {"Water"}};

// Бары
new Text:gBarTextDraw[12];
new PlayerText:gBarCostTextDraw[MAX_PLAYERS][5];
new gBarCosts[] = {120, 50, 1000, 500, 20};
new gBarObj[] = {1950, 1668, 1520, 1669, 2769};
new gBarNames[][] = {{"Beer"}, {"Vodka"}, {"Brendy"}, {"Wine"}, {"Shaverma"}};



new MySQLSettings[MYSQL_SETTINGS][30];
new pData[MAX_PLAYERS][PDATA];
new pTemp[MAX_PLAYERS][PTEMP];
new GZMZ[MAX_GZONE][GZINFO];
new gRegSkins[2][6] = {//пол скин
	{//Муж
		78,200,137,136,79,134
	},
	{//Жен
		31,157,198,9,13,245
	}
};
stock SPD(playerid, dialogid, style, caption[], info[], button1[], button2[])
{
	ShowPlayerDialog(playerid, dialogid, style, caption, info, button1, button2);
	SetPVarInt(playerid, "USEDIALOGID", dialogid);
	pTemp[playerid][pDialog] = true;
	return true;
}
#define ShowPlayerDialog SPD

//new TrayData[1000][TRAY_DATA];
new TD[TDs];
new gCheckpoints[CPs];
new gAreas[ARs];
new gGuns[MAX_PLAYERS][13];
new gAmmos[MAX_PLAYERS][13];
new Float:gCoalManCPs[5][3] = {
	{633.6557,857.9769,-42.5476},
	{631.3375,825.6144,-42.8921},
	{595.7878,915.6671,-42.8143},
	{579.9173,866.2093,-43.1046},
	{580.0726,869.8130,-43.2178}
};
new Float:gWoodCPs[][3] = {
	{29.8116,26.4184,3.1172}, // 1
	{39.9974,43.6444,2.7275}, // 2
	{41.0700,26.0835,2.7490}, // 3
	{43.5660,-8.9856,2.8753}, // 4
	{70.1050,2.1874,0.7221}, // 5
	{68.1987,-43.9703,0.6094}, // 6
	{44.3016,-94.1076,0.6094}, // 7
	{15.5344,-115.8512,0.6094},// 8
	{8.9215,-114.1016,0.8351}, // 9
	{-9.0883,-88.6493,3.1172}, // 10
	{-2.1571,-41.6758,3.1172}, // 12
	{-31.3772,-57.5033,3.1172}, // 13
	{-45.0518,-102.2906,3.1172}, // 14
	{-184.7182,-42.4000,3.1172}, // 15
	{-168.5468,-10.9790,3.1172}, // 16
	{-158.4730,25.6957,3.1172}, // 17
	{-168.3701,49.8013,3.1172}, // 18
	{-169.8489,69.3515,3.1172}, // 19
	{-195.3351,45.4146,3.1172}, // 20
	{-211.8760,-0.8463,3.1094}, // 21
	{-165.2545,129.5554,3.6439}, // 22
	{-165.5529,155.9135,5.7485}, // 23
	{-137.5653,159.3824,4.7994}, // 24
	{-154.0972,143.2049,4.1460}, // 25
	{-109.3567,136.0599,3.1129}, // 26
	{-124.8714,99.1869,3.1129} // 27
};
/*new Float:gWoodCPs[5][3] = {
	{-1932.6278,-2361.3521,30.9381},
	{-1931.2490,-2347.6594,32.8258},
	{-1914.0302,-2342.1960,34.0585},
	{-1889.8831,-2309.4946,45.3760},
	{-1965.6868,-2368.5894,30.6868}//разгрузка
};*/
new gCoalWH; //Склады Железоной шахты
new gWoodWH; // Склад лесопилки

new ZavodInfo[5],
	FuelInfo[2];

new bool:gGunWorkTableStat[10];
//new gGunWorkWeapon[6] = {348,353,355,356,346,349};
new gGunWorkWH[4]; //Склад оружейного цеха. 0-Железо, 1-дерево, 2-оружие
new Text3D:gGunWorkWHText;
new Text3D:ZavodText[2];
//new Text3D:gGunWorkWHText1;

//new gGunWorkTime[6];



new gBusSalary[BUS_ROUTE_COUNT] = {1230,1020};
new gBusAward = 100; //Премия по каждому уровню за рейс
//new gTruckLoadTurn[2][10];
//new gTruckLoadPrice[2] = {2,2};
//new gTruckUnloadPrice[2] = {250,250}; //За 1 центнер (100 кг)
//new Text3D:gTruckLoadTurnText[2];
//new Text3D:gCoalWHText;
//new Text3D:gCoalWHText2;
new Text3D:gWoodWHText;
new Text3D:gWoodWHText3;
new Text3D:gWoodWHText33;
new Text3D:gWoodWHText333;
new gJobNames[5][32] = {"Водитель автобуса","Дальнобойщик","Таксист","Механик","Промоутер"};

new gCurHour;
new gCurMinutes;
new gCurDay;
new gBarrier[9];
//new gBarrierButton[8];
//new gSahtaButton[5];
//new gMayorButton[2];

new gInv[2][10]={
	"очки",
	"шляпу"
};

new gSettingName[SETTINGS_COUNT][64]={
	"информацию о действиях администрации",
	"чат организации",
	"ID игроков в чате",
	"ники игроков"
};
new gVehicleDriver[MAX_VEHICLES];
new gVehicles[MAX_VEHICLES][VEHICLE_DATA];
new gViska[20][VISKA_DATA];

new gNark[12][NARK_DATA];

new gTransport[230][TRANSPORT_DATA];
new gVehicleGun[MAX_VEHICLES][VGUN_DATA];
new gVehicleDrugs[MAX_VEHICLES][DRUGS_DATA];
new gCalls[MAX_PLAYERS][CALL_DATA];

new RestartTime;

new gGangRespawnCar;

//Телепорты
new Float:gTeleports[TELEPORTS_COUNT][2][4] =
{
	/*{ //Цех оружия
		{-1006.6297,-696.1597,32.0078,6.6875},
		{2576.8445,-1289.9153,1044.1250,86.4804}
	},*/
	{ //Бинко 1
		{9999.4844,-9999.1630,9999.4766,340.3020},
		{9999.9999,-9999.7655,9999.1328,354.6664}
	},
	{ //Инструкторы
		{-2026.4766,-102.0611,35.1641,0.0},
		{-2042.1910,-107.6243,551.0859,270.5542}
	},
	{//Больница вход LS
		{1172.6527,-1323.2075,15.4027,274.9645},
		{195.6432,199.8079,501.0859,267.9751}
	},
	{//Больница вход SF
		{-2655.0583,640.1632,14.4545,181.3003},
		//{278.0118,7.2869,923.4979,88.6145}
        {195.6432,199.8079,501.0859,267.9751}
	},
	{//Больница вход LV
		{1607.4236,1815.2452,10.8203,0.5321},
		//{278.0118,7.2869,923.4979,88.6145}
        {195.6432,199.8079,501.0859,267.9751}
	},
	{//Мэрия
	    //{1779.0923,-1664.6360,14.4377,121.5555},
		{1481.1162,-1771.7369,18.7958,0.0},
		{390.1336,173.8324,1008.3828,90.0}
	},
	{ //Кабинет Министров
		{1310.1808,-1366.8071,13.5070,179.3405},
		{603.5761,-1639.2494,16.0159,354.9118}
	},
	{//LSPD_VHOD
		{1555.5007,-1675.6775,16.1953,90.0},
		//{1590.6794,-1696.6552,-47.5200,0.0}
		{246.783996,63.900199,1003.640625,90.0}
	},
	{//LSPD_GARAGE
		{1568.6974,-1690.0916,6.2188,180.0},
		{246.4096,87.4603,1003.6406,1.3258}
		//{1540.6107,-1724.9609,-51.6684,0.0}
	},
	{//LSPD_NUTR
		{1533.6162,-1694.2822,-51.6684,193.3285},
		{1529.7738,-1684.1840,-51.6584,7.5199}
	},
	{//SFPD_VHOD

		{-1605.3414,710.7410,13.8672,0.0},
		//{1590.6794,-1696.6552,-47.5200,0.0}
		{246.375991,109.245994,1003.218750,90.0}
	},
	{//SFPD_GARAGE
		{-1594.1053,716.3295,-4.9063,270.0},
		{214.5488,121.1043,999.0156,269.8082}
		//{1540.6107,-1724.9609,-51.6684,0.0}
	},
	{//SFPD_NUTR
		{1533.6162,-1694.2822,-51.6684,193.3285},
		{1529.7738,-1684.1840,-51.6584,7.5199}
	},
	{//LVPD_VHOD

		{2340.1563,2458.3323,14.9688,175.7816},
		//{1590.6794,-1696.6552,-47.5200,0.0}
		{288.745971,169.350997,1007.171875,90.0}
	},
	{//LVPD_GARAGE
		{2296.9907,2451.7041,10.8203,90.0},
		{238.8473,138.9500,1003.0234,359.9509}
		//{1540.6107,-1724.9609,-51.6684,0.0}
	},
	{//LVPD_NUTR
		{1533.6162,-1694.2822,-51.6684,193.3285},
		{1529.7738,-1684.1840,-51.6584,7.5199}
	},
	{//News Network
		{-2056.8501,454.7295,35.1719,0.0},
		{-1742.8442,2589.8965,62.6659,0.0}
	},
	{//Церковь
		{-1989.0279541016, 1117.9389648438, 54.4717, 270.0},
		{-1991.126953125, 1117.9460449219, 54.5319, 90.0}
	},
	{//Администрация
		{1475.2196,-1360.6555,11.8828,94.9175},
		{-501.1711,286.6567,2001.0950,10.1954}
	},
	{//Мэрия SF
		{-2765.9304,375.5050,6.3347,270.2411},
		{390.1336,173.8324,1008.3828,90.0}
	},
	{//Мэрия LV
		{2447.6655,2376.2231,12.1635,85.4210},
		{390.1336,173.8324,1008.3828,90.0}
	},
	{//Радио ЛС
		{1654.0725,-1655.0981,22.5156,180.0},
		{-1742.8884,2589.9956,62.6659,0.0}
	},
	{//Радио ЛВ
		{649.2800,-1359.6985,13.5800,180.0},
		{-1742.8884,2589.9956,62.6659,0.0}
	},
	{//Крыша ЛСПД
		{1540.4597,-1669.1101,-46.5200,359.8550},
		{1564.8278,-1666.9254,28.3956,358.4083}
	},
	{//ФБР
		{1035.3086,1015.7875,11.0000,322.5851},
		{2463.6047,2377.5513,12.2859,275.1088}
	},
	/*{//ФБР Лифт
		{2480.1318,2377.4980,16.3959,87.1070},
		{2488.3167,2397.3569,10.8203,271.0804}
	},*/
	{//Банк ЛС
	    {1498.5367,-1580.8859,13.5498,5.0134},
	    //{1481.1162,-1771.7369,18.7958,0.0},
		//{1548.9047,-1271.1567,17.4063,146.7863},
		{2150.4768,1626.4578,980.8889,275.8019}
	},
	{//Yakuza
		{691.5777,-1275.9563,13.5607,270.8786},
		{-1119.3916,840.0854,1085.9139,179.8784}
	},
	{//LCN
		{1457.0619,2773.2126,10.8203,270.5404},
		{-1672.3511,1624.2122,1164.7581,181.3237}
	},
	{//RM
		{-2720.6372,127.6720,7.0391,89.6889},
		{-1502.7233,384.9561,1014.7322,88.4358}
	},
	{//Банк SF
		{-2650.0825,376.0515,6.1563,95.0859},
		{2150.4768,1626.4578,980.8889,275.8019}
		//{2305.5955,-16.0166,26.7496,270.6628}
		//{834.6657,7.4099,1004.1870,88.8425}
	},
	{//Банк LV
		{2364.8918,2377.6069,10.8203,89.8806},
		{2150.4768,1626.4578,980.8889,275.8019}
		//{2305.5955,-16.0166,26.7496,270.6628}
		//{834.6657,7.4099,1004.1870,88.8425}
	},
	{ //Стадион ЛС
		{2694.0688,-1708.8130,11.8478,48.0734},
		{-1403.7837,905.7390,1041.4613,1.6997}
	},
	{ //Пикап на крышу ЛСФМ
		{1658.5189,-1691.3787,15.6094,177.6617},
		{1659.4465,-1641.9102,83.7813,41.2152}
	},
	{ //Пикап на крышу ЛВФМ
		{2118.6248,2416.6174,10.8203,94.5060},
		{2118.6235,2416.7102,49.5234,91.9993}
	},
	{ //Мэрия ЛВ выход на стоянку
		{368.4168,194.0026,1008.3828,93.3229},
		{2516.7195,2447.6521,11.0313,270.9144}
	},
	{ //Мэрия ЛС выход на стоянку
		{368.4168,194.0026,1008.3828,93.3229},
		//{1762.9019,-1704.2726,13.4419,177.8469}
		{1413.2067,-1790.3873,15.4356,95.2264}
	},
	{ //ПРокат вертолётов
		{1763.6866,-2298.0388,-2.6000,0.6020},
		{1765.4523,-2271.6260,26.7960,181.3502}
	},
	{ //КОнц. зал1
		{113.6854,36.5429,989.0859,179.3736},
		{123.7688,42.4953,989.0859,0.4820}
	},
	{ //Конц. зал2
		{122.7733,21.3304,989.0859,89.1560},
		{124.1805,21.1282,989.0859,263.5393}
	},
	{ //Патроны
		{-2106.9712,-178.0490,35.3203,2.4223},
		{169.2168,1849.9086,1001.0322,357.7832}
	},
	{//Бюро
	    {1411.7233,-1699.7843,13.5395,53.0226},
	    {262.5154,1817.3951,541.0859,89.3086}
	},
	{//Завод
	    {-49.9136,-269.7668,6.6332,182.3268},
	    {-892.2566,1833.8357,20.2616,355.2650}
	},


	{//RM 43
	    {-1512.1992,373.6926,1014.7753,88.7727},
	    {-1511.2146,373.4588,1014.7584,266.4110}
	},
	{//YAKUZA 44
	    {-1116.9795,850.4457,1093.6937,271.3726},
	    {-1115.8837,838.5861,1093.6859,92.1443}
	},

	{//Univer
	    {1123.4742,-2037.0947,69.8869,271.9942},
	    {15.7584,26.3965,1200.7729,271.6809}
	},

	{//La Cosa Nostra 46
	    {177.2637,1842.5909,17.6406,3.0588},
	    {457.304748,-88.428497,999.554687,0.0}

	},
	{//Army Zone
	    {291.2487,1833.2631,18.0546,1.1980},
	    {279.1548,1833.1444,18.0874,2.4279}
	},
	{
	    {-1671.4728,1590.8895,1164.7581,6.5054},
	    {-1668.3354,1584.2587,1164.7581,169.2095}
	},

    {//LSHEAL-На верт плащадку
	    {1172.0808,-1325.3687,15.4074,266.9568},
	    {1161.1256,-1330.1519,31.4953,6.6211}
	},
	{//SFHEAL-На верт плащадку
	    {-2643.3789,640.1634,14.4531,177.9927},
	    {-2723.7451,663.2623,66.0938,274.7902}
	},
	{//LVHEAL-На верт плащадку
	    {1599.7141,1815.2430,10.8203,2.5886},
	    {1608.4393,1786.1145,30.4688,4.7820}
	},
	{//Army Корабль | Амунация
	    {-2071.4995,1849.9344,11.1953,146.9842},
	    {316.524993,-167.706985,999.5937508,4.7820}
	},
	{
	    {2019.6372,1007.7118,10.8203,270.1731},
	    {2016.2699,1017.7790,996.8750,90.9447}
	}
};
new gTeleportData[TELEPORTS_COUNT][2][2] = // вирт. мир, интерьер.
{
	{//Бинко 1
		{0,0},
		{1,15}
	},
	{//Инструкторы
		{0,0},
		{1,3}
	},
	/*{ //Инструкторы 2
		{0,0},
		{1,3}
	},*/
	{//Больница вход LS
		{0,0},
		{1,1}
	},
	{//Больница вход SF
		{0,0},
		{2,2}
	},
	{//Больница вход LV
		{0,0},
		{3,3}
	},
	{//Мэрия
		{0,0},
		{0,3}
	},
	{//Кабинет Министров
		{0,0},
		{1,1}
	},
	{//LSPD_VHOD
		{0,0},
		{1,6}
	},
	{//LSPD_GARAGE
		{0,0},
		{1,6}
	},
	{//LSPD_NUTR
		{1,6},
		{1,6}
	},
	{//SFPD_VHOD
		{0,0},
		{2,10}
	},
	{//SFPD_GARAGE
		{0,0},
		{2,10}
	},
	{//SFPD_NUTR
		{2,6},
		{2,6}
	},
	{//LVPD_VHOD
		{0,0},
		{3,3}
	},
	{//LVPD_GARAGE
		{0,0},
		{3,3}
	},
	{//LVPD_NUTR
		{3,6},
		{3,6}
	},
	{//News Network
		{0,0},
		{1,1}
	},
	{
		{0,0},
		{1,0}
	},
	{//Администрация президента
		{0,0},
		{3,5}
	},
	{//Мэрия СФ
		{0,0},
		{1,3}
	},
	{//Мэрия ЛВ
		{0,0},
		{2,3}
	},
	{//News Network
		{0,0},
		{3,2}
	},
	{//News Network
		{0,0},
		{2,3}
	},
	{//Выход на плащадку
		{1,6},
		{0,0}
	},
	{//ФБР
		{0,0},
		{2,1}
	},
	{//Банк
		{0,0},
		{2,0}
	},
	{//Yakuza
		{0,0},
		{2,1}
	},
	{//LCN
		{0,0},
		{3,1}
	},
	{//RM
		{0,0},
		{4,1}
	},

	{//Банк SF
		{0,0},
		{3,0}
	},
	{//Банк LV
		{0,0},
		{4,0}
	},
	{//Стадион ЛС
		{0,0},
		{1,15}
	},
	/*{//Инт экс. дома
		{0,0},
		{530,6}
	},*/
	{//Вход на крышу ЛСФМ
		{0,0},
		{0,0}
	},
	{//Вход на крышу ЛВФМ
		{0,0},
		{0,0}
	},
	{//Вход на крышу ЛВФМ
		{2,3},
		{0,0}
	},
	{//Вход на крышу ЛВФМ
		{0,3},
		{0,0}
	},
	{//Прокат вертолётов
		{0,0},
		{0,0}
	},
	{//Конц. зал 1
		{70,1},
		{70,1}
	},
	{//Конц зал 2
		{70,1},
		{70,1}
	},
	{//Патроны
		{0,0},
		{1,1}
	},
	{//Бюро
	    {0,0},
	 	{1,1}
	},
	{//Завод
	    {0,0},
	 	{1,1}
	},

	{//RM
		{4,1},
		{4,1}
	},
	{//Yakuza
		{2,1},
		{2,1}
	},
	{//Univer
		{0,0},
		{2,2}
	},
	{
		{0,0},
		{554,4}
	},
	{
	    {0,0},
	    {0,0}
	},
	{
	    {3,1},
	    {3,1}
	},

	{
	    {0,0},
	    {0,0}
	},
	{
	    {0,0},
	    {0,0}
	},
	{
	    {0,0},
	    {0,0}
	},
	{
	    {0,0},
	    {99, 6}
	},
	{
	    {0,0},
	    {50, 10}
	}
};
new gTeleportAreas[TELEPORTS_COUNT][2];

//Лифт

new ElevObjects[3]; //Лифт и 2 двери
new ElevStare = 0; //Текущий этаж (начинается с 0)
new ElevState; //Статус (0-стоит, 1-едет);
new ElevDoorState;
new ElevDoorTimer;
new ElevArea;
new ElevDoor[3][2];
new Float:ElevCoord[9][3] =
{
	{1786.6712,-1303.4797,14.5834}, //Сам лифт
	{1786.6413,-1299.6489,14.5572}, //Левая дверь лифта
	{1786.6445,-1299.6483,14.5702}, //Правая дверь лифта
	{1786.6413,-1299.3488,14.5572}, //Левая дверь 0 этаж
	{1786.6445,-1299.3482,14.5702}, //Правая дверь 0 этаж
	{1786.6413,-1299.3488,23.1172}, //Левая дверь 1 этаж
	{1786.6445,-1299.3482,23.1302}, //Правая дверь 1 этаж
	{1786.6413,-1299.3488,27.3972},
	{1786.6445,-1299.3482,27.4102}
};
new Float:ElevStares[3] = {0.0,8.56,14.00};

//Авто
//new aCoalDozer[2];
new aBus[2];
new aTaxi[2];
new aMech[2];
new aProduct[2];
//new aSellCar[5];
new aInstructor[7];
new aHospital[3][2];
new aGang[5][7];
new aArmy1[2];
new aArmy2[2];
new aMaterial[2];
new aPesok[2];
new aRazvoz[2];
new aLSPD[2];
new aSFPD[2];
new aLVPD[2];
new aNews[2];
new aPrez[2];
new aMeria[2];
new aMeria1[2];
new aRadio[2];
new aRadio1[2];
new aArmy3[2];
new aFBI[2];
//new drugcar[2];
new aYakuza[2];
new aMexico[2];
new aColomb[2];
new aMeriaLS[2];
new MinStr[2];
//new aSanta;

#define MAX_OBJECT_HOUSE 21
new ObjectHouses[MAX_HOUSE_COUNT][MAX_OBJECT_HOUSE];
new bool:ObjectHousesSetup[MAX_HOUSE_COUNT][MAX_OBJECT_HOUSE];
new ObjectHousesModel[MAX_HOUSE_COUNT][MAX_OBJECT_HOUSE];

//Дома
new gCreatehouse[MAX_PLAYERS][CREATE_HOUSE_DATA];
new gHouses[MAX_HOUSE_COUNT][HOUSE_DATA];
new gHouseHabits[MAX_HOUSE_COUNT][3][MAX_PLAYER_NAME];
new gHints[HINTS_COUNT][HINT_DATA];
//new gHouseArea[MAX_HOUSE_COUNT];
new gHousePickup[MAX_HOUSE_COUNT];
new gHouseIcon[MAX_HOUSE_COUNT];
new Text3D: gStoreText[MAX_HOUSE_COUNT];
new gHouseCount;
new gHouseImprovePrice[7] = {300,500,1000,15000,20000,5000,10000};
new gHouseImproveName[7][64] = {"Автоматические двери","Система слежки автомобиля","Увеличение количества объектов до 10","Увеличение количества объектов до 15","Увеличение количества объектов до 20","Шкаф","Субсидии для снижения кварт. платы"};


//Отели
/*new Float:gHotelRoomEnters[8][4] = {
	{1311.7271,-1053.8165,3359.7095,171.1284},//0
	{1306.2637,-1053.9871,3359.7095,182.0952},//1
	{1304.3151,-1052.3555,3359.7095,92.7944},//2
	{1312.9269,-1041.6447,3361.5063,357.5636},//3
	{1304.7365,-1042.5247,3363.5063,89.3712},//4
	{1304.7114,-1052.1110,3365.5063,96.8912},//5
	{1306.4063,-1053.8342,3365.5063,180.8653},//6
	{1311.4156,-1053.8234,3365.5063,205.9322}//7
};
new Float:gHotelRoomExits[8][4] = {
	{1327.1267,-1071.3468,3458.9060,86.5511},//0
	{1327.1267,-1071.3468,3458.9060,86.5511},//1
	{1327.1267,-1071.3468,3458.9060,86.5511},//2
	{1327.1267,-1071.3468,3458.9060,86.5511},//3
	{1327.1267,-1071.3468,3458.9060,86.5511},//4
	{1327.1267,-1071.3468,3458.9060,86.5511},//5
	{1327.1267,-1071.3468,3458.9060,86.5511},//6
	{1327.1267,-1071.3468,3458.9060,86.5511}//7
};
new Float:gHotels[HOTEL_COUNT][4] = {
	{2233.0859,-1159.7690,25.8906,90.0},
	{1310.0339,-1367.6161,13.5381,356.9391},
	{-88.9742,1229.7388,19.7422,185.4242}
};
new gHotelData[HOTEL_COUNT][HOTEL_DATA];
new gHotelResidents[HOTEL_COUNT][8];
new gHotelEndurance[HOTEL_COUNT][8];

new gHotelName[HOTEL_COUNT][8][MAX_PLAYER_NAME];
//new gHotelName[HOTEL_COUNT][HOTEL_NAME][3][MAX_PLAYER_NAME];
new gHotelArea[HOTEL_COUNT];
new Float:gHotelPark[HOTEL_COUNT][8][4] = {
	{
		{2228.8608,-1177.2911,25.3854,90.7041},//0
		{2229.0190,-1173.5548,25.3928,89.8736},//1
		{2229.0769,-1169.9344,25.4044,89.9368},//2
		{2229.0010,-1166.3718,25.4205,89.8943},//3
		{2216.2419,-1170.8025,25.3879,270.5330},//4
		{2216.2070,-1166.3010,25.3861,269.9360},//5
		{2216.2778,-1161.7175,25.3861,269.8921},//6
		{2216.2568,-1157.2966,25.3817,269.3695}//7
	},
	{
		{1281.6038,-1355.1685,13.0767,90.0171},//0
		{1281.5250,-1349.2274,13.0820,90.0110},//1
		{1281.4141,-1343.1523,13.0850,89.4302},//2
		{1281.5924,-1337.5240,13.0819,89.5586},//3
		{1281.5333,-1332.0446,13.0814,89.7262},//4
		{1281.5621,-1326.8115,13.0815,89.8732},//5
		{1281.4678,-1321.8522,13.0819,89.8509},//6
		{1281.4530,-1316.8534,13.0817,89.3686}//7
	},
	{
		{-77.0715,1222.3820,19.4014,178.0787},//0
		{-81.9630,1222.4624,19.4010,179.5536},//1
		{-86.9658,1222.5060,19.4009,179.3094},//2
		{-91.7260,1222.5687,19.3943,179.0034},//3
		{-98.9949,1222.6207,19.3988,180.8384},//4
		{-103.8947,1222.4993,19.4027,179.5311},//5
		{-85.5747,1211.3571,19.4022,0.6261},//6
		{-90.1845,1211.3600,19.4036,359.0550}//7
	}
};
new Text3D:gHotelText[HOTEL_COUNT];
*/

//Заправки
new gFillings[FILLING_COUNT][FILLING_DATA];
//new gFuelPrice[2] = {3,5};
new Float:gFuelPumps[FILLING_COUNT][4][6] = {
	{
		{1000.0058,-937.4569,41.2972,0.0000,0.0000,95.2000},
		{1007.2109,-936.4054,41.2896,0.0000,0.0000,95.6999},
		{0.0,0.0,0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0,0.0,0.0}
	},
	{
		{-97.02, -1173.29, 1.51,   0.00, 0.00, -21.24},
		{-92.40, -1162.24, 1.44,   0.00, 0.00, -21.78},
		{-85.27, -1164.43, 1.34,   0.00, 0.00, -19.80},
		{-90.49, -1176.42, 1.23,   0.00, 0.00, -23.10}
	},
	{
		{1941.88, -1767.68, 12.63,   0.00, 0.00, 0.00},
		{1941.78, -1771.02, 12.63,   0.00, 0.00, 0.00},
		{1941.83, -1774.56, 12.63,   0.00, 0.00, 0.00},
		{1941.83, -1777.99, 12.63,   0.00, 0.00, 0.00}
	},
	{
		{655.27, -558.63, 15.49,   0.00, 0.00, 0.00},
		{655.36, -560.65, 15.49,   0.00, 0.00, 0.00},
		{655.32, -569.42, 15.49,   0.00, 0.00, 0.00},
		{655.34, -571.29, 15.49,   0.00, 0.00, 0.00}
	},
	{
		{2196.8984, 2470.2500, 10.0558, 0.0000, 0.0000, 0.0000},
		{2196.8984, 2474.6875, 10.0558, 0.0000, 0.0000, 0.0000},
		{2207.6953, 2470.2500, 10.0558, 0.0000, 0.0000, 0.0000},
		{2207.6953, 2474.6875, 10.0558, 0.0000, 0.0000, 0.0000}
	},
	{
		{1602.0000, 2204.5000, 10.1125, 0.0000, 0.0000, 0.0000},
		{1596.1328, 2204.5000, 10.1125, 0.0000, 0.0000, 0.0000},
		{1590.3516, 2204.5000, 10.1125, 0.0000, 0.0000, 0.0000},
		{1602.0000, 2193.7109, 10.1125, 0.0000, 0.0000, 0.0000}
	},
	{
		{2153.3125, 2742.5234, 10.0734, 0.0000, 0.0000, 90.0000},
		{2147.5313, 2742.5234, 10.0734, 0.0000, 0.0000, 90.0000},
		{2141.6719, 2742.5234, 10.0734, 0.0000, 0.0000, 90.0000},
		{2153.3125, 2753.3203, 10.0734, 0.0000, 0.0000, 90.0000}
	},
	{
		{2634.6406, 1111.7500, 10.0500, 0.0000, 0.0000, 90.0000},
		{2639.8750, 1111.7500, 10.0500, 0.0000, 0.0000, 90.0000},
		{2645.2500, 1111.7500, 10.0500, 0.0000, 0.0000, 90.0000},
		{2634.6406, 1100.9453, 10.0500, 0.0000, 0.0000, 90.0000}
	},
	{
		{2120.8203, 914.7188, 10.0578, 0.0000, 0.0000, 90.0000},
		{2114.9063, 914.7188, 10.0578, 0.0000, 0.0000, 90.0000},
		{2109.0469, 914.7188, 10.0578, 0.0000, 0.0000, 90.0000},
		{2120.8203, 925.5078, 10.0578, 0.0000, 0.0000, 90.0000}
	},
	{
		{624.0469, 1677.6016, 4.9797, 0.0000, 0.0000, -55.9800},
		{620.5313, 1682.4609, 4.9797, 0.0000, 0.0000, -55.9800},
		{617.1250, 1687.4531, 4.9797, 0.0000, 0.0000, -55.9800},
		{613.7188, 1692.2656, 4.9797, 0.0000, 0.0000, -55.9800}
	},
	{
		{73.83558, 1219.65906, 18.23283,   0.00000, 0.00000, -13.80000},
		{67.99239, 1221.13452, 18.23283,   0.00000, 0.00000, -13.80000},
		{66.97035, 1217.18323, 18.23283,   0.00000, 0.00000, -13.80000},
		{72.72448, 1215.60425, 18.23283,   0.00000, 0.00000, -13.80000}
	},
	{
		{-1329.2031, 2669.2813, 48.2707, 0.0000, 0.0000, 83.2799},
		{-1328.5859, 2674.7109, 48.2707, 0.0000, 0.0000, 83.2799},
		{-1327.7969, 2680.1250, 48.2707, 0.0000, 0.0000, 83.2799},
		{-1327.0313, 2685.5938, 48.2707, 0.0000, 0.0000, 83.2799}
	},
	{
		{-1464.9375, 1860.5625, 30.6203, 0.0000, 0.0000, 95.9400},
		{-1477.6563, 1859.7344, 30.6203, 0.0000, 0.0000, 95.9400},
		{-1465.4766, 1868.2734, 30.6203, 0.0000, 0.0000, 95.9400},
		{-1477.8516, 1867.3125, 30.6203, 0.0000, 0.0000, 95.9400}
	},
	{
		{-2410.8047, 970.8516, 43.2844,   0.00000, 0.00000, 0.00000},
		{-2410.8047, 976.1875, 43.2844,   0.00000, 0.00000, 0.00000},
		{-2410.8047, 981.5234, 43.2844,   0.00000, 0.00000, 0.00000},
		{0.0,0.0,0.0,0.0,0.0,0.0}
	},
	{

		{-1679.3594, 403.0547, 5.1828, 0.0000, 0.0000, -45.4146},
		{-1675.2188, 407.1953, 5.1828, 0.0000, 0.0000, -45.4146},
		{-1669.9063, 412.5313, 5.1828, 0.0000, 0.0000, -45.4146},
		{-1665.5234, 416.9141, 5.1828, 0.0000, 0.0000, -45.4146}
	},
	{
		{-2026.61084, 155.89116, 28.13102,   0.00000, 0.00000, 0.00000},
		{-2026.62927, 157.73695, 28.13102,   0.00000, 0.00000, 0.00000},
		{0.0,0.0,0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0,0.0,0.0}
	},
	{
		{-2246.7031, -2559.7109, 29.8625, 0.0000, 0.0000, -24.5000},
		{-2241.7188, -2562.2891, 29.8625, 0.0000, 0.0000, -24.5000},
		{0.0,0.0,0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0,0.0,0.0}
	},
	{
		{-1610.6172, -2721.0000, 46.7297, 0.0000, 0.0000, 52.9200},
		{-1607.3047, -2716.6016, 46.7297, 0.0000, 0.0000, 52.9200},
		{-1603.9922, -2712.2031, 46.7297, 0.0000, 0.0000, 52.9200},
		{-1600.6719, -2707.8047, 46.7297, 0.0000, 0.0000, 52.9200}

	}
};
new Text3D:gFillingText[FILLING_COUNT];
new Float:gFillingBuy[FILLING_COUNT][3] = {
	 {1005.3463,-936.7709,43.1643},
	 {-91.6684,-1169.2299,2.6821},
	 {1941.8607,-1769.3374,14.4733},
	 {655.7317,-565.0347,17.2934},
	 {2188.22046, 2469.56592, 11.55933},
	 {2202.4810,2473.5251,10.8203},
	 {1595.9495,2198.7429,10.8203},
	 {2148.0696,2747.8789,10.8203},
	 {2640.1274,1106.3259,10.8203},
	 {2115.5671,919.8102,10.8203},
	 {615.4921,1689.9806,6.9922},
	 {70.4302,1219.0859,18.8117},
	 {-1328.5695,2677.4646,50.0625},
	 {-1471.1469,1863.6055,32.6328},
	 {-2410.8428,974.5368,45.4609},
	 {-1675.7030,413.1373,7.1797},
	 {-2029.4103,156.6100,28.8359},
	 {-2244.3826,-2561.0010,31.9219}
};
/*new Float:gFillingBuy[FILLING_COUNT][3] = {
	{1000.4443,-919.9459,42.3281},
	{-78.3897,-1169.9388,2.1354},
	{1929.0951,-1776.3113,13.5469},
	{661.3578,-573.3368,16.3359},
	{2188.22046, 2469.56592, 11.55933},
	{1579.10474,2184.24268,11.47589},
	{2150.77441, 2734.24707, 11.40848},
	{2632.49756, 1111.75085, 11.31780},
	{2122.72339, 914.79242, 11.44820},
	{638.56647, 1683.95886, 7.66352},
	{59.29790, 1224.73450, 19.30814},
	{-1320.22217,2698.05493,50.64841},
	{-1450.62634, 1856.82227, 33.62868},
	{-2400.72485, 965.55377, 45.71759},
	{-1651.13342, 422.61157,7.49162},
	{-2034.23328, 148.56563,29.26297},
	{-2232.09961,-2557.90845,32.19806},
	{-1623.79187, -2693.64258, 48.72890}
};*/
new gFuelPumpObjects[FILLING_COUNT][4];
//new Text3D:gFillingsText[FILLING_COUNT];
new gFillingBuyArea[FILLING_COUNT];


//Личные авто
new gCars[MAX_VEHICLES][CAR_DATA];
//new gCarsCount;



//Скины
enum SKIN_DATA {
	skinID,
	skinPrice,
	skinClass, // 1 - эконом, 2 - средний, 3 - дорогой
	skinSex, // 1 - женский, 2 - мужской
	skinColor // 0 - белый, 1 - черный
}




#define SKIN_CLASS_ECONOM 1
#define SKIN_SEX_MALE 1
#define SKIN_SEX_FEMALE 2
#define SKIN_COLOR_WHITE 0
#define SKIN_COLOR_BLACK 1

new gMebel[83] = {
	2576,2708,2644,2575,2573,2574,2571,2566,2565,2563,2370,2385,2357,2350,
	2315,2315,2311,2299,2298,2291,2292,2290,2253,2247,2251,2244,2241,2236,
	2234,2206,2205,2204,2180,2173,2171,2169,2167,2163,2160,2139,2136,2126,
	2124,2121,2120,2116,2096,2088,2079,2032,2025,2021,1823,1817,1814,1802,
	1799,1800,1798,1797,1796,1794,1769,1768,1766,1767,1765,1764,1761,1756,
	1745,1754,1742,1726,1725,1724,1723,1713,1706,1703,1704,1702,1700
};

new gElectro[21] = {
	2606,2202,2190,1700,2775,2595,
	2322,2318,2316,2232,2231,2230,
	2229,2225,2102,2100,1786,1783,
	1719,1750,1781
};

new gSkins[][SKIN_DATA] = {
	{1, 100, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{200, 100, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{137, 100, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{136, 100, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{135, 100, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{79, 100, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{78, 100, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{32, 120, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
    {262, 150, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{200, 100, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{167, 200, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{155, 200, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{25, 200, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{24, 200, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{15, 200, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{8, 200, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
 	{193, 250, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
 	{182, 250, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
 	{143, 250, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{217, 300, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{29, 400, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{3, 500, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
    {7, 500, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{33, 500, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{101, 500, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{289, 500, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{40, 500, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{190, 500, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{192, 500, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{6, 550, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{14, 800, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{18, 800, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{34, 800, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{45, 800, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{82, 800, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{83, 800, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{84, 800, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{97, 800, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{214, 800, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{47, 1000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{170, 1000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{180, 1000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{181, 1000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{250, 1000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{55, 1000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{211, 1000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{93, 1500, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{100, 1500, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{176, 2000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{177, 2000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{41, 2000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{233, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{185, 5000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{263, 10000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{91, 15000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{216, 90000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{46, 120000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{12, 150000, SKIN_CLASS_ECONOM, SKIN_SEX_FEMALE, SKIN_COLOR_WHITE},
	{294, 300000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE},
	{296, 500000, SKIN_CLASS_ECONOM, SKIN_SEX_MALE, SKIN_COLOR_WHITE}
};

new Text: gSkinShopDraw[5];
new PlayerText:  gSkinShopPriceDraw[MAX_PLAYERS];

//Банкоматы
new Float:gATMC[ATM_COUNT][6] = {
	{1768.1245,-1906.7542,13.50000000,0.00000000,0.00000000,270.00000000},
	{1465.0780029,-1749.8029785,15.3219995,0.00000000,0.00000000,270.00000000},
	{551.9450073,-1293.8669434,17.1250000,0.0000000,0.0000000,270.0000000},
	{1148.7690430,-1772.6030273,16.4759998,0.00000000,0.00000000,270.00000000},
	{-2035.30004883,-102.19999695,35.09999847,0.00000000,0.00000000,270.00000000},
	{1652.5789795,2200.2319336,10.6969995,0.0000000,0.0000000,90.0000000},
	{2124.19995117,892.50000000,11.10000038,0.00000000,0.00000000,180.00000000},
	{-2353.30004883,1002.29998779,50.79999924,0.00000000,0.00000000,0.00000000},
	{827.0000000,-1345.6999500,13.4000000,0.0000000,0.0000000,0.0000000},
	{811.9000200,-1356.4000200,13.4000000,0.0000000,0.0000000,272.0000000}
};
new gATMArea[ATM_COUNT];
new gATMO[ATM_COUNT];
new Text3D:gATM3D[ATM_COUNT];


//Фракции
new gFractionName[FRACTION_COUNT][] = {"Инструкторы","Мин.Здравоохранения","The Ballas","Grove Street","Varios Los Aztecas","Los Santos Vagos","The Rifa","Министерство Обороны","Министерство Внутренних Дел","СМИ","Белый Дом","ФБР","Yakuza","La Cosa Nostra","Русская Мафия"};
new gFractionRankCount[FRACTION_COUNT] = {12,13,10,10,10,10,10,13,13,13,13,12,12,12,12};
new gFractionRankName[FRACTION_COUNT][18][32] = {
	{"Стажер","Лицензер","Ст.Лицензер","Инструктор","Старший конструктор","Главный инструктор","Мл.Секретарь","Ст.Секретарь","Инспектор ПДД","Менеджер","Директор","Управляющий","","","","","",""},//Инструкторы
	{"Интерн","Старший врач отделения","Дежурный врач","Спасатель","Санитар","Терапевт","Нарколог","Психолог","Кардиолог","Хирург","Зам.глав. врача","Глав. врач","Министр Здравоохранения","","","","",""},//Медики
	{"","","","","","","","","","","","","","","","","",""},
	{"","","","","","","","","","","","","","","","","",""},
	{"","","","","","","","","","","","","","","","","",""},
	{"","","","","","","","","","","","","","","","","",""},
	{"","","","","","","","","","","","","","","","","",""},//11
	{"Новобранец","Рядовой","Ефрейтор","Сержант","Старшина","Прапорщик","Прапорщик","Капитан","Майор","Подполковник","Полковник","Генерал","Министр Обороны","","","","",""},
	{"Кадет","Сержант","Ст.Сержант","Мл.Лейтенант","Лейтенант","Ст.Лейтенант","Агент DEA","Начальник DEA","Майор","Подполковник","Полковник","Шериф","Министр Внутренних Дел","","","","",""},
	{"Помощник редакции","Стажер","Помощник радиотехника","Радиотехник","Журналист","Мл.ведущий","Ведущий","Корректор","Помощник редактора","Редактор","Директор","Управляющий Радиоцентра","Управление СМИ","","","","",""},
	{"Уборщик","Охранник","Старший охранник","Водитель","Младший секретарь","Секретарь","Старший секретарь","Начальник охраны","Советник","Депутат","Зам.Мэра","Мэр","Президент","","","","",""},
	{"Стажер","Младший агент","Агент","Старший Агент","Секретный агент","Агент DEP","Агент CID","Глава Академии","Глава DEP","Глава CID","Зам.Директора ФБР","Директор ФБР","","","","","",""},
	{"Vakasu","Tomodati","Oto","Fuko-Hombute","Wakagashira","Ani","Sono","Keyken","Saiko-Komon","Sagashite-Iry","Oyadzi","Kumite","","","","","",""},
	{"Novizio","Testato","Razionale","Accessorio","Combattente","Soldato","Experto","Testeriaro","Controllate","Luomo Grande","Consiglieri","Padrino","","","","","",""},
	{"Шнырь","Фраер","Проверенный","Бык","Козырный фраер","Вышибла","Свояк","Блатной","Барыга","Браток","Авторитет","Вор в законе","","","","","",""}
};

new gFractionVMFRankName[18][64] = {"Матрос", "Ст.Матрос", "Мичман", "Ст.Мичман", "Лейтинант", "Капитан-лейтенант", "Капитан 3-го ранга", "Капитан 2-го ранга", "Капитан 1-го ранга", "Контр-Адмирал", "Вице-Адмирал", "Адмирал","","","","","",""};



//**********************************
/*#define Bl::					BL_
enum Bl::enum {
	Bl::Marker,

	Bl::Finder,
	Bl::Observe,

	bool:Bl::isKilled,

	Bl::onFrac[FRACTION_COUNT],
	Bl::Kills[FRACTION_COUNT],
}
new Bl::Info[MAX_PLAYERS][Bl::enum];*/
//**********************************

#define F_LCN 14
#define F_RM 15
#define F_YAK 13

new gPrezRankName[9][32] = {"Водитель","Охранник","Начальник охраны","Парламентёр","Советник по МВД","Советник по МО","Советник по СМИ","Советник по МЗ","Вице-Президент"};


/*{"District Nigga","Busta","Hustla","Homeboy","Play","Killa","Gangster","O.G.","Old Nigga","Ghetto Legend","","","","","","","",""},
	{"New Nigga","Up Bro","Honorary Rapper","Big Nigga","Street Dog","Gangster","O.G.","Big Bro","Rich Nigga","Legend","","","","","","","",""},
	{"Dudoso","Novato","Calavera","Asesino","Madre","Latinos","Gangster","Proximo","Suplente","Padre","","","","","","","",""},
	{"Local","Verificado","Buscando","Amigo","Cutthroat","Soldado","Autoridad","Veterano","La Leyenda","Padre","","","","","","","",""},
	{"Раро","Extrano","Ordinario","Amigo","Latino","Entrenador","Criminal","Veterano","Suplente","El'Padre","","","","","","","",""}*/
new gFractionSkin[FRACTION_COUNT][8] = {
	{11,189,171,172,0,0,0,0}, //Инструкторы
	{274,275,276,70,148,71,295,233}, //Медики LS
	{102,103,104,195,0,0,0,0}, //Ballas
	{105,106,107,195,269,270,271,13}, //Groove
	{193,114,115,116,292,0,0,0}, //Aztecaz
	{108,109,110,190,0,0,0,0}, //Vagos
	{173,174,175,226,273,0,0,0}, //Rifa
	{287,191,61,255,0,0,0,0}, //Армия
	{280,284,282,283,266,285,265,93}, //Полиция
	{187,186,170,188,20,141,150,219}, //СМИ
	{17,59,187,164,165,141,240,150}, // Админ. Президента
	{163,164,165,166,211,295,285,286}, //FBI
	{117,118,120,122,123,294,169,263}, //Yakuza
	{223,124,127,290,113,117,98,93}, //Mexico
	{46,111,112,126,125,272,233,43} //Russian Mafian
};
new Float:gFractionSpawnC[FRACTION_COUNT][4] = {
	{-2028.9910,-114.6622,551.0859,81.4908}, //Инструкторы
	{606.9707,-1621.9250,16.0159,170.9833}, //Медики LS

	{-502.8584,-298.1475,2001.8308,323.6302}, //Balls
	{-502.8584,-298.1475,2001.8308,323.6302}, //Groove
	{-502.8584,-298.1475,2001.8308,323.6302}, //Aztecaz
	{-502.8584,-298.1475,2001.8308,323.6302}, //Vagos
	{-502.8584,-298.1475,2001.8308,323.6302}, //Rifa

	{606.9707,-1621.9250,16.0159,170.9833}, //Мин. Обороны
	{606.9707,-1621.9250,16.0159,170.9833}, //Полиция
	{606.9707,-1621.9250,16.0159,170.9833}, //Новости
	{-490.2047,295.4232,2001.0859,90.4095},
	//{1278.2496,-834.4886,1085.6328,89.3242}, //Администрация Президента
	{1037.0862,1018.1529,11.0000,321.6791},//FBI,
	{-1112.8849,853.2344,1093.6859,174.7949},//Yakuza
	{1459.4064,2759.3152,10.8203,301.1162},//Mexico
	{-1476.3630,354.9420,1009.7480,129.6745}//Russian Mafian
};
new gFractionSpawnData[FRACTION_COUNT][2] = { //Инт. ? Вирт ворлд
	{3,1},
	{1,1},

	//{0,0},
	//{0,0},
	//{0,0},
	//{0,0},
	//{0,0},

	{8,0+2003},//Ballas
	{2,1+2003},//Grove
	{2,2+2003},//Aztec
	{5,3+2003},//Vagos
	{6,4+2003},//Rifa

	{1,1},
	{1,1},
	{1,1},
	{5,3},
	{0,0},
	{1,2},
	{0,0},
	{1,4}
};
new gColorGang[5] = {0xCC00FF00 ,0x00D90000,0x00EEEE00,0xFBD40000,0x6666FF00};
new gColorMafia[3] = {0xff0000AA, 0x9b2d30AA, 0x505050AA};


new gFunctionColorF[FRACTION_COUNT] =
{0xFFE7BA00,0xf8168100,0x79138800,
0x22da4d00,0x00fff600,0xcbc75200,
0x70a2ee00,0x55503aAA,0x3c60c700,
0xfe6d0200,0xfff600AA,0x3c60c700,
0xaa2e3400, 0x720a3800, 0x4c6d8200};

new gFunctionColorFract[FRACTION_COUNT] =
{0xFFE7BA00,0xd97aa900,0xCC00FF00,
0x00D90000,0x00EEEE00,0xFBD40000,
0x6666FF00,0xc9c2a1AA,0x82a4dd00,
0xf0ac5b00,0x858607AA,0x82a4dd00,
0xaa2e3400, 0x720a3800, 0x4c6d8200};


new gFractionColor[FRACTION_COUNT] =
{0xFFE7BA00,0xd97aa900,0xCC00FF00,
0x00D90000,0x00EEEE00,0xFBD40000,
0x6666FF00,0xc9c2a1AA,0x82a4dd00,
0xf0ac5b00,0x858607AA,0x82a4dd00,
0xaa2e3400, 0x720a3800, 0x4c6d8200};
/*{0xFFE7BAAA,0xFF6666AA,0xCC00FFAA ,
0x00D900AA,0x00EEEEAA,0xFBD400AA,
0x6666FFAA,0x33AA33AA,0x000cffAA,
0xff4f00AA,0xAFAFAFAA,0x000cffAA,
0xff0000AA, 0x9b2d30AA, 0x505050AA};*/
new Float:gSubfractionSpawnC[SUBFRACTION_COUNT][3][5] = {
	{
		{217.8184,202.4066,501.0859,177.7109},
		{217.8184,202.4066,501.0859,177.7109},
		{217.8184,202.4066,501.0859,177.7109}
	},
	{
		{246.9537,1858.7932,14.0840,61.5591},
		{-1522.0703,481.0553,7.1875,180.4263},
		{0.0, 0.0, 0.0, 0.0}
	},
	{
		//Полиция
		{237.2786,75.7650,1005.0391,268.6017},
		{224.6648,120.9384,999.0905,86.2634},
		{230.5143,161.7015,1003.0234,264.8417}
	},
	{
		{372.0865,173.5453,1019.9844,90.0},
		{372.0865,173.5453,1019.9844,90.0},
		{372.0865,173.5453,1019.9844,90.0}
	},
	{//Радиоцентры
		{-1745.5535,2617.8218,62.6159,124.1560},
		{-1747.0084,2614.2017,62.6159,54.2484},
		{-1745.5535,2617.8218,62.6159,124.1560}
	}
};
new gSubfractionSpawnData[SUBFRACTION_COUNT][3][5] = {//Инт Вирт мир
	{
		{1,1},
		{2,2},
		{3,3}
	},
	{
		{0,0},
		{0,0},
		{0,0}
	},
	{
		{6,1},
		{10,2},
		{3,3}
	},
	{
		{3,0},
		{3,1},
		{3,2}
	},
	{
		{2,3},
		{3,2},
		{1,1}
	}
};

/*new RadioName[][] = {
	{"SAN-FM", "SAN-TV", ""}
};*/
new gSubfractionName[SUBFRACTION_COUNT][3][] = {
	{"Больница Лос-Сантос","Больница Сан-Фиерро","Больница Лас-Вентурас"},
	{"Зона 51","Военно-Морской Флот", ""},
	{"Полиция Лос-Сантос","Полиция Сан-Фиерро","Полиция Лас-Вентурас"},
	{"Мэрия Лос-Сантос", "Мэрия Сан-Фиерро", "Мэрия Лас-Вентурас"},
	{"SAN-FM", "SAN-TV", ""}
};
new gFractionSalary[FRACTION_COUNT][18] = {
	{50,100,200,250,300,450,550,700,800,900,950,1000,4000},//Инстркуторы
	{50,100,200,250,300,450,550,700,800,900,950,4000,5000},//Мин.Здрав +
	{0},
	{0},
	{0},
	{0},
	{0},
	{50,100,200,250,300,450,550,700,800,900,950,1000,1300},//МО +
	{50,100,200,250,300,450,550,700,800,900,950,4000,5000},//МВД +
	{50,100,200,250,300,450,550,700,800,900,950,1000,1300},//Новостная сеть +
	{50,100,200,250,300,450,550,700,800,900,950,4000,6000},//Адм +
	{50,100,200,250,300,450,550,700,800,900,950,1000,5000},//ФБР +
	{50,100,200,250,300,450,550,700,800,900,950,1000,1300},
	{50,100,200,250,300,450,550,700,800,900,950,1000,1300},
	{50,100,200,250,300,450,550,700,800,900,950,1000,1300}
};


//Автошкола
new gExamQuestions[25][90] = {
	"В каком случае разрешен обгон впереди движущегося т/с?",
	"Разрешен ли обгон впереди движущегося т/с по городу?",
	"Какова макс скорость транспортного средства по автомагистрали?",
	"Какова макс скорость транспортного средства по пригороду?",
	"При виде т/с с включенным спец.сигналом, водитель обязан?",
	"В каких случаях разрешен обгон с права?",
	"Какова макс. скорость транспортного средства по городу?",
	"Какого типа установлены перекрестки в штате?",
	"Что такое ДТП?",
	"Что следует делать при возникновении ДТП в первую очередь?",
	"В каком месте водитель имеет право осуществлять парковку?",
	"Что следует делать водителю при проезде перекрестка?",
	"Со скольки лет можно получить водительские права?",
	"В каком случае следует пристегивать ремень безопастности?",
	"Когда можно включать дальний свет фар?",
	"Разрешен ли обгон по двойной сплошной линии?",
	"Можно ли устанавливать спец. Сигнал на личный автомобиль?",
	"Разрешен ли обгон по прерывистой линии?",
	"Стоит ли соблюдать грузоподъемность тягача?",
	"В каком случае можно включать аварийный сигнал?",
	"Обязательна ли остановка перед пешеходным переходом?",
	"Разрешен ли разворот т/c в туннеле?",
	"Необходимо ли смотреть в зеркала заднего вида при маневре задним ходом?",
	"Разрешено ли движение задним ходом на магистрале?",
	"Должны ли быть видны гос.номера автомобиля? "
};
new gExamAnswers[25][4][75] = {
	{"В случае отсутствия очевидной угрозы лобового столкновения.","В случае передвижения за городом.","В случае передвижения по городу.","В случае очевидной угрозы лобового столкновения"}, //1
	{"Разрешен всегда","Запрещен обгон с лева","Разрешен в случае отсутствия угрозы столкновения","Запрещен всегда"}, //2
	{"60 Км/ч","10 Км/ч","130 Км/ч","150 Км/ч"}, //3
	{"100 Км/ч","110 Км/ч","60 Км/ч","90 Км/ч"}, //4
	{"Продолжить движение в прежнем темпе.","Резко остановить транспортное средство.","Снизить скорость транспортного средства до 40 Км/ч","Постепенно снизить скорость и прижаться к обочине."}, //5
	{"Разрешен всегда","Запрещен","Разрешен в случае поворота впереди движущегося транспортного средства.","Разрешен за городом"}, //6
	{"50 Км/ч","60 Км/ч","70 Км/ч","80 Км/ч"}, //7
	{"Регулируемые равнозначных дорог","Регулируемые неравнозначных дорог","Нерегулируемые равнозначных дорог","Нерегулируемые неравнозначных дорог"}, //8
	{"Дорожно-транспортное происшествие.","Дорожно-транспортное предприятие.","Дорожно-торговое предприятие.","Дорожно-торговое предприятствие."}, //9
	{"Скрыться с места ДТП.","Оставаться на месте ДТП и Вызвать сотрудников ПО.","Оставаться на месте ДТП и Вызвать службу спасения.","Вызвать сотрудников скорой помощи."}, //10
	{"По среди дороги","На парковке.","На перекрестке","На тротуаре"}, //11
	{"Снизить скорость и проехать при отсутствии помех.","Увеличить скорость.","Проехать не изменяя скорость.","Остановиться перед перекрёстком."}, //12
	{"16 лет","18 лет","20 лет","25 лет"}, //13
	{"При виде сотрудника ПД","При передвижении за городом"," При передвижении в городе ","В любом случае"}, //14
	{"В городе","В пробке","На трассе","При проезде на перекрестке"}, //15
	{"Только на трассе ","Запрещен","В городе","На перекрестке"}, //16
	{"Нет, нельзя","Да","Только на внедорожниках","Только на грузовиках"}, //17
	{"Только для машин со спец.сигналом","Только для велосипедистов","Всегда разрешен","Всегда запрещен"}, //18
	{"Да, всегда","Нет, не обязательно","Только при погрузке железа","Только при перевозке людей"}, //19
	{"В любом случае","Если надо «Отойти»","При обгоне","При ДТП"}, //20
	{"Нет, не обязательно ","Обязательно","Только при виде сотрудников ПД","Только при включенном поворотнике"}, //21
	{"Нет","Только при включенном аварийном сигнале","Только при виде сотрудников ПД","Только при включенном дальнем свете"}, //22
	{"При включенных фарах","При виде пешехода","Обязательно","Не обязательно"}, //23
	{"Нет, не разрешен","Да, разрешен","Только при виде сотрудников ПД","Только при включенном правом поворотнике"}, //24
	{"Нет, не должны","Только сзади","Только спереди","Должны спереди и сзади"} //25
};
new gExamTrueAnswer[25]={1,3,4,2,4,3,2,3,1,2,2,1,2,4,3,2,1,3,1,4,2,1,3,1,4};
new gDSTurn[20]; //DS = Driving School;
//new Text3D:gDSTurnText;
//new gInstructorBarrierID;
//new bool:gIsInstructorBarrierOpen;




//Банды
new gGangCars[5][7];
new Float:gGangCarSlot[5][7][4] = {
	{ //Ballas
  		{1987.3741,-1143.3839,25.6004,269.8894}, // ballas
		{1995.3479,-1143.4196,25.4146,270.0244}, // ballas
		{2003.4169,-1143.4337,25.1898,270.2932}, // ballas
		{2011.2900,-1143.4291,24.9654,270.2664}, // ballas
		{1986.7778,-1128.3259,25.7035,270.4479}, // ballas
		{1995.1666,-1128.2688,25.4987,270.9507}, // ballas
		{2007.9305,-1128.2445,25.4111,269.9573} // ballas
	},
	{ //Grove
		{2472.8147,-1668.5439,13.1559,280.1302}, // grove
		{2473.4885,-1672.3900,13.1731,280.3539}, // grove
		{2474.2188,-1676.1287,13.4564,279.6956}, // grove
		{2488.0720,-1680.7007,13.1192,1.1234}, // grove
		{2491.6348,-1680.6693,13.1207,0.7198}, // grove
		{2495.1326,-1680.6165,13.1243,1.0443}, // grove
		{2498.5559,-1680.5436,13.1155,2.1074} // grove
	},
	{ //Aztecas
		{1879.5328,-2021.3894,13.2739,180.7368}, // aztec
		{1886.3341,-2021.3989,13.2596,180.0862}, // aztec
		{1886.3267,-2030.2955,13.2563,180.1008}, // aztec
		{1879.5298,-2030.2987,13.2616,179.4041}, // aztec
		{1879.6442,-2038.9312,13.1170,180.3607}, // aztec
		{1886.3549,-2039.0808,13.1168,180.1229}, // aztec
		{1863.1273,-2045.0137,13.6731,270.2407} // aztec
	},
	{ //Vagos
		{2602.6138,-1062.9886,69.3271,1.7856}, // vagos
		{2602.8396,-1071.5155,69.3271,1.7581}, // vagos
		{2603.1523,-1080.0323,69.3286,2.3628}, // vagos
		{2603.5835,-1088.2777,69.3275,3.0630}, // vagos
		{2597.3938,-1080.3533,69.7073,1.0532}, // vagos
		{2597.2305,-1071.4982,69.1934,1.3247}, // vagos
		{2597.0762,-1062.8790,69.1897,1.0752} // vagos
	},
	{ //Rifa
		{2637.8230,-2049.0745,13.4144,182.2557}, // rifa
		{2633.8677,-2049.1919,13.4110,181.7283}, // rifa
		{2629.7002,-2049.3557,13.4164,182.3302}, // rifa
		{2625.6646,-2049.4121,13.4117,181.2637}, // rifa
		{2634.5549,-2062.4666,13.2767,268.8330}, // rifa
		{2641.6538,-2062.5906,13.2899,269.8264}, // rifa
		{2627.3342,-2062.4668,13.6720,271.2318} // rifa
	}
};

new gGangAccess[5][4];
new Float:gGangEnter[5][4] = {
	{1999.9148,-1114.0554,27.1250,178.4333},//Ballas
	{2486.4348,-1644.5369,14.0772,180.0},//Grove
	{1871.5564,-2020.4967,13.5469,274.9989},//Aztec
	{2628.8108,-1068.0962,69.6135,248.4290},//Vagos
	{2650.1077,-2021.7949,14.1766,85.7708}//Rifa
};
new gGangInterior[5][1] = {
	{8},//Ballas
	{2},//Grove
	{2},//Aztec
	{5},//Vagos
	{6}//Rifa
};
new Float:gGangExit[5][4] = {
	{-498.0354,-303.7834,2001.0859,4.6538},//Ballas
	{-498.0354,-303.7834,2001.0859,4.6538},//Grove
	{-498.0354,-303.7834,2001.0859,4.6538},//Aztec
	{-498.0354,-303.7834,2001.0859,4.6538},//Vagos
	{-498.0354,-303.7834,2001.0859,4.6538}//Rifa
};
new gGangDorm[5][4];
new gGangDormLimit[5];
new gGangCode[5];

new gGangName3D[5][50] = {"The Ballas", "Grove Street", "Varios Los Aztecas", "Los Santos Vagos", "The Rifa"};

new Text3D:gGangDormText[5];
new TotalGz[8];
new TotalGz1[8];
//Настройки для банд
new gGunAmount[7] = {3,6,9,8,10,11,10}; //SD,Deagle,MP5,Shotgun,M4,AK47,Rifle,Sniper Rifle
new gGunID[7] = {22,23,24,25,29,30,31};
new gGunName[7][50] = {"9mm", "Silenced 9mm", "Desert Eagle", "Shotgun", "MP5", "AK-47", "M4"};
new gGangCarModelID[15] = {412,419,422,474,475,482,491,492,517,534,536,566,567,575,576};
new gGangCarColors[5] = {242,86,2,6,53};
new gGangDormLevel[3][3] = {//
	{15000,15000,5000},
	{6000,6000,4000},
	{10000,10000,7000}
};
//new gGangDormLimitPrice[3] = {0,30000,60000};


//Армии
new gArmyWarehouse[3][2];
new Text3D:gArmyWarehouseText[7];

//PD
#define PD_DOOR_COUNT 26
#define PD_DOOR_SPEED 0.8
#define PD_DOOR_DELAY 5000
//new gPDWarehouse[3][2];

new Float:jailLS[1][4] = {
	{264.0470,77.6421,1001.0391,269.1325}
};
new Float:jailSF[4][4] = {
	{223.4677,110.5824,999.0156,359.6118},
	{228.2698,110.1888,999.0156,256.8376},
	{219.5448,110.0612,999.0156,191.6636},
	{215.1500,110.8831,999.0156,75.1025}
};
new Float:jailLV[3][4] = {
	{198.4507,161.4389,1003.0300,173.0107},
	{197.1499,174.2680,1003.0234,16.6793},
	{193.2648,175.1042,1003.0234,95.0134}
};

//new Text3D:gPDWarehouseText[3];


/*new Float:ajail[6][4] = {
	{1532.4303,-1721.8109,-51.6684,270.7225},
	{1534.0331,-1720.5306,-51.6684,272.2891},
	{1531.8879,-1717.6917,-51.6684,269.1558},
	{1532.3910,-1711.3948,-51.6684,271.0826},
	{1532.6726,-1708.6144,-51.6684,271.3959},
	{1531.5609,-1702.5996,-51.6684,268.5993}
};
*/
new Float:camExit[3][4] = {
	{1544.3622,-1675.7802,13.5583,91.3277},
	{2286.9624,2429.0190,10.8203,179.9788},
	{-1606.0493,717.6782,12.0734,359.5204}
};
new gEmCall[3];
/*new gPDDoors[26][6];
new gPDDoorButton[26];
new Float:gPDDoorOPos[26][6] = {
	{1536.4990234,-1694.8564453,-52.6660004,0.0000000,0.0000000,330.0},
	{1575.5000000,-1674.2724609,-48.5200005,0.0000000,0.0000000,0.0},
	{1539.4257812,-1694.0371094,-52.6679993,0.0000000,0.0000000,90.0},
	{1536.4091797,-1721.5224609,-48.9819984,0.0000000,0.0000000,330.0},
	{1536.4824219,-1701.2851562,-52.6510010,0.0000000,0.0000000,330.0},
	{1536.4462891,-1704.4765625,-52.6580009,0.0000000,0.0000000,330.0},
	{1536.4931641,-1707.6162109,-52.6520004,0.0000000,0.0000000,330.0},
	{1536.4785156,-1710.6542969,-52.6360016,0.0000000,0.0000000,330.0},
	{1536.4414062,-1713.8144531,-52.6679993,0.0000000,0.0000000,330.0},
	{1536.4287109,-1716.9638672,-52.6679993,0.0000000,0.0000000,330.0},
	{1536.4199219,-1720.1533203,-52.6679993,0.0000000,0.0000000,330.0},
	{1536.4033203,-1718.3652344,-48.9819984,0.0000000,0.0000000,330.0},
	{1536.3847656,-1715.1542969,-48.9819984,0.0000000,0.0000000,330.0},
	{1536.3867188,-1711.9990234,-48.9679985,0.0000000,0.0000000,330.0},
	{1536.3808594,-1708.8242188,-48.9819984,0.0000000,0.0000000,330.0},
	{1536.3593750,-1705.7031250,-48.9539986,0.0000000,0.0000000,330.0},
	{1536.3759766,-1702.5498047,-48.9819984,0.0000000,0.0000000,330.0},
	{1536.3486328,-1699.4296875,-48.9739990,0.0000000,0.0000000,330.0},
	{1536.2978516,-1696.2626953,-48.9640007,0.0000000,0.0000000,330.0},
	{1544.9350586,-1695.9589844,-52.6679993,0.0000000,0.0000000,270.0},
	{1544.9279785,-1700.4499512,-52.6570015,0.0000000,0.0000000,270.0},
	{1544.9310303,-1702.8330078,-52.6679993,0.0000000,0.0000000,270.0},
	{1544.9404297,-1705.7285156,-52.6679993,0.0000000,0.0000000,180.0},
	{1544.9375000,-1708.0908203,-52.6629982,0.0000000,0.0000000,180.0},
	{1544.5263672,-1711.6289062,-52.6640015,0.0000000,0.0000000,210.0},
	{1544.4814453,-1714.0039062,-52.6450005,0.0000000,0.0000000,210.0}
};
new Float:gPDDoorCPos[26][6] = {
	{1536.4990234,-1694.8570557,-52.6660004,0.0,0.0,270.0},
	{1576.8437500,-1674.2724609,-48.5200005,0.0,0.0,0.0},
	{1539.4257812,-1694.0371094,-52.6679993,0.0,0.0,0.0},
	{1536.4100342,-1721.5229492,-48.9819984,0.0,0.0,270.0},
	{1536.4824219,-1701.2851562,-52.6510010,0.0,0.0,272.0},
	{1536.4462891,-1704.4765625,-52.6580009,0.0,0.0,271.9995117},
	{1536.4931641,-1707.6162109,-52.6520004,0.0,0.0,270.0},
	{1536.4785156,-1710.6542969,-52.6360016,0.0,0.0,270.0},
	{1536.4414062,-1713.8144531,-52.6679993,0.0,0.0,270.0},
	{1536.4287109,-1716.9638672,-52.6679993,0.0,0.0,270.0},
	{1536.4199219,-1720.1533203,-52.6679993,0.0,0.0,270.0},
	{1536.4040527,-1718.3659668,-48.9819984,0.0,0.0,270.0},
	{1536.3847656,-1715.1542969,-48.9819984,0.0,0.0,270.0},
	{1536.3869629,-1711.9990234,-48.9679985,0.0,0.0,270.0},
	{1536.3809814,-1708.8249512,-48.9819984,0.0,0.0,270.0},
	{1536.3599854,-1705.7039795,-48.9539986,0.0,0.0,270.0},
	{1536.3759766,-1702.5500488,-48.9819984,0.0,0.0,270.0},
	{1536.3489990,-1699.4300537,-48.9739990,0.0,0.0,270.0},
	{1536.2978516,-1696.2626953,-48.9640007,0.0,0.0,270.0},
	{1544.9350586,-1695.9589844,-52.6679993,0.0,0.0,270.0},
	{1544.9279785,-1700.4499512,-52.6570015,0.0,0.0,270.0},
	{1544.9310303,-1702.8330078,-52.6679993,0.0,0.0,270.0},
	{1544.9410400,-1705.7290039,-52.6679993,0.0,0.0,270.0},
	{1544.9379883,-1708.0909424,-52.6629982,0.0,0.0,270.0},
	{1544.5269775,-1711.6290283,-52.6640015,0.0,0.0,270.0},
	{1544.4814453,-1714.0039062,-52.6450005,0.0,0.0,270.0}
};
new gPDCamArea[16];
new bool:gPDCamStatus[3];
*/


//Новости
new gAdvert[MAX_ADVERT_COUNT][ADVERT_DATA];
new gAdvertCount;
new gAdvertPrice = 1;
new gAdvertTime;
new gNewsDialing[3] = false;
new gNewsDialer[3] = INVALID_PLAYER_ID;
new gNewsDialee[3] = INVALID_PLAYER_ID;
new gNewsDialPrice[3] = 0;
new gNewsDialMoney[3] = 0;
new gNewsMoney[3] = 0;


//Свадьба
new predlojbrak = 0;
new WeddingTwo[MAX_PLAYERS] = 999;
new WeddingTwo1[MAX_PLAYERS] = 999;

//new bool:logGang = false;
new bool:logExit;

//Динамическая экономика
//new gWorkSalary[3]; //Зарплата на угле, лесопилке, заводе оружия
//const Float:gunFactor = -0.6; //Коэффициент (зарплата - ед. оружя) на оруж заводе;
//new Float:economicFactor; //Коэффициент (К-во железа / К-во дерева)

//Бизнесы
new gBints[BINT_COUNT][BINT_DATA];
new gBintEnterArea[BINT_COUNT];
new gBintBuyArea[BINT_COUNT];
new Text3D: gBintBuyAreaText[BINT_COUNT];
new gBusiness[MAX_BUSINESS_COUNT][BUSINESS_DATA];
new gBusinessArea[MAX_BUSINESS_COUNT];
new Text3D: gBusinessText[MAX_BUSINESS_COUNT];
new gBusinessIcon[MAX_BUSINESS_COUNT];

enum FBI_ {
 	FBI_Status,
 	FBI_BussinesID,
 	FBI_BussinesOwner,
 	FBI_Lic,
 	FBI_Ticket,
 	FBI_Reason[64],
 	FBI_ReasonTrue[64],
 	Float:FBI_X,
 	Float:FBI_Y,
 	Float:FBI_Z,
 	Float:FBI_R,

}

new FBI_TOTALY = 0;
new FBI_Info[MAX_BUSINESS_COUNT][FBI_];

//new gBusinessTypeName[BUSINESS_TYPE_COUNT][24] = {"Прод. магазин","Закусочная","24/7","Бар","Клуб","Спортзал","Магазин одежды","Автомастерская"};
new gBusinessCount;
new gShopPrice[SHOP_OBJECTS] = {300,50,120,1000,100,500,0,5000,10000,25000}; //Цены для 24/7
new gShopPriceEx[SHOP_OBJECTS] = {2,1,2,4,1,2,5,10,15,20}; //Продукты для 24/7
new gShopObject[SHOP_OBJECTS][25] = {"Аптечка","Букет цветов","Трость","Парашют","Маска","Фотоаппарат (50 cнимков)", "Продукты для дома", "Маленькая сумка", "Средняя сумка", "Большая сумка"};
//Ремонт
enum REPAIR_OBJECTS
{
	repairColor
}
//new gRepairProduct[REPAIR_OBJECTS] = {250};
new gRepairArea[3];

//Развозчики
new gDelivery[DELIVERY_COUNT][DELIVERY_DATA];
new gDFTObject[DELIVERY_DFT_COUNT][2];
//Полицейский компьютер
#define MAX_PAGE_ELEMENTS 60 //Максимальное к-во элементов на 1 странице компьютера полиции
#define MAX_PLAYER_ELEMENT 19 //Максимальное к-во игроков в списке разыскиваемых на 1 странице


/*enum COMP_ELEMENTS
{
	Text:C_ELEMENT_BACKGROUND,
	Text:C_ELEMENT_WANTED,
	Text:C_ELEMENT_HOME,
	Text:C_ELEMENT_WANTED_LIST[MAX_PLAYERS],
	Text:C_ELEMENT_NEXT,
	Text:C_ELEMENT_BACK,
	Text:C_ELEMENT_BEARING,
	Text:C_ELEMENT_GOTO_WANTED_LIST,
	Text:C_ELEMENT_MAP1,
	Text:C_ELEMENT_MAP2,
	Text:C_ELEMENT_MAP3,
	Text:C_ELEMENT_MAP4,
	Text:C_ELEMENT_EXIT,
	PlayerText:C_ELEMENT_COUNTER[MAX_PLAYERS],
	PlayerText:C_ELEMENT_WANTED_NAME[MAX_PLAYERS],
	PlayerText:C_ELEMENT_WANTED_PHOTO1[MAX_PLAYERS],
	PlayerText:C_ELEMENT_WANTED_PHOTO2[MAX_PLAYERS],
	PlayerText:C_ELEMENT_WANTED_INFO[MAX_PLAYERS],
	PlayerText:C_ELEMENT_BEARING_SQUARE[MAX_PLAYERS]
}

enum COMP_PAGES
{
	C_PAGE_MAIN,
	C_PAGE_WANTED,
	C_PAGE_WANTED_INFO
}
new gInterfaceElement[COMP_ELEMENTS];
new gInterfaceWantedList[MAX_PLAYERS];
new gInterfaceWantedListCount;
new gBearingArea[100];
new gPlayerBearingID[MAX_PLAYERS];*/


static const MaxPassengers[27] =
{
	0x10331113, 0x11311131, 0x11331313, 0x80133301,
	0x1381F110, 0x10311103, 0x10001F10, 0x11113311,
	0x13113311, 0x31101100, 0x30001301, 0x11031311,
	0x11111331, 0x10013111, 0x01131100, 0x11111110,
	0x11100031, 0x11130221, 0x33113311, 0x11111101,
	0x33101133, 0x101001F0, 0x03133111, 0xFF11113F,
	0x13330111, 0xFF131111, 0x0000FF3F
}; // HEX смещения макс. кол-ва пассажиров на основной транспорт

main()
{
	//print("FreePlay gamemode loaded");
}


stock GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float:a;
	GetPlayerPos(playerid, x, y, a);
	if (IsPlayerInAnyVehicle(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	else GetPlayerFacingAngle(playerid, a);
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
	return 1;
}

ProxDetector(Float: radi, playerid, string[], col1, col2, col3, col4, col5) {
    new
        Float: Pos[3],
        Float: Radius
    ;
    GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
    foreach(Player, i) {
        Radius = GetPlayerDistanceFromPoint(i, Pos[0], Pos[1], Pos[2]);
        if(Radius > radi || GetPlayerInterior(playerid) != GetPlayerInterior(i) || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(i))
            continue;
        if (Radius < radi / 16) SendClientMessage(i, col1, string);
            else if(Radius < radi / 8) SendClientMessage(i, col2, string);
            else if(Radius < radi / 4) SendClientMessage(i, col3, string);
            else if(Radius < radi / 4) SendClientMessage(i, col4, string);
            else if(Radius < radi / 2) SendClientMessage(i, col5, string);
    }
    return 1;
}
/*stock ProxDetector(Float:radi, playerid, str[],col1,col2,col3,col4,col5)
{
	new Float:posx, Float:posy, Float:posz;
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetPlayerPos(playerid, oldposx, oldposy, oldposz);
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
		GetPlayerPos(i, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16))) SendClientMessage(i, col1, str);
		else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8))) SendClientMessage(i, col2, str);
		else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4))) SendClientMessage(i, col3, str);
		else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2))) SendClientMessage(i, col4, str);
		else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) SendClientMessage(i, col5, str);
	}
	return true;
}*/

stock CreateVehicleEx(modelid, Float: X, Float: Y, Float: Z, Float: A, Color1, Color2, SpawnDelay)
{
	new id = CreateVehicle(modelid, X, Y, Z, A, Color1, Color2, SpawnDelay);
	gVehicles[id - 1][vCheckDelay] = true;
	gVehicles[id - 1][vX] = X;
	gVehicles[id - 1][vY] = Y;
	gVehicles[id - 1][vZ] = Z;
	gVehicles[id - 1][vA] = A;
	gVehicles[id - 1][vSpawned] = true;
	gVehicles[id - 1][vCheckDelay] = true;
	return id;
}

stock AddStaticVehicleExEx(modelid, Float: X, Float: Y, Float: Z, Float: A, Color1, Color2, SpawnDelay)
{
	new id = AddStaticVehicleEx(modelid, X, Y, Z, A, Color1, Color2, SpawnDelay);
	gVehicles[id - 1][vCheckDelay] = true;
	gVehicles[id - 1][vX] = X;
	gVehicles[id - 1][vY] = Y;
	gVehicles[id - 1][vZ] = Z;
	gVehicles[id - 1][vA] = A;
	gVehicles[id - 1][vSpawned] = true;
	gVehicles[id - 1][vCheckDelay] = true;
	return id;
}

stock AddStaticVehicleExx(modelid, Float: X, Float: Y, Float: Z, Float: A, Color1, Color2)
{
	new id = AddStaticVehicle(modelid, X, Y, Z, A, Color1, Color2);
	gVehicles[id - 1][vCheckDelay] = true;
	gVehicles[id - 1][vX] = X;
	gVehicles[id - 1][vY] = Y;
	gVehicles[id - 1][vZ] = Z;
	gVehicles[id - 1][vA] = A;
	gVehicles[id - 1][vSpawned] = true;
	gVehicles[id - 1][vCheckDelay] = true;
	return id;
}

stock SetVehiclePosEx(vehicleid, Float: X, Float: Y, Float: Z) {
	gVehicles[vehicleid - 1][vCheckDelay] = true;
	gVehicles[vehicleid - 1][vX] = X;
	gVehicles[vehicleid - 1][vY] = Y;
	gVehicles[vehicleid - 1][vZ] = Z;
	SetVehiclePos(vehicleid, X, Y, Z);
	gVehicles[vehicleid - 1][vCheckDelay] = true;
	return 1;
}

stock SetVehicleZAngleEx(vehicleid, Float: Angle) {
	gVehicles[vehicleid - 1][vCheckDelay] = true;
	gVehicles[vehicleid - 1][vA] = Angle;
	SetVehicleZAngle(vehicleid, Angle);
	gVehicles[vehicleid - 1][vCheckDelay] = true;
	return 1;
}

stock RemovePlayerFromVehicleEx(playerid)
{
	if(IsPlayerNPC(playerid)) return 1;
	SetTimerEx("CarHack",3000,false,"ii",playerid,GetPlayerVehicleID(playerid));
	return RemovePlayerFromVehicle(playerid);
}

stock PutPlayerInVehicleEx(playerid, vehicleid, seatid)
{
	if(IsPlayerNPC(playerid)) return 1;
	pTemp[playerid][NewWVehicle] = vehicleid;
	pTemp[playerid][EnterWVehicleTime] = 0;
	pTemp[playerid][pEnterVehicle] = vehicleid;
	return PutPlayerInVehicle(playerid, vehicleid, seatid);
}





stock TogglePlayerControllableEx(playerid,toggle)
{
	pTemp[playerid][pControllable] = toggle;
	TogglePlayerControllable(playerid,toggle);
}

stock SetPlayerVirtualWorldEx(playerid,worldid)
{
	pTemp[playerid][pWorld] = worldid;
	SetPlayerVirtualWorld(playerid,worldid);
}

stock SetVehicleParamsExEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective)
{
	if(engine == 1) gVehicles[vehicleid-1][vEngine] = true;
	else gVehicles[vehicleid-1][vEngine] = false;
	SetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
}

stock SetPlayerSkinEx(playerid,skinid)
{
	pTemp[playerid][pCSkin] = skinid;
	SetPlayerSkin(playerid,skinid);
}

stock SetPlayerSkinNA(playerid,skinid)
{
	SetPlayerSkin(playerid,skinid);
}

stock SetPlayerPosEx(playerid,Float:x,Float:y,Float:z, control = 1)
{
	pTemp[playerid][pAbletoTP] = true;
	if(control) TogglePlayerControllableEx(playerid,1);
	pTemp[playerid][pX] = x;
	pTemp[playerid][pY] = y;
	pTemp[playerid][pZ] = z;
	return SetPlayerPos(playerid,x,y,z);
}

stock ResetPlayerWeaponsEx(playerid)
{
	pTemp[playerid][pAbletoGun] = 2;
	ResetPlayerWeapons(playerid);
	for(new i;i<13;i++)
	{
		gGuns[playerid][i] = 0;
		gAmmos[playerid][i] = 0;
	}
	pTemp[playerid][pAbletoGun] = 2;
}

stock ShowPlayerDialogEx(playerid,dialogid,style,caption[],info[],button1[],button2[])
{
	pTemp[playerid][pDialog] = true;
	return ShowPlayerDialog(playerid,dialogid,style,caption,info,button1,button2);
}
stock ChangeVehicleColorEx(vehicleid,color1,color2)
{
	gVehicles[vehicleid-1][vColor][0] = color1+1;
	gVehicles[vehicleid-1][vColor][1] = color2+1;
	ChangeVehicleColor(vehicleid,color1,color2);
}

stock PlayerTextDrawDestroyEx(playerid,PlayerText:textdraw)
{
	PlayerTextDrawDestroy(playerid,textdraw);
	textdraw = PlayerText:INVALID_TEXT_DRAW;
}

//#define CreateVehicle CreateVehicleEx
#define AddStaticVehicleEx AddStaticVehicleExEx
#define AddStaticVehicle AddStaticVehicleExx
#define SetVehiclePos SetVehiclePosEx
#define SetVehicleZAngle SetVehicleZAngleEx
#define RemovePlayerFromVehicle RemovePlayerFromVehicleEx
#define PutPlayerInVehicle PutPlayerInVehicleEx
#define TogglePlayerControllable TogglePlayerControllableEx
#define SetPlayerVirtualWorld SetPlayerVirtualWorldEx
#define SetVehicleParamsEx SetVehicleParamsExEx
#define SetPlayerSkin SetPlayerSkinEx
#define SetPlayerPos SetPlayerPosEx
#define ResetPlayerWeapons ResetPlayerWeaponsEx
//#define ShowPlayerDialog ShowPlayerDialogEx
#define ChangeVehicleColor ChangeVehicleColorEx
#define PlayerTextDrawDestroy PlayerTextDrawDestroyEx
//#define SetPlayerHealth SetPlayerHealth




stock DestroyDynamic3DTextLabelEx(&Text3D:text)
{
	DestroyDynamic3DTextLabel(text);
	text = Text3D:INVALID_3DTEXT_ID;
}

stock IsValid3DTextLabel(Text3D:textid)
{
	if(textid != Text3D:INVALID_3DTEXT_ID) return 1;
	else return 0;
}

forward SetMark(playerid, id);
public SetMark(playerid, id)
{
	pTemp[playerid][Marked] = false;
	if(GetPlayerInterior(id) || GetPlayerVirtualWorld(id) || !random(10)) return SendClientMessage(playerid, CWHITE,"» Местоположение преступника определить не удалось. Попробуйте позже.");
	if(pData[id]{pWanted} < 2) return SendClientMessage(playerid, CWHITE,"» Данный игрок не в розыске или уровень розыска меньше 2");
	if(pTemp[playerid][pGPS]) return SendClientMessage(playerid, CWHITE,"» У Вас уже есть метка на радаре");
	new Float:x, Float:y, Float:z;
	GetPlayerPos(id,x,y,z);
	EnableGPSForPlayer(playerid, x, y, z, 4.0, 37);
	//SetPlayerCheckpoint(playerid,x,y,z,4.0);
	pTemp[playerid][pGPS] = true;
	SendClientMessage(playerid, CWHITE,"» В последний раз нарушитель был обнаружен в отмеченном месте. Чтобы убрать метку введите /gps");
	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
    new Menu:Current = GetPlayerMenu(playerid);
	if(Current == specmenu)
 	{
 	    switch(row)
 	    {
 	        case 0:
		  	{
		 	    new mes2[60];
		 	    f(mes2, "%d", pTemp[playerid][pSpectatee]);
		 	    _sp(playerid, mes2);
				/*format(mes2,sizeof(mes2),"/sp %d",pTemp[playerid][pSpectatee]);
				OnPlayerCommandText(playerid,mes2);*/
			}
			case 1:
			{
			    if(pData[playerid][pAdmin] < 3) return true;
			    new Float:Xq,Float:Yq,Float:Zq;
			    GetPlayerPos(pTemp[playerid][pSpectatee],Xq,Yq,Zq);
			    SetPlayerPos(pTemp[playerid][pSpectatee],Xq,Yq,Zq+5);
			    ShowMenuForPlayer(specmenu,playerid);
			}
			case 2:
		  	{
		  	    ShowStats(pTemp[playerid][pSpectatee], playerid);
				ShowMenuForPlayer(specmenu,playerid);
			}
			case 3:
		  	{
		 	    new mes2[60];
				f(mes2, "%d", pTemp[playerid][pSpectatee]);
		 	    _weap(playerid, mes2);
				ShowMenuForPlayer(specmenu,playerid);
			}
			case 4:
		  	{
		 	    new spectatee = pTemp[playerid][pSpectatee];
				if(spectatee != INVALID_PLAYER_ID) pTemp[playerid][pSpectatee] = INVALID_PLAYER_ID;
				TogglePlayerSpectating(playerid,0);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				SetCameraBehindPlayer(playerid);
				HideMenuForPlayer(specmenu,playerid);
				SpawnPlayer(playerid);
			}
		}
	}
    return true;
}

public OnGameModeInit()
{


    LoadMySQLSettings();
	zConn = mysql_connect(MySQLSettings[HOST],MySQLSettings[USERNAME],MySQLSettings[PASSWORD],MySQLSettings[DATABASE]);
	if (!zConn) {
		print("Не удалось подключиться к MySQL");
		SendClientMessageToAll(CRED,"Авторестарт сервера... (#8)");
		SetTimer("GameModeExitDelay",2000,false);
		return 1;
	}

	AllowInteriorWeapons(0);

	new zRes[1024];
	sql_set_charset(zConn, "cp1251");
    PLAYERS = cvector();
    mes = "";
    for(new i; i< sizeof(StolCoor);i++)
	{
		StolInfo[i][Crupe] = INVALID_PLAYER_ID;
		for(new h;h<5;h++){
			StolInfo[i][Gamer][h] = INVALID_PLAYER_ID;}
		StolInfo[i][GameStart] = 0;
		//----------------------------------------
		KostiBox[i] = TextDrawCreate(550,160,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~");
		TextDrawUseBox(KostiBox[i],1);
		TextDrawTextSize(KostiBox[i],100.0,100.0);
		TextDrawBoxColor(KostiBox[i],0x00000045);
		TextDrawAlignment(KostiBox[i],2);

		format(mes,sizeof(mes),"Table %d",i+1);
		TableName[i] = TextDrawCreate(550,160,mes);
		TextDrawFont(TableName[i],0);
		TextDrawLetterSize(TableName[i],0.500,1.200);
		TextDrawSetProportional(TableName[i],1);
		TextDrawColor(TableName[i],0x007fffFF);
		TextDrawSetOutline(TableName[i],1);
		TextDrawAlignment(TableName[i],2);

		KostiInfo[i] = TextDrawCreate(505,180,"~n~1.--___________________--~n~2.--___________________--~n~3.--___________________--~n~4.--___________________--~n~5.--___________________--~n~");
		TextDrawFont(KostiInfo[i],1);
		TextDrawLetterSize(KostiInfo[i],0.210,0.78);
		TextDrawSetProportional(KostiInfo[i],1);
		TextDrawColor(KostiInfo[i],0xFFFFFFFF);
		TextDrawSetOutline(KostiInfo[i],0);
		TextDrawSetShadow(KostiInfo[i],0);

		KostiGameInfo[i] = TextDrawCreate(505,230,"~w~Bet:_~r~N/A~n~~w~Bank:_~r~N/A~n~");
		TextDrawFont(KostiGameInfo[i],1);
		TextDrawLetterSize(KostiGameInfo[i],0.250,1.20);
		TextDrawSetProportional(KostiGameInfo[i],1);
		TextDrawColor(KostiGameInfo[i],0xFFFFFFFF);
		TextDrawSetOutline(KostiGameInfo[i],0);
		TextDrawSetShadow(KostiGameInfo[i],0);


	}
    pickup = CreateDynamicPickup(1275,2,1963.4060,972.7579,994.4688,-1);

    CasinoInfo[0] = CreateDynamicPickup(1239,2,1965.1003,1033.2429,992.4688,-1);
    CasinoInfo[1] = CreateDynamicPickup(1239,2,1965.2747,1002.6561,992.4688,-1);



	KostiKeyStavka = TextDrawCreate(550,263,"SET BET");
	TextDrawFont(KostiKeyStavka,1);
	TextDrawLetterSize(KostiKeyStavka,0.400,1.40);
	TextDrawSetProportional(KostiKeyStavka,1);
	TextDrawColor(KostiKeyStavka,0xFFFFFFFF);
	TextDrawSetOutline(KostiKeyStavka,1);
	TextDrawSetShadow(KostiKeyStavka,0);
	TextDrawAlignment(KostiKeyStavka,2);
	TextDrawUseBox(KostiKeyStavka,1);
	TextDrawTextSize(KostiKeyStavka,10,70);
	TextDrawBoxColor(KostiKeyStavka,0x80808077);
	TextDrawSetSelectable(KostiKeyStavka,1);

	KostiKeyDone = TextDrawCreate(550,283,"DICE");
	TextDrawFont(KostiKeyDone,1);
	TextDrawLetterSize(KostiKeyDone,0.400,1.40);
	TextDrawSetProportional(KostiKeyDone,1);
	TextDrawColor(KostiKeyDone,0xFFFFFFFF);
	TextDrawSetOutline(KostiKeyDone,1);
	TextDrawSetShadow(KostiKeyDone,0);
	TextDrawAlignment(KostiKeyDone,2);
	TextDrawUseBox(KostiKeyDone,1);
	TextDrawTextSize(KostiKeyDone,10,70);
	TextDrawBoxColor(KostiKeyDone,0x80808077);
	TextDrawSetSelectable(KostiKeyDone,1);

	KostiKeyExit = TextDrawCreate(550,303,"EXIT");
	TextDrawFont(KostiKeyExit,1);
	TextDrawLetterSize(KostiKeyExit,0.400,1.40);
	TextDrawSetProportional(KostiKeyExit,1);
	TextDrawColor(KostiKeyExit,0xFFFFFFFF);
	TextDrawSetOutline(KostiKeyExit,1);
	TextDrawSetShadow(KostiKeyExit,0);
	TextDrawAlignment(KostiKeyExit,2);
	TextDrawUseBox(KostiKeyExit,1);
	TextDrawTextSize(KostiKeyExit,10,70);
	TextDrawBoxColor(KostiKeyExit,0x80808077);
	TextDrawSetSelectable(KostiKeyExit,1);
	//------------------------------
	mes = "";
	for(new i;i<sizeof(StolCoor);i++)
	{
		format(mes,sizeof(mes),"Игровой стол %d",i+1);
		CreateObject(1824,StolCoor[i][0],StolCoor[i][1],StolCoor[i][2],0,0,0);
		StolCoorText[i] = CreateDynamic3DTextLabel(mes,-1,StolCoor[i][0],StolCoor[i][1],StolCoor[i][2]+1.5,10.5,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1, -1);
	}





    new tmpobjid;
    //--------------------[Остров]----------------------------------------------
    //Map Exported with Texture Studio By: [uL]Pottus////////////////////////////////////////////////////////////////

	tmpobjid = CreateDynamicObject(18981,632.749,-2516.818,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,564.879,-2516.800,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,632.749,-2541.800,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,632.749,-2566.769,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,632.749,-2591.726,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,632.749,-2616.706,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,657.736,-2616.706,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,674.710,-2616.706,2.694,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,607.765,-2616.706,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,582.803,-2616.706,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,532.817,-2616.706,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,547.182,-2641.636,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,503.712,-2516.801,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,564.879,-2541.799,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,564.879,-2566.768,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,564.879,-2591.725,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,503.712,-2541.799,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,503.711,-2566.768,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,503.712,-2591.725,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,478.717,-2566.768,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,454.456,-2566.768,2.694,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,454.457,-2549.864,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,454.458,-2591.760,2.694,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,478.871,-2591.642,2.694,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(6100,568.640,-2649.904,27.202,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4573, "stolenbuild01", "sl_dtwn2win1", 0);
	SetDynamicObjectMaterial(tmpobjid, 5, 4573, "stolenbuild01", "sl_dtwn2win1", 0);
	tmpobjid = CreateDynamicObject(18981,572.119,-2641.583,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,497.809,-2641.707,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,454.458,-2616.694,2.694,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,482.833,-2616.616,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,507.829,-2616.664,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,454.458,-2616.693,2.694,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,462.303,-2616.662,2.693,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,557.403,-2673.001,2.694,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,571.690,-2673.001,2.691,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18770,583.083,-2737.833,-100.227,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18766,639.005,-2714.461,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,564.196,-2724.450,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,487.489,-2734.448,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,564.196,-2714.461,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,549.946,-2711.371,0.194,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18981,532.419,-2673.001,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,507.602,-2673.001,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,482.615,-2673.001,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,457.897,-2673.001,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,454.434,-2673.001,2.701,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,596.681,-2673.001,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,621.445,-2673.001,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,646.221,-2673.001,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,671.023,-2673.001,2.697,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,676.499,-2673.001,2.693,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18766,559.904,-2711.371,0.194,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,569.898,-2711.370,0.194,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,579.263,-2711.368,0.194,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18770,546.245,-2737.833,-100.227,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,564.086,-2737.833,-100.227,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(19377,564.713,-2510.232,3.115,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,564.712,-2519.584,3.115,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,564.712,-2529.170,3.115,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,564.712,-2538.555,3.115,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,564.713,-2548.175,3.115,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,564.712,-2557.693,3.115,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,564.712,-2567.045,3.115,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,564.712,-2576.464,3.115,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,564.713,-2585.816,3.115,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,564.712,-2595.335,3.115,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,564.712,-2604.721,3.115,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,564.712,-2614.208,3.115,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,564.712,-2616.942,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,554.217,-2616.942,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,543.729,-2616.943,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,533.307,-2616.943,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,522.981,-2616.943,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,512.528,-2616.942,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,502.172,-2616.942,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,491.819,-2616.943,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,481.463,-2616.943,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,470.975,-2616.943,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,460.820,-2616.943,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,450.429,-2616.943,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,450.429,-2608.125,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,450.429,-2598.814,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,450.429,-2589.489,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,460.406,-2574.656,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,470.558,-2574.656,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,480.985,-2574.656,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,491.231,-2574.656,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,496.712,-2574.656,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,496.713,-2584.013,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,496.712,-2593.606,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,496.713,-2602.564,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,496.713,-2609.634,3.112,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,450.388,-2579.834,3.118,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,450.369,-2574.656,3.122,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,575.214,-2616.949,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,585.589,-2616.949,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,595.917,-2616.949,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,606.317,-2616.949,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,616.772,-2616.949,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,627.129,-2616.949,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,637.451,-2616.949,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,647.940,-2616.949,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,658.427,-2616.949,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,668.682,-2616.949,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,679.103,-2616.949,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,681.606,-2616.949,3.124,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,632.556,-2607.359,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,632.557,-2597.738,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,632.557,-2588.117,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,632.557,-2578.544,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,632.557,-2569.003,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,632.557,-2559.422,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,632.557,-2549.804,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,632.557,-2540.186,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,632.557,-2530.636,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,632.557,-2521.128,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,632.557,-2511.613,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,632.556,-2510.108,3.134,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,454.652,-2579.713,3.115,0.000,90.000,319.998);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,492.450,-2611.912,3.115,0.000,90.000,319.998);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,491.161,-2578.428,3.115,0.000,90.000,49.998);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,454.842,-2611.917,3.115,0.000,90.000,219.998);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,447.989,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,458.488,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,468.944,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,479.333,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,489.750,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,500.199,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,510.579,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,521.070,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,531.573,-2679.047,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,542.015,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,552.419,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,562.867,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,573.283,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,583.734,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,594.250,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,604.744,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,615.125,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,625.531,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,635.947,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,646.388,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,656.870,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,667.344,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,677.833,-2679.048,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,682.374,-2679.048,3.131,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,564.674,-2688.364,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,564.674,-2696.538,3.137,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,564.681,-2705.910,1.651,18.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,564.781,-2669.433,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,564.750,-2632.706,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,564.747,-2626.570,3.128,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(18981,564.434,-2688.844,2.687,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981,564.437,-2713.074,-1.144,18.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18766,564.196,-2734.448,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,487.489,-2724.450,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,487.489,-2714.461,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,639.005,-2724.450,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,639.005,-2734.448,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,539.961,-2711.371,0.194,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,529.971,-2711.371,0.194,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,589.259,-2711.366,0.194,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,599.244,-2711.246,0.196,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(19377,508.635,-2614.373,3.111,0.000,90.000,22.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,516.966,-2607.312,3.121,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,527.468,-2607.318,3.118,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(18981,544.924,-2616.721,2.696,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(19377,537.968,-2607.308,3.118,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,550.875,-2614.577,3.111,0.000,90.000,338.244);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,545.473,-2607.318,3.115,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,619.770,-2614.579,3.111,0.000,90.000,338.241);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,611.466,-2607.321,3.118,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,600.973,-2607.324,3.118,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,590.478,-2607.321,3.118,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,584.822,-2607.318,3.117,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(19377,578.169,-2614.770,3.115,0.000,90.000,21.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", -1);
	tmpobjid = CreateDynamicObject(3506,459.815,-2684.745,3.461,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "sl_metalwalk", 0);
	tmpobjid = CreateDynamicObject(18770,449.671,-2684.672,-96.383,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,459.906,-2684.717,-96.383,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,476.713,-2684.718,-96.383,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,487.959,-2684.696,-96.383,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,500.541,-2684.724,-96.383,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,511.760,-2684.674,-96.383,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,528.703,-2684.669,-96.383,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,540.017,-2684.759,-96.383,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,591.219,-2684.677,-96.383,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,603.241,-2684.710,-96.383,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,619.622,-2684.697,-96.383,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,630.609,-2684.689,-96.383,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,643.153,-2684.735,-96.383,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,654.125,-2684.712,-96.383,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,670.742,-2684.699,-96.383,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,682.450,-2684.687,-96.383,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18766,519.974,-2711.371,0.194,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,509.979,-2711.371,0.194,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,499.981,-2711.371,0.194,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,489.986,-2711.371,0.194,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,609.234,-2711.371,0.196,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,619.192,-2711.371,0.196,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,629.185,-2711.371,0.196,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,636.492,-2711.371,0.189,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,507.705,-2734.448,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,507.705,-2724.450,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,507.705,-2714.461,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,527.343,-2734.448,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,527.343,-2724.450,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,527.343,-2714.461,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,546.145,-2734.448,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,546.145,-2714.461,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,546.145,-2724.450,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,583.057,-2734.448,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,583.057,-2724.450,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,583.057,-2714.461,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,601.544,-2734.448,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,601.544,-2724.450,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,619.989,-2714.461,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,619.989,-2734.448,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,619.989,-2724.450,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,601.543,-2714.461,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,468.419,-2734.448,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,468.419,-2724.450,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,449.078,-2714.461,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,449.078,-2734.448,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,449.078,-2724.450,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,468.418,-2714.461,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,657.541,-2734.448,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,676.914,-2724.450,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,657.541,-2714.461,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,676.914,-2734.448,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,657.541,-2724.450,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,676.914,-2714.461,0.177,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,479.990,-2711.371,0.194,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,470.010,-2711.371,0.194,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,460.016,-2711.371,0.194,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,451.587,-2711.371,0.189,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,646.489,-2711.371,0.189,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,656.469,-2711.371,0.189,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,666.437,-2711.371,0.189,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18766,674.411,-2711.371,0.186,90.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gym_floor6", -1);
	tmpobjid = CreateDynamicObject(18770,449.010,-2737.833,-100.227,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,468.225,-2737.833,-100.227,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,487.213,-2737.833,-100.227,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,507.321,-2737.833,-100.227,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,527.176,-2737.833,-100.227,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,601.406,-2737.833,-100.227,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,619.888,-2737.833,-100.227,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,639.210,-2737.833,-100.227,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,657.335,-2737.833,-100.227,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18770,676.927,-2737.833,-100.227,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(4247,564.879,-2602.115,3.055,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(4247,788.492,-2790.116,-83.431,24.000,24.000,350.000);
	tmpobjid = CreateDynamicObject(4247,564.875,-2404.365,-9.062,352.985,0.000,0.000);
	tmpobjid = CreateDynamicObject(4247,564.874,-2207.350,-33.236,352.996,0.000,0.000);
	tmpobjid = CreateDynamicObject(4247,787.776,-2413.663,-83.768,336.016,24.199,10.351);
	tmpobjid = CreateDynamicObject(4247,796.478,-2411.918,-70.633,353.000,30.000,0.000);
	tmpobjid = CreateDynamicObject(4247,796.479,-2214.917,-94.823,352.996,29.998,0.000);
	tmpobjid = CreateDynamicObject(4247,333.284,-2411.900,-70.619,6.998,29.992,179.994);
	tmpobjid = CreateDynamicObject(4247,333.291,-2214.908,-94.824,7.003,29.998,179.994);
	tmpobjid = CreateDynamicObject(4247,325.720,-2602.104,-43.425,0.000,21.994,179.994);
	tmpobjid = CreateDynamicObject(4247,340.898,-2414.877,-83.781,23.983,24.197,170.349);
	tmpobjid = CreateDynamicObject(4247,342.006,-2790.564,-83.759,336.016,24.197,190.349);
	tmpobjid = CreateDynamicObject(4247,796.495,-2776.581,-86.622,17.995,29.998,0.000);
	tmpobjid = CreateDynamicObject(4247,564.900,-2795.755,-27.607,17.995,0.000,0.000);
	tmpobjid = CreateDynamicObject(4247,333.312,-2776.581,-86.635,17.995,330.000,0.000);
	tmpobjid = CreateDynamicObject(4247,804.063,-2602.113,-43.425,0.000,21.994,0.000);
	tmpobjid = CreateDynamicObject(619,604.158,-2494.135,2.220,0.000,0.000,311.499);
	tmpobjid = CreateDynamicObject(619,525.054,-2495.471,2.053,0.000,0.000,101.491);
	tmpobjid = CreateDynamicObject(619,437.963,-2566.834,1.241,0.000,0.000,101.495);
	tmpobjid = CreateDynamicObject(620,516.065,-2697.650,3.055,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(620,606.633,-2698.500,3.055,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(620,638.799,-2694.332,-7.131,0.000,0.000,30.000);
	tmpobjid = CreateDynamicObject(620,666.083,-2689.883,0.985,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(620,515.963,-2500.388,2.388,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(620,689.533,-2701.364,2.555,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(620,689.591,-2502.892,2.555,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(620,441.403,-2502.795,-1.452,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(620,440.695,-2702.037,2.555,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(6295,456.510,-2516.171,26.988,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(6038,664.732,-2555.329,11.185,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(6038,599.493,-2555.304,11.185,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(6038,528.206,-2555.305,11.185,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(6038,636.603,-2648.379,11.185,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(6041,468.571,-2533.958,11.036,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(619,610.085,-2632.922,3.055,0.000,0.000,241.490);
	tmpobjid = CreateDynamicObject(620,557.294,-2499.646,1.886,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(620,580.379,-2495.097,-4.425,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(620,649.064,-2497.250,1.886,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(620,668.372,-2492.519,-5.560,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(619,658.434,-2494.912,1.886,0.000,0.000,301.499);
	tmpobjid = CreateDynamicObject(619,617.834,-2495.633,2.053,0.000,0.000,201.494);
	tmpobjid = CreateDynamicObject(619,565.538,-2496.556,2.220,0.000,0.000,221.494);
	tmpobjid = CreateDynamicObject(619,467.115,-2501.428,3.055,0.000,0.000,181.489);
	tmpobjid = CreateDynamicObject(6038,493.916,-2648.367,11.185,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(4199,529.699,-2601.979,5.307,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1281,540.090,-2499.655,3.467,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1281,534.955,-2499.754,3.467,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1281,530.414,-2499.784,3.467,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1281,545.776,-2500.327,3.467,0.000,0.000,120.000);
	tmpobjid = CreateDynamicObject(1281,521.228,-2500.051,3.467,0.000,0.000,59.998);
	tmpobjid = CreateDynamicObject(620,611.203,-2493.889,-0.616,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(620,496.363,-2499.862,-1.452,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1281,591.927,-2496.593,3.091,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1281,604.828,-2498.627,3.091,0.000,0.000,120.000);
	tmpobjid = CreateDynamicObject(1281,614.492,-2494.810,3.091,0.000,0.000,99.998);
	tmpobjid = CreateDynamicObject(1281,645.244,-2499.659,3.091,0.000,0.000,99.997);
	tmpobjid = CreateDynamicObject(1281,653.468,-2494.261,3.091,0.000,0.000,79.997);
	tmpobjid = CreateDynamicObject(1281,667.169,-2499.365,3.091,0.000,0.000,79.996);
	tmpobjid = CreateDynamicObject(1281,680.257,-2493.991,3.091,0.000,0.000,109.996);
	tmpobjid = CreateDynamicObject(1281,674.385,-2498.845,3.091,0.000,0.000,79.995);
	tmpobjid = CreateDynamicObject(1281,685.335,-2498.884,3.091,0.000,0.000,79.991);
	tmpobjid = CreateDynamicObject(2410,652.750,-2490.392,1.521,353.500,0.000,0.000);
	tmpobjid = CreateDynamicObject(2410,680.737,-2490.398,1.524,353.511,355.974,319.544);
	tmpobjid = CreateDynamicObject(2406,610.706,-2493.572,3.084,348.007,357.955,159.575);
	tmpobjid = CreateDynamicObject(2406,579.244,-2494.795,3.084,348.002,357.951,209.570);
	tmpobjid = CreateDynamicObject(2405,565.687,-2495.841,3.365,340.000,0.000,148.000);
	tmpobjid = CreateDynamicObject(2404,546.010,-2498.727,3.101,308.000,180.000,180.000);
	tmpobjid = CreateDynamicObject(1642,545.461,-2487.186,1.136,353.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1642,571.603,-2489.445,1.411,352.996,0.000,0.000);
	tmpobjid = CreateDynamicObject(1642,607.188,-2486.072,1.000,352.990,0.000,0.000);
	tmpobjid = CreateDynamicObject(1642,655.935,-2482.104,0.513,352.996,0.000,0.000);
	tmpobjid = CreateDynamicObject(1641,659.370,-2484.014,0.750,353.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1641,673.042,-2485.851,0.976,352.990,0.000,0.000);
	tmpobjid = CreateDynamicObject(1641,633.572,-2487.898,1.225,352.996,0.000,0.000);
	tmpobjid = CreateDynamicObject(1641,599.922,-2484.302,0.787,352.990,0.000,0.000);
	tmpobjid = CreateDynamicObject(1640,584.559,-2485.691,0.950,353.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1640,543.425,-2486.998,1.118,352.990,0.000,0.000);
	tmpobjid = CreateDynamicObject(1640,604.283,-2488.893,1.350,352.996,0.000,0.000);
	tmpobjid = CreateDynamicObject(1640,664.898,-2490.631,1.570,352.996,0.000,0.000);
	tmpobjid = CreateDynamicObject(1637,660.145,-2495.837,3.441,0.248,352.999,270.030);
	tmpobjid = CreateDynamicObject(1637,621.052,-2489.219,2.576,359.999,352.996,269.996);
	tmpobjid = CreateDynamicObject(1637,582.322,-2495.924,3.377,359.994,352.996,269.994);
	tmpobjid = CreateDynamicObject(1637,527.176,-2487.270,2.315,359.994,352.996,269.994);
	tmpobjid = CreateDynamicObject(1610,545.552,-2482.701,0.555,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1610,544.559,-2483.095,0.555,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1611,542.520,-2481.791,0.363,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1461,667.559,-2491.777,2.487,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(1461,603.843,-2493.760,2.654,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(1461,525.398,-2494.981,2.822,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(1461,495.502,-2498.305,2.822,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(1598,586.367,-2486.495,1.225,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1598,605.614,-2486.479,1.297,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1598,665.828,-2490.622,1.802,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1637,488.062,-2493.553,3.142,359.994,352.996,269.994);
	tmpobjid = CreateDynamicObject(1281,485.204,-2500.465,3.467,0.000,0.000,59.996);
	tmpobjid = CreateDynamicObject(1281,480.742,-2500.819,3.467,0.000,0.000,89.996);
	tmpobjid = CreateDynamicObject(1281,475.158,-2502.267,3.467,0.000,0.000,89.994);
	tmpobjid = CreateDynamicObject(620,439.268,-2557.947,-4.289,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(620,439.182,-2628.825,1.386,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(620,454.824,-2699.611,-1.618,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(619,439.496,-2524.295,1.241,0.000,0.000,211.491);
	tmpobjid = CreateDynamicObject(619,529.252,-2694.772,1.241,0.000,0.000,101.491);
	tmpobjid = CreateDynamicObject(619,592.151,-2693.565,1.241,0.000,0.000,1.491);
	tmpobjid = CreateDynamicObject(619,624.044,-2694.219,1.241,0.000,0.000,21.488);
	tmpobjid = CreateDynamicObject(619,675.606,-2690.568,1.241,0.000,0.000,81.483);
	tmpobjid = CreateDynamicObject(619,467.710,-2691.458,1.241,0.000,0.000,41.478);
	tmpobjid = CreateDynamicObject(622,481.293,-2694.086,3.055,0.000,0.000,229.998);
	tmpobjid = CreateDynamicObject(622,659.512,-2690.840,3.055,0.000,0.000,149.996);
	tmpobjid = CreateDynamicObject(620,693.793,-2669.136,-7.798,0.000,0.000,29.998);
	tmpobjid = CreateDynamicObject(620,692.432,-2649.493,-0.620,0.000,0.000,29.998);
	tmpobjid = CreateDynamicObject(620,693.721,-2606.243,-1.455,0.000,0.000,29.998);
	tmpobjid = CreateDynamicObject(620,694.439,-2583.770,-10.907,0.000,0.000,29.998);
	tmpobjid = CreateDynamicObject(620,693.513,-2533.024,-1.419,0.000,0.000,29.998);
	tmpobjid = CreateDynamicObject(619,691.106,-2657.424,0.072,0.000,0.000,81.483);
	tmpobjid = CreateDynamicObject(619,691.973,-2597.670,0.072,0.000,0.000,141.480);
	tmpobjid = CreateDynamicObject(619,690.691,-2612.455,0.072,0.000,0.000,1.472);
	tmpobjid = CreateDynamicObject(619,693.372,-2561.615,0.072,0.000,0.000,61.472);
	tmpobjid = CreateDynamicObject(619,690.767,-2557.129,0.072,0.000,0.000,191.468);
	tmpobjid = CreateDynamicObject(2600,517.018,-2497.089,3.279,0.000,0.000,181.750);
	tmpobjid = CreateDynamicObject(2600,551.065,-2498.875,3.279,0.000,0.000,181.746);
	tmpobjid = CreateDynamicObject(2600,478.325,-2497.596,3.279,0.000,0.000,181.746);
	tmpobjid = CreateDynamicObject(2600,465.282,-2500.070,3.446,0.000,0.000,181.746);
	tmpobjid = CreateDynamicObject(2600,597.851,-2498.447,3.279,0.000,0.000,181.746);
	tmpobjid = CreateDynamicObject(1570,513.638,-2498.076,3.767,354.003,357.988,359.789);
	tmpobjid = CreateDynamicObject(1570,526.081,-2500.297,3.765,354.001,357.984,359.785);
	tmpobjid = CreateDynamicObject(1570,607.656,-2491.519,2.782,352.251,358.228,359.757);
	tmpobjid = CreateDynamicObject(1570,670.763,-2495.782,3.286,352.249,358.225,359.752);
	tmpobjid = CreateDynamicObject(1363,463.196,-2588.902,4.031,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1363,463.641,-2603.976,4.031,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1363,483.263,-2604.041,4.031,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1363,483.264,-2588.898,4.031,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,576.179,-2544.962,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,553.835,-2556.396,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,553.835,-2568.156,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,576.179,-2518.087,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,553.835,-2507.199,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,553.835,-2586.799,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,553.835,-2598.051,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,576.178,-2598.050,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,576.178,-2586.798,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,576.178,-2568.155,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,576.178,-2556.396,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,553.835,-2544.962,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,553.835,-2518.087,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,576.178,-2507.199,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,505.463,-2507.199,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,505.463,-2518.087,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,505.463,-2544.962,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,505.463,-2556.396,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,505.463,-2568.155,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,505.462,-2586.798,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,505.463,-2598.050,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,470.928,-2607.172,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,471.036,-2585.006,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,459.738,-2596.479,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,483.950,-2596.673,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,447.178,-2563.146,5.927,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1231,461.002,-2563.146,5.927,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1231,473.421,-2563.146,5.927,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1231,451.824,-2625.486,5.925,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1231,489.860,-2563.146,5.927,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1231,462.565,-2625.486,5.925,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1231,480.877,-2625.486,5.925,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1231,492.817,-2625.486,5.925,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1231,503.976,-2625.486,5.925,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1231,518.885,-2625.486,5.925,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1231,531.357,-2625.486,5.925,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1231,542.211,-2625.486,5.925,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1231,593.375,-2625.486,5.925,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1231,605.419,-2625.486,5.925,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1231,623.801,-2625.486,5.925,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1231,635.533,-2625.486,5.925,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1231,646.765,-2625.486,5.925,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1231,657.651,-2625.486,5.925,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1231,674.515,-2625.486,5.925,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1231,684.426,-2625.486,5.925,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(6965,473.340,-2595.912,6.485,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,624.863,-2507.199,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,624.863,-2518.087,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,624.864,-2544.962,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,624.864,-2556.396,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,624.864,-2568.155,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,641.708,-2598.050,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,641.708,-2586.798,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,641.708,-2507.199,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,641.708,-2518.087,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,641.708,-2544.962,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,641.708,-2556.396,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,641.708,-2568.155,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,624.863,-2586.798,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,624.863,-2598.050,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(642,661.177,-2483.835,2.006,352.004,357.980,359.718);
	tmpobjid = CreateDynamicObject(642,632.781,-2489.811,2.753,352.001,357.978,359.714);
	tmpobjid = CreateDynamicObject(642,601.697,-2486.543,2.354,352.001,357.978,359.714);
	tmpobjid = CreateDynamicObject(642,574.116,-2491.103,2.903,352.001,357.978,359.714);
	tmpobjid = CreateDynamicObject(642,482.067,-2493.665,3.436,352.001,357.978,359.714);
	tmpobjid = CreateDynamicObject(11489,581.443,-2631.449,3.197,0.000,0.000,229.998);
	tmpobjid = CreateDynamicObject(11489,548.170,-2631.343,3.197,0.000,0.000,129.995);
	tmpobjid = CreateDynamicObject(1231,558.465,-2632.552,5.925,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1231,558.465,-2625.062,5.925,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(13714,671.304,-2699.201,15.633,0.000,0.000,169.996);
	tmpobjid = CreateDynamicObject(3934,565.033,-2652.193,51.185,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(973,568.867,-2505.002,4.038,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(973,559.502,-2505.000,4.038,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(973,633.901,-2504.674,4.038,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(973,630.747,-2504.667,4.038,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(973,502.462,-2504.493,3.871,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(973,687.002,-2618.222,4.034,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(973,442.244,-2556.949,4.034,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(973,687.010,-2613.679,4.034,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(973,442.246,-2566.333,4.034,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(973,442.247,-2575.707,4.034,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(973,442.246,-2621.503,4.034,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(973,442.246,-2612.143,4.034,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(973,442.248,-2602.767,4.034,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(973,442.248,-2585.054,4.034,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(973,442.239,-2590.305,4.034,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(619,662.049,-2631.813,3.055,0.000,0.000,241.490);
	tmpobjid = CreateDynamicObject(619,519.364,-2632.288,3.055,0.000,0.000,241.490);
	tmpobjid = CreateDynamicObject(619,468.083,-2632.122,3.223,0.000,0.000,241.490);
	tmpobjid = CreateDynamicObject(1368,468.651,-2586.303,3.884,0.000,0.000,205.999);
	tmpobjid = CreateDynamicObject(1368,477.851,-2586.375,3.884,0.000,0.000,153.995);
	tmpobjid = CreateDynamicObject(1368,478.026,-2605.533,3.887,0.000,0.000,25.993);
	tmpobjid = CreateDynamicObject(1368,468.790,-2605.489,3.882,0.000,0.000,333.989);
	tmpobjid = CreateDynamicObject(19454,500.213,-2565.025,3.121,0.000,90.000,0.000);
	tmpobjid = CreateDynamicObject(19454,500.213,-2555.399,3.121,0.000,90.000,0.000);
	tmpobjid = CreateDynamicObject(19454,500.213,-2545.787,3.121,0.000,90.000,0.000);
	tmpobjid = CreateDynamicObject(19454,500.213,-2536.204,3.121,0.000,90.000,0.000);
	tmpobjid = CreateDynamicObject(19454,500.213,-2526.637,3.121,0.000,90.000,0.000);
	tmpobjid = CreateDynamicObject(19454,500.213,-2517.011,3.121,0.000,90.000,0.000);
	tmpobjid = CreateDynamicObject(19454,500.184,-2511.091,3.125,0.000,90.000,0.000);
	tmpobjid = CreateDynamicObject(6965,473.350,-2595.912,6.827,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,475.394,-2607.159,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1231,475.558,-2585.062,5.927,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1368,473.294,-2585.208,3.884,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(1368,473.152,-2606.724,3.884,0.000,0.000,359.994);
	tmpobjid = CreateDynamicObject(1291,456.476,-2563.491,3.694,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1291,484.835,-2563.416,3.694,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1291,505.118,-2595.736,3.694,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1291,504.798,-2515.913,3.694,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1291,576.135,-2516.034,3.694,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1291,576.280,-2595.794,3.694,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1291,641.689,-2595.886,3.694,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1291,641.598,-2516.146,3.694,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1291,675.853,-2625.370,3.694,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(1291,596.203,-2625.283,3.694,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(1291,533.192,-2625.104,3.694,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(1291,453.579,-2625.020,3.694,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(1231,571.117,-2625.061,5.925,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1231,571.117,-2632.551,5.925,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1368,505.585,-2600.250,3.888,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1368,505.598,-2604.112,3.888,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1368,505.664,-2558.802,3.888,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1368,505.648,-2562.479,3.888,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1368,505.674,-2565.977,3.888,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1368,505.470,-2520.121,3.888,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1368,505.475,-2524.308,3.888,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1368,576.870,-2520.487,3.888,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1368,576.869,-2524.885,3.888,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1368,576.510,-2547.431,3.888,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1368,576.559,-2550.733,3.888,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1368,576.594,-2553.995,3.888,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1368,576.843,-2600.712,3.888,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1368,576.778,-2604.592,3.888,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1368,642.096,-2600.551,3.888,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1368,642.145,-2604.405,3.888,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1368,641.872,-2558.430,3.888,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1368,641.971,-2562.435,3.888,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1368,641.992,-2566.179,3.888,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1368,642.236,-2520.793,3.888,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1368,642.179,-2524.806,3.888,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1641,573.064,-2488.529,1.314,352.990,0.000,0.000);
	tmpobjid = CreateDynamicObject(1640,542.244,-2486.914,1.118,352.990,0.000,0.000);
	tmpobjid = CreateDynamicObject(1640,480.291,-2491.697,1.697,352.990,0.000,0.000);
	tmpobjid = CreateDynamicObject(3660,488.644,-2569.156,4.848,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(3660,469.087,-2569.157,4.852,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(3660,454.966,-2569.156,4.852,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(1641,670.872,-2485.842,0.964,352.990,0.000,0.000);
	tmpobjid = CreateDynamicObject(1641,544.487,-2491.019,1.600,352.990,0.000,0.000);
	tmpobjid = CreateDynamicObject(3660,497.729,-2560.055,4.848,0.000,0.000,269.994);
	tmpobjid = CreateDynamicObject(3660,497.731,-2540.423,4.848,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,497.735,-2520.788,4.848,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,497.734,-2516.084,4.848,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,446.408,-2579.638,4.848,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,446.404,-2599.260,4.848,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,446.403,-2611.960,4.848,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,454.950,-2620.518,4.848,0.000,0.000,359.989);
	tmpobjid = CreateDynamicObject(3660,474.584,-2620.521,4.848,0.000,0.000,359.983);
	tmpobjid = CreateDynamicObject(3660,494.209,-2620.527,4.848,0.000,0.000,359.983);
	tmpobjid = CreateDynamicObject(3660,513.823,-2620.531,4.848,0.000,0.000,359.983);
	tmpobjid = CreateDynamicObject(3660,533.455,-2620.535,4.848,0.000,0.000,359.983);
	tmpobjid = CreateDynamicObject(3660,549.615,-2620.538,4.848,0.000,0.000,359.983);
	tmpobjid = CreateDynamicObject(3660,579.931,-2620.538,4.848,0.000,0.000,359.983);
	tmpobjid = CreateDynamicObject(3660,599.435,-2620.542,4.848,0.000,0.000,359.983);
	tmpobjid = CreateDynamicObject(3660,619.070,-2620.547,4.848,0.000,0.000,359.983);
	tmpobjid = CreateDynamicObject(3660,638.703,-2620.552,4.848,0.000,0.000,359.983);
	tmpobjid = CreateDynamicObject(3660,658.335,-2620.556,4.848,0.000,0.000,359.983);
	tmpobjid = CreateDynamicObject(3660,677.028,-2620.559,4.844,0.000,0.000,359.983);
	tmpobjid = CreateDynamicObject(3660,558.734,-2515.227,4.848,0.000,0.000,269.994);
	tmpobjid = CreateDynamicObject(3660,558.732,-2534.858,4.848,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,558.729,-2554.490,4.848,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,558.728,-2574.127,4.848,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,558.726,-2593.745,4.848,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,558.723,-2602.304,4.844,0.000,0.000,269.994);
	tmpobjid = CreateDynamicObject(3660,571.237,-2602.293,4.844,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,571.241,-2582.663,4.844,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,571.244,-2563.039,4.844,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,571.245,-2543.408,4.844,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,571.249,-2523.787,4.844,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,571.252,-2515.216,4.842,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,637.231,-2602.308,4.844,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,637.236,-2582.670,4.844,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,637.239,-2563.039,4.844,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,637.241,-2543.407,4.844,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,637.242,-2523.771,4.844,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,637.244,-2515.103,4.843,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,627.682,-2515.104,4.843,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,627.679,-2534.738,4.843,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,627.676,-2554.372,4.843,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,627.672,-2573.999,4.843,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,627.669,-2593.627,4.843,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,627.668,-2602.300,4.842,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,558.752,-2629.623,4.844,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,571.265,-2629.624,4.844,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(4199,599.627,-2602.128,5.307,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(3660,501.372,-2602.293,4.848,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,580.611,-2607.309,4.844,0.000,0.000,21.739);
	tmpobjid = CreateDynamicObject(3660,617.754,-2607.303,4.844,0.000,0.000,338.263);
	tmpobjid = CreateDynamicObject(3660,645.885,-2610.866,4.848,0.000,0.000,359.983);
	tmpobjid = CreateDynamicObject(3660,665.395,-2610.875,4.848,0.000,0.000,359.983);
	tmpobjid = CreateDynamicObject(3660,677.028,-2610.877,4.844,0.000,0.000,359.983);
	tmpobjid = CreateDynamicObject(3660,548.796,-2607.311,4.842,0.000,0.000,338.258);
	tmpobjid = CreateDynamicObject(3660,510.743,-2607.304,4.844,0.000,0.000,21.736);
	tmpobjid = CreateDynamicObject(3660,501.372,-2580.111,4.848,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,501.376,-2560.474,4.848,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,501.380,-2540.843,4.848,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,501.381,-2521.219,4.848,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3660,501.384,-2516.083,4.847,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3506,558.236,-2555.349,3.197,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,627.348,-2530.298,3.197,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,627.348,-2506.512,3.197,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,558.690,-2506.512,3.197,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,558.471,-2530.297,3.197,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,571.046,-2555.348,3.197,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,558.482,-2581.639,3.197,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,571.046,-2581.639,3.197,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,627.348,-2581.639,3.197,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,627.348,-2555.348,3.197,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,571.046,-2530.297,3.197,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,571.046,-2506.512,3.197,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,637.067,-2581.639,3.197,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,637.067,-2555.348,3.197,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,637.067,-2530.297,3.197,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,637.067,-2506.512,3.197,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,445.854,-2605.572,3.459,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,446.134,-2586.761,3.459,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,460.845,-2568.920,3.459,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,474.239,-2568.979,3.459,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,488.141,-2568.699,3.459,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,474.113,-2620.822,3.459,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,558.419,-2620.822,3.459,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,570.911,-2620.822,3.459,0.000,0.000,340.000);
	tmpobjid = CreateDynamicObject(3506,594.038,-2620.822,3.459,0.000,0.000,339.999);
	tmpobjid = CreateDynamicObject(3506,605.304,-2620.822,3.459,0.000,0.000,339.999);
	tmpobjid = CreateDynamicObject(3506,617.403,-2620.822,3.459,0.000,0.000,339.999);
	tmpobjid = CreateDynamicObject(3506,630.237,-2620.822,3.459,0.000,0.000,339.999);
	tmpobjid = CreateDynamicObject(3506,641.732,-2620.822,3.459,0.000,0.000,339.999);
	tmpobjid = CreateDynamicObject(3506,652.551,-2620.822,3.459,0.000,0.000,339.999);
	tmpobjid = CreateDynamicObject(3506,670.903,-2620.822,3.459,0.000,0.000,339.999);
	tmpobjid = CreateDynamicObject(3506,558.244,-2611.030,3.459,0.000,0.000,339.999);
	tmpobjid = CreateDynamicObject(3506,570.903,-2611.049,3.459,0.000,0.000,339.999);
	tmpobjid = CreateDynamicObject(3506,627.424,-2611.249,3.459,0.000,0.000,339.999);
	tmpobjid = CreateDynamicObject(3506,637.013,-2611.349,3.459,0.000,0.000,339.999);
	tmpobjid = CreateDynamicObject(3506,653.715,-2611.333,3.459,0.000,0.000,339.999);
	tmpobjid = CreateDynamicObject(3506,671.117,-2611.226,3.459,0.000,0.000,339.999);
	tmpobjid = CreateDynamicObject(3506,501.100,-2611.224,3.459,0.000,0.000,339.999);
	tmpobjid = CreateDynamicObject(3506,501.098,-2586.868,3.459,0.000,0.000,339.999);
	tmpobjid = CreateDynamicObject(3506,501.179,-2574.406,3.459,0.000,0.000,339.999);
	tmpobjid = CreateDynamicObject(3506,542.223,-2620.822,3.459,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,527.638,-2620.822,3.459,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,510.566,-2620.822,3.459,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,497.958,-2620.822,3.459,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,486.403,-2620.822,3.459,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,462.290,-2620.822,3.459,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,446.238,-2620.822,3.459,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,449.626,-2684.745,3.201,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,476.686,-2684.745,3.201,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,487.945,-2684.745,3.201,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,500.502,-2684.745,3.201,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,511.757,-2684.745,3.201,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,528.661,-2684.745,3.201,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,539.982,-2684.745,3.201,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,591.192,-2684.745,3.201,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,603.151,-2684.745,3.201,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,619.622,-2684.745,3.201,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,630.609,-2684.745,3.201,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,643.070,-2684.745,3.201,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,654.062,-2684.745,3.201,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,670.663,-2684.745,3.201,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3506,682.390,-2684.745,3.201,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1642,484.535,-2491.034,1.605,352.990,0.000,0.000);
	tmpobjid = CreateDynamicObject(622,647.994,-2487.740,0.694,0.000,0.000,29.998);
	tmpobjid = CreateDynamicObject(622,548.369,-2491.197,0.694,0.000,0.000,349.998);
	tmpobjid = CreateDynamicObject(622,472.776,-2496.702,0.694,0.000,0.000,69.996);



    //--------------------[Президентская] --------------------------------------
    //Map Exported with Texture Studio By: [uL]Pottus////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateObject(19377,-501.250,300.000,2000.000,0.000,90.000,0.000);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateObject(19377,-511.745,299.998,2000.000,0.000,90.000,0.000);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19461,-505.165,306.329,1999.339,324.000,0.000,180.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19397,-495.646,309.271,2001.836,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19377,-490.750,300.000,2000.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19461,-489.238,309.261,2001.836,0.000,0.000,89.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19377,-501.250,314.014,2003.411,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,-490.750,314.013,2003.499,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,-490.750,290.365,2000.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,-501.250,290.366,2000.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,-511.746,290.365,2000.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19380,-511.746,314.016,2008.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(18762,-496.893,309.690,2006.087,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-505.575,309.691,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(19377,-511.745,309.628,2000.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19461,-497.308,306.327,1999.340,323.992,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19461,-505.167,314.022,2001.836,0.000,0.000,359.989);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19397,-506.836,309.271,2001.836,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19377,-501.250,314.011,2003.500,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,-511.745,314.014,2003.499,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,-490.750,309.628,2000.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,-501.250,309.628,2000.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19461,-513.241,309.271,2001.836,0.000,0.000,89.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(18762,-521.362,309.688,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-485.183,309.696,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(19461,-513.241,309.281,2010.333,0.000,179.994,89.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19380,-501.244,314.016,2008.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19461,-503.610,309.284,2010.332,0.000,179.994,89.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19461,-493.979,309.285,2010.332,0.000,179.994,89.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19461,-484.352,309.285,2010.332,0.000,179.994,89.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19380,-511.745,299.998,2012.168,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-511.746,290.365,2012.168,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-511.745,309.628,2012.168,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-501.250,290.365,2012.168,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-501.250,299.998,2012.168,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-501.250,309.628,2012.168,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-490.750,299.998,2012.168,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-490.750,290.365,2012.168,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-490.750,309.628,2012.168,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19379,-516.906,290.367,2015.834,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19379,-516.906,299.998,2015.834,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19379,-516.906,309.628,2015.834,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19379,-485.587,300.000,2015.834,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19379,-485.587,290.368,2015.834,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19379,-485.587,309.628,2015.834,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19379,-512.177,285.639,2005.337,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19379,-502.547,285.638,2005.337,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19379,-492.917,285.637,2005.337,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19379,-483.285,285.636,2005.337,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19379,-512.177,285.639,2015.834,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19379,-502.547,285.638,2015.834,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19379,-492.917,285.637,2015.834,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19379,-483.285,285.636,2015.834,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19465,-501.250,331.913,2006.139,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(18762,-521.362,313.771,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-505.575,313.771,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-505.575,313.771,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-496.894,313.771,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-485.183,313.771,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(19464,-505.205,317.205,2006.136,0.000,0.000,180.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-497.265,317.200,2006.136,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-513.122,331.913,2006.136,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-495.324,331.917,2006.136,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-515.969,314.357,2006.136,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19377,-501.244,323.640,2003.500,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,-511.745,323.640,2003.500,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,-490.750,323.640,2003.500,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19465,-497.265,323.135,2006.139,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19465,-505.205,323.138,2006.139,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-497.265,329.071,2006.136,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-505.204,329.062,2006.136,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19377,-490.750,327.220,2003.498,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,-501.244,327.220,2003.498,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,-511.745,327.220,2003.498,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19465,-501.250,314.357,2006.139,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-495.313,314.357,2006.136,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-507.186,314.358,2006.136,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-492.471,334.757,2006.136,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-510.026,334.755,2001.041,0.000,180.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-492.470,340.690,2006.136,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-510.026,334.755,2006.136,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-507.186,331.913,2006.136,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19380,-490.750,314.016,2008.668,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-490.750,323.640,2008.668,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-501.244,323.640,2008.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-511.745,323.640,2008.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-490.750,333.265,2008.668,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-501.244,333.265,2008.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-511.745,333.265,2008.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-511.745,342.893,2008.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-501.244,342.893,2008.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-490.750,342.893,2008.668,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19461,-516.892,314.175,2001.836,0.000,0.000,359.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19377,-511.745,319.259,2000.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,-501.250,319.260,2000.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,-490.750,319.260,2000.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19461,-512.164,318.903,2001.836,0.000,0.000,89.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19461,-502.536,318.903,2001.836,0.000,0.000,89.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19461,-492.907,318.902,2001.836,0.000,0.000,89.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19461,-483.278,318.903,2001.836,0.000,0.000,89.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19461,-497.298,314.188,2001.836,0.000,0.000,359.989);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19461,-485.596,314.180,2001.836,0.000,0.000,359.989);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19380,-510.503,314.175,2003.411,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-520.994,314.024,2003.411,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-491.967,314.178,2003.411,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-481.475,314.173,2003.411,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19464,-489.377,331.913,2006.136,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-515.969,329.071,2006.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-486.535,329.070,2006.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-486.535,323.135,2006.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-486.535,317.200,2006.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-515.969,317.200,2006.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-489.376,314.357,2006.136,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-515.969,323.135,2006.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-513.122,314.358,2006.136,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19446,-496.398,333.779,2003.498,0.000,90.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-506.028,333.778,2003.498,0.000,90.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-498.790,338.506,1999.418,325.500,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-503.687,338.506,1999.418,325.497,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-496.397,336.329,2002.829,0.000,90.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-506.028,336.329,2002.829,0.000,90.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-498.790,341.059,1998.749,325.497,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-503.690,341.059,1998.750,325.497,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-496.398,338.877,2002.162,0.000,90.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-506.028,338.876,2002.162,0.000,90.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-503.690,343.605,1998.082,325.497,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-498.789,343.605,1998.082,325.497,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-496.398,341.429,2001.498,0.000,90.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-506.028,341.429,2001.498,0.000,90.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-498.789,346.162,1997.425,325.497,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-503.690,346.162,1997.425,325.497,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-496.398,344.040,2000.836,0.000,90.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-506.028,344.039,2000.836,0.000,90.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-496.400,347.537,2000.836,0.000,90.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-506.033,347.538,2000.836,0.000,90.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-493.884,335.441,2001.837,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-508.586,335.442,2001.837,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-508.592,337.993,2001.167,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-493.888,337.991,2001.167,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-493.891,340.540,2000.500,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-508.596,340.541,2000.500,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-493.885,343.092,1999.836,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-508.591,343.092,1999.836,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-501.235,349.196,1999.836,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-506.036,351.035,2000.836,0.000,90.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-496.401,351.034,2000.836,0.000,90.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-501.235,350.863,2001.498,0.000,90.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-509.028,349.196,1997.425,325.497,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19446,-493.437,349.196,1997.425,325.491,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14710, "vgshm3int2", "HSV_3carpet2", -1);
	tmpobjid = CreateDynamicObject(19464,-510.026,340.690,2006.136,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-492.470,340.689,2001.041,0.000,179.994,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-510.025,340.689,2001.041,0.000,179.994,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-492.470,334.755,2001.041,0.000,179.994,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-492.470,346.622,2001.041,0.000,179.994,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-510.023,346.626,2001.041,0.000,179.994,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-510.023,352.559,2001.041,0.000,179.994,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-492.468,352.557,2001.041,0.000,179.994,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-492.470,346.622,2006.136,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-492.470,352.557,2006.136,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-510.023,352.556,2006.136,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-510.023,346.622,2006.136,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-495.313,352.738,2001.041,0.000,179.994,269.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-501.250,352.737,2001.041,0.000,179.994,269.989);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-507.186,352.737,2001.041,0.000,179.994,269.989);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-507.186,352.737,2006.136,0.000,0.000,89.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-501.250,352.737,2006.136,0.000,0.000,89.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-495.313,352.737,2006.136,0.000,0.000,89.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19380,-490.748,352.529,2008.668,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-501.244,352.529,2008.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-511.745,352.529,2008.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(18762,-510.929,299.998,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-510.929,299.998,2001.087,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-510.929,299.998,2011.078,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-510.929,290.367,2001.087,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-510.929,290.367,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-510.929,290.367,2011.078,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-491.435,299.998,2001.087,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-491.435,299.998,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-491.435,299.998,2011.078,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-491.435,290.367,2001.087,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-491.436,290.367,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-491.435,290.367,2011.078,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(19359,-488.410,285.642,2002.609,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10041, "archybuild10", "bank_sfe2", -1);
	tmpobjid = CreateDynamicObject(19359,-488.409,285.642,2006.104,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10041, "archybuild10", "bank_sfe2", -1);
	tmpobjid = CreateDynamicObject(19359,-488.408,285.643,2009.598,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10041, "archybuild10", "bank_sfe2", -1);
	tmpobjid = CreateDynamicObject(19359,-494.394,285.643,2009.598,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10041, "archybuild10", "bank_sfe2", -1);
	tmpobjid = CreateDynamicObject(19359,-494.393,285.642,2002.609,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10041, "archybuild10", "bank_sfe2", -1);
	tmpobjid = CreateDynamicObject(19359,-494.393,285.643,2006.104,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10041, "archybuild10", "bank_sfe2", -1);
	tmpobjid = CreateDynamicObject(19359,-513.984,285.643,2009.598,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10041, "archybuild10", "bank_sfe2", -1);
	tmpobjid = CreateDynamicObject(19359,-513.983,285.643,2002.609,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10041, "archybuild10", "bank_sfe2", -1);
	tmpobjid = CreateDynamicObject(19359,-513.983,285.643,2006.104,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10041, "archybuild10", "bank_sfe2", -1);
	tmpobjid = CreateDynamicObject(19359,-507.854,285.643,2009.598,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10041, "archybuild10", "bank_sfe2", -1);
	tmpobjid = CreateDynamicObject(19359,-507.853,285.643,2002.609,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10041, "archybuild10", "bank_sfe2", -1);
	tmpobjid = CreateDynamicObject(19359,-507.852,285.643,2006.104,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10041, "archybuild10", "bank_sfe2", -1);
	tmpobjid = CreateDynamicObject(19359,-501.251,285.643,2006.104,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10041, "archybuild10", "bank_sfe2", -1);
	tmpobjid = CreateDynamicObject(19359,-501.250,285.642,2009.598,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10041, "archybuild10", "bank_sfe2", -1);
	tmpobjid = CreateDynamicObject(18762,-504.367,295.658,2011.078,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-497.747,295.658,2001.087,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-504.366,295.658,2001.087,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-497.747,295.658,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-497.747,295.658,2011.078,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-504.366,295.658,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(970,-508.135,309.213,2004.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3820, "boxhses_sfsx", "ws_ irongate_white", 0);
	tmpobjid = CreateDynamicObject(970,-512.234,309.216,2004.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3820, "boxhses_sfsx", "ws_ irongate_white", 0);
	tmpobjid = CreateDynamicObject(970,-515.630,309.231,2004.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3820, "boxhses_sfsx", "ws_ irongate_white", 0);
	tmpobjid = CreateDynamicObject(970,-494.348,309.209,2004.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3820, "boxhses_sfsx", "ws_ irongate_white", 0);
	tmpobjid = CreateDynamicObject(970,-490.190,309.212,2004.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3820, "boxhses_sfsx", "ws_ irongate_white", 0);
	tmpobjid = CreateDynamicObject(970,-487.759,309.209,2004.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3820, "boxhses_sfsx", "ws_ irongate_white", 0);
	tmpobjid = CreateDynamicObject(19461,-485.595,300.000,2001.836,0.000,0.000,359.983);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19461,-485.595,290.368,2001.836,0.000,0.000,359.983);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19461,-485.595,309.628,2010.332,0.000,179.994,359.983);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19461,-485.595,290.368,2010.332,0.000,179.994,359.983);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19461,-485.595,300.000,2010.332,0.000,179.994,359.978);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19461,-485.595,309.628,2001.836,0.000,0.000,359.983);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19461,-516.888,309.628,2001.836,0.000,0.000,359.983);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19461,-516.888,300.000,2001.836,0.000,0.000,359.989);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19461,-516.888,290.368,2001.836,0.000,0.000,359.989);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19461,-516.888,290.368,2010.332,0.000,179.994,359.983);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19461,-516.888,300.000,2010.332,0.000,179.994,359.983);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19461,-516.888,309.628,2010.332,0.000,179.994,359.983);
	SetDynamicObjectMaterial(tmpobjid, 0, 7420, "vgnglfcrse1", "hotel2base2_256", -1);
	tmpobjid = CreateDynamicObject(19377,-480.429,309.628,2003.499,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,-480.429,300.000,2003.499,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,-480.429,290.368,2003.499,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19464,-483.450,314.358,2006.136,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(18762,-485.183,299.998,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-485.182,290.367,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-480.985,313.734,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-480.985,309.695,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-480.985,299.998,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-480.985,290.367,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(19464,-521.981,301.203,2006.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19465,-521.981,295.270,2006.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-521.980,289.337,2006.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-521.981,283.406,2006.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19380,-480.429,309.628,2008.667,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-480.429,300.000,2008.668,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-480.429,290.368,2008.668,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19377,-469.927,290.367,2003.499,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19464,-521.981,307.136,2006.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-521.981,313.062,2006.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19377,-469.927,300.000,2003.499,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19464,-468.744,295.270,2006.136,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-468.744,289.337,2006.136,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-471.581,286.497,2006.136,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-477.519,286.497,2006.136,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19380,-469.927,290.368,2008.668,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-469.927,300.000,2008.668,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(970,-516.818,307.128,2004.136,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3820, "boxhses_sfsx", "ws_ irongate_white", 0);
	tmpobjid = CreateDynamicObject(970,-516.818,302.960,2004.136,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3820, "boxhses_sfsx", "ws_ irongate_white", 0);
	tmpobjid = CreateDynamicObject(970,-516.818,298.783,2004.136,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3820, "boxhses_sfsx", "ws_ irongate_white", 0);
	tmpobjid = CreateDynamicObject(970,-516.818,294.606,2004.136,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3820, "boxhses_sfsx", "ws_ irongate_white", 0);
	tmpobjid = CreateDynamicObject(970,-516.818,290.430,2004.136,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3820, "boxhses_sfsx", "ws_ irongate_white", 0);
	tmpobjid = CreateDynamicObject(970,-516.818,286.253,2004.136,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3820, "boxhses_sfsx", "ws_ irongate_white", 0);
	tmpobjid = CreateDynamicObject(19359,-471.091,286.545,2006.104,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10041, "archybuild10", "bank_sfe2", -1);
	tmpobjid = CreateDynamicObject(19359,-478.390,286.542,2006.104,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10041, "archybuild10", "bank_sfe2", -1);
	tmpobjid = CreateDynamicObject(19359,-474.742,286.538,2006.104,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10041, "archybuild10", "bank_sfe2", -1);
	tmpobjid = CreateDynamicObject(19377,-522.054,309.628,2003.503,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,-522.054,300.000,2003.499,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,-522.054,290.368,2003.499,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19379,-521.804,285.638,2005.337,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19380,-522.054,309.628,2008.667,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-522.054,300.000,2008.668,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-522.054,290.368,2008.668,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(18762,-521.362,299.998,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-521.362,290.367,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(19464,-521.903,314.358,2006.136,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(18762,-517.299,313.771,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-517.299,309.688,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-517.299,299.998,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-517.299,290.367,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(19464,-480.611,313.062,2006.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-480.611,307.136,2006.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-480.611,301.202,2006.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19465,-480.610,295.270,2006.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-480.610,289.337,2006.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-480.610,283.405,2006.136,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19377,-532.554,300.000,2003.499,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,-532.554,290.368,2003.499,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19464,-525.072,286.497,2006.136,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-531.002,297.161,2006.136,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-533.844,289.337,2006.136,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-533.844,295.270,2006.136,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-525.072,297.161,2006.136,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19464,-531.002,286.496,2006.136,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ab_kitchunit2", -1);
	tmpobjid = CreateDynamicObject(19380,-532.554,300.000,2008.668,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19380,-532.554,290.368,2008.668,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14526, "sweetsmain", "ah_whitpanelceil", -1);
	tmpobjid = CreateDynamicObject(19359,-524.174,286.545,2006.104,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10041, "archybuild10", "bank_sfe2", -1);
	tmpobjid = CreateDynamicObject(19359,-531.679,286.537,2006.104,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10041, "archybuild10", "bank_sfe2", -1);
	tmpobjid = CreateDynamicObject(19359,-527.971,286.536,2006.104,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10041, "archybuild10", "bank_sfe2", -1);
	tmpobjid = CreateDynamicObject(19395,-506.837,309.284,2001.836,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8486, "ballys02", "walltiles_128", -1);
	tmpobjid = CreateDynamicObject(19459,-513.254,309.284,2001.836,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8486, "ballys02", "walltiles_128", -1);
	tmpobjid = CreateDynamicObject(19459,-513.545,314.021,2001.836,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8486, "ballys02", "walltiles_128", -1);
	tmpobjid = CreateDynamicObject(19459,-505.176,314.189,2001.836,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8486, "ballys02", "walltiles_128", -1);
	tmpobjid = CreateDynamicObject(19459,-510.075,318.891,2001.836,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8486, "ballys02", "walltiles_128", -1);
	tmpobjid = CreateDynamicObject(970,-485.663,307.128,2004.136,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3820, "boxhses_sfsx", "ws_ irongate_white", 0);
	tmpobjid = CreateDynamicObject(970,-485.665,302.960,2004.136,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3820, "boxhses_sfsx", "ws_ irongate_white", 0);
	tmpobjid = CreateDynamicObject(970,-485.665,298.783,2004.136,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3820, "boxhses_sfsx", "ws_ irongate_white", 0);
	tmpobjid = CreateDynamicObject(970,-485.665,294.606,2004.136,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3820, "boxhses_sfsx", "ws_ irongate_white", 0);
	tmpobjid = CreateDynamicObject(970,-485.664,290.430,2004.136,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3820, "boxhses_sfsx", "ws_ irongate_white", 0);
	tmpobjid = CreateDynamicObject(970,-485.664,286.253,2004.136,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3820, "boxhses_sfsx", "ws_ irongate_white", 0);
	tmpobjid = CreateDynamicObject(1502,-521.905,294.505,2003.579,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3603, "bevmans01_la", "lasbevcit7", 0);
	tmpobjid = CreateDynamicObject(1502,-480.641,294.502,2003.578,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3603, "bevmans01_la", "lasbevcit7", 0);
	tmpobjid = CreateDynamicObject(1502,-500.484,314.325,2003.583,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 1, 3603, "bevmans01_la", "lasbevcit7", 0);
	tmpobjid = CreateDynamicObject(1502,-506.050,309.289,2000.079,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 1, 3603, "bevmans01_la", "lasbevcit7", 0);
	tmpobjid = CreateDynamicObject(1502,-494.860,309.286,2000.079,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 1, 3603, "bevmans01_la", "lasbevcit7", 0);
	tmpobjid = CreateDynamicObject(19172,-513.949,314.229,2005.329,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 2266, "picture_frame", "CJ_PAINTING14", -1);
	tmpobjid = CreateDynamicObject(19172,-508.878,314.239,2005.329,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 2266, "picture_frame", "CJ_PAINTING11", -1);
	tmpobjid = CreateDynamicObject(19172,-493.697,314.230,2005.329,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 2266, "picture_frame", "CJ_PAINTING28", -1);
	tmpobjid = CreateDynamicObject(19172,-488.295,314.232,2005.329,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 2266, "picture_frame", "CJ_PAINTING30", -1);
	tmpobjid = CreateDynamicObject(19459,-506.851,318.292,2001.836,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8486, "ballys02", "walltiles_128", -1);
	tmpobjid = CreateDynamicObject(1492,-506.777,313.790,2000.162,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	tmpobjid = CreateDynamicObject(1492,-508.450,313.790,2000.162,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	tmpobjid = CreateDynamicObject(19459,-508.526,318.292,2001.836,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8486, "ballys02", "walltiles_128", -1);
	tmpobjid = CreateDynamicObject(1492,-510.123,313.790,2000.162,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	tmpobjid = CreateDynamicObject(19459,-510.199,318.292,2001.836,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8486, "ballys02", "walltiles_128", -1);
	tmpobjid = CreateDynamicObject(1492,-511.795,313.790,2000.162,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	tmpobjid = CreateDynamicObject(19459,-511.869,318.292,2001.836,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8486, "ballys02", "walltiles_128", -1);
	tmpobjid = CreateDynamicObject(1492,-513.469,313.790,2000.162,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	tmpobjid = CreateDynamicObject(19452,-501.222,290.527,2000.009,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14534, "ab_wooziea", "ab_tileDiamond", -1);
	tmpobjid = CreateDynamicObject(19452,-501.222,300.160,2000.009,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14534, "ab_wooziea", "ab_tileDiamond", -1);
	tmpobjid = CreateDynamicObject(19452,-501.190,314.020,2003.505,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14534, "ab_wooziea", "ab_tileDiamond", -1);
	tmpobjid = CreateDynamicObject(19452,-501.190,323.650,2003.505,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14534, "ab_wooziea", "ab_tileDiamond", -1);
	tmpobjid = CreateDynamicObject(19452,-501.184,327.217,2003.501,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14534, "ab_wooziea", "ab_tileDiamond", -1);
	tmpobjid = CreateDynamicObject(1492,-495.692,313.790,2000.162,0.000,0.000,180.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	tmpobjid = CreateDynamicObject(19459,-497.287,314.184,2001.836,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8486, "ballys02", "walltiles_128", -1);
	tmpobjid = CreateDynamicObject(19459,-492.385,318.899,2001.836,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8486, "ballys02", "walltiles_128", -1);
	tmpobjid = CreateDynamicObject(19459,-495.619,318.292,2001.836,0.000,0.000,180.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8486, "ballys02", "walltiles_128", -1);
	tmpobjid = CreateDynamicObject(1492,-494.018,313.790,2000.162,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	tmpobjid = CreateDynamicObject(19459,-493.944,318.292,2001.836,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 8486, "ballys02", "walltiles_128", -1);
	tmpobjid = CreateDynamicObject(1492,-492.346,313.790,2000.162,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	tmpobjid = CreateDynamicObject(19459,-492.270,318.292,2001.836,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 8486, "ballys02", "walltiles_128", -1);
	tmpobjid = CreateDynamicObject(1492,-490.671,313.790,2000.162,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	tmpobjid = CreateDynamicObject(19459,-490.596,318.292,2001.836,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 8486, "ballys02", "walltiles_128", -1);
	tmpobjid = CreateDynamicObject(1492,-488.997,313.790,2000.162,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 1, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 14789, "ab_sfgymmain", "ab_panelWall1", 0);
	tmpobjid = CreateDynamicObject(19459,-488.929,314.179,2001.836,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 8486, "ballys02", "walltiles_128", -1);
	tmpobjid = CreateDynamicObject(19459,-489.222,309.282,2001.836,0.000,0.000,89.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 8486, "ballys02", "walltiles_128", -1);
	tmpobjid = CreateDynamicObject(19395,-495.645,309.282,2001.836,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8486, "ballys02", "walltiles_128", -1);
	tmpobjid = CreateDynamicObject(18762,-505.825,319.372,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-513.284,326.922,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-505.833,326.923,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(18762,-513.284,319.434,2006.084,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15048, "labigsave", "AH_fancyceil", -1);
	tmpobjid = CreateDynamicObject(1502,-505.127,322.368,2003.578,0.000,0.000,89.994);
	SetDynamicObjectMaterial(tmpobjid, 1, 3603, "bevmans01_la", "lasbevcit7", 0);
	tmpobjid = CreateDynamicObject(19353,-491.762,331.872,2006.168,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12853, "cunte_gas01", "starspangban1_256", -1);
	tmpobjid = CreateDynamicObject(1502,-497.295,322.369,2003.578,0.000,0.000,89.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 3603, "bevmans01_la", "lasbevcit7", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3603, "bevmans01_la", "lasbevcit7", 0);
	tmpobjid = CreateDynamicObject(1502,-500.485,331.878,2003.583,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 1, 3603, "bevmans01_la", "lasbevcit7", 0);
	tmpobjid = CreateDynamicObject(19445,-475.669,297.016,2002.682,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14788, "ab_sfgymbits01", "lockers", 0);
	tmpobjid = CreateDynamicObject(19445,-466.037,297.016,2002.682,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14788, "ab_sfgymbits01", "lockers", 0);
	tmpobjid = CreateDynamicObject(19445,-475.669,297.016,2009.530,0.000,180.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "ab_wood01", 0);
	tmpobjid = CreateDynamicObject(19445,-466.044,297.016,2009.530,0.000,179.994,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "ab_wood01", 0);
	tmpobjid = CreateDynamicObject(19445,-480.397,301.742,2005.334,0.000,0.000,180.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14788, "ab_sfgymbits01", "lockers", 0);
	tmpobjid = CreateDynamicObject(19445,-480.399,301.740,2006.837,0.000,180.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "ab_wood01", 0);
	tmpobjid = CreateDynamicObject(19445,-468.960,301.743,2005.334,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14788, "ab_sfgymbits01", "lockers", 0);
	tmpobjid = CreateDynamicObject(19445,-468.957,301.743,2006.837,0.000,179.994,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14788, "ab_sfgymbits01", "lockers", 0);
	tmpobjid = CreateDynamicObject(19445,-475.697,301.890,2005.334,0.000,0.000,269.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 3925, "weemap", "skyclouds", 0);
	tmpobjid = CreateDynamicObject(19445,-466.069,301.889,2005.334,0.000,0.000,269.989);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "ab_wood01", 0);
	tmpobjid = CreateDynamicObject(19445,-475.490,301.894,2006.837,0.000,179.994,269.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 3925, "weemap", "skyclouds", 0);
	tmpobjid = CreateDynamicObject(19445,-465.865,301.894,2006.837,0.000,179.994,269.989);
	SetDynamicObjectMaterial(tmpobjid, 0, 3925, "weemap", "skyclouds", 0);
	tmpobjid = CreateDynamicObject(19375,-475.283,301.747,2004.340,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14788, "ab_sfgymbits01", "lockers", 0);
	tmpobjid = CreateDynamicObject(19375,-464.786,301.917,2004.340,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14788, "ab_sfgymbits01", "lockers", 0);
	tmpobjid = CreateDynamicObject(19375,-464.785,301.917,2007.869,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14788, "ab_sfgymbits01", "lockers", 0);
	tmpobjid = CreateDynamicObject(19375,-475.283,301.746,2007.869,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14788, "ab_sfgymbits01", "lockers", 0);
	tmpobjid = CreateDynamicObject(953,-474.304,300.665,2005.326,8.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14788, "ab_sfgymbits01", "lockers", 0);
	tmpobjid = CreateDynamicObject(19353,-531.632,297.121,2005.936,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12853, "cunte_gas01", "starspangban1_256", -1);
	tmpobjid = CreateDynamicObject(19353,-524.247,297.117,2005.936,90.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12853, "cunte_gas01", "starspangban1_256", -1);
	tmpobjid = CreateDynamicObject(19360,-501.199,285.668,2001.835,0.000,0.000,-90.199);
	SetDynamicObjectMaterial(tmpobjid, 0, 9524, "blokmodb", "lombard_build5_3", -1);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(14394,-501.250,305.927,2000.889,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(14394,-501.250,308.159,2002.509,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(14387,-501.235,336.647,2002.593,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(14387,-501.235,339.197,2001.926,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(14387,-501.235,341.742,2001.256,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(14387,-501.235,344.316,2000.593,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(14387,-507.170,351.622,2000.587,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(14387,-495.300,351.640,2000.587,0.000,0.000,359.994);
	tmpobjid = CreateDynamicObject(2173,-496.055,342.658,2001.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-509.424,342.660,2001.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-494.095,342.658,2001.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-509.424,334.957,2003.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-498.019,340.078,2002.249,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-498.019,337.529,2002.916,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-496.055,340.078,2002.249,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-496.055,337.529,2002.916,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-496.055,334.956,2003.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-494.095,340.078,2002.249,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-494.095,334.956,2003.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-498.018,342.657,2001.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-507.460,342.658,2001.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-505.497,342.658,2001.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-505.497,340.078,2002.249,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-505.497,337.529,2002.916,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-498.018,334.956,2003.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-507.460,340.078,2002.249,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-507.460,337.529,2002.916,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-505.496,334.956,2003.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-509.424,340.078,2002.249,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-509.424,337.529,2002.916,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-507.460,334.956,2003.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-502.898,349.690,2001.583,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(1722,-497.350,340.934,2001.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2205,-500.601,349.696,2001.583,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2173,-498.647,349.679,2001.583,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(11245,-505.993,351.096,2006.917,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(11245,-502.833,351.096,2006.917,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(11245,-500.005,351.096,2006.917,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(11245,-496.872,351.096,2006.917,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1722,-495.657,340.899,2001.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-493.691,338.308,2002.249,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-493.663,341.013,2001.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2173,-494.094,337.529,2002.916,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-495.647,338.295,2002.249,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-497.572,338.325,2002.249,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-505.158,338.226,2002.249,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-506.966,338.216,2002.249,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-508.876,338.238,2002.249,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-508.858,335.632,2002.916,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-507.046,335.575,2002.916,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-505.011,335.623,2002.916,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-504.949,332.985,2003.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-507.118,332.958,2003.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-497.503,332.859,2003.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-509.057,332.876,2003.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-497.505,335.625,2002.916,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-495.518,332.871,2003.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-493.611,332.895,2003.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-495.479,335.597,2002.916,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-493.690,335.589,2002.916,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-507.079,340.735,2001.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-505.014,340.826,2001.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-508.930,340.778,2001.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1715,-503.514,351.144,2001.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1714,-501.346,351.187,2001.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1722,-501.292,296.928,2000.094,0.000,0.000,189.997);
	tmpobjid = CreateDynamicObject(2008,-505.821,325.097,2003.587,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2207,-502.128,295.188,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1239,-501.190,295.062,2000.477,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1726,-509.894,291.384,2000.086,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(1726,-511.944,298.979,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1726,-509.924,301.009,2000.086,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(1726,-511.902,289.332,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1726,-492.449,289.346,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1726,-492.454,298.984,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1726,-490.440,301.019,2000.086,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(1726,-490.416,291.381,2000.086,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(1808,-510.232,299.927,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1808,-510.252,290.338,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1808,-490.769,290.341,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1808,-490.752,299.972,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1808,-511.598,300.029,2000.086,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1808,-511.592,290.369,2000.086,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1808,-492.049,290.372,2000.086,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1808,-492.131,300.027,2000.086,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(11245,-505.480,308.692,2010.516,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(11245,-502.476,308.692,2010.516,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(11245,-499.639,308.692,2010.516,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(11245,-496.802,308.692,2010.516,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2206,-475.517,288.815,2003.584,0.000,0.000,359.989);
	tmpobjid = CreateDynamicObject(1714,-474.475,287.171,2003.584,0.000,0.000,200.000);
	tmpobjid = CreateDynamicObject(14455,-469.067,287.296,2005.256,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(14455,-533.556,291.635,2005.256,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1763,-472.888,291.811,2003.584,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1763,-475.950,290.536,2003.584,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1763,-475.067,293.049,2003.584,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2614,-468.920,289.483,2007.767,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2614,-480.441,289.441,2007.767,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2206,-528.786,288.816,2003.584,0.000,0.000,359.989);
	tmpobjid = CreateDynamicObject(2828,-475.322,288.976,2004.519,0.000,0.000,209.998);
	tmpobjid = CreateDynamicObject(2357,-527.883,291.408,2003.979,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1714,-527.895,287.085,2003.584,0.000,0.000,199.995);
	tmpobjid = CreateDynamicObject(14455,-480.341,291.641,2005.256,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(14455,-522.257,287.295,2005.256,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1715,-498.954,351.036,2001.583,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1715,-526.072,289.988,2003.584,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1715,-525.940,291.398,2003.584,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1715,-526.010,292.669,2003.584,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1715,-529.577,292.638,2003.584,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1715,-529.580,291.351,2003.584,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1715,-529.591,289.975,2003.584,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1715,-527.818,294.717,2003.584,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(14662,-510.126,311.131,2001.984,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(14662,-514.033,311.130,2001.985,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(14629,-509.615,302.830,2011.079,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1999,-506.763,314.989,2003.584,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2009,-507.825,317.864,2003.584,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2183,-510.899,328.456,2003.587,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2207,-492.803,326.635,2003.587,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2207,-490.949,328.561,2003.587,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2608,-505.558,317.914,2004.296,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2161,-515.356,331.790,2003.587,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2162,-512.247,331.799,2003.587,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2163,-510.473,331.782,2003.587,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2164,-514.021,331.776,2003.587,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2167,-513.372,314.407,2003.584,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2197,-514.127,315.799,2003.584,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(1715,-493.541,325.932,2003.587,0.000,0.000,132.000);
	tmpobjid = CreateDynamicObject(2008,-506.838,321.281,2003.587,0.000,0.000,359.994);
	tmpobjid = CreateDynamicObject(3857,-509.070,319.359,2006.499,0.000,0.000,45.000);
	tmpobjid = CreateDynamicObject(3857,-509.069,319.358,2006.499,0.000,0.000,44.994);
	tmpobjid = CreateDynamicObject(3857,-516.778,319.446,2008.837,0.000,0.000,44.989);
	tmpobjid = CreateDynamicObject(3857,-516.778,319.446,2008.837,0.000,0.000,44.989);
	tmpobjid = CreateDynamicObject(3857,-509.069,319.358,2006.499,0.000,0.000,224.994);
	tmpobjid = CreateDynamicObject(3857,-509.069,319.358,2006.499,0.000,0.000,224.989);
	tmpobjid = CreateDynamicObject(1722,-506.522,317.743,2003.584,0.000,0.000,50.000);
	tmpobjid = CreateDynamicObject(1722,-507.459,315.569,2003.586,0.000,0.000,159.998);
	tmpobjid = CreateDynamicObject(2009,-510.092,317.863,2003.584,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2009,-512.293,317.863,2003.584,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1999,-509.031,314.998,2003.584,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(1999,-511.317,314.997,2003.584,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(1722,-509.278,318.411,2003.584,0.000,0.000,359.998);
	tmpobjid = CreateDynamicObject(1722,-511.592,317.627,2003.584,0.000,0.000,349.994);
	tmpobjid = CreateDynamicObject(2608,-505.559,316.032,2004.296,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(3857,-509.222,326.920,2006.499,0.000,0.000,44.994);
	tmpobjid = CreateDynamicObject(3857,-509.222,326.919,2006.499,0.000,0.000,44.994);
	tmpobjid = CreateDynamicObject(3857,-509.222,326.919,2006.499,0.000,0.000,44.994);
	tmpobjid = CreateDynamicObject(3857,-509.222,326.919,2006.499,0.000,0.000,224.994);
	tmpobjid = CreateDynamicObject(3857,-509.222,326.919,2006.499,0.000,0.000,224.989);
	tmpobjid = CreateDynamicObject(3857,-517.054,326.933,2008.837,0.000,0.000,44.994);
	tmpobjid = CreateDynamicObject(3857,-517.054,326.932,2008.837,0.000,0.000,44.989);
	tmpobjid = CreateDynamicObject(2197,-514.815,315.803,2003.584,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2197,-515.495,315.803,2003.584,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(1722,-510.372,327.773,2003.584,0.000,0.000,349.991);
	tmpobjid = CreateDynamicObject(1722,-508.373,327.274,2003.584,0.000,0.000,19.991);
	tmpobjid = CreateDynamicObject(1722,-508.255,330.319,2003.584,0.000,0.000,149.989);
	tmpobjid = CreateDynamicObject(1722,-510.285,330.260,2003.584,0.000,0.000,189.985);
	tmpobjid = CreateDynamicObject(2162,-508.696,331.799,2003.587,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2167,-506.924,331.783,2003.584,0.000,0.000,359.994);
	tmpobjid = CreateDynamicObject(2167,-506.005,331.782,2003.584,0.000,0.000,359.989);
	tmpobjid = CreateDynamicObject(2737,-505.368,328.770,2004.922,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2008,-508.200,325.098,2003.587,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2008,-510.575,325.101,2003.587,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(1722,-506.582,326.195,2003.584,0.000,0.000,169.989);
	tmpobjid = CreateDynamicObject(1722,-508.925,326.795,2003.584,0.000,0.000,179.985);
	tmpobjid = CreateDynamicObject(1722,-510.858,325.773,2003.584,0.000,0.000,199.983);
	tmpobjid = CreateDynamicObject(2008,-509.216,321.290,2003.587,0.000,0.000,359.989);
	tmpobjid = CreateDynamicObject(2008,-511.651,321.295,2003.587,0.000,0.000,359.989);
	tmpobjid = CreateDynamicObject(1722,-511.217,320.765,2003.584,0.000,0.000,349.978);
	tmpobjid = CreateDynamicObject(1722,-508.540,320.782,2003.584,0.000,0.000,9.974);
	tmpobjid = CreateDynamicObject(1722,-505.908,319.966,2003.584,0.000,0.000,9.970);
	tmpobjid = CreateDynamicObject(1715,-491.830,325.175,2003.587,0.000,0.000,183.997);
	tmpobjid = CreateDynamicObject(1715,-489.360,327.700,2003.587,0.000,0.000,273.990);
	tmpobjid = CreateDynamicObject(1715,-490.335,329.455,2003.587,0.000,0.000,321.988);
	tmpobjid = CreateDynamicObject(1715,-491.915,329.925,2003.587,0.000,0.000,1.987);
	tmpobjid = CreateDynamicObject(1715,-493.561,329.118,2003.587,0.000,0.000,49.983);
	tmpobjid = CreateDynamicObject(1715,-494.268,327.569,2003.587,0.000,0.000,91.982);
	tmpobjid = CreateDynamicObject(14455,-486.839,326.770,2005.256,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(14455,-497.005,331.117,2005.256,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2332,-468.703,287.350,2004.047,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2518,-507.915,309.865,2000.086,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2518,-509.937,309.868,2000.086,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2518,-511.819,309.868,2000.086,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(14662,-493.548,311.131,2001.985,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(14662,-489.589,311.131,2001.985,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2518,-493.351,309.868,2000.086,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2518,-491.321,309.867,2000.086,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2518,-489.342,309.868,2000.086,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2528,-512.723,318.299,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2528,-511.057,318.303,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2528,-509.382,318.315,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2528,-507.736,318.329,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2528,-506.044,318.338,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2528,-496.430,318.316,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2528,-494.751,318.324,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2528,-493.079,318.320,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2528,-491.421,318.313,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2528,-489.777,318.307,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(18075,-501.157,323.420,2008.584,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(18075,-497.575,341.566,2008.584,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(18075,-504.621,341.554,2008.584,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(18075,-492.025,323.225,2008.584,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(18075,-512.109,323.089,2008.584,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(19171,-527.179,297.050,2005.137,90.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(19170,-528.677,297.050,2005.136,90.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(19169,-527.179,297.050,2006.635,90.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(19168,-528.677,297.050,2006.635,90.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3858,-473.204,296.937,2007.251,0.000,0.000,225.000);
	tmpobjid = CreateDynamicObject(3858,-473.204,296.936,2007.251,0.000,0.000,225.000);
	tmpobjid = CreateDynamicObject(7616,-410.319,364.022,2003.693,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(758,-477.954,300.295,2004.840,0.000,0.000,260.000);
	tmpobjid = CreateDynamicObject(746,-470.444,300.428,2004.855,346.000,0.000,210.000);
	tmpobjid = CreateDynamicObject(953,-472.639,300.774,2005.411,8.998,0.000,340.000);
	tmpobjid = CreateDynamicObject(1600,-478.188,299.345,2006.069,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1600,-470.191,298.837,2005.401,0.000,0.000,110.000);
	tmpobjid = CreateDynamicObject(1599,-475.460,300.450,2005.854,0.000,0.000,280.000);
	tmpobjid = CreateDynamicObject(1599,-471.358,301.214,2006.522,0.000,0.000,109.997);
	tmpobjid = CreateDynamicObject(1601,-474.458,298.011,2005.208,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1601,-477.457,299.380,2005.208,0.000,0.000,110.000);
	tmpobjid = CreateDynamicObject(1605,-474.368,300.782,2006.095,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1606,-475.851,298.334,2006.951,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(10444,-473.067,301.691,2005.250,90.000,90.000,271.500);
	tmpobjid = CreateDynamicObject(3858,-473.204,296.936,2007.251,0.000,0.000,225.000);
	tmpobjid = CreateDynamicObject(19166,-468.877,294.637,2005.412,0.000,270.000,0.000);
	tmpobjid = CreateDynamicObject(2894,-474.508,288.769,2004.521,0.000,0.000,209.998);
	tmpobjid = CreateDynamicObject(14455,-533.559,296.354,2005.256,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(14455,-496.961,320.560,2005.256,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(14455,-494.109,314.687,2005.256,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(14455,-486.799,316.217,2005.256,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(19166,-486.665,323.611,2005.256,0.000,270.000,0.000);
	tmpobjid = CreateDynamicObject(1704,-487.421,314.985,2003.584,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(1723,-492.858,317.161,2003.584,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1704,-495.410,314.950,2003.584,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(1723,-490.826,318.122,2003.584,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1723,-492.871,320.134,2003.584,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2001,-491.850,320.303,2003.587,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2001,-522.320,293.429,2003.587,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2010,-476.157,292.867,2003.578,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2001,-479.968,293.325,2003.587,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2010,-472.820,292.955,2003.578,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1726,-504.550,317.268,2003.592,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1726,-504.566,326.921,2003.592,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1726,-497.916,328.834,2003.592,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1726,-497.910,319.334,2003.592,0.000,0.000,270.000);



    //--------------------[Клуб] -----------------------------------------------
    new floor[100];
	new dwall[50];
	new ddoorway[5];

	new uwall[50];
	new uswall[20];
	new udoorway[10];

	new vwall[50];
	new vdoorway[5];

//	new stairs[10];
	new column[20];
	new door[20];
	new bar;


	CreateDynamicObject(970,1.8720703,14.4667969,6004.1372070,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (12)
	CreateDynamicObject(970,1.8720703,-4.8339844,6004.1372070,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (8)
	CreateDynamicObject(970,6.0478516,14.4667969,6004.1372070,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (11)
	CreateDynamicObject(970,6.0478516,-4.8339844,6004.1372070,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (5)
	CreateDynamicObject(970,10.2216797,14.4667969,6004.1372070,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (9)
	CreateDynamicObject(970,10.2250004,-4.8360000,6004.1372070,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (1)
	CreateDynamicObject(970,12.2930002,-6.8990002,6004.1372070,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (2)
	CreateDynamicObject(970,12.2980003,16.5349998,6004.1372070,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (10)
	CreateDynamicObject(970,-1.8593750,14.4667969,6004.1372070,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (7)
	CreateDynamicObject(970,-1.8593750,-4.8349609,6004.1372070,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (13)
	CreateDynamicObject(970,-6.0351562,-4.8339844,6004.1372070,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (14)
	CreateDynamicObject(970,-6.0359998,14.4670000,6004.1372070,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (6)
	CreateDynamicObject(970,-10.2109375,14.4667969,6004.1372070,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (3)
	CreateDynamicObject(970,-10.2109375,-4.8339844,6004.1372070,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (15)
	CreateDynamicObject(970,-12.2822266,-6.8955078,6004.1372070,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (4)
	CreateDynamicObject(970,-12.2959995,16.5419998,6004.1372070,0.0000000,0.0000000,270.0000000); //object(fencesmallb) (3)
	door[1] = CreateDynamicObject(1492,4.0159998,-5.8020000,6000.0859375,0.0000000,0.0000000,269.9945068); //object(gen_doorint02) (2)
	door[2] = CreateDynamicObject(1492,4.1129999,-9.3310547,6000.3417969,0.0000000,0.0000000,359.9945068); //object(gen_doorint02) (1)
	door[3] = CreateDynamicObject(1492,7.3140001,-9.3310547,6000.3417969,0.0000000,0.0000000,179.9945068); //object(gen_doorint02) (2)
	door[4] = CreateDynamicObject(1492,8.9689999,-9.3310547,6000.3417969,0.0000000,0.0000000,179.9945068); //object(gen_doorint02) (2)
	door[5] = CreateDynamicObject(1492,10.6359997,-9.3310547,6000.3417969,0.0000000,0.0000000,179.9945068); //object(gen_doorint02) (2)
	door[6] = CreateDynamicObject(1492,12.2810001,-9.3310547,6000.3417969,0.0000000,0.0000000,179.9945068); //object(gen_doorint02) (2)
	door[7] = CreateDynamicObject(1492,-3.8870001,-5.8109999,6000.0859375,0.0000000,0.0000000,269.9890137); //object(gen_doorint02) (2)
	door[8] = CreateDynamicObject(1492,-3.9794922,-9.3310547,6000.3417969,0.0000000,0.0000000,179.9945068); //object(gen_doorint02) (1)
	door[9] = CreateDynamicObject(1492,-5.6621094,-9.3310547,6000.3417969,0.0000000,0.0000000,179.9945068); //object(gen_doorint02) (2)
	door[10] = CreateDynamicObject(1492,-7.3359375,-9.3310547,6000.3417969,0.0000000,0.0000000,179.9945068); //object(gen_doorint02) (3)
	door[11] = CreateDynamicObject(1492,-8.9960938,-9.3310547,6000.3417969,0.0000000,0.0000000,179.9945068); //object(gen_doorint02) (4)
	door[12] = CreateDynamicObject(1492,-10.6191406,-9.3310547,6000.3417969,0.0000000,0.0000000,179.9945068); //object(gen_doorint02) (5)
	CreateDynamicObject(1509,0.0130000,14.1420002,6001.2851562,0.0000000,0.0000000,0.0000000); //object(dyn_wine_3) (1)
	CreateDynamicObject(1510,-0.3070000,14.4340000,6001.1030273,0.0000000,0.0000000,0.0000000); //object(dyn_ashtry) (2)
	CreateDynamicObject(1510,-1.6390001,14.4580002,6001.1030273,0.0000000,0.0000000,0.0000000); //object(dyn_ashtry) (1)
	CreateDynamicObject(1536,-0.6000000,-14.3240004,6000.0859375,0.0000000,0.0000000,0.0000000); //object(gen_doorext15) (1)
	CreateDynamicObject(1668,1.2040000,14.2460003,6001.2548828,0.0000000,0.0000000,0.0000000); //object(propvodkabotl1) (1)
	CreateDynamicObject(1754,7.4949999,-9.0679998,6003.5859375,0.0000000,0.0000000,179.9890137); //object(swank_single_1) (6)
	CreateDynamicObject(1754,7.5060000,-11.0600004,6003.5859375,0.0000000,0.0000000,359.9890137); //object(swank_single_1) (5)
	CreateDynamicObject(1754,7.5180001,18.7229996,6003.5859375,0.0000000,0.0000000,359.9835205); //object(swank_single_1) (7)
	CreateDynamicObject(1754,7.5250001,20.7110004,6003.5859375,0.0000000,0.0000000,179.9780273); //object(swank_single_1) (8)
	CreateDynamicObject(1754,-7.4920001,20.6639996,6003.5859375,0.0000000,0.0000000,180.0000000); //object(swank_single_1) (2)
	CreateDynamicObject(1754,-7.5079999,-9.0570002,6003.5859375,0.0000000,0.0000000,180.0000000); //object(swank_single_1) (3)
	CreateDynamicObject(1754,-7.5139999,-11.0990000,6003.5859375,0.0000000,0.0000000,359.9945068); //object(swank_single_1) (4)
	CreateDynamicObject(1754,-7.5159998,18.6609993,6003.5859375,0.0000000,0.0000000,0.0000000); //object(swank_single_1) (1)
	CreateDynamicObject(1805,0.7850000,13.2320004,6000.3349609,0.0000000,0.0000000,39.9957275); //object(cj_barstool) (3)
	CreateDynamicObject(1805,2.2830000,13.3439999,6000.3349609,0.0000000,0.0000000,339.9938965); //object(cj_barstool) (4)
	CreateDynamicObject(1805,-0.5370000,13.2320004,6000.3349609,0.0000000,0.0000000,0.0000000); //object(cj_barstool) (2)
	CreateDynamicObject(1805,-1.9800000,13.1910000,6000.3349609,0.0000000,0.0000000,0.0000000); //object(cj_barstool) (1)
	CreateDynamicObject(1892,-0.3212891,-11.4511719,6000.0859375,0.0000000,0.0000000,0.0000000); //object(security_gatsh) (1)
	CreateDynamicObject(1951,1.7110000,14.6859999,6001.2758789,0.0000000,0.0000000,0.0000000); //object(kb_beer01) (1)
	CreateDynamicObject(2290,6.5087891,-9.0576172,6003.5859375,0.0000000,0.0000000,270.0000000); //object(swk_couch_1) (7)
	CreateDynamicObject(2290,6.5159998,20.7180004,6003.5859375,0.0000000,0.0000000,270.0000000); //object(swk_couch_1) (6)
	CreateDynamicObject(2290,8.4849997,-11.0600004,6003.5859375,0.0000000,0.0000000,90.0000000); //object(swk_couch_1) (8)
	CreateDynamicObject(2290,8.5070000,18.7049999,6003.5859375,0.0000000,0.0000000,90.0000000); //object(swk_couch_1) (5)
	CreateDynamicObject(2290,-6.4770002,18.6760006,6003.5859375,0.0000000,0.0000000,90.0000000); //object(swk_couch_1) (1)
	CreateDynamicObject(2290,-6.4860001,-11.1000004,6003.5859375,0.0000000,0.0000000,90.0000000); //object(swk_couch_1) (9)
	CreateDynamicObject(2290,-8.4969997,-9.0450001,6003.5859375,0.0000000,0.0000000,270.0000000); //object(swk_couch_1) (10)
	CreateDynamicObject(2290,-8.5360003,20.6509991,6003.5859375,0.0000000,0.0000000,270.0000000); //object(swk_couch_1) (2)
	CreateDynamicObject(2518,5.3569999,-5.4749999,6000.0859375,0.0000000,0.0000000,0.0000000); //object(cj_b_sink2) (5)
	CreateDynamicObject(2518,7.3639998,-5.4730000,6000.0859375,0.0000000,0.0000000,0.0000000); //object(cj_b_sink2) (6)
	CreateDynamicObject(2518,8.8780003,-5.4740000,6000.0859375,0.0000000,0.0000000,0.0000000); //object(cj_b_sink2) (7)
	CreateDynamicObject(2518,10.8629999,-5.4770002,6000.0859375,0.0000000,0.0000000,0.0000000); //object(cj_b_sink2) (8)
	CreateDynamicObject(2518,-5.6799998,-5.4749999,6000.0859375,0.0000000,0.0000000,0.0000000); //object(cj_b_sink2) (4)
	CreateDynamicObject(2518,-7.6999998,-5.4730000,6000.0859375,0.0000000,0.0000000,0.0000000); //object(cj_b_sink2) (3)
	CreateDynamicObject(2518,-9.5299997,-5.4749999,6000.0859375,0.0000000,0.0000000,0.0000000); //object(cj_b_sink2) (1)
	CreateDynamicObject(2518,-11.5340004,-5.4749999,6000.0859375,0.0000000,0.0000000,0.0000000); //object(cj_b_sink2) (2)
	CreateDynamicObject(2738,4.8940001,-13.8199997,6000.6889648,0.0000000,0.0000000,179.9945068); //object(cj_toilet_bs) (5)
	CreateDynamicObject(2738,6.5310001,-13.8350000,6000.6889648,0.0000000,0.0000000,179.9945068); //object(cj_toilet_bs) (4)
	CreateDynamicObject(2738,8.2570000,-13.8310003,6000.6889648,0.0000000,0.0000000,179.9945068); //object(cj_toilet_bs) (3)
	CreateDynamicObject(2738,9.9189997,-13.8070002,6000.6889648,0.0000000,0.0000000,179.9945068); //object(cj_toilet_bs) (2)
	CreateDynamicObject(2738,11.4949999,-13.8140001,6000.6889648,0.0000000,0.0000000,180.0000000); //object(cj_toilet_bs) (1)
	CreateDynamicObject(2738,-4.7880001,-13.8160000,6000.6889648,0.0000000,0.0000000,179.9945068); //object(cj_toilet_bs) (6)
	CreateDynamicObject(2738,-6.3709998,-13.7980003,6000.6889648,0.0000000,0.0000000,179.9945068); //object(cj_toilet_bs) (7)
	CreateDynamicObject(2738,-8.1199999,-13.7989998,6000.6889648,0.0000000,0.0000000,179.9945068); //object(cj_toilet_bs) (8)
	CreateDynamicObject(2738,-9.7100000,-13.8059998,6000.6889648,0.0000000,0.0000000,179.9945068); //object(cj_toilet_bs) (9)
	CreateDynamicObject(2738,-11.3940001,-13.8179998,6000.6889648,0.0000000,0.0000000,179.9945068); //object(cj_toilet_bs) (10)
	CreateDynamicObject(2738,-13.2840004,-13.7840004,6000.6889648,0.0000000,0.0000000,179.9945068); //object(cj_toilet_bs) (11)
	CreateDynamicObject(2773,2.4755859,-11.3769531,6000.6010742,0.0000000,0.0000000,270.0000000); //object(cj_airprt_bar) (5)
	CreateDynamicObject(2773,2.9921875,0.0000000,6000.6010742,0.0000000,0.0000000,179.9945068); //object(cj_airprt_bar) (4)
	CreateDynamicObject(2773,2.9921875,3.9433594,6000.6010742,0.0000000,0.0000000,180.0000000); //object(cj_airprt_bar) (4)
	CreateDynamicObject(2773,2.9921875,7.9365234,6000.6010742,0.0000000,0.0000000,179.9945068); //object(cj_airprt_bar) (4)
	CreateDynamicObject(2773,3.4330001,-12.3599997,6000.5991211,0.0000000,0.0000000,0.0000000); //object(cj_airprt_bar) (3)
	CreateDynamicObject(2773,-2.2734375,-11.4521484,6000.6010742,0.0000000,0.0000000,270.0000000); //object(cj_airprt_bar) (4)
	CreateDynamicObject(2773,-2.9980469,0.0000000,6000.6010742,0.0000000,0.0000000,179.9945068); //object(cj_airprt_bar) (4)
	CreateDynamicObject(2773,-2.9980469,3.9433594,6000.6010742,0.0000000,0.0000000,179.9945068); //object(cj_airprt_bar) (4)
	CreateDynamicObject(2773,-2.9980469,3.9433594,6000.6010742,0.0000000,0.0000000,179.9945068); //object(cj_airprt_bar) (4)
	CreateDynamicObject(2773,-2.9980469,7.9365234,6000.6010742,0.0000000,0.0000000,179.9945068); //object(cj_airprt_bar) (4)
	CreateDynamicObject(2773,-3.2309999,-12.4169998,6000.6030273,0.0000000,0.0000000,0.0000000); //object(cj_airprt_bar) (2)
	CreateDynamicObject(2949,-1.9130000,25.9629993,6003.5878906,0.0000000,0.0000000,90.0000000); //object(kmb_lockeddoor) (1)
	CreateDynamicObject(3858,0.0664062,2.6884766,6010.7480469,44.9890137,269.9890137,90.0000000); //object(ottosmash1) (7)
	CreateDynamicObject(3858,0.0664062,2.6884766,6010.7480469,44.9945068,269.9945068,90.0000000); //object(ottosmash1) (6)
	CreateDynamicObject(3858,0.0670000,2.6889999,6010.7480469,45.0000000,270.0000000,90.0000000); //object(ottosmash1) (2)
	CreateDynamicObject(3858,0.2929688,8.5126953,6010.7480469,44.9890137,269.9890137,90.0000000); //object(ottosmash1) (5)
	CreateDynamicObject(3858,0.2929688,8.5126953,6010.7480469,44.9945068,269.9945068,90.0000000); //object(ottosmash1) (4)
	CreateDynamicObject(3858,0.2930000,8.5129995,6010.7480469,44.9945068,269.9945068,90.0000000); //object(ottosmash1) (3)
	CreateDynamicObject(13654,-0.1620000,7.3920002,6010.5942383,283.2495117,89.7637939,271.5600281); //object(darkpoly) (2)
	CreateDynamicObject(13654,-0.2275391,2.9140625,6010.5942383,283.2440186,89.7583008,271.5545654); //object(darkpoly) (3)
	CreateDynamicObject(13654,-0.2280000,2.9150000,6010.5942383,283.2502441,89.7650452,271.5639648); //object(darkpoly) (1)
	CreateDynamicObject(14414,2.0595703,28.9570312,6003.8901367,0.0000000,0.0000000,179.9945068); //object(carter-stairs05) (2)
	CreateDynamicObject(14414,14.2950001,17.4080009,6000.3969727,0.0000000,0.0000000,179.9945068); //object(carter-stairs05) (4)
	CreateDynamicObject(14414,14.2969999,-7.7690001,6000.3969727,0.0000000,0.0000000,0.0000000); //object(carter-stairs05) (1)
	CreateDynamicObject(14414,-2.1029999,27.8150005,6007.5668945,0.0000000,0.0000000,359.9945068); //object(carter-stairs05) (2)
	CreateDynamicObject(14414,-14.3007812,17.4072266,6000.3969727,0.0000000,0.0000000,179.9945068); //object(carter-stairs05) (3)
	CreateDynamicObject(14414,-14.3046875,-7.7695312,6000.3969727,0.0000000,0.0000000,0.0000000); //object(carter-stairs05) (2)
	CreateDynamicObject(14434,4.1389999,10.7279997,6010.2832031,0.0000000,0.0000000,0.0000000); //object(carter-spotlight42) (1)
	CreateDynamicObject(14434,-4.4400001,-1.8510000,6010.2832031,0.0000000,0.0000000,180.0000000); //object(carter-spotlight42) (2)
	CreateDynamicObject(14565,1.2744141,18.8808594,6002.0410156,0.0000000,0.0000000,270.0000000); //object(triad_bar_stuff) (1)
	CreateDynamicObject(14565,-4.0370002,18.8869991,6003.0058594,0.0000000,0.0000000,270.0000000); //object(triad_bar_stuff) (5)
	CreateDynamicObject(14684,6.1729999,-3.2349999,6002.0620117,0.0000000,0.0000000,0.0000000); //object(int_tatooa12) (1)
	CreateDynamicObject(14684,9.6650000,-3.2340000,6002.0620117,0.0000000,0.0000000,0.0000000); //object(int_tatooa12) (2)
	CreateDynamicObject(14684,-6.9010000,-3.2330000,6002.0620117,0.0000000,0.0000000,0.0000000); //object(int_tatooa12) (3)
	CreateDynamicObject(14684,-10.7150002,-3.2320001,6002.0620117,0.0000000,0.0000000,0.0000000); //object(int_tatooa12) (4)
	bar = CreateDynamicObject(16151,4.4501953,19.0205078,6011.0971680,0.0000000,0.0000000,0.0000000); //object(ufo_bar) (1)
	CreateDynamicObject(18102,15.9580002,8.2570000,6003.2021484,45.9997559,0.0000000,87.9949951); //object(light_box1) (1)
	CreateDynamicObject(18102,-15.9390001,-0.2480000,6003.2021484,46.0000000,0.0000000,268.0000000); //object(light_box1) (1)
	column[1] = CreateDynamicObject(18762,0.0000000,14.5679998,6000.5878906,0.0000000,90.0000000,0.0000000); //object(concrete1mx1mx5m) (4)
	column[2] = CreateDynamicObject(18762,0.0000000,14.5690002,6003.0888672,0.0000000,90.0000000,0.0000000); //object(concrete1mx1mx5m) (3)
	column[3] = CreateDynamicObject(18762,0.0000000,-4.8496094,6003.0878906,0.0000000,90.0000000,0.0000000); //object(concrete1mx1mx5m) (7)
	column[4] = CreateDynamicObject(18762,2.9921875,-4.8496094,6001.0888672,0.0000000,0.0000000,0.0000000); //object(concrete1mx1mx5m) (6)
	column[5] = CreateDynamicObject(18762,2.9930000,14.5690002,6001.0888672,0.0000000,0.0000000,0.0000000); //object(concrete1mx1mx5m) (2)
	column[6] = CreateDynamicObject(18762,7.4960938,19.7001953,6006.0859375,0.0000000,0.0000000,0.0000000); //object(concrete1mx1mx5m) (8)
	column[7] = CreateDynamicObject(18762,7.4960938,19.7001953,6011.0849609,0.0000000,0.0000000,0.0000000); //object(concrete1mx1mx5m) (11)
	column[8] = CreateDynamicObject(18762,7.4960938,-10.0605469,6006.0859375,0.0000000,0.0000000,0.0000000); //object(concrete1mx1mx5m) (13)
	column[9] = CreateDynamicObject(18762,7.4960938,-10.0605469,6011.0849609,0.0000000,0.0000000,0.0000000); //object(concrete1mx1mx5m) (15)
	column[10] = CreateDynamicObject(18762,-2.9980469,14.5683594,6001.0888672,0.0000000,0.0000000,0.0000000); //object(concrete1mx1mx5m) (1)
	column[11] = CreateDynamicObject(18762,-2.9980469,-4.8496094,6001.0888672,0.0000000,0.0000000,0.0000000); //object(concrete1mx1mx5m) (5)
	column[12] = CreateDynamicObject(18762,-7.4970002,19.7000008,6011.0849609,0.0000000,0.0000000,0.0000000); //object(concrete1mx1mx5m) (10)
	column[13] = CreateDynamicObject(18762,-7.4970703,19.7001953,6006.0859375,0.0000000,0.0000000,0.0000000); //object(concrete1mx1mx5m) (12)
	column[14] = CreateDynamicObject(18762,-7.4970703,-10.0605469,6006.0859375,0.0000000,0.0000000,0.0000000); //object(concrete1mx1mx5m) (9)
	column[15] = CreateDynamicObject(18762,-7.4970703,-10.0605469,6011.0849609,0.0000000,0.0000000,0.0000000); //object(concrete1mx1mx5m) (14)
	CreateDynamicObject(19128,5.5156250,3.9440000,6000.1489258,0.0000000,0.0000000,0.0000000); //object(dancefloor1) (9)
	CreateDynamicObject(19128,5.5156250,7.9365234,6000.1489258,0.0000000,0.0000000,0.0000000); //object(dancefloor1) (11)
	CreateDynamicObject(19128,5.5159998,0.0000000,6000.1489258,0.0000000,0.0000000,0.0000000); //object(dancefloor1) (7)
	CreateDynamicObject(19128,9.5185547,3.9440000,6000.1489258,0.0000000,0.0000000,179.9945068); //object(dancefloor1) (10)
	CreateDynamicObject(19128,9.5185547,7.9370003,6000.1489258,0.0000000,0.0000000,179.9945068); //object(dancefloor1) (12)
	CreateDynamicObject(19128,9.5190001,0.0000000,6000.1489258,0.0000000,0.0000000,180.0000000); //object(dancefloor1) (8)
	CreateDynamicObject(19128,-5.5087891,3.9433594,6000.1489258,0.0000000,0.0000000,0.0000000); //object(dancefloor1) (2)
	CreateDynamicObject(19128,-5.5087891,7.9365234,6000.1489258,0.0000000,0.0000000,0.0000000); //object(dancefloor1) (5)
	CreateDynamicObject(19128,-5.5117188,0.0000000,6000.1489258,0.0000000,0.0000000,0.0000000); //object(dancefloor1) (1)
	CreateDynamicObject(19128,-9.5000000,0.0000000,6000.1489258,0.0000000,0.0000000,180.0000000); //object(dancefloor1) (3)
	CreateDynamicObject(19128,-9.5000000,3.9440000,6000.1489258,0.0000000,0.0000000,179.9945068); //object(dancefloor1) (6)
	CreateDynamicObject(19128,-9.5000000,7.9370003,6000.1489258,0.0000000,0.0000000,179.9945068); //object(dancefloor1) (4)
	CreateDynamicObject(19158,0.0000000,5.0070000,6012.0859375,0.0000000,179.9945068,180.0000000); //object(metallightbars2) (2)
	CreateDynamicObject(19352,2.0660000,14.5690002,6001.0878906,0.0000000,0.0000000,30.0000000); //object(tophat01) (1)
	uswall[1] = CreateDynamicObject(19369,1.4870000,26.0739994,6012.3300781,0.0000000,0.0000000,90.0000000); //object(wall017) (5)
	uswall[2] = CreateDynamicObject(19369,-0.0280000,27.5990009,6008.8339844,0.0000000,0.0000000,0.0000000); //object(wall017) (4)
	uswall[3] = CreateDynamicObject(19369,-0.0300000,27.6000004,6012.3300781,0.0000000,0.0000000,0.0000000); //object(wall017) (1)
	uswall[4] = CreateDynamicObject(19369,-0.0300000,29.5330009,6008.8339844,0.0000000,0.0000000,0.0000000); //object(wall017) (3)
	uswall[5] = CreateDynamicObject(19369,-0.0320000,29.1720009,6012.3300781,0.0000000,0.0000000,0.0000000); //object(wall017) (2)
	floor[1] = CreateDynamicObject(19377,0.0000000,0.0000000,6000.0000000,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	floor[2] = CreateDynamicObject(19377,0.0000000,0.0000000,6014.3398438,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	floor[3] = CreateDynamicObject(19377,0.0000000,9.6337891,6000.0000000,0.0000000,90.0000000,0.0000000); //object(wall025) (2)
	floor[4] = CreateDynamicObject(19377,0.0000000,9.6337891,6014.3398438,0.0000000,90.0000000,0.0000000); //object(wall025) (2)
	floor[5] = CreateDynamicObject(19377,0.0000000,13.9337893,6010.6728516,0.0000000,90.0000000,0.0000000); //object(wall025) (2)
	floor[6] = CreateDynamicObject(19377,0.0000000,19.2656250,6000.0000000,0.0000000,90.0000000,0.0000000); //object(wall025) (2)
	floor[7] = CreateDynamicObject(19377,0.0000000,19.2670002,6014.3398438,0.0000000,90.0000000,0.0000000); //object(wall025) (2)
	floor[8] = CreateDynamicObject(19377,0.0000000,19.7001953,6003.5019531,0.0000000,90.0000000,90.0000000); //object(wall025) (1)
	floor[9] = CreateDynamicObject(19377,0.0000000,28.8990002,6014.1679688,0.0000000,90.0000000,0.0000000); //object(wall025) (2)
	floor[10] = CreateDynamicObject(19377,0.0000000,30.1919994,6003.5019531,0.0000000,90.0000000,90.0000000); //object(wall025) (1)
	floor[11] = CreateDynamicObject(19377,0.0000000,-4.0000000,6010.6728516,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	floor[12] = CreateDynamicObject(19377,0.0000000,-9.6318359,6000.0000000,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	floor[13] = CreateDynamicObject(19377,0.0000000,-9.6318359,6014.3398438,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	floor[14] = CreateDynamicObject(19377,0.0000000,-9.6320000,6010.6748047,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	floor[15] = CreateDynamicObject(19377,0.0000000,-10.0585938,6003.5000000,0.0000000,90.0000000,90.0000000); //object(wall025) (1)
	floor[16] = CreateDynamicObject(19377,0.0000000,-10.0590000,6003.5029297,0.0000000,90.0000000,90.0000000); //object(wall025) (1)
	floor[17] = CreateDynamicObject(19377,0.0010000,21.1779995,6010.6748047,0.0000000,90.0000000,0.0000000); //object(wall025) (2)
	floor[18] = CreateDynamicObject(19377,7.4960938,19.7001953,6003.5000000,0.0000000,90.0000000,90.0000000); //object(wall025) (1)
	floor[19] = CreateDynamicObject(19377,7.4980469,-10.0585938,6003.5000000,0.0000000,90.0000000,90.0000000); //object(wall025) (1)
	floor[20] = CreateDynamicObject(19377,10.4970703,0.0000000,6000.0000000,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	floor[21] = CreateDynamicObject(19377,10.4970703,0.0000000,6010.6728516,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	floor[22] = CreateDynamicObject(19377,10.4970703,9.6337891,6000.0000000,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	floor[23] = CreateDynamicObject(19377,10.4970703,9.6337891,6010.6728516,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	floor[24] = CreateDynamicObject(19377,10.4970703,19.2656250,6010.6728516,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	floor[25] = CreateDynamicObject(19377,10.4970703,19.2660007,6000.0000000,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	floor[26] = CreateDynamicObject(19377,10.4970703,-9.6318359,6000.0000000,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	floor[27] = CreateDynamicObject(19377,10.4970703,-9.6318359,6010.6728516,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	floor[28] = CreateDynamicObject(19377,-0.0330000,36.0330009,6006.9990234,0.0000000,90.0000000,90.0000000); //object(wall025) (1)
	floor[29] = CreateDynamicObject(19377,-7.4853516,-10.0605469,6003.5000000,0.0000000,90.0000000,90.0000000); //object(wall025) (1)
	floor[30] = CreateDynamicObject(19377,-7.4970703,19.7001953,6003.5000000,0.0000000,90.0000000,89.9945068); //object(wall025) (1)
	floor[31] = CreateDynamicObject(19377,-10.4970703,0.0000000,6010.6728516,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	floor[32] = CreateDynamicObject(19377,-10.4970703,19.2656250,6000.0000000,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	floor[33] = CreateDynamicObject(19377,-10.4970703,19.2656250,6010.6728516,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	floor[34] = CreateDynamicObject(19377,-10.4980469,0.0000000,6000.0000000,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	floor[35] = CreateDynamicObject(19377,-10.4980469,9.6337891,6000.0000000,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	floor[36] = CreateDynamicObject(19377,-10.4980469,9.6337891,6010.6728516,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	floor[37] = CreateDynamicObject(19377,-10.4980469,-9.6318359,6000.0000000,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	floor[38] = CreateDynamicObject(19377,-10.4980469,-9.6318359,6010.6728516,0.0000000,90.0000000,0.0000000); //object(wall025) (1)
	vdoorway[1] = CreateDynamicObject(19395,0.0000000,23.8261719,6012.5122070,0.0000000,0.0000000,90.0000000); //object(wall043) (1)
	vdoorway[2] = CreateDynamicObject(19395,0.0000000,-4.7290001,6012.5122070,0.0000000,0.0000000,90.0000000); //object(wall043) (2)
	ddoorway[1] = CreateDynamicObject(19396,4.0322266,-6.5849609,6001.8359375,0.0000000,0.0000000,0.0000000); //object(wall044) (1)
	ddoorway[2] = CreateDynamicObject(19396,-3.9020000,-6.5890002,6001.8359375,0.0000000,0.0000000,0.0000000); //object(wall044) (2)
	udoorway[1] = CreateDynamicObject(19397,0.0000000,23.9951172,6005.3378906,0.0000000,0.0000000,90.0000000); //object(wall045) (1)
	udoorway[2] = CreateDynamicObject(19397,0.0000000,23.9951172,6012.5122070,0.0000000,0.0000000,90.0000000); //object(wall045) (1)
	vwall[1] = CreateDynamicObject(19459,0.0000000,-11.1610003,6012.5087891,0.0000000,0.0000000,270.0000000); //object(wall099) (17)
	vwall[2] = CreateDynamicObject(19459,4.7300000,-9.4600000,6012.5087891,0.0000000,0.0000000,0.0000000); //object(wall099) (16)
	vwall[3] = CreateDynamicObject(19459,5.3349609,-0.0009766,6012.5087891,0.0000000,0.0000000,179.9945068); //object(wall099) (11)
	vwall[4] = CreateDynamicObject(19459,5.3350000,-0.0010000,6012.5087891,0.0000000,0.0000000,180.0000000); //object(wall099) (6)
	vwall[5] = CreateDynamicObject(19459,5.3359375,9.6318359,6012.5087891,0.0000000,0.0000000,179.9945068); //object(wall099) (8)
	vwall[6] = CreateDynamicObject(19459,5.3360000,19.2670002,6012.5068359,0.0000000,0.0000000,179.9945068); //object(wall099) (4)
	vwall[7] = CreateDynamicObject(19459,5.3360000,19.2670002,6012.5087891,0.0000000,0.0000000,179.9945068); //object(wall099) (5)
	vwall[8] = CreateDynamicObject(19459,6.4179688,23.8261719,6012.5087891,0.0000000,0.0000000,270.0000000); //object(wall099) (2)
	vwall[9] = CreateDynamicObject(19459,6.4179688,-4.7290001,6012.5087891,0.0000000,0.0000000,270.0000000); //object(wall099) (13)
	vwall[10] = CreateDynamicObject(19459,-4.7459998,-9.4799995,6012.5087891,0.0000000,0.0000000,0.0000000); //object(wall099) (15)
	vwall[11] = CreateDynamicObject(19459,-5.3350000,9.6318359,6012.5087891,0.0000000,0.0000000,179.9945068); //object(wall099) (10)
	vwall[12] = CreateDynamicObject(19459,-5.3350000,19.2670002,6012.5087891,0.0000000,0.0000000,180.0000000); //object(wall099) (3)
	vwall[13] = CreateDynamicObject(19459,-5.3350000,-0.0009766,6012.5087891,0.0000000,0.0000000,179.9945068); //object(wall099) (9)
	vwall[14] = CreateDynamicObject(19459,-6.4199219,-4.7290001,6012.5087891,0.0000000,0.0000000,270.0000000); //object(wall099) (14)
	vwall[15] = CreateDynamicObject(19459,-6.4200001,23.8269997,6012.5087891,0.0000000,0.0000000,270.0000000); //object(wall099) (1)
	dwall[1] = CreateDynamicObject(19460,0.0000000,23.9951172,6008.8339844,0.0000000,179.9945068,89.9945068); //object(wall100) (34)
	dwall[2] = CreateDynamicObject(19460,0.0000000,-14.3490000,6008.8339844,0.0000000,179.9945068,89.9945068); //object(wall100) (37)
	dwall[3] = CreateDynamicObject(19460,0.0253906,17.9550781,6001.8359375,0.0000000,0.0000000,89.9945068); //object(wall100) (24)
	dwall[4] = CreateDynamicObject(19460,4.0330000,-13.0039997,6001.8359375,0.0000000,0.0000000,179.9945068); //object(wall100) (20)
	dwall[5] = CreateDynamicObject(19460,4.8515625,19.2656250,6001.8359375,0.0000000,0.0000000,179.9945068); //object(wall100) (22)
	dwall[6] = CreateDynamicObject(19460,7.4951172,14.5341797,6001.8359375,0.0000000,0.0000000,270.0000000); //object(wall100) (17)
	dwall[7] = CreateDynamicObject(19460,7.5000000,-4.8955078,6001.8359375,0.0000000,0.0000000,270.0000000); //object(wall100) (10)
	dwall[8] = CreateDynamicObject(19460,9.5810003,-14.3490000,6001.8359375,0.0000000,0.0000000,89.9945068); //object(wall100) (12)
	dwall[9] = CreateDynamicObject(19460,9.6298828,23.9951172,6008.8339844,0.0000000,179.9945068,89.9945068); //object(wall100) (35)
	dwall[10] = CreateDynamicObject(19460,9.6298828,-14.3490000,6008.8339844,0.0000000,179.9945068,89.9945068); //object(wall100) (38)
	dwall[11] = CreateDynamicObject(19460,12.2279997,19.2630005,6001.8359375,0.0000000,0.0000000,0.0000000); //object(wall100) (16)
	dwall[12] = CreateDynamicObject(19460,12.2285156,-9.6220703,6001.8359375,0.0000000,0.0000000,179.9945068); //object(wall100) (12)
	dwall[13] = CreateDynamicObject(19460,14.3583984,0.0000000,6008.8339844,0.0000000,180.0000000,0.0000000); //object(wall100) (30)
	dwall[14] = CreateDynamicObject(19460,14.3583984,9.6337891,6008.8339844,0.0000000,180.0000000,0.0000000); //object(wall100) (29)
	dwall[15] = CreateDynamicObject(19460,14.3583984,19.2656250,6008.8339844,0.0000000,180.0000000,0.0000000); //object(wall100) (32)
	dwall[16] = CreateDynamicObject(19460,14.3583984,-9.6289062,6008.8339844,0.0000000,180.0000000,0.0000000); //object(wall100) (31)
	dwall[17] = CreateDynamicObject(19460,14.3590002,0.0000000,6001.8359375,0.0000000,0.0000000,0.0000000); //object(wall100) (2)
	dwall[18] = CreateDynamicObject(19460,14.3590002,9.6337891,6001.8359375,0.0000000,0.0000000,0.0000000); //object(wall100) (3)
	dwall[19] = CreateDynamicObject(19460,14.3590002,19.2660007,6001.8359375,0.0000000,0.0000000,0.0000000); //object(wall100) (7)
	dwall[20] = CreateDynamicObject(19460,14.3590002,-9.6289997,6001.8359375,0.0000000,0.0000000,0.0000000); //object(wall100) (1)
	dwall[21] = CreateDynamicObject(19460,-0.0480000,-14.3490000,6001.8359375,0.0000000,0.0000000,89.9945068); //object(wall100) (21)
	dwall[22] = CreateDynamicObject(19460,-3.9020000,-13.0059996,6001.8359375,0.0000000,0.0000000,179.9945068); //object(wall100) (19)
	dwall[23] = CreateDynamicObject(19460,-4.8925781,19.2656250,6001.8359375,0.0000000,0.0000000,179.9945068); //object(wall100) (23)
	dwall[24] = CreateDynamicObject(19460,-7.4921875,-4.8945312,6001.8359375,0.0000000,0.0000000,270.0000000); //object(wall100) (11)
	dwall[25] = CreateDynamicObject(19460,-7.5000000,14.5341797,6001.8359375,0.0000000,0.0000000,270.0000000); //object(wall100) (14)
	dwall[26] = CreateDynamicObject(19460,-9.6308594,23.9951172,6008.8339844,0.0000000,179.9945068,89.9945068); //object(wall100) (36)
	dwall[27] = CreateDynamicObject(19460,-9.6309996,-14.3490000,6008.8339844,0.0000000,180.0000000,89.9945068); //object(wall100) (33)
	dwall[28] = CreateDynamicObject(19460,-9.6800003,-14.3479996,6001.8359375,0.0000000,0.0000000,89.9945068); //object(wall100) (12)
	dwall[29] = CreateDynamicObject(19460,-12.2229996,-9.6239996,6001.8359375,0.0000000,0.0000000,179.9945068); //object(wall100) (13)
	dwall[30] = CreateDynamicObject(19460,-12.2290001,19.2656250,6001.8359375,0.0000000,0.0000000,0.0000000); //object(wall100) (18)
	dwall[31] = CreateDynamicObject(19460,-14.3554688,0.0000000,6008.8339844,0.0000000,179.9945068,0.0000000); //object(wall100) (25)
	dwall[32] = CreateDynamicObject(19460,-14.3564453,0.0000000,6001.8359375,0.0000000,0.0000000,0.0000000); //object(wall100) (5)
	dwall[33] = CreateDynamicObject(19460,-14.3564453,9.6337891,6001.8359375,0.0000000,0.0000000,0.0000000); //object(wall100) (6)
	dwall[34] = CreateDynamicObject(19460,-14.3564453,9.6337891,6008.8339844,0.0000000,180.0000000,0.0000000); //object(wall100) (27)
	dwall[35] = CreateDynamicObject(19460,-14.3564453,19.2626953,6008.8339844,0.0000000,180.0000000,0.0000000); //object(wall100) (28)
	dwall[36] = CreateDynamicObject(19460,-14.3564453,-9.6298828,6008.8339844,0.0000000,180.0000000,0.0000000); //object(wall100) (26)
	dwall[37] = CreateDynamicObject(19460,-14.3570004,19.2630005,6001.8359375,0.0000000,0.0000000,0.0000000); //object(wall100) (8)
	dwall[38] = CreateDynamicObject(19460,-14.3570004,-9.6300001,6001.8359375,0.0000000,0.0000000,0.0000000); //object(wall100) (4)
	uwall[1] = CreateDynamicObject(19461,0.0000000,24.0000000,6008.8339844,0.0000000,0.0000000,89.9945068); //object(wall101) (23)
	uwall[2] = CreateDynamicObject(19461,0.0000000,33.4716797,6008.8339844,0.0000000,0.0000000,269.9890137); //object(wall101) (23)
	uwall[3] = CreateDynamicObject(19461,0.0000000,33.4720001,6012.3300781,0.0000000,0.0000000,269.9945068); //object(wall101) (23)
	uwall[4] = CreateDynamicObject(19461,0.0000000,-14.3490000,6005.3359375,0.0000000,0.0000000,270.0000000); //object(wall101) (26)
	uwall[5] = CreateDynamicObject(19461,2.4355469,28.7236328,6008.8339844,0.0000000,0.0000000,179.9945068); //object(wall101) (23)
	uwall[6] = CreateDynamicObject(19461,2.4360001,28.7240009,6005.3359375,0.0000000,0.0000000,180.0000000); //object(wall101) (23)
	uwall[7] = CreateDynamicObject(19461,2.4360001,28.7240009,6012.3300781,0.0000000,0.0000000,179.9945068); //object(wall101) (23)
	uwall[8] = CreateDynamicObject(19461,5.7160001,-14.0660000,6001.8359375,0.0000000,0.0000000,0.0000000); //object(wall101) (20)
	uwall[9] = CreateDynamicObject(19461,6.3984375,23.9941406,6005.3359375,0.0000000,0.0000000,270.0000000); //object(wall101) (28)
	uwall[10] = CreateDynamicObject(19461,6.3984375,23.9941406,6012.5122070,0.0000000,0.0000000,270.0000000); //object(wall101) (28)
	uwall[11] = CreateDynamicObject(19461,7.3750000,-14.0660000,6001.8359375,0.0000000,0.0000000,0.0000000); //object(wall101) (20)
	uwall[12] = CreateDynamicObject(19461,9.0400000,-14.0654297,6001.8359375,0.0000000,0.0000000,0.0000000); //object(wall101) (20)
	uwall[13] = CreateDynamicObject(19461,9.6298828,23.9951172,6005.3359375,0.0000000,0.0000000,270.0000000); //object(wall101) (23)
	uwall[14] = CreateDynamicObject(19461,9.6298828,-14.3486328,6005.3359375,0.0000000,0.0000000,270.0000000); //object(wall101) (27)
	uwall[15] = CreateDynamicObject(19461,10.7150002,-14.0660000,6001.8359375,0.0000000,0.0000000,0.0000000); //object(wall101) (20)
	uwall[16] = CreateDynamicObject(19461,14.3583984,0.0000000,6005.3359375,0.0000000,0.0000000,0.0000000); //object(wall101) (17)
	uwall[17] = CreateDynamicObject(19461,14.3583984,9.6337891,6005.3359375,0.0000000,0.0000000,0.0000000); //object(wall101) (16)
	uwall[18] = CreateDynamicObject(19461,14.3590002,19.2649994,6005.3359375,0.0000000,0.0000000,0.0000000); //object(wall101) (15)
	uwall[19] = CreateDynamicObject(19461,14.3590002,-9.6298828,6005.3359375,0.0000000,0.0000000,0.0000000); //object(wall101) (18)
	uwall[20] = CreateDynamicObject(19461,-0.0310000,30.8110008,6005.3359375,0.0000000,0.0000000,179.9945068); //object(wall101) (23)
	uwall[21] = CreateDynamicObject(19461,-2.3580000,28.7280006,6012.3300781,0.0000000,0.0000000,179.9945068); //object(wall101) (23)
	uwall[22] = CreateDynamicObject(19461,-2.3583984,28.7275391,6008.8339844,0.0000000,0.0000000,179.9945068); //object(wall101) (23)
	uwall[23] = CreateDynamicObject(19461,-2.3590000,28.7280006,6005.3359375,0.0000000,0.0000000,179.9945068); //object(wall101) (23)
	uwall[24] = CreateDynamicObject(19461,-4.7579999,26.0779991,6008.8339844,0.0000000,0.0000000,89.9945068); //object(wall101) (23)
	uwall[25] = CreateDynamicObject(19461,-4.7610002,26.0799999,6005.3359375,0.0000000,0.0000000,89.9945068); //object(wall101) (23)
	uwall[26] = CreateDynamicObject(19461,-5.5859375,-14.0654297,6001.8359375,0.0000000,0.0000000,0.0000000); //object(wall101) (20)
	uwall[27] = CreateDynamicObject(19461,-6.4150391,23.9951172,6005.3359375,0.0000000,0.0000000,270.0000000); //object(wall101) (20)
	uwall[28] = CreateDynamicObject(19461,-6.4150391,23.9951172,6012.5122070,0.0000000,0.0000000,270.0000000); //object(wall101) (20)
	uwall[29] = CreateDynamicObject(19461,-7.2620001,-14.0660000,6001.8359375,0.0000000,0.0000000,0.0000000); //object(wall101) (20)
	uwall[30] = CreateDynamicObject(19461,-8.9309998,-14.0660000,6001.8359375,0.0000000,0.0000000,0.0000000); //object(wall101) (20)
	uwall[31] = CreateDynamicObject(19461,-9.6308594,-14.3490000,6005.3359375,0.0000000,0.0000000,270.0000000); //object(wall101) (25)
	uwall[32] = CreateDynamicObject(19461,-9.6309996,23.9950008,6005.3359375,0.0000000,0.0000000,270.0000000); //object(wall101) (24)
	uwall[33] = CreateDynamicObject(19461,-10.5810003,-14.0660000,6001.8359375,0.0000000,0.0000000,0.0000000); //object(wall101) (20)
	uwall[34] = CreateDynamicObject(19461,-14.3570004,0.0000000,6005.3359375,0.0000000,0.0000000,0.0000000); //object(wall101) (9)
	uwall[35] = CreateDynamicObject(19461,-14.3570004,9.6337891,6005.3359375,0.0000000,0.0000000,0.0000000); //object(wall101) (8)
	uwall[36] = CreateDynamicObject(19461,-14.3570004,19.2630005,6005.3359375,0.0000000,0.0000000,0.0000000); //object(wall101) (11)
	uwall[37] = CreateDynamicObject(19461,-14.3570004,-9.6300001,6005.3359375,0.0000000,0.0000000,0.0000000); //object(wall101) (10)

	//---DWALL
	SetDynamicObjectMaterial(dwall[1],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[2],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[3],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[4],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[5],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[6],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[7],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[8],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[9],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[10],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[11],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[12],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[13],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[14],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[15],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[16],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[17],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[18],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[19],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[20],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[21],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[22],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[23],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[24],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[25],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[26],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[27],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[28],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[29],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[30],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[31],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[32],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[33],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[34],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[35],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[36],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[37],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(dwall[38],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);


	//---DDOORWAY
	SetDynamicObjectMaterial(ddoorway[1],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);
	SetDynamicObjectMaterial(ddoorway[2],0,14808,"lee_strip2","strip_neon_Curtain",0xFFFFFFFF);

	//---UWALL
	SetDynamicObjectMaterial(uwall[1],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[2],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[3],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[4],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[5],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[6],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[7],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[8],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[9],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[10],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[11],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[12],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[13],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[14],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[15],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[16],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[17],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[18],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[19],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[20],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[21],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[22],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[23],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[24],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[25],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[26],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[27],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[28],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[29],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[30],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[31],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[32],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[33],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[34],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[35],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[36],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uwall[37],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);

	//---USWALL
	SetDynamicObjectMaterial(uswall[1],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uswall[2],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uswall[3],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uswall[4],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
	SetDynamicObjectMaterial(uswall[5],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);

	//---UDOORWAY
    SetDynamicObjectMaterial(udoorway[1],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);
    SetDynamicObjectMaterial(udoorway[2],0,14808,"lee_strip2","strip_carpet2",0xFFFFFFFF);

	//---COLUMN
    SetDynamicObjectMaterial(column[1],0,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(column[2],0,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(column[3],0,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(column[4],0,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(column[5],0,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(column[6],0,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(column[7],0,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(column[8],0,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(column[9],0,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(column[10],0,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(column[11],0,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(column[12],0,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(column[13],0,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(column[14],0,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(column[15],0,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);

    //---VWALL
    SetDynamicObjectMaterial(vwall[1],0,14624,"mafcasmain","marble_wall",0xFFFFFFFF);
    SetDynamicObjectMaterial(vwall[2],0,14624,"mafcasmain","marble_wall",0xFFFFFFFF);
    SetDynamicObjectMaterial(vwall[3],0,14624,"mafcasmain","marble_wall",0xFFFFFFFF);
    SetDynamicObjectMaterial(vwall[4],0,14624,"mafcasmain","marble_wall",0xFFFFFFFF);
    SetDynamicObjectMaterial(vwall[5],0,14624,"mafcasmain","marble_wall",0xFFFFFFFF);
    SetDynamicObjectMaterial(vwall[6],0,14624,"mafcasmain","marble_wall",0xFFFFFFFF);
    SetDynamicObjectMaterial(vwall[7],0,14624,"mafcasmain","marble_wall",0xFFFFFFFF);
    SetDynamicObjectMaterial(vwall[8],0,14624,"mafcasmain","marble_wall",0xFFFFFFFF);
    SetDynamicObjectMaterial(vwall[9],0,14624,"mafcasmain","marble_wall",0xFFFFFFFF);
    SetDynamicObjectMaterial(vwall[10],0,14624,"mafcasmain","marble_wall",0xFFFFFFFF);
    SetDynamicObjectMaterial(vwall[11],0,14624,"mafcasmain","marble_wall",0xFFFFFFFF);
    SetDynamicObjectMaterial(vwall[12],0,14624,"mafcasmain","marble_wall",0xFFFFFFFF);
    SetDynamicObjectMaterial(vwall[13],0,14624,"mafcasmain","marble_wall",0xFFFFFFFF);
    SetDynamicObjectMaterial(vwall[14],0,14624,"mafcasmain","marble_wall",0xFFFFFFFF);
    SetDynamicObjectMaterial(vwall[15],0,14624,"mafcasmain","marble_wall",0xFFFFFFFF);

    //---VDOORWAY
    SetDynamicObjectMaterial(vdoorway[1],0,14624,"mafcasmain","marble_wall",0xFFFFFFFF);
    SetDynamicObjectMaterial(vdoorway[2],0,14624,"mafcasmain","marble_wall",0xFFFFFFFF);

    //---DOOR
    SetDynamicObjectMaterial(door[1],1,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(door[2],1,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(door[3],1,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(door[4],1,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(door[5],1,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(door[6],1,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(door[7],1,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(door[8],1,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(door[9],1,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(door[10],1,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(door[11],1,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);
    SetDynamicObjectMaterial(door[12],1,14576,"mafiacasinovault01","gun_ceiling2",0xFFFFFFFF);

    //---FLOOR
    SetDynamicObjectMaterial(floor[1],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[2],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[3],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[4],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[5],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[6],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[7],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[8],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[9],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[10],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[11],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[12],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[13],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[14],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[15],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[16],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[17],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[18],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[19],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[20],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[21],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[22],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[23],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[24],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[25],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[26],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[27],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[28],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[29],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[30],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[31],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[32],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[33],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[34],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[35],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[36],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[37],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(floor[38],0,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);

    //---BAR
    SetDynamicObjectMaterial(bar,1,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(bar,3,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(bar,6,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(bar,7,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);
    SetDynamicObjectMaterial(bar,9,18018,"genintintbarb","CJ_Black_metal",0xFFFFFFFF);



    //--------------------[Казино 4Dragons] ------------------------------------
    CreateDynamicObject(14563,1970.6130371,1018.1640015,1050.0000000,0.0000000,0.0000000,0.0000000); //object(triad_main) (1)
	CreateDynamicObject(14614,1970.6140137,1018.1560059,1050.0000000,0.0000000,0.0000000,0.0000000); //object(triad_main3) (1)
	CreateDynamicObject(14607,1970.6099854,1018.1640015,1050.0000000,0.0000000,0.0000000,0.0000000); //object(triad_main2) (1)
	CreateDynamicObject(14561,1963.2170410,1018.1459961,1049.0129395,0.0000000,0.0000000,0.0000000); //object(triad_neon) (1)
	CreateDynamicObject(14560,1949.7249756,1018.1959839,1045.9560547,0.0000000,0.0000000,0.0000000); //object(triad_bar) (1)
	CreateDynamicObject(14564,1958.2919922,990.6829834,1048.6190186,0.0000000,0.0000000,0.0000000); //object(triad_lights) (1)
	CreateDynamicObject(14565,1949.7659912,1018.1420288,1043.5290527,0.0000000,0.0000000,0.0000000); //object(triad_bar_stuff) (1)
	CreateDynamicObject(14608,1954.2280273,994.5640259,1043.4830322,0.0000000,0.0000000,0.0000000); //object(triad_buddha01) (1)
	CreateDynamicObject(14605,1992.4229736,1018.1389771,1053.8120117,0.0000000,0.0000000,0.0000000); //object(triad_lights2) (1)
	CreateDynamicObject(2098,1964.4210205,1006.7440186,1043.4150391,0.0000000,0.0000000,90.0000000); //object(cj_slotcover1) (1)
	CreateDynamicObject(2773,1958.6579590,1030.3580322,1041.9859619,0.0000000,0.0000000,90.0000000); //object(cj_airprt_bar) (1)
	CreateDynamicObject(1836,1964.5930176,1006.7329712,1041.9639893,0.0000000,0.0000000,90.0000000); //object(kb_bandit7) (1)
	CreateDynamicObject(1895,1939.6889648,989.4500122,1043.1889648,0.0000000,0.0000000,180.0000000); //object(wheel_o_fortune) (1)
	CreateDynamicObject(1895,1942.1689453,986.8939819,1043.1889648,0.0000000,0.0000000,89.9945068); //object(wheel_o_fortune) (2)
	CreateDynamicObject(1895,1937.1180420,986.9569702,1043.1889648,0.0000000,0.0000000,269.9945068); //object(wheel_o_fortune) (3)
	CreateDynamicObject(2188,1959.7149658,1023.1229858,1042.4539795,0.0000000,0.0000000,90.0000000); //object(blck_jack) (2)
	CreateDynamicObject(2098,1964.4129639,1029.1250000,1043.4150391,0.0000000,0.0000000,90.0000000); //object(cj_slotcover1) (2)
	CreateDynamicObject(2098,1964.4239502,1012.6099854,1043.4150391,0.0000000,0.0000000,90.0000000); //object(cj_slotcover1) (3)
	CreateDynamicObject(2098,1964.3800049,1023.1229858,1043.4150391,0.0000000,0.0000000,90.0000000); //object(cj_slotcover1) (4)
	CreateDynamicObject(2188,1959.7149658,1006.7440186,1042.4539795,0.0000000,0.0000000,90.0000000); //object(blck_jack) (3)
	CreateDynamicObject(2188,1959.7149658,1012.6119995,1042.4539795,0.0000000,0.0000000,90.0000000); //object(blck_jack) (6)
	CreateDynamicObject(2188,1959.7149658,1029.1250000,1042.4539795,0.0000000,0.0000000,90.0000000); //object(blck_jack) (7)
	CreateDynamicObject(2188,1957.5629883,1029.1779785,1042.4539795,0.0000000,0.0000000,270.0000000); //object(blck_jack) (8)
	CreateDynamicObject(2773,1993.7070312,1022.4160156,1044.4079590,0.0000000,0.0000000,90.0000000); //object(cj_airprt_bar) (2)
	CreateDynamicObject(2188,1957.5629883,1023.2030029,1042.4539795,0.0000000,0.0000000,270.0000000); //object(blck_jack) (9)
	CreateDynamicObject(2188,1957.5629883,1012.6610107,1042.4539795,0.0000000,0.0000000,270.0000000); //object(blck_jack) (10)
	CreateDynamicObject(2188,1957.5629883,1006.8289795,1042.4539795,0.0000000,0.0000000,270.0000000); //object(blck_jack) (11)
	CreateDynamicObject(2773,1957.4949951,1026.2020264,1041.9859619,0.0000000,0.0000000,180.0000000); //object(cj_airprt_bar) (3)
	CreateDynamicObject(2773,1959.8070068,1026.1820068,1041.9859619,0.0000000,0.0000000,179.9945068); //object(cj_airprt_bar) (4)
	CreateDynamicObject(2773,1959.9870605,1009.7230225,1041.9859619,0.0000000,0.0000000,179.9945068); //object(cj_airprt_bar) (5)
	CreateDynamicObject(2773,1957.5600586,1009.7529907,1041.9859619,0.0000000,0.0000000,179.9945068); //object(cj_airprt_bar) (6)
	CreateDynamicObject(2773,1958.6770020,1021.9559937,1041.9859619,0.0000000,0.0000000,90.0000000); //object(cj_airprt_bar) (7)
	CreateDynamicObject(2773,1958.6739502,1013.8339844,1041.9859619,0.0000000,0.0000000,90.0000000); //object(cj_airprt_bar) (8)
	CreateDynamicObject(2773,1958.6600342,1005.5560303,1041.9859619,0.0000000,0.0000000,90.0000000); //object(cj_airprt_bar) (9)
	CreateDynamicObject(1836,1964.2149658,1006.7290039,1041.9589844,0.0000000,0.0000000,270.0000000); //object(kb_bandit7) (2)
	CreateDynamicObject(1836,1964.1829834,1012.6669922,1041.9589844,0.0000000,0.0000000,270.0000000); //object(kb_bandit7) (3)
	CreateDynamicObject(1836,1964.5770264,1012.6610107,1041.9570312,0.0000000,0.0000000,90.0000000); //object(kb_bandit7) (4)
	CreateDynamicObject(1836,1964.4919434,1023.1649780,1041.9570312,0.0000000,0.0000000,90.0000000); //object(kb_bandit7) (5)
	CreateDynamicObject(1836,1964.1369629,1023.1619873,1041.9549561,0.0000000,0.0000000,270.0000000); //object(kb_bandit7) (6)
	CreateDynamicObject(1836,1964.2020264,1029.1419678,1041.9549561,0.0000000,0.0000000,270.0000000); //object(kb_bandit7) (7)
	CreateDynamicObject(1836,1964.5770264,1029.1359863,1041.9530029,0.0000000,0.0000000,90.0000000); //object(kb_bandit7) (8)
	CreateDynamicObject(1978,1938.4739990,1026.8449707,1042.5190430,0.0000000,0.0000000,0.0000000); //object(roulette_tbl) (1)
	CreateDynamicObject(1978,1938.4739990,1021.0280151,1042.5190430,0.0000000,0.0000000,0.0000000); //object(roulette_tbl) (2)
	CreateDynamicObject(1978,1938.4739990,1008.7969971,1042.5190430,0.0000000,0.0000000,0.0000000); //object(roulette_tbl) (3)
	CreateDynamicObject(1978,1938.4739990,1015.0130005,1042.5190430,0.0000000,0.0000000,0.0000000); //object(roulette_tbl) (4)
	CreateDynamicObject(1979,1938.2469482,1010.1469727,1042.5190430,0.0000000,0.0000000,0.0000000); //object(wheel_wee) (1)
	CreateDynamicObject(1979,1938.2889404,1016.3900146,1042.5190430,0.0000000,0.0000000,0.0000000); //object(wheel_wee) (2)
	CreateDynamicObject(1979,1938.2719727,1022.3839722,1042.5000000,0.0000000,0.0000000,0.0000000); //object(wheel_wee) (3)
	CreateDynamicObject(1979,1938.2760010,1028.1939697,1042.5000000,0.0000000,0.0000000,0.0000000); //object(wheel_wee) (4)
	CreateDynamicObject(2799,1934.6679688,1040.3719482,1041.9709473,0.0000000,0.0000000,259.9969482); //object(castable2) (1)
	CreateDynamicObject(2799,1934.9000244,1043.4670410,1041.9709473,0.0000000,0.0000000,259.9969482); //object(castable2) (2)
	CreateDynamicObject(2799,1934.8549805,1046.8590088,1041.9709473,0.0000000,0.0000000,259.9969482); //object(castable2) (3)
	CreateDynamicObject(2799,1934.8919678,1049.5340576,1041.9709473,0.0000000,0.0000000,259.9969482); //object(castable2) (4)
	CreateDynamicObject(2799,1934.9250488,1052.5450439,1041.9709473,0.0000000,0.0000000,259.9969482); //object(castable2) (5)
	CreateDynamicObject(2799,1938.3669434,1052.5810547,1041.9709473,0.0000000,0.0000000,259.9969482); //object(castable2) (6)
	CreateDynamicObject(2799,1942.0439453,1052.6149902,1041.9709473,0.0000000,0.0000000,259.9969482); //object(castable2) (7)
	CreateDynamicObject(2799,1942.2719727,1049.1149902,1041.9709473,0.0000000,0.0000000,259.9969482); //object(castable2) (8)
	CreateDynamicObject(2799,1938.4169922,1049.1979980,1041.9709473,0.0000000,0.0000000,259.9969482); //object(castable2) (9)
	CreateDynamicObject(2799,1938.3900146,1046.0620117,1041.9709473,0.0000000,0.0000000,259.9969482); //object(castable2) (10)
	CreateDynamicObject(2799,1938.3620605,1042.9260254,1041.9709473,0.0000000,0.0000000,259.9969482); //object(castable2) (11)
	CreateDynamicObject(2799,1938.3089600,1040.0689697,1041.9709473,0.0000000,0.0000000,259.9969482); //object(castable2) (12)


    //--------------------[Больница] -------------------------------------------
    tmpobjid = CreateObject(19377,200.000,200.000,500.000,0.000,90.000,0.000);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateObject(19377,210.498,200.000,500.000,0.000,90.000,0.000);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateObject(19377,200.000,190.365,500.000,0.000,90.000,0.000);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateObject(19377,200.000,209.631,500.000,0.000,90.000,0.000);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateObject(19377,210.498,209.631,500.000,0.000,90.000,0.000);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateObject(19377,210.498,190.365,500.000,0.000,90.000,0.000);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);

	tmpobjid = CreateDynamicObject(19461,199.566,195.301,501.835,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19397,210.237,206.243,501.835,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19397,210.237,193.783,501.835,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19377,210.498,180.731,500.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,200.000,171.096,500.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,200.000,219.263,500.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,210.498,219.263,500.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,200.000,180.731,500.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,210.498,171.096,500.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19461,210.237,187.366,501.835,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19397,210.237,180.946,501.835,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19461,210.237,212.665,501.835,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19397,210.237,219.081,501.835,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19461,199.567,220.600,501.835,0.000,0.000,269.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19377,220.996,200.000,500.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,220.996,209.631,500.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,220.996,219.263,500.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,220.996,190.365,500.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,220.996,180.731,500.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19377,220.996,171.096,500.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_stationfloor", -1);
	tmpobjid = CreateDynamicObject(19397,204.298,193.783,501.835,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19461,204.300,187.366,501.835,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19461,194.840,199.985,501.835,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19397,204.297,206.243,501.835,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19461,204.295,212.665,501.835,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19397,204.296,219.081,501.835,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19397,204.299,180.946,501.835,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19397,218.175,195.254,501.835,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19461,219.810,180.939,501.835,0.000,0.000,179.983);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19461,219.810,190.571,501.835,0.000,0.000,179.983);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19461,214.965,187.366,501.835,0.000,0.000,269.989);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19461,214.965,179.429,501.835,0.000,0.000,269.989);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19461,199.570,179.430,501.835,0.000,0.000,269.989);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19461,214.965,212.665,501.835,0.000,0.000,269.989);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19461,214.965,204.720,501.835,0.000,0.000,269.989);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19461,199.568,204.720,501.835,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19461,214.965,220.600,501.835,0.000,0.000,269.989);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19461,219.810,209.450,501.835,0.000,0.000,179.983);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19461,219.810,219.077,501.835,0.000,0.000,179.983);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19461,210.236,171.328,501.835,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19461,219.810,199.985,501.835,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19369,211.759,195.255,501.835,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19369,214.967,195.254,501.835,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19461,210.243,199.984,499.513,0.000,0.000,179.983);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "CJ_CHIP_M2", -1);
	tmpobjid = CreateDynamicObject(18762,210.801,202.139,500.583,0.000,90.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling3", 0);
	tmpobjid = CreateDynamicObject(18762,210.802,197.860,500.593,0.000,90.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling3", 0);
	tmpobjid = CreateDynamicObject(19460,204.287,187.361,501.835,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence05_256", -1);
	tmpobjid = CreateDynamicObject(19396,204.289,180.945,501.832,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence05_256", -1);
	tmpobjid = CreateDynamicObject(19396,204.287,193.783,501.830,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence05_256", -1);
	tmpobjid = CreateDynamicObject(19460,199.382,195.296,501.835,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence05_256", -1);
	tmpobjid = CreateDynamicObject(19460,194.848,190.402,501.835,0.000,0.000,180.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence05_256", -1);
	tmpobjid = CreateDynamicObject(19460,194.845,180.779,501.835,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence05_256", -1);
	tmpobjid = CreateDynamicObject(19460,199.386,179.438,501.835,0.000,0.000,269.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence05_256", -1);
	tmpobjid = CreateDynamicObject(19460,199.389,204.729,501.835,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence05_256", -1);
	tmpobjid = CreateDynamicObject(19460,199.389,220.595,501.835,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence05_256", -1);
	tmpobjid = CreateDynamicObject(19460,194.843,209.636,501.835,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence05_256", -1);
	tmpobjid = CreateDynamicObject(19460,194.845,219.270,501.835,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence05_256", -1);
	tmpobjid = CreateDynamicObject(19396,204.294,219.080,501.828,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence05_256", -1);
	tmpobjid = CreateDynamicObject(19396,204.292,206.246,501.824,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence05_256", -1);
	tmpobjid = CreateDynamicObject(19460,204.292,212.660,501.835,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence05_256", -1);
	tmpobjid = CreateDynamicObject(2889,214.748,208.300,502.438,0.000,180.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10778, "airportcpark_sfse", "ws_fluorescent2", 0);
	tmpobjid = CreateDynamicObject(19461,207.876,220.608,501.835,0.000,0.000,269.989);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19461,207.277,172.692,501.835,0.000,0.000,269.989);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19397,210.236,177.744,501.835,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19461,204.299,171.327,501.835,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19397,204.299,177.744,501.835,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8433, "residnce01", "residence03_128", -1);
	tmpobjid = CreateDynamicObject(19442,210.960,201.623,499.510,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "CJ_CHIP_M2", -1);
	tmpobjid = CreateDynamicObject(19442,210.966,198.281,499.510,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "CJ_CHIP_M2", -1);
	tmpobjid = CreateDynamicObject(1492,213.986,179.363,500.252,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	tmpobjid = CreateDynamicObject(19389,210.244,177.746,501.828,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "ah_whitiles", -1);
	tmpobjid = CreateDynamicObject(19451,210.244,171.326,501.835,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "ah_whitiles", -1);
	tmpobjid = CreateDynamicObject(19451,218.634,177.763,501.835,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "ah_whitiles", -1);
	tmpobjid = CreateDynamicObject(1492,213.986,177.688,500.252,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	tmpobjid = CreateDynamicObject(19451,218.634,176.095,501.835,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "ah_whitiles", -1);
	tmpobjid = CreateDynamicObject(1492,213.986,176.022,500.252,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	tmpobjid = CreateDynamicObject(19451,218.634,174.430,501.835,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "ah_whitiles", -1);
	tmpobjid = CreateDynamicObject(1492,213.986,174.356,500.252,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	tmpobjid = CreateDynamicObject(19451,214.988,172.761,501.835,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "ah_whitiles", -1);
	tmpobjid = CreateDynamicObject(19375,215.578,174.533,500.010,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "ah_whitiles", -1);
	tmpobjid = CreateDynamicObject(1492,210.212,178.529,500.085,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	tmpobjid = CreateDynamicObject(1492,204.319,178.526,500.085,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	tmpobjid = CreateDynamicObject(19451,199.386,172.760,501.835,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "ah_whitiles", -1);
	tmpobjid = CreateDynamicObject(19451,216.498,174.695,501.835,0.000,0.000,180.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "ah_whitiles", -1);
	tmpobjid = CreateDynamicObject(19451,198.731,174.680,501.835,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "ah_whitiles", -1);
	tmpobjid = CreateDynamicObject(19451,196.574,174.430,501.835,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "ah_whitiles", -1);
	tmpobjid = CreateDynamicObject(19451,196.574,176.094,501.835,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "ah_whitiles", -1);
	tmpobjid = CreateDynamicObject(19451,196.574,177.762,501.835,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "ah_whitiles", -1);
	tmpobjid = CreateDynamicObject(1492,201.201,174.355,500.252,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	tmpobjid = CreateDynamicObject(1492,201.201,176.022,500.252,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	tmpobjid = CreateDynamicObject(1492,201.201,177.687,500.252,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	tmpobjid = CreateDynamicObject(1492,201.201,179.362,500.252,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	tmpobjid = CreateDynamicObject(19451,199.432,179.423,501.835,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "ah_whitiles", -1);
	tmpobjid = CreateDynamicObject(19451,204.296,171.347,501.835,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "ah_whitiles", -1);
	tmpobjid = CreateDynamicObject(19389,204.296,177.742,501.830,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "ah_whitiles", -1);
	tmpobjid = CreateDynamicObject(19375,198.960,174.520,500.010,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "ah_whitiles", -1);
	tmpobjid = CreateDynamicObject(19380,200.000,171.096,503.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", -1);
	tmpobjid = CreateDynamicObject(19380,200.000,171.096,503.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", -1);
	tmpobjid = CreateDynamicObject(19380,200.000,190.365,503.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", -1);
	tmpobjid = CreateDynamicObject(19380,200.000,180.731,503.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", -1);
	tmpobjid = CreateDynamicObject(19380,200.000,200.000,503.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", -1);
	tmpobjid = CreateDynamicObject(19380,200.000,209.631,503.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", -1);
	tmpobjid = CreateDynamicObject(19380,200.000,219.263,503.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", -1);
	tmpobjid = CreateDynamicObject(19380,210.498,219.263,503.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", -1);
	tmpobjid = CreateDynamicObject(19380,210.498,209.631,503.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", -1);
	tmpobjid = CreateDynamicObject(19380,210.498,200.000,503.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", -1);
	tmpobjid = CreateDynamicObject(19380,210.498,190.365,503.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", -1);
	tmpobjid = CreateDynamicObject(19380,210.498,180.731,503.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", -1);
	tmpobjid = CreateDynamicObject(19380,210.498,171.096,503.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", -1);
	tmpobjid = CreateDynamicObject(19380,220.996,171.096,503.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", -1);
	tmpobjid = CreateDynamicObject(19380,220.996,180.731,503.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", -1);
	tmpobjid = CreateDynamicObject(19380,220.996,190.365,503.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", -1);
	tmpobjid = CreateDynamicObject(19380,220.996,200.000,503.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", -1);
	tmpobjid = CreateDynamicObject(19380,220.996,209.631,503.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", -1);
	tmpobjid = CreateDynamicObject(19380,220.996,219.263,503.671,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", -1);
	tmpobjid = CreateDynamicObject(19175,194.925,193.526,502.101,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9593, "hosbibalsfw", "2hospital4sfw", -1);
	tmpobjid = CreateDynamicObject(19172,199.751,204.634,502.023,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 5708, "hospital_lawn", "allsaints_law", -1);
	tmpobjid = CreateDynamicObject(19174,199.919,195.386,501.988,0.000,0.000,180.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 5708, "hospital_lawn", "allsaints_law", -1);
	tmpobjid = CreateDynamicObject(19175,194.932,189.375,502.101,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9593, "hosbibalsfw", "2hospital4sfw", -1);
	tmpobjid = CreateDynamicObject(19175,194.932,185.235,502.101,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9593, "hosbibalsfw", "2hospital4sfw", -1);
	tmpobjid = CreateDynamicObject(19175,194.923,181.182,502.101,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9593, "hosbibalsfw", "2hospital4sfw", -1);
	tmpobjid = CreateDynamicObject(19175,194.923,206.481,502.101,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9593, "hosbibalsfw", "2hospital4sfw", -1);
	tmpobjid = CreateDynamicObject(19175,194.929,210.593,502.101,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9593, "hosbibalsfw", "2hospital4sfw", -1);
	tmpobjid = CreateDynamicObject(19175,194.925,214.811,502.101,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9593, "hosbibalsfw", "2hospital4sfw", -1);
	tmpobjid = CreateDynamicObject(19175,194.923,218.949,502.101,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9593, "hosbibalsfw", "2hospital4sfw", -1);
	tmpobjid = CreateDynamicObject(19457,215.090,179.407,501.815,0.000,0.000,-89.899);
	SetDynamicObjectMaterial(tmpobjid, 0, 14756, "smallsfhs", "ah_whitiles", -1);
	tmpobjid = CreateDynamicObject(19327,210.143,177.757,502.875,0.000,0.000,-90.300);
	SetDynamicObjectMaterialText(tmpobjid, 0, "M", 130, "Ariel", 120, 0, -16776961, 0, 1);
	tmpobjid = CreateDynamicObject(19327,204.417,177.792,502.835,0.000,0.000,89.999);
	SetDynamicObjectMaterialText(tmpobjid, 0, "Ж", 50, "Ariel", 30, 0, -16776961, 0, 1);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(1796,198.407,180.015,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2146,209.682,209.067,500.571,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2518,210.847,173.483,500.096,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2525,215.917,178.608,500.096,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2596,199.869,179.813,502.893,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2827,199.886,195.975,500.584,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2826,203.923,214.805,500.881,0.000,0.000,330.000);
	tmpobjid = CreateDynamicObject(2824,195.229,208.464,500.875,0.000,0.000,80.000);
	tmpobjid = CreateDynamicObject(1796,198.407,182.083,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1796,198.407,184.128,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1796,198.407,186.130,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1796,198.407,188.149,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1796,198.407,190.292,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1796,198.407,192.404,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1796,198.407,194.485,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1740,196.371,181.166,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1740,196.371,183.216,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1740,202.731,185.270,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1740,202.731,187.281,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1740,202.731,189.324,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1740,202.731,191.488,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1740,196.371,193.585,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1740,196.371,191.487,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1740,196.371,189.324,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1740,196.371,187.281,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1740,196.371,185.270,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1740,202.731,183.216,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1796,200.750,190.567,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1796,200.750,188.449,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1796,200.750,186.434,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1796,200.750,184.399,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1796,198.414,205.307,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1796,198.414,207.307,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1796,198.414,219.791,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1796,198.414,209.425,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1796,198.414,211.485,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1796,198.414,213.593,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1796,198.414,215.701,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1796,198.414,217.822,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1740,196.417,206.438,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1740,202.744,208.481,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1740,202.744,210.585,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1740,202.744,212.675,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1740,202.744,214.813,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1740,196.417,218.921,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1740,202.744,216.865,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1740,196.434,216.865,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1740,196.416,214.813,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1740,196.416,212.674,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1740,196.416,210.584,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1740,196.416,208.481,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1796,200.746,215.973,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1796,200.746,213.858,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1796,200.746,211.733,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1796,200.746,209.639,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2146,209.662,211.738,500.571,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2146,209.145,213.904,500.571,0.000,0.000,330.000);
	tmpobjid = CreateDynamicObject(2596,199.766,220.199,502.893,0.000,0.000,359.994);
	tmpobjid = CreateDynamicObject(2826,195.231,187.257,500.886,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2824,195.218,191.509,500.889,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2827,203.869,183.229,500.894,0.000,0.000,290.000);
	tmpobjid = CreateDynamicObject(2146,209.276,189.873,500.571,0.000,0.000,10.000);
	tmpobjid = CreateDynamicObject(2146,209.378,187.373,500.571,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2200,202.462,220.464,500.088,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2200,200.233,220.462,500.088,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2167,219.707,192.800,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2164,210.869,195.164,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2163,215.253,195.154,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2162,219.720,194.574,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2161,212.636,195.175,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1753,196.669,204.031,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1753,200.979,204.027,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1753,203.059,195.986,500.085,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(1753,198.798,195.983,500.085,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(1822,204.425,186.731,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1822,199.328,203.563,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2200,202.455,195.117,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2200,203.716,179.664,500.085,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(1721,212.158,195.755,500.085,0.000,0.000,40.000);
	tmpobjid = CreateDynamicObject(2008,210.707,203.246,500.265,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2008,210.707,203.245,500.265,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2008,210.727,195.908,500.265,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1721,212.445,203.932,500.085,0.000,0.000,129.995);
	tmpobjid = CreateDynamicObject(2009,210.828,191.179,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2009,213.804,188.962,500.085,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(1999,212.800,192.164,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1999,211.828,187.957,500.085,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(1806,211.740,191.160,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1806,213.570,191.701,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1806,212.809,189.119,500.085,0.000,0.000,220.000);
	tmpobjid = CreateDynamicObject(1806,211.011,188.472,500.085,0.000,0.000,219.995);
	tmpobjid = CreateDynamicObject(2183,219.162,190.542,500.085,0.000,0.000,180.250);
	tmpobjid = CreateDynamicObject(1806,216.785,191.022,500.085,0.000,0.000,219.995);
	tmpobjid = CreateDynamicObject(1806,218.757,191.645,500.085,0.000,0.000,139.995);
	tmpobjid = CreateDynamicObject(1806,218.930,188.311,500.085,0.000,0.000,79.993);
	tmpobjid = CreateDynamicObject(1806,216.772,188.031,500.085,0.000,0.000,349.991);
	tmpobjid = CreateDynamicObject(2167,213.968,195.167,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2007,215.192,195.833,501.484,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2007,215.192,196.798,501.484,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2007,215.192,197.759,501.484,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2007,215.192,198.738,501.484,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2007,214.199,201.160,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,215.192,202.156,501.484,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2007,215.192,203.152,501.484,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2007,215.192,204.154,501.484,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2007,214.197,201.160,501.484,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,214.201,202.156,501.484,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,214.203,203.152,501.484,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,214.207,204.153,501.484,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,214.193,198.738,501.484,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,214.195,197.759,501.484,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,214.195,196.797,501.484,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,214.197,195.833,501.484,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,215.192,201.143,501.484,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2007,214.201,202.156,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,214.203,203.152,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,214.207,204.153,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,214.193,198.738,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,214.195,197.759,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,214.195,196.797,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,214.197,195.833,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,214.207,204.153,501.484,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,215.191,204.153,500.085,0.000,0.000,89.994);
	tmpobjid = CreateDynamicObject(2007,215.191,203.152,500.085,0.000,0.000,89.994);
	tmpobjid = CreateDynamicObject(2007,215.191,202.156,500.085,0.000,0.000,89.994);
	tmpobjid = CreateDynamicObject(2007,215.191,201.143,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2007,215.191,198.738,500.085,0.000,0.000,89.994);
	tmpobjid = CreateDynamicObject(2007,215.191,197.759,500.085,0.000,0.000,89.994);
	tmpobjid = CreateDynamicObject(2007,215.191,196.797,500.085,0.000,0.000,89.994);
	tmpobjid = CreateDynamicObject(2007,215.191,195.833,500.085,0.000,0.000,89.994);
	tmpobjid = CreateDynamicObject(1428,215.522,201.414,501.653,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(3396,216.945,212.011,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(3395,213.477,212.005,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(3397,210.953,216.235,500.085,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(3387,210.824,208.216,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2922,210.152,207.294,501.548,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2887,214.617,207.544,503.670,270.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3395,219.115,206.470,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3387,210.823,208.215,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3387,219.031,208.750,500.085,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(3387,219.031,209.858,500.085,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2167,210.802,204.822,500.085,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2167,212.488,204.813,500.085,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(3397,215.617,205.429,500.085,0.000,0.000,269.994);
	tmpobjid = CreateDynamicObject(3389,212.097,213.324,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2167,211.304,220.634,500.085,0.000,0.000,359.994);
	tmpobjid = CreateDynamicObject(3387,218.996,210.970,500.085,0.000,0.000,359.994);
	tmpobjid = CreateDynamicObject(3791,217.748,216.410,500.384,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(927,215.972,204.805,501.752,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(927,214.709,204.806,502.054,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(959,219.125,215.962,501.027,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(958,219.097,215.996,500.963,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2146,217.322,216.436,500.449,0.000,0.000,269.996);
	tmpobjid = CreateDynamicObject(2600,217.994,216.503,502.360,90.000,180.000,90.000);
	tmpobjid = CreateDynamicObject(1353,219.147,216.574,502.657,0.000,270.000,0.000);
	tmpobjid = CreateDynamicObject(3396,216.770,219.921,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(3395,217.798,213.345,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(3397,214.291,213.352,500.085,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(3389,213.459,205.421,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(3389,211.098,213.324,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2167,211.653,204.842,500.085,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2167,212.220,220.634,500.085,0.000,0.000,359.989);
	tmpobjid = CreateDynamicObject(2167,213.132,220.636,500.085,0.000,0.000,359.989);
	tmpobjid = CreateDynamicObject(3387,214.419,219.977,500.085,0.000,0.000,89.989);
	tmpobjid = CreateDynamicObject(3397,210.927,210.900,500.085,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(3387,218.938,217.761,500.085,0.000,0.000,179.989);
	tmpobjid = CreateDynamicObject(3387,218.955,218.755,500.085,0.000,0.000,179.983);
	tmpobjid = CreateDynamicObject(2922,210.152,220.184,501.548,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1523,210.244,218.326,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1523,210.244,205.492,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1523,210.251,193.029,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1523,210.246,180.192,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1523,204.352,180.190,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1523,204.352,193.031,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1523,204.350,205.488,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1523,204.345,218.324,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2200,200.225,195.117,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2200,203.718,204.947,500.085,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(1569,194.882,198.453,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1569,194.876,201.451,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2200,201.492,179.663,500.085,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2200,201.490,204.947,500.085,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(1714,218.315,183.207,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1726,210.500,186.759,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1727,212.966,186.738,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2206,217.173,182.179,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2309,215.854,181.796,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2894,217.152,183.322,501.022,0.000,0.000,280.000);
	tmpobjid = CreateDynamicObject(1822,211.580,184.957,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2357,214.682,183.117,500.480,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2309,214.703,181.820,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2309,213.660,181.826,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2309,213.673,184.115,500.085,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2309,214.919,184.057,500.085,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2309,216.216,184.623,500.085,0.000,0.000,159.994);
	tmpobjid = CreateDynamicObject(14455,219.548,179.757,501.757,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1726,210.854,185.074,500.079,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(14455,214.445,179.638,501.757,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1726,219.208,187.063,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1726,217.690,186.740,500.080,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1727,216.227,186.733,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1822,214.598,186.130,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1808,210.502,183.162,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2146,209.330,184.339,500.571,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2007,219.298,195.865,500.085,0.000,0.000,269.994);
	tmpobjid = CreateDynamicObject(2007,219.298,201.160,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,219.298,202.156,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,214.207,204.153,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,219.298,203.152,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,219.298,204.153,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,219.298,198.738,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,219.298,197.759,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,219.298,196.797,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,219.298,195.833,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,219.296,200.214,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,219.296,199.714,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,219.297,195.865,501.484,0.000,0.000,269.989);
	tmpobjid = CreateDynamicObject(2007,219.297,196.797,501.484,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,219.297,197.759,501.484,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,219.297,198.738,501.484,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,219.295,199.714,501.484,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,219.297,201.160,501.484,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,219.297,201.160,501.484,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,219.295,200.213,501.484,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,219.297,202.156,501.484,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,219.297,203.152,501.484,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2007,219.297,204.153,501.484,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2894,210.751,200.070,501.083,0.000,0.000,279.997);
	tmpobjid = CreateDynamicObject(2827,199.841,204.104,500.584,0.000,0.000,60.000);
	tmpobjid = CreateDynamicObject(2146,206.854,219.949,500.571,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1808,204.550,207.977,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1808,204.576,191.729,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1753,204.891,184.065,500.085,0.000,0.000,89.994);
	tmpobjid = CreateDynamicObject(1753,204.889,188.386,500.085,0.000,0.000,89.994);
	tmpobjid = CreateDynamicObject(1822,199.391,195.454,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2827,204.860,187.229,500.584,0.000,0.000,289.995);
	tmpobjid = CreateDynamicObject(1808,204.548,182.625,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1753,204.983,213.871,500.085,0.000,0.000,89.994);
	tmpobjid = CreateDynamicObject(1753,204.972,209.548,500.085,0.000,0.000,89.994);
	tmpobjid = CreateDynamicObject(1822,204.451,212.214,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1808,204.580,217.319,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2269,211.031,186.787,501.449,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2268,211.800,186.787,501.442,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2267,210.350,186.093,501.713,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2265,218.069,186.783,501.371,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2264,218.837,186.779,501.420,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2263,219.223,186.697,501.402,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2262,219.238,185.751,501.410,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2737,215.917,195.126,501.526,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2737,210.380,189.802,501.526,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2608,217.322,204.434,500.796,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2010,195.626,204.104,500.070,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2010,203.957,203.998,500.070,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2010,203.988,195.925,500.070,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2010,195.679,195.985,500.070,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2251,210.729,198.891,501.925,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2811,199.294,194.830,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2811,199.305,220.102,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2811,199.382,179.905,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2811,199.187,205.551,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2811,211.817,179.945,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2811,213.302,179.969,500.085,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2010,212.626,179.953,500.070,0.000,0.000,100.000);
	tmpobjid = CreateDynamicObject(2853,204.893,212.796,500.584,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2853,195.223,214.865,500.886,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2854,195.098,218.886,500.881,0.000,0.000,300.000);
	tmpobjid = CreateDynamicObject(14684,212.087,175.729,502.037,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2518,210.843,175.492,500.096,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(14684,202.449,174.192,502.037,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2518,203.720,176.419,500.096,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2518,203.718,174.380,500.096,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2525,215.917,176.951,500.096,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2525,215.917,175.281,500.096,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2525,215.917,173.628,500.096,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2525,199.307,173.544,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2525,199.307,175.214,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2525,199.307,176.882,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2525,199.307,178.552,500.085,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2146,209.565,174.212,500.571,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2146,207.906,174.011,500.571,0.000,0.000,330.000);
	tmpobjid = CreateDynamicObject(2146,206.414,173.828,500.571,0.000,0.000,359.996);
	tmpobjid = CreateDynamicObject(2146,205.048,173.998,500.571,0.000,0.000,359.994);
	tmpobjid = CreateDynamicObject(1997,214.623,208.324,500.085,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(14699,209.018,210.001,501.958,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(14699,208.848,197.410,501.958,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(14699,201.505,197.537,501.958,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(14699,209.091,185.563,501.958,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(14699,208.992,176.212,501.958,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(14699,201.755,184.710,501.958,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(14699,201.266,210.087,501.958,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(14699,216.835,213.791,501.958,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(14699,216.690,205.848,501.958,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(14699,216.587,188.576,501.958,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(14699,216.884,180.539,501.958,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(14699,213.981,173.201,501.958,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(14699,204.645,172.690,501.958,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1523,217.414,195.199,500.085,0.000,0.000,0.000);




    //-------------[Мебельный магазин] -----------------------------------------
	tmpobjid = CreateObject(19377,-200.000,-200.000,2000.000,0.000,90.000,0.000);
	SetObjectMaterial(tmpobjid, 0, 14534, "ab_wooziea", "ab_tileDiamond", 0xFFFFFFFF);
	tmpobjid = CreateObject(19377,-210.500,-200.000,2000.000,0.000,90.000,0.000);
	SetObjectMaterial(tmpobjid, 0, 14534, "ab_wooziea", "ab_tileDiamond", 0xFFFFFFFF);
	tmpobjid = CreateObject(19377,-210.500,-190.369,2000.000,0.000,90.000,0.000);
	SetObjectMaterial(tmpobjid, 0, 14534, "ab_wooziea", "ab_tileDiamond", 0xFFFFFFFF);
	tmpobjid = CreateObject(19377,-199.998,-190.369,2000.000,0.000,90.000,0.000);
	SetObjectMaterial(tmpobjid, 0, 14534, "ab_wooziea", "ab_tileDiamond", 0xFFFFFFFF);


	tmpobjid = CreateDynamicObject(19459,-199.567,-204.725,2001.836,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10778, "airportcpark_sfse", "ws_fluorescent2", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 4830, "airport2", "sanairtex1", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19459,-209.197,-204.725,2001.836,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10778, "airportcpark_sfse", "ws_fluorescent2", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 4830, "airport2", "sanairtex1", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19459,-198.839,-199.994,2001.836,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10778, "airportcpark_sfse", "ws_fluorescent2", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 4830, "airport2", "sanairtex1", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19459,-198.839,-190.373,2001.836,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10778, "airportcpark_sfse", "ws_fluorescent2", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 4830, "airport2", "sanairtex1", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19459,-213.425,-199.988,2001.836,0.000,0.000,180.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10778, "airportcpark_sfse", "ws_fluorescent2", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 4830, "airport2", "sanairtex1", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19459,-213.425,-190.356,2001.836,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 10778, "airportcpark_sfse", "ws_fluorescent2", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 4830, "airport2", "sanairtex1", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19377,-210.501,-180.738,2000.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14534, "ab_wooziea", "ab_tileDiamond", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19377,-199.998,-180.738,2000.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14534, "ab_wooziea", "ab_tileDiamond", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(16096,-210.554,-185.358,1998.310,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 2028, "cj_games", "CJ_speaker4", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19459,-198.839,-180.746,2001.836,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10778, "airportcpark_sfse", "ws_fluorescent2", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 4830, "airport2", "sanairtex1", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19459,-213.423,-180.723,2001.836,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10778, "airportcpark_sfse", "ws_fluorescent2", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 4830, "airport2", "sanairtex1", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19459,-208.686,-180.748,2001.836,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10778, "airportcpark_sfse", "ws_fluorescent2", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 4830, "airport2", "sanairtex1", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19395,-202.270,-180.748,2001.836,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10778, "airportcpark_sfse", "ws_fluorescent2", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 1569, "adam_v_doort", "ws_guardhousedoor", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 1569, "adam_v_doort", "ws_guardhousedoor", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19459,-195.850,-180.748,2001.836,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10778, "airportcpark_sfse", "ws_fluorescent2", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 4830, "airport2", "sanairtex1", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(2435,-202.587,-184.270,2000.086,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3967, "cj_airprt", "Road_blank256HV", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 2028, "cj_games", "CJ_speaker4", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(2434,-203.720,-184.106,2000.086,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3967, "cj_airprt", "Road_blank256HV", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 2028, "cj_games", "CJ_speaker4", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 3, 14535, "ab_wooziec", "ab_woodborder", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 4, 14535, "ab_wooziec", "ab_woodborder", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 5, 14535, "ab_wooziec", "ab_woodborder", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 6, 14535, "ab_wooziec", "ab_woodborder", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(2435,-201.656,-184.270,2000.086,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3967, "cj_airprt", "Road_blank256HV", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 2028, "cj_games", "CJ_speaker4", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(2435,-200.729,-184.270,2000.086,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3967, "cj_airprt", "Road_blank256HV", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 2028, "cj_games", "CJ_speaker4", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(2435,-203.720,-183.179,2000.086,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3967, "cj_airprt", "Road_blank256HV", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 2028, "cj_games", "CJ_speaker4", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(2435,-203.720,-182.250,2000.086,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3967, "cj_airprt", "Road_blank256HV", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 2028, "cj_games", "CJ_speaker4", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(2435,-203.720,-181.320,2000.086,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3967, "cj_airprt", "Road_blank256HV", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 2028, "cj_games", "CJ_speaker4", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19380,-210.500,-180.738,2003.666,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19380,-200.000,-180.738,2003.666,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19380,-210.500,-200.000,2003.666,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19380,-200.000,-200.000,2003.666,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19380,-210.500,-190.369,2003.666,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19380,-200.000,-190.369,2003.666,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19459,-208.690,-176.402,2001.836,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10778, "airportcpark_sfse", "ws_fluorescent2", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 4830, "airport2", "sanairtex1", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19459,-199.072,-176.404,2001.836,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10778, "airportcpark_sfse", "ws_fluorescent2", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 4830, "airport2", "sanairtex1", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(1492,-203.014,-180.768,2000.086,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1569, "adam_v_doort", "ws_guardhousedoor", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 1569, "adam_v_doort", "ws_guardhousedoor", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(1536,-206.460,-204.699,2000.086,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 1569, "adam_v_doort", "ws_guardhousedoor", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 1569, "adam_v_doort", "ws_guardhousedoor", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(18762,-203.680,-195.563,2002.586,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 2028, "cj_games", "CJ_speaker4", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(18762,-207.680,-195.563,2002.586,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 2028, "cj_games", "CJ_speaker4", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(18075,-205.804,-187.341,2003.599,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 2951, "a51_labdoor", "washapartwall1_256", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(18075,-205.682,-202.856,2003.599,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 2951, "a51_labdoor", "washapartwall1_256", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19459,-207.117,-174.100,2001.836,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10778, "airportcpark_sfse", "ws_fluorescent2", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 4830, "airport2", "sanairtex1", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19395,-207.106,-179.050,2001.836,0.000,0.000,180.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10778, "airportcpark_sfse", "ws_fluorescent2", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 1569, "adam_v_doort", "ws_guardhousedoor", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 2, 1569, "adam_v_doort", "ws_guardhousedoor", 0xFFFFFFFF);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(1723,-210.401,-203.158,2000.086,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(1724,-208.628,-203.160,2000.086,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(1726,-212.309,-200.472,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1727,-209.641,-200.473,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1728,-210.289,-194.548,2000.086,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(1729,-209.102,-194.580,2000.086,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2173,-201.223,-198.494,2000.086,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2180,-201.190,-196.541,2000.086,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2205,-202.505,-200.417,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2206,-200.869,-203.115,2000.086,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2207,-200.748,-189.917,2000.086,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2315,-202.389,-194.664,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2319,-202.337,-192.343,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1766,-210.276,-190.382,2000.086,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(1763,-210.602,-198.703,2000.086,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(1757,-212.287,-191.949,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1753,-205.248,-177.057,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1759,-208.664,-198.684,2000.086,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(1758,-209.652,-191.988,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1767,-208.580,-190.391,2000.086,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2291,-209.664,-196.378,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2773,-204.205,-191.095,2000.603,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2773,-204.205,-199.701,2000.603,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2773,-207.295,-191.095,2000.603,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2773,-207.295,-199.700,2000.603,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2773,-203.197,-188.667,2000.603,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2773,-200.358,-188.671,2000.603,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2773,-208.162,-188.701,2000.603,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2773,-211.503,-188.697,2000.603,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2773,-207.164,-186.886,2000.603,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2773,-207.166,-183.919,2000.603,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2773,-208.177,-181.820,2000.603,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2773,-211.485,-181.796,2000.603,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1514,-202.513,-184.190,2001.406,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2773,-204.177,-203.406,2000.603,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2773,-207.328,-203.354,2000.603,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2265,-203.686,-196.548,2001.432,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2264,-207.712,-196.559,2001.453,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2261,-207.673,-194.572,2001.324,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2260,-203.654,-194.598,2001.395,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(1753,-212.327,-196.366,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2164,-200.212,-176.498,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2167,-201.132,-176.486,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1998,-199.434,-180.102,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(14455,-206.830,-175.707,2001.758,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1822,-205.035,-178.994,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2894,-199.444,-180.214,2000.899,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2286,-204.169,-176.511,2001.902,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2606,-199.985,-180.514,2002.197,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2606,-199.985,-180.514,2002.652,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2606,-199.983,-180.514,2003.109,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2737,-205.039,-180.623,2001.610,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2063,-208.539,-176.779,2000.994,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2197,-210.208,-177.488,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2197,-210.897,-177.483,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2197,-211.585,-177.481,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(372,-209.598,-176.817,2000.901,86.000,269.999,90.000);
	tmpobjid = CreateDynamicObject(372,-208.746,-176.718,2000.901,85.995,269.994,310.000);
	tmpobjid = CreateDynamicObject(356,-208.244,-176.809,2000.918,83.676,251.631,108.473);
	tmpobjid = CreateDynamicObject(356,-207.574,-176.830,2001.354,83.671,251.630,308.468);
	tmpobjid = CreateDynamicObject(346,-209.201,-176.710,2001.355,87.192,78.333,199.111);
	tmpobjid = CreateDynamicObject(346,-209.020,-176.712,2001.355,87.187,78.332,199.110);
	tmpobjid = CreateDynamicObject(346,-208.841,-176.716,2001.355,87.187,78.332,229.110);
	tmpobjid = CreateDynamicObject(346,-208.669,-176.876,2001.350,87.182,78.327,359.108);
	tmpobjid = CreateDynamicObject(2605,-212.625,-179.623,2000.484,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2356,-211.804,-179.100,2000.086,0.000,0.000,130.000);
	tmpobjid = CreateDynamicObject(2356,-199.089,-179.494,2000.086,0.000,0.000,79.995);
	tmpobjid = CreateDynamicObject(3029,-207.119,-179.979,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2063,-208.526,-180.333,2000.994,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(1252,-209.195,-180.304,2001.021,272.017,262.394,182.122);
	tmpobjid = CreateDynamicObject(1252,-207.664,-180.238,2001.021,272.015,262.391,172.120);
	tmpobjid = CreateDynamicObject(1252,-208.401,-180.259,2001.021,272.010,262.386,172.117);
	tmpobjid = CreateDynamicObject(1550,-210.149,-180.279,2000.479,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1578,-208.807,-180.309,2000.420,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1578,-207.518,-180.343,2000.420,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1579,-208.149,-180.332,2000.427,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1579,-209.389,-180.350,2000.427,0.000,0.000,0.000);
	//[-------------------------- Магазин электроники ------------------------------------]

	tmpobjid = CreateObject(19377,-222.839,-535.273,2000.000,0.000,90.000,0.000);
	SetObjectMaterial(tmpobjid, 0, 8534, "tikimotel", "sa_wood01_128", 0);
	tmpobjid = CreateObject(19377,-233.339,-535.273,2000.000,0.000,90.000,0.000);
	SetObjectMaterial(tmpobjid, 0, 8534, "tikimotel", "sa_wood01_128", 0);
	tmpobjid = CreateObject(19377,-233.339,-525.643,2000.000,0.000,90.000,0.000);
	SetObjectMaterial(tmpobjid, 0, 8534, "tikimotel", "sa_wood01_128", 0);
	tmpobjid = CreateObject(19377,-222.838,-525.642,2000.000,0.000,90.000,0.000);
	SetObjectMaterial(tmpobjid, 0, 8534, "tikimotel", "sa_wood01_128", 0);
	tmpobjid = CreateDynamicObject(19459,-222.407,-539.998,2001.836,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9908, "smallertxd", "sf_downtown_1097b", 0);
	tmpobjid = CreateDynamicObject(19459,-232.037,-539.999,2001.836,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9908, "smallertxd", "sf_downtown_1097b", 0);
	tmpobjid = CreateDynamicObject(19459,-221.679,-535.268,2001.836,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9908, "smallertxd", "sf_downtown_1097b", 0);
	tmpobjid = CreateDynamicObject(19459,-221.679,-525.645,2001.836,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9908, "smallertxd", "sf_downtown_1097b", 0);
	tmpobjid = CreateDynamicObject(19459,-236.264,-535.261,2001.836,0.000,0.000,180.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9908, "smallertxd", "sf_downtown_1097b", 0);
	tmpobjid = CreateDynamicObject(19459,-236.264,-525.629,2001.836,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 9908, "smallertxd", "sf_downtown_1097b", 0);
	tmpobjid = CreateDynamicObject(19377,-233.341,-516.011,2000.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8534, "tikimotel", "sa_wood01_128", 0);
	tmpobjid = CreateDynamicObject(19377,-222.838,-516.011,2000.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8534, "tikimotel", "sa_wood01_128", 0);
	tmpobjid = CreateDynamicObject(16096,-233.393,-520.632,1998.310,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4586, "skyscrap3_lan2", "sl_skyscrpr05wall1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14815, "whore_main", "WH_tiles2", 0);
	tmpobjid = CreateDynamicObject(19459,-221.679,-516.018,2001.836,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9908, "smallertxd", "sf_downtown_1097b", 0);
	tmpobjid = CreateDynamicObject(19459,-236.263,-515.997,2001.836,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9908, "smallertxd", "sf_downtown_1097b", 0);
	tmpobjid = CreateDynamicObject(19459,-231.526,-516.020,2001.836,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9908, "smallertxd", "sf_downtown_1097b", 0);
	tmpobjid = CreateDynamicObject(19395,-225.110,-516.021,2001.836,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9908, "smallertxd", "sf_downtown_1097b", 0);
	tmpobjid = CreateDynamicObject(19459,-218.690,-516.020,2001.836,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9908, "smallertxd", "sf_downtown_1097b", 0);
	tmpobjid = CreateDynamicObject(19380,-233.339,-516.011,2003.666,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6871, "vegascourtbld", "courthse1_256", 0);
	tmpobjid = CreateDynamicObject(19380,-222.839,-516.011,2003.666,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6871, "vegascourtbld", "courthse1_256", 0);
	tmpobjid = CreateDynamicObject(19380,-233.339,-535.273,2003.666,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6871, "vegascourtbld", "courthse1_256", 0);
	tmpobjid = CreateDynamicObject(19380,-222.839,-535.273,2003.666,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6871, "vegascourtbld", "courthse1_256", 0);
	tmpobjid = CreateDynamicObject(19380,-233.339,-525.642,2003.666,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6871, "vegascourtbld", "courthse1_256", 0);
	tmpobjid = CreateDynamicObject(19380,-222.839,-525.642,2003.666,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6871, "vegascourtbld", "courthse1_256", 0);
	tmpobjid = CreateDynamicObject(19459,-221.912,-511.677,2001.836,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9908, "smallertxd", "sf_downtown_1097b", 0);
	tmpobjid = CreateDynamicObject(1492,-225.854,-516.041,2000.086,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	tmpobjid = CreateDynamicObject(1536,-229.300,-539.973,2000.086,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 1569, "adam_v_doort", "ws_guardhousedoor", 0);
	tmpobjid = CreateDynamicObject(18762,-226.520,-530.835,2002.586,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6871, "vegascourtbld", "marbletilewal1_256", 0);
	tmpobjid = CreateDynamicObject(18762,-230.520,-530.835,2002.586,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6871, "vegascourtbld", "marbletilewal1_256", 0);
	tmpobjid = CreateDynamicObject(19459,-229.903,-511.140,2001.836,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9908, "smallertxd", "sf_downtown_1097b", 0);
	tmpobjid = CreateDynamicObject(19459,-231.545,-511.677,2001.836,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9908, "smallertxd", "sf_downtown_1097b", 0);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(2315,-222.496,-526.854,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1753,-228.087,-512.330,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2773,-227.044,-526.369,2000.603,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2773,-227.044,-534.973,2000.603,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2773,-230.135,-526.368,2000.603,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2773,-230.172,-534.973,2000.603,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2773,-226.037,-523.940,2000.603,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2773,-223.198,-523.945,2000.603,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2773,-231.002,-523.973,2000.603,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2773,-234.343,-523.971,2000.603,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2773,-230.003,-522.158,2000.603,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2773,-230.005,-519.192,2000.603,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2435,-225.427,-519.544,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2434,-226.560,-519.380,2000.086,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2435,-224.496,-519.544,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2435,-223.569,-519.544,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2435,-226.559,-518.452,2000.086,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2435,-226.559,-517.523,2000.086,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2435,-226.559,-516.593,2000.086,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2773,-231.017,-517.093,2000.603,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2773,-234.324,-517.070,2000.603,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1514,-225.352,-519.463,2001.406,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2773,-227.017,-538.679,2000.603,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2773,-230.168,-538.627,2000.603,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(18075,-228.644,-522.614,2003.599,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(18075,-228.522,-538.130,2003.599,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2164,-223.052,-511.770,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2167,-223.972,-511.760,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1998,-222.274,-515.376,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1822,-227.875,-514.267,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2894,-222.283,-515.486,2000.899,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2286,-229.800,-514.486,2001.902,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2606,-222.825,-515.787,2002.197,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2606,-222.824,-515.787,2002.652,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2606,-222.823,-515.787,2003.109,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2356,-221.929,-514.768,2000.086,0.000,0.000,79.995);
	tmpobjid = CreateDynamicObject(1518,-222.429,-536.940,2000.862,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1747,-222.285,-538.002,2000.582,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1748,-222.324,-533.242,2000.582,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1750,-222.336,-529.543,2000.582,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1749,-222.447,-530.498,2000.582,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1751,-222.330,-531.354,2000.582,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1752,-222.399,-528.395,2000.582,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1781,-222.334,-532.312,2000.582,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1782,-231.526,-526.635,2000.665,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1783,-231.610,-537.928,2000.651,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1785,-222.556,-538.648,2000.682,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1786,-222.410,-525.531,2000.574,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1787,-231.488,-525.434,2000.651,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1788,-225.575,-526.580,2000.650,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1790,-225.509,-525.458,2000.651,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1791,-222.433,-533.976,2000.582,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1792,-222.414,-526.989,2000.582,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1809,-225.412,-537.901,2000.582,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2002,-228.491,-516.505,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2100,-235.664,-535.046,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2101,-225.552,-539.052,2000.582,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2102,-231.479,-531.190,2000.582,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2103,-225.560,-530.746,2000.582,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2104,-235.966,-531.622,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2227,-235.960,-525.416,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2229,-235.765,-538.992,2000.086,0.000,0.000,120.000);
	tmpobjid = CreateDynamicObject(2230,-235.858,-527.809,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2231,-235.901,-529.557,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2232,-235.755,-532.843,2000.683,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2233,-235.973,-524.567,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2316,-222.644,-534.838,2000.931,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2315,-222.496,-529.270,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2315,-222.496,-531.687,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2315,-225.513,-539.242,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2315,-222.494,-536.524,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2315,-222.496,-538.941,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2595,-222.500,-535.898,2000.938,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2596,-226.552,-531.630,2002.668,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2596,-230.532,-531.632,2002.668,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2700,-229.757,-530.896,2002.624,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2700,-227.287,-530.809,2002.624,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2827,-227.382,-513.742,2000.584,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1718,-231.513,-539.075,2000.641,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1717,-235.050,-538.783,2000.086,0.000,0.000,44.000);
	tmpobjid = CreateDynamicObject(2229,-235.378,-536.486,2000.086,0.000,0.000,49.998);
	tmpobjid = CreateDynamicObject(2232,-235.677,-530.815,2000.683,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2315,-222.494,-534.105,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2315,-225.513,-531.623,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2102,-231.470,-530.162,2000.582,0.000,0.000,300.000);
	tmpobjid = CreateDynamicObject(2231,-235.864,-528.932,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2230,-235.867,-527.307,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2233,-235.963,-526.222,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2315,-231.487,-526.773,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2315,-231.487,-539.264,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2315,-231.487,-531.561,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2315,-225.513,-526.750,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2596,-230.494,-530.031,2002.668,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2596,-226.489,-530.037,2002.668,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(1753,-228.890,-515.416,2000.086,0.000,0.000,90.000);
	//-----------------------[Интерьер банд]------------------------------------------
	tmpobjid = CreateObject(19377,-500.000,-300.000,2000.000,0.000,90.000,0.000);
	SetObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0);
	tmpobjid = CreateObject(19377,-500.000,-290.369,2000.000,0.000,90.000,0.000);
	SetObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0);
	tmpobjid = CreateDynamicObject(19459,-500.433,-304.726,2001.836,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "pax256hi", 0);
	tmpobjid = CreateDynamicObject(19459,-505.161,-300.000,2001.836,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "pax256hi", 0);
	tmpobjid = CreateDynamicObject(19459,-507.463,-295.269,2001.836,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "pax256hi", 0);
	tmpobjid = CreateDynamicObject(19459,-496.316,-299.994,2001.836,0.000,0.000,180.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "pax256hi", 0);
	tmpobjid = CreateDynamicObject(19459,-499.528,-303.205,2001.836,0.000,0.000,180.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "pax256hi", 0);
	tmpobjid = CreateDynamicObject(19395,-499.527,-296.786,2001.836,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "pax256hi", 0);
	tmpobjid = CreateDynamicObject(19395,-501.044,-295.269,2001.836,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "pax256hi", 0);
	tmpobjid = CreateDynamicObject(19459,-496.316,-290.368,2001.836,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "pax256hi", 0);
	tmpobjid = CreateDynamicObject(19377,-510.496,-290.371,2000.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0);
	tmpobjid = CreateDynamicObject(19459,-508.322,-290.540,2001.836,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "pax256hi", 0);
	tmpobjid = CreateDynamicObject(2296,-505.165,-288.638,2000.086,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14738, "whorebar", "AH_whoredoor", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14739, "whorebits", "AH_bartop", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14739, "whorebits", "AH_bartop", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14739, "whorebits", "AH_bartop", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 14739, "whorebits", "AH_bartop", 0);
	SetDynamicObjectMaterial(tmpobjid, 5, 14739, "whorebits", "AH_bartop", 0);
	SetDynamicObjectMaterial(tmpobjid, 6, 14739, "whorebits", "AH_bartop", 0);
	SetDynamicObjectMaterial(tmpobjid, 7, 8401, "vgshpground", "vgspawnroof01_128", 0);
	tmpobjid = CreateDynamicObject(19395,-501.055,-301.759,2001.836,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "pax256hi", 0);
	tmpobjid = CreateDynamicObject(19459,-507.468,-301.760,2001.836,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "pax256hi", 0);
	tmpobjid = CreateDynamicObject(19379,-504.871,-306.666,2000.001,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "bwtilebroth", 0);
	tmpobjid = CreateDynamicObject(19397,-501.096,-301.765,2001.838,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 1677, "wshxrefhse2", "tilestone256", 0);
	tmpobjid = CreateDynamicObject(19461,-507.515,-301.765,2001.838,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 1677, "wshxrefhse2", "tilestone256", 0);
	tmpobjid = CreateDynamicObject(19461,-505.144,-306.651,2001.838,0.000,0.000,180.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 1677, "wshxrefhse2", "tilestone256", 0);
	tmpobjid = CreateDynamicObject(19461,-504.270,-304.720,2001.838,0.000,0.000,269.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 1677, "wshxrefhse2", "tilestone256", 0);
	tmpobjid = CreateDynamicObject(19461,-499.562,-306.664,2001.838,0.000,0.000,359.989);
	SetDynamicObjectMaterial(tmpobjid, 0, 1677, "wshxrefhse2", "tilestone256", 0);
	tmpobjid = CreateDynamicObject(19377,-508.532,-290.373,1996.328,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0);
	tmpobjid = CreateDynamicObject(19459,-507.458,-288.252,2001.836,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "pax256hi", 0);
	tmpobjid = CreateDynamicObject(19395,-501.043,-288.252,2001.836,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "pax256hi", 0);
	tmpobjid = CreateDynamicObject(19459,-494.621,-288.252,2001.836,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "pax256hi", 0);
	tmpobjid = CreateDynamicObject(14411,-501.170,-283.398,1996.895,0.000,0.000,180.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0);
	tmpobjid = CreateDynamicObject(19459,-499.140,-283.359,2001.836,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "pax256hi", 0);
	tmpobjid = CreateDynamicObject(19459,-499.141,-281.524,1998.163,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "pax256hi", 0);
	tmpobjid = CreateDynamicObject(19377,-493.977,-280.613,2000.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0);
	tmpobjid = CreateDynamicObject(19377,-498.032,-280.742,1996.328,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0);
	tmpobjid = CreateDynamicObject(19459,-499.139,-273.729,2001.836,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "pax256hi", 0);
	tmpobjid = CreateDynamicObject(19459,-503.195,-283.506,2001.836,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "pax256hi", 0);
	tmpobjid = CreateDynamicObject(19459,-503.196,-284.881,1998.163,0.000,0.000,179.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "pax256hi", 0);
	tmpobjid = CreateDynamicObject(19377,-508.355,-280.743,2000.000,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0);
	tmpobjid = CreateDynamicObject(19459,-503.691,-276.843,1998.163,0.000,0.000,269.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "pax256hi", 0);
	tmpobjid = CreateDynamicObject(19380,-500.000,-290.369,2003.675,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3879, "ws_jetty_sfx", "ws_algae_concrete", 0);
	tmpobjid = CreateDynamicObject(19380,-500.000,-300.000,2003.675,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3879, "ws_jetty_sfx", "ws_algae_concrete", 0);
	tmpobjid = CreateDynamicObject(19380,-510.496,-290.369,2003.675,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3879, "ws_jetty_sfx", "ws_algae_concrete", 0);
	tmpobjid = CreateDynamicObject(19380,-498.527,-284.368,2002.889,0.000,56.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3879, "ws_jetty_sfx", "ws_algae_concrete", 0);
	tmpobjid = CreateDynamicObject(19380,-508.532,-280.736,1999.963,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3879, "ws_jetty_sfx", "ws_algae_concrete", 0);
	tmpobjid = CreateDynamicObject(19377,-508.532,-280.742,1996.328,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ws_rooftarmac1", 0);
	tmpobjid = CreateDynamicObject(19380,-498.031,-275.248,1999.963,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3879, "ws_jetty_sfx", "ws_algae_concrete", 0);
	tmpobjid = CreateDynamicObject(19395,-503.196,-278.458,1998.165,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "pax256hi", 0);
	tmpobjid = CreateDynamicObject(19456,-508.102,-276.864,1998.165,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18200, "w_town2cs_t", "dogpillar_128", 0);
	tmpobjid = CreateDynamicObject(19393,-503.208,-278.462,1998.165,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18200, "w_town2cs_t", "dogpillar_128", 0);
	tmpobjid = CreateDynamicObject(19456,-503.208,-284.884,1998.165,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18200, "w_town2cs_t", "dogpillar_128", 0);
	tmpobjid = CreateDynamicObject(19456,-510.658,-281.509,1998.165,0.000,0.000,180.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18200, "w_town2cs_t", "dogpillar_128", 0);
	tmpobjid = CreateDynamicObject(19456,-511.324,-286.372,1998.165,0.000,0.000,269.994);
	SetDynamicObjectMaterial(tmpobjid, 0, 18200, "w_town2cs_t", "dogpillar_128", 0);
	tmpobjid = CreateDynamicObject(19393,-504.903,-286.372,1998.165,0.000,0.000,90.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18200, "w_town2cs_t", "dogpillar_128", 0);
	tmpobjid = CreateDynamicObject(19456,-503.208,-294.514,1998.165,0.000,0.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18200, "w_town2cs_t", "dogpillar_128", 0);
	tmpobjid = CreateDynamicObject(19456,-508.106,-295.101,1998.165,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18200, "w_town2cs_t", "dogpillar_128", 0);
	tmpobjid = CreateDynamicObject(19380,-508.621,-290.363,1999.963,0.000,90.000,0.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3879, "ws_jetty_sfx", "ws_algae_concrete", 0);
	tmpobjid = CreateDynamicObject(19456,-511.188,-290.860,1998.165,0.000,0.000,180.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18200, "w_town2cs_t", "dogpillar_128", 0);
	tmpobjid = CreateDynamicObject(913,-496.898,-289.472,2000.917,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14739, "whorebits", "AH_bartop", 0);
	tmpobjid = CreateDynamicObject(912,-496.778,-290.826,2000.652,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14739, "whorebits", "AH_bartop", 0);
	tmpobjid = CreateDynamicObject(2955,-497.276,-304.688,2001.277,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18202, "w_towncs_t", "husdr", 0);
	tmpobjid = CreateDynamicObject(1417,-496.855,-292.055,2000.352,0.000,0.000,270.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14739, "whorebits", "AH_bartop", 0);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(1709,-506.515,-294.485,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1710,-503.968,-294.490,2000.081,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2103,-504.069,-288.824,2002.572,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2149,-502.553,-295.809,2001.295,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1729,-502.743,-294.149,2000.086,0.000,0.000,220.000);
	tmpobjid = CreateDynamicObject(2255,-507.752,-292.975,2001.553,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2256,-508.226,-291.361,2001.975,0.000,14.000,90.000);
	tmpobjid = CreateDynamicObject(2334,-504.561,-298.858,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2335,-502.588,-295.871,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2338,-504.576,-295.855,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2315,-505.760,-292.701,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2315,-505.731,-292.704,2000.081,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1738,-504.852,-300.071,2000.740,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1778,-496.694,-288.338,2000.119,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2332,-509.729,-295.170,1996.878,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2336,-504.567,-297.859,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2337,-503.593,-295.869,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2518,-503.390,-302.364,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2520,-503.555,-302.549,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2514,-504.562,-303.980,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2788,-500.018,-297.954,2000.615,0.000,0.000,70.000);
	tmpobjid = CreateDynamicObject(2764,-500.231,-299.196,2000.490,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2764,-501.220,-299.187,2000.490,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2788,-501.131,-298.265,2000.615,0.000,0.000,99.999);
	tmpobjid = CreateDynamicObject(2764,-503.535,-301.139,2000.490,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2852,-504.341,-292.742,2000.582,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2851,-501.266,-299.250,2000.910,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2850,-500.239,-299.192,2000.910,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2849,-503.522,-301.212,2000.910,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2788,-500.268,-299.970,2000.615,0.000,0.000,299.997);
	tmpobjid = CreateDynamicObject(2788,-501.196,-299.678,2000.615,0.000,0.000,269.992);
	tmpobjid = CreateDynamicObject(2788,-504.725,-301.335,2000.615,0.000,0.000,219.997);
	tmpobjid = CreateDynamicObject(2788,-502.367,-301.292,2000.615,0.000,0.000,329.995);
	tmpobjid = CreateDynamicObject(2848,-503.494,-295.739,2001.142,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2834,-503.354,-302.970,2000.089,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1208,-499.928,-302.212,2000.088,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1208,-499.928,-302.889,2000.088,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2372,-501.483,-304.438,2000.088,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2381,-501.002,-304.213,2000.750,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(14782,-503.670,-282.635,1997.431,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2819,-504.703,-283.944,1996.415,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2629,-509.483,-281.591,1996.415,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2628,-509.341,-277.417,1996.415,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2718,-501.165,-276.929,1999.175,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2967,-504.673,-292.996,2000.582,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2915,-509.286,-280.072,1996.536,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2913,-510.016,-282.045,1997.391,0.000,90.000,90.000);
	tmpobjid = CreateDynamicObject(2629,-509.483,-283.598,1996.415,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2629,-509.475,-285.463,1996.415,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2913,-509.997,-284.037,1997.391,0.000,90.000,90.000);
	tmpobjid = CreateDynamicObject(2913,-509.997,-285.903,1997.391,0.000,90.000,90.000);
	tmpobjid = CreateDynamicObject(2628,-509.319,-278.927,1996.415,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2915,-509.287,-279.752,1996.536,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2612,-509.519,-286.497,1997.836,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2051,-508.319,-286.497,1997.988,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(14699,-505.042,-284.238,1998.235,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(14699,-504.903,-292.812,1998.235,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2063,-503.565,-287.757,1997.323,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2063,-503.566,-290.361,1997.323,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2063,-506.260,-287.790,1997.323,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2063,-506.263,-290.395,1997.323,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2063,-506.786,-287.770,1997.323,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2063,-506.789,-290.377,1997.323,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(2063,-503.567,-292.966,1997.323,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(1709,-509.708,-294.031,2000.086,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2046,-504.546,-294.867,1998.003,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2046,-505.541,-294.865,1998.003,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2063,-510.778,-290.385,1997.323,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2063,-510.778,-287.779,1997.323,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(2046,-506.542,-294.869,1998.003,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2046,-507.661,-294.872,1998.003,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2046,-508.701,-294.869,1998.003,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2046,-509.742,-294.872,1998.003,0.000,0.000,179.994);
	tmpobjid = CreateDynamicObject(2063,-510.776,-292.992,1997.323,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1737,-509.304,-286.979,1996.248,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1810,-509.194,-287.992,1996.415,0.000,0.000,140.000);
	tmpobjid = CreateDynamicObject(336,-502.451,-293.829,2000.293,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(336,-505.569,-292.990,2000.543,0.000,270.000,320.000);
	tmpobjid = CreateDynamicObject(335,-505.795,-292.420,2000.525,358.304,271.060,22.015);
	tmpobjid = CreateDynamicObject(336,-510.812,-288.151,1996.735,0.000,270.000,80.000);
	tmpobjid = CreateDynamicObject(336,-510.648,-288.179,1996.735,0.000,270.000,85.996);
	tmpobjid = CreateDynamicObject(336,-510.709,-287.494,1996.735,0.000,270.000,101.995);
	tmpobjid = CreateDynamicObject(336,-510.897,-287.170,1996.735,0.000,270.000,91.991);
	tmpobjid = CreateDynamicObject(336,-510.645,-287.489,1996.735,0.000,270.000,291.988);
	tmpobjid = CreateDynamicObject(336,-510.731,-289.675,1996.735,0.000,270.000,281.983);
	tmpobjid = CreateDynamicObject(336,-510.736,-289.981,1996.735,0.000,270.000,281.980);
	tmpobjid = CreateDynamicObject(336,-510.628,-289.622,1996.735,0.000,270.000,281.980);
	tmpobjid = CreateDynamicObject(336,-510.757,-290.213,1996.735,0.000,270.000,101.980);
	tmpobjid = CreateDynamicObject(341,-510.764,-292.557,1997.015,359.389,35.502,90.435);
	tmpobjid = CreateDynamicObject(341,-510.809,-293.083,1997.015,359.384,35.496,70.433);
	tmpobjid = CreateDynamicObject(341,-510.798,-293.766,1997.015,359.384,35.491,70.433);
	tmpobjid = CreateDynamicObject(344,-510.834,-287.101,1997.463,356.500,0.000,0.000);
	tmpobjid = CreateDynamicObject(344,-510.734,-287.420,1997.463,356.495,0.000,0.000);
	tmpobjid = CreateDynamicObject(344,-510.739,-287.252,1997.463,356.495,0.000,0.000);
	tmpobjid = CreateDynamicObject(344,-510.985,-287.321,1997.463,356.495,0.000,0.000);
	tmpobjid = CreateDynamicObject(344,-510.971,-286.971,1997.463,356.495,0.000,0.000);
	tmpobjid = CreateDynamicObject(344,-510.799,-286.984,1997.463,356.495,0.000,0.000);
	tmpobjid = CreateDynamicObject(344,-510.645,-287.139,1997.463,356.495,0.000,0.000);
	tmpobjid = CreateDynamicObject(344,-510.678,-287.972,1997.463,356.495,0.000,0.000);
	tmpobjid = CreateDynamicObject(344,-510.691,-288.305,1997.463,356.495,0.000,0.000);
	tmpobjid = CreateDynamicObject(344,-510.778,-288.199,1997.463,356.495,0.000,0.000);
	tmpobjid = CreateDynamicObject(344,-510.791,-288.532,1997.463,356.495,0.000,0.000);
	tmpobjid = CreateDynamicObject(344,-510.804,-288.864,1997.463,356.495,0.000,0.000);
	tmpobjid = CreateDynamicObject(344,-510.768,-288.697,1997.463,356.495,0.000,0.000);
	tmpobjid = CreateDynamicObject(344,-510.651,-288.535,1997.463,356.495,0.000,0.000);
	tmpobjid = CreateDynamicObject(346,-503.743,-286.618,1997.246,89.791,0.004,25.786);
	tmpobjid = CreateDynamicObject(346,-503.735,-286.787,1997.246,89.791,0.000,25.784);
	tmpobjid = CreateDynamicObject(346,-503.739,-286.941,1997.246,89.791,0.000,25.784);
	tmpobjid = CreateDynamicObject(346,-503.731,-287.108,1997.246,89.791,0.000,25.784);
	tmpobjid = CreateDynamicObject(346,-503.729,-287.276,1997.246,89.791,0.000,25.784);
	tmpobjid = CreateDynamicObject(346,-503.721,-287.444,1997.246,89.791,0.000,25.784);
	tmpobjid = CreateDynamicObject(346,-503.713,-287.611,1997.246,89.791,0.000,25.784);
	tmpobjid = CreateDynamicObject(346,-503.714,-287.798,1997.246,89.791,0.000,25.784);
	tmpobjid = CreateDynamicObject(346,-503.707,-287.976,1997.246,89.791,0.000,25.784);
	tmpobjid = CreateDynamicObject(346,-503.722,-288.157,1997.246,89.791,0.000,25.784);
	tmpobjid = CreateDynamicObject(346,-503.714,-288.322,1997.246,89.791,0.000,25.784);
	tmpobjid = CreateDynamicObject(346,-503.707,-288.489,1997.246,89.791,0.000,25.784);
	tmpobjid = CreateDynamicObject(346,-503.705,-288.669,1997.246,89.791,0.000,25.784);
	tmpobjid = CreateDynamicObject(347,-503.802,-289.335,1997.682,83.676,71.631,288.473);
	tmpobjid = CreateDynamicObject(347,-503.654,-289.691,1997.682,83.671,71.630,338.468);
	tmpobjid = CreateDynamicObject(347,-503.664,-289.856,1997.682,83.666,71.630,314.466);
	tmpobjid = CreateDynamicObject(347,-503.786,-290.127,1997.682,83.660,71.630,314.461);
	tmpobjid = CreateDynamicObject(347,-503.735,-289.976,1997.682,83.660,71.630,314.461);
	tmpobjid = CreateDynamicObject(347,-503.480,-290.772,1997.682,83.660,71.630,44.461);
	tmpobjid = CreateDynamicObject(347,-503.617,-290.674,1997.682,83.655,71.630,44.456);
	tmpobjid = CreateDynamicObject(347,-503.634,-291.277,1997.682,83.655,71.630,24.456);
	tmpobjid = CreateDynamicObject(349,-504.888,-294.855,1997.724,357.561,281.496,270.241);
	tmpobjid = CreateDynamicObject(349,-504.779,-294.858,1997.724,357.561,281.491,270.236);
	tmpobjid = CreateDynamicObject(349,-504.447,-294.872,1997.724,357.561,281.491,270.236);
	tmpobjid = CreateDynamicObject(350,-503.848,-292.125,1997.246,87.695,220.611,139.411);
	tmpobjid = CreateDynamicObject(350,-503.778,-292.276,1997.246,87.692,220.610,119.411);
	tmpobjid = CreateDynamicObject(350,-503.704,-292.601,1997.246,87.692,220.610,59.410);
	tmpobjid = CreateDynamicObject(350,-503.420,-292.730,1997.246,87.692,220.610,59.408);
	tmpobjid = CreateDynamicObject(350,-503.770,-293.321,1997.246,87.692,220.610,109.408);
	tmpobjid = CreateDynamicObject(350,-503.837,-293.648,1997.246,87.692,220.610,109.407);
	tmpobjid = CreateDynamicObject(351,-503.670,-292.471,1997.671,83.676,251.630,198.473);
	tmpobjid = CreateDynamicObject(351,-503.636,-292.970,1997.671,83.671,251.625,198.473);
	tmpobjid = CreateDynamicObject(351,-503.632,-293.614,1997.671,83.671,251.625,198.473);
	tmpobjid = CreateDynamicObject(351,-503.614,-294.259,1997.671,83.671,251.625,198.473);
	tmpobjid = CreateDynamicObject(352,-503.471,-289.476,1997.241,80.293,281.780,138.053);
	tmpobjid = CreateDynamicObject(352,-503.572,-289.700,1997.241,80.288,281.777,108.048);
	tmpobjid = CreateDynamicObject(352,-503.601,-290.028,1997.241,80.282,281.771,108.045);
	tmpobjid = CreateDynamicObject(352,-503.617,-290.368,1997.241,80.282,281.771,128.045);
	tmpobjid = CreateDynamicObject(352,-503.631,-290.701,1997.241,80.277,281.766,128.040);
	tmpobjid = CreateDynamicObject(352,-503.502,-291.213,1997.241,85.288,295.082,184.815);
	tmpobjid = CreateDynamicObject(352,-503.569,-291.540,1997.241,85.286,295.081,184.812);
	tmpobjid = CreateDynamicObject(352,-508.406,-287.095,1997.041,85.286,295.081,184.812);
	tmpobjid = CreateDynamicObject(353,-503.716,-292.013,1996.765,85.877,255.985,104.049);
	tmpobjid = CreateDynamicObject(353,-503.760,-292.343,1996.765,85.874,255.981,134.046);
	tmpobjid = CreateDynamicObject(353,-503.778,-292.721,1996.765,85.869,255.981,134.044);
	tmpobjid = CreateDynamicObject(353,-503.489,-293.082,1996.765,85.869,255.981,14.044);
	tmpobjid = CreateDynamicObject(353,-503.454,-293.760,1996.765,85.863,255.981,14.040);
	tmpobjid = CreateDynamicObject(356,-505.678,-294.846,1997.754,359.643,275.989,276.018);
	tmpobjid = CreateDynamicObject(356,-505.345,-294.869,1997.754,359.642,275.987,276.015);
	tmpobjid = CreateDynamicObject(356,-505.467,-294.859,1997.754,359.642,275.987,276.015);
	tmpobjid = CreateDynamicObject(356,-506.472,-294.889,1997.754,359.642,275.987,276.015);
	tmpobjid = CreateDynamicObject(356,-506.316,-294.890,1997.754,359.642,275.987,276.015);
	tmpobjid = CreateDynamicObject(356,-506.861,-294.898,1997.754,359.642,275.987,276.015);
	tmpobjid = CreateDynamicObject(356,-506.701,-294.907,1997.754,359.642,275.987,276.015);
	tmpobjid = CreateDynamicObject(357,-503.516,-290.671,1998.078,82.000,269.999,0.000);
	tmpobjid = CreateDynamicObject(357,-503.432,-291.334,1998.078,81.996,269.994,0.000);
	tmpobjid = CreateDynamicObject(357,-503.614,-292.536,1998.078,81.996,269.994,20.000);
	tmpobjid = CreateDynamicObject(357,-503.651,-293.549,1998.078,81.996,269.989,19.995);
	tmpobjid = CreateDynamicObject(358,-507.997,-294.865,1997.812,0.000,283.499,260.000);
	tmpobjid = CreateDynamicObject(358,-507.861,-294.876,1997.812,0.000,283.496,259.996);
	tmpobjid = CreateDynamicObject(358,-507.545,-294.878,1997.812,0.000,283.496,259.996);
	tmpobjid = CreateDynamicObject(358,-507.647,-294.873,1997.812,0.000,283.496,259.996);
	tmpobjid = CreateDynamicObject(363,-510.835,-289.657,1997.331,272.499,36.883,136.857);
	tmpobjid = CreateDynamicObject(363,-510.929,-289.976,1997.331,272.499,36.881,116.856);
	tmpobjid = CreateDynamicObject(363,-510.967,-290.305,1997.331,272.493,36.881,116.856);
	tmpobjid = CreateDynamicObject(363,-510.863,-290.989,1997.331,272.493,36.881,46.856);
	tmpobjid = CreateDynamicObject(364,-510.885,-289.821,1997.677,0.000,0.000,280.000);
	tmpobjid = CreateDynamicObject(365,-510.667,-287.356,1997.852,0.000,355.500,0.000);
	tmpobjid = CreateDynamicObject(365,-510.726,-287.277,1997.852,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-510.657,-287.253,1997.852,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-510.713,-287.175,1997.852,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-510.807,-287.105,1997.852,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-510.739,-287.054,1997.852,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-510.791,-286.975,1997.852,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-510.726,-286.924,1997.852,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-510.795,-286.878,1997.852,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-510.851,-286.798,1997.852,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-510.782,-286.747,1997.852,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-510.902,-287.571,1997.852,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-510.924,-287.735,1997.852,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-510.972,-288.066,1997.852,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-510.618,-287.949,1997.852,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-510.782,-287.924,1997.852,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-510.804,-288.088,1997.852,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-510.848,-288.226,1997.852,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-510.777,-287.730,1997.852,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-510.872,-288.390,1997.852,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-510.920,-288.721,1997.852,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-510.895,-288.555,1997.852,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(372,-503.774,-288.010,1996.744,89.499,179.997,180.002);
	tmpobjid = CreateDynamicObject(372,-503.717,-288.339,1996.744,89.494,179.994,180.000);
	tmpobjid = CreateDynamicObject(372,-503.694,-287.489,1996.744,89.494,179.994,180.000);
	tmpobjid = CreateDynamicObject(372,-503.748,-286.997,1996.744,89.494,179.994,180.000);
	tmpobjid = CreateDynamicObject(373,-509.324,-286.997,1997.489,331.007,298.860,329.612);
	tmpobjid = CreateDynamicObject(1654,-510.834,-292.067,1997.884,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1654,-510.838,-292.234,1997.884,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1654,-510.677,-292.570,1997.884,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1654,-510.683,-292.903,1997.884,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1654,-510.851,-293.066,1997.884,0.000,0.000,90.000);
	tmpobjid = CreateDynamicObject(1580,-506.734,-288.479,1997.233,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1580,-506.730,-288.144,1997.233,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1580,-506.726,-287.811,1997.233,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1580,-506.721,-287.476,1997.233,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1580,-506.718,-287.131,1997.233,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1580,-506.716,-286.787,1997.233,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1580,-506.736,-288.826,1997.233,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1579,-506.765,-286.796,1997.666,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1579,-506.759,-287.131,1997.666,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1579,-506.752,-287.464,1997.666,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1579,-506.744,-287.966,1997.666,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1579,-506.739,-288.303,1997.666,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1579,-506.733,-288.636,1997.666,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1579,-506.736,-288.484,1997.807,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1579,-506.756,-287.308,1997.818,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1578,-506.790,-289.539,1997.233,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1578,-506.800,-289.872,1997.233,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1578,-506.812,-290.204,1997.233,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1578,-506.822,-290.537,1997.233,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1578,-506.821,-290.536,1997.395,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1578,-506.829,-290.756,1997.327,46.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1577,-506.285,-289.761,1996.758,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1577,-506.298,-290.095,1996.758,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1577,-506.312,-290.428,1996.758,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1577,-506.309,-290.792,1996.758,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1577,-506.324,-291.127,1996.758,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1577,-506.316,-290.949,1996.925,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1577,-506.295,-290.613,1996.925,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1576,-506.313,-288.610,1997.214,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1576,-506.285,-288.259,1997.214,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1576,-506.312,-287.923,1997.214,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1576,-506.322,-287.265,1997.214,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1576,-506.316,-286.893,1997.214,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1575,-506.179,-291.190,1997.711,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1575,-506.195,-290.821,1997.711,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1575,-506.182,-290.463,1997.711,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1575,-506.152,-289.958,1997.711,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1575,-506.174,-289.609,1997.711,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1575,-506.174,-289.609,1997.862,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1550,-507.352,-286.890,1996.807,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1550,-507.550,-287.350,1996.807,0.000,0.000,330.000);
	tmpobjid = CreateDynamicObject(2051,-507.611,-286.494,1997.988,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1210,-506.717,-287.912,1996.864,89.293,45.013,314.988);
	tmpobjid = CreateDynamicObject(2843,-504.846,-282.615,1996.415,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2844,-504.760,-285.261,1996.415,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2845,-504.907,-281.196,1996.415,0.000,0.000,310.000);
	tmpobjid = CreateDynamicObject(2676,-502.447,-299.860,2000.188,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2675,-502.109,-296.971,2000.150,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2674,-504.031,-291.454,2000.100,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2674,-505.667,-289.713,2000.100,0.000,0.000,290.000);
	tmpobjid = CreateDynamicObject(2674,-503.273,-292.562,2000.100,0.000,0.000,289.995);
	tmpobjid = CreateDynamicObject(2673,-504.015,-290.097,2000.173,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2673,-503.492,-296.929,2000.173,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2673,-499.983,-296.436,2000.173,0.000,0.000,310.000);
	tmpobjid = CreateDynamicObject(2673,-496.397,-299.003,2000.173,0.000,0.000,309.995);
	tmpobjid = CreateDynamicObject(2673,-501.657,-288.992,2000.173,0.000,0.000,219.995);
	tmpobjid = CreateDynamicObject(2673,-508.911,-281.213,1996.503,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2673,-501.873,-277.567,1996.503,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2674,-504.830,-284.180,1996.437,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2674,-504.859,-280.473,1996.437,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2673,-504.700,-280.252,1996.503,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2674,-503.591,-297.667,2000.108,0.000,0.000,289.995);
	tmpobjid = CreateDynamicObject(2673,-498.368,-303.117,2000.173,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2674,-498.545,-301.260,2000.108,0.000,0.000,289.995);
	tmpobjid = CreateDynamicObject(2670,-500.601,-294.364,2000.177,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2670,-498.118,-289.808,2000.177,0.000,0.000,300.000);
	tmpobjid = CreateDynamicObject(2852,-496.778,-290.876,2001.233,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1492,-501.842,-301.743,2000.086,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2673,-497.449,-295.178,2000.173,0.000,0.000,239.995);
	tmpobjid = CreateDynamicObject(3497,-498.593,-288.579,2002.650,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(2258,-506.933,-288.346,2001.840,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2114,-497.713,-288.902,2000.232,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(2073,-505.257,-291.265,2003.860,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1520,-505.739,-291.863,2000.577,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1520,-505.752,-291.528,2000.577,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1520,-505.579,-291.687,2000.577,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1520,-505.027,-292.833,2000.577,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1520,-504.867,-292.658,2000.577,0.000,0.000,60.000);
	tmpobjid = CreateDynamicObject(1544,-505.326,-292.401,2000.582,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1544,-505.260,-292.727,2000.582,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1544,-505.130,-292.531,2000.582,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1544,-505.390,-291.220,2000.582,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1544,-505.553,-291.252,2000.582,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1544,-505.584,-291.088,2000.582,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1510,-505.877,-292.178,2000.582,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1510,-504.854,-293.014,2000.586,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1485,-506.093,-292.134,2000.557,0.000,343.750,0.000);
	tmpobjid = CreateDynamicObject(1485,-505.861,-292.260,2000.557,0.000,343.745,90.000);
	tmpobjid = CreateDynamicObject(1485,-504.930,-293.147,2000.557,0.000,343.745,90.000);
	tmpobjid = CreateDynamicObject(1485,-504.894,-292.833,2000.706,67.913,85.063,215.325);
	tmpobjid = CreateDynamicObject(1485,-504.894,-293.191,2000.706,67.911,85.061,355.321);
	tmpobjid = CreateDynamicObject(2855,-496.822,-292.131,2001.411,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1985,-506.963,-284.614,1999.344,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1985,-506.846,-281.632,1999.344,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3025,-506.742,-281.696,2002.847,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(3025,-506.910,-284.705,2002.847,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(19172,-505.632,-295.182,2001.959,0.000,0.000,180.000);
	tmpobjid = CreateDynamicObject(19174,-499.606,-299.220,2001.922,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(4227,-496.315,-298.984,2001.525,0.000,0.000,270.000);
	tmpobjid = CreateDynamicObject(17969,-499.257,-279.643,1997.689,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(365,-496.979,-296.792,2000.336,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-496.910,-296.640,2000.336,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-496.773,-296.335,2000.336,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-496.928,-296.553,2000.336,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-496.886,-296.458,2000.336,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-496.751,-296.153,2000.336,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-496.696,-295.957,2000.336,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-496.916,-296.040,2000.336,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-496.731,-296.852,2000.336,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-496.868,-297.157,2000.336,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-496.903,-298.054,2000.336,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-496.734,-298.496,2000.336,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-496.817,-298.274,2000.336,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(365,-496.748,-298.122,2000.336,0.000,355.495,0.000);
	tmpobjid = CreateDynamicObject(1738,-499.548,-288.585,2000.740,0.000,0.000,0.000);
	tmpobjid = CreateDynamicObject(1738,-506.067,-277.156,1997.069,0.000,0.000,180.000);







    specmenu = CreateMenu("Recon", 1, 15.0, 200.0, 100.0);
    AddMenuItem(specmenu,0,"UPDATE");
    AddMenuItem(specmenu,0,"SLAP");
    AddMenuItem(specmenu,0,"INFO");
    AddMenuItem(specmenu,0,"WEAPONS");
    AddMenuItem(specmenu,0,"EXIT");

    //[Магазин Аксессуаров]
    CreateObject(19448, 2515.32, -1690.24, 874.46,   0.00, 90.00, 270.00);
	CreateObject(19448, 2505.76, -1690.23, 874.46,   0.00, 90.00, 90.00);
	CreateObject(19448, 2496.16, -1690.23, 874.46,   0.00, 90.00, 90.00);
	CreateObject(19448, 2509.54, -1696.75, 874.46,   0.00, 90.00, 0.00);
	CreateObject(19448, 2507.03, -1680.82, 874.46,   0.00, 90.00, 0.00);
	CreateObject(19448, 2508.65, -1683.67, 874.46,   0.00, 90.00, 0.00);
	CreateObject(19448, 2515.17, -1684.01, 874.46,   0.00, 90.00, 90.00);
	CreateObject(19448, 2503.64, -1683.70, 874.46,   0.00, 90.00, 0.00);
	CreateObject(19448, 2497.12, -1683.29, 874.46,   0.00, 90.00, 90.00);
    //--------------------------------------------------------------------------
    CreateDynamic3DTextLabel("LSPD",COLOR_AQUA,1555.5007,-1675.6775,17.1953,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Служебный вход",COLOR_AQUA,1568.6974,-1690.0916,7.2188,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Выход к гаражу",COLOR_AQUA,246.4096,87.4603,1004.6406,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("SFPD",COLOR_AQUA,-1605.3414,710.7410,14.8672,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Служебный вход",COLOR_AQUA,-1594.1053,716.3295,-4.0000,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Выход к гаражу",COLOR_AQUA,214.5488,121.1043,1000.0156,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("LVPD",COLOR_AQUA,2340.1563,2458.3323,16.0000,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Служебный вход",COLOR_AQUA,2296.9907,2451.7041,11.8203,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Выход к гаражу",COLOR_AQUA,238.8473,138.9500,1004.0234,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Автошкола",COLOR_AQUA,-2026.4766,-102.0611,36.1641,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Больница г.Сан-Фиерро",COLOR_AQUA,-2655.0583,640.1632,15.4545,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Больница г.Лас-Вентурас",COLOR_AQUA,1607.4236,1815.2452,11.8203,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Автошкола",COLOR_AQUA,-2026.4766,-102.0611,36.1641,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Кабинет Министров",COLOR_AQUA, 1310.1808,-1366.8071,14.5070,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Банк г.Лос-Сантос",COLOR_AQUA, 1498.5367,-1580.8859,14.5498,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Банк г.Сан-Фиерро",COLOR_AQUA, -2650.0825,376.0515,7.1563,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Банк г.Лас-Вентурас",COLOR_AQUA, -2364.8918,2377.6069,11.8203,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Бюро занятости",COLOR_AQUA, 1411.7233,-1699.7843,14.5395,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Винный завод",COLOR_AQUA,-49.9136,-269.7668,7.6332,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);


    //Лифт
    CreateObject(18755, 1161.04614, -1332.28564, 32.43900,   0.00000, 0.00000, 270.00000);
	CreateObject(18756, 1160.96704, -1332.37390, 32.43900,   0.00000, 0.00000, 270.00000);
	CreateObject(18757, 1160.97131, -1332.35547, 32.43900,   0.00000, 0.00000, 270.00000);


    //Пол в магазине телефонов
    CreateObject(19372,9.3570004,24.9239998,1203.7629395,0.0000000,90.0000000,0.0000000); //object(wall020) (1)
	CreateObject(19372,9.3570004,28.1140003,1203.7629395,0.0000000,90.0000000,0.0000000); //object(wall020) (2)
	CreateObject(19372,12.8350000,28.1140003,1203.7629395,0.0000000,90.0000000,0.0000000); //object(wall020) (3)
	CreateObject(19372,12.8409996,24.9239998,1203.7629395,0.0000000,90.0000000,0.0000000); //object(wall020) (4)
	CreateObject(19372,16.3050003,24.9239998,1203.7629395,0.0000000,90.0000000,0.0000000); //object(wall020) (5)
	CreateObject(19372,16.3050003,28.1140003,1203.7629395,0.0000000,90.0000000,0.0000000); //object(wall020) (6)
	CreateObject(19372,16.3080006,31.2409992,1203.7629395,0.0000000,90.0000000,0.0000000); //object(wall020) (7)


	CreateObject(1257, 1281.25159, -2049.23413, 59.30480,   0.00000, 0.00000, 90.00000);
	CreateObject(1257, 459.26501, -1698.21313, 11.31090,   0.00000, 0.00000, 90.00000);

	gettime(ghour,gminute,gsecond);
	SetWorldTime(ghour);
	//printf("---------------------------- %d ----------------------------", TOTALYUNIVER);
	for(new i; i < 5; i++)
    {
        for(new j; j < 5; j++)
		{
		    if(j == 4)
			{

			}
			else
		    {
				UniversetyPickup1[TOTALYUNIVER] = CreateDynamicPickup(1239, 1, UniversetyPickup[i][j][0],UniversetyPickup[i][j][1], UniversetyPickup[i][j][2]);
				TOTALYUNIVER++;
			}
		}
	}
	//printf("---------------------------- %d ----------------------------", TOTALYUNIVER1);

	LoadPick();
	LoadPick1();

	CreateDynamicObject(19312, 191.25, 1870.30, 21.60,   0.00, 0.00, 0.00);
	CreateDynamicObject(19313, 134.66, 1941.94, 21.61,   0.00, 0.00, 0.00);
	//[Пол АШ]
	CreateObject(19448, -2028.00623, -112.72414, 550.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19448, -2031.49976, -112.69290, 550.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19448, -2034.99341, -112.66810, 550.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19448, -2028.05273, -103.10128, 550.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19448, -2031.54626, -103.05770, 550.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19448, -2035.04382, -103.06198, 550.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19448, -2038.50928, -103.07706, 550.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19448, -2038.48254, -112.67134, 550.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19448, -2024.57703, -112.74767, 550.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19448, -2024.57202, -103.13590, 550.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19448, -2041.93945, -112.67628, 550.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19448, -2041.94873, -103.09397, 550.00000,   0.00000, 90.00000, 0.00000);

	//[Пол в банке]
	CreateObject(19376,2153.5097656,1617.8789062,979.8029785,0.0000000,90.0000000,0.0000000); //object(wall024) (3)
	CreateObject(19376,2153.5100098,1627.4530029,979.8029785,0.0000000,90.0000000,0.0000000); //object(wall024) (4)
	CreateObject(19376,2153.5100098,1637.0140381,979.8029785,0.0000000,90.0000000,0.0000000); //object(wall024) (5)
	CreateObject(19376,2163.9638672,1637.0136719,979.8029785,0.0000000,90.0000000,0.0000000); //object(wall024) (6)
	CreateObject(19376,2174.4318848,1637.0140381,979.8029785,0.0000000,90.0000000,0.0000000); //object(wall024) (7)
	CreateObject(19376,2184.8610840,1637.0140381,979.8029785,0.0000000,90.0000000,0.0000000); //object(wall024) (8)
	CreateObject(19376,2184.8610840,1627.4880371,979.8029785,0.0000000,90.0000000,0.0000000); //object(wall024) (9)
	CreateObject(19376,2184.8603516,1617.9042969,979.8029785,0.0000000,90.0000000,0.0000000); //object(wall024) (10)
	CreateObject(19376,2163.9658203,1617.8789062,979.8029785,0.0000000,90.0000000,0.0000000); //object(wall024) (11)
	CreateObject(19376,2174.4470215,1617.8979492,979.8029785,0.0000000,90.0000000,0.0000000); //object(wall024) (12)
	CreateObject(19376,2174.4409180,1627.4930420,979.8029785,0.0000000,90.0000000,0.0000000); //object(wall024) (13)
	CreateObject(19376,2163.9638672,1627.5107422,979.8029785,0.0000000,90.0000000,0.0000000); //object(wall024) (14)


	//[Пол в обзразовании}
	CreateObject(19375,20.1289062,28.8544922,1199.6870117,0.0000000,90.0000000,0.0000000); //object(wall023) (1)
	CreateObject(19375,20.1289997,38.3989983,1199.6870117,0.0000000,90.0000000,0.0000000); //object(wall023) (3)
	CreateObject(19375,20.1289997,47.9949989,1199.6870117,0.0000000,90.0000000,0.0000000); //object(wall023) (4)
	CreateObject(19375,20.1289997,19.2709999,1199.6870117,0.0000000,90.0000000,0.0000000); //object(wall023) (5)
	CreateObject(19375,20.1289062,9.8613281,1199.6870117,0.0000000,90.0000000,0.0000000); //object(wall023) (6)
	CreateObject(19375,20.1289062,57.2734375,1199.6870117,0.0000000,90.0000000,0.0000000); //object(wall023) (7)
	CreateObject(19375,30.5537109,57.2734375,1199.6870117,0.0000000,90.0000000,0.0000000); //object(wall023) (8)
	CreateObject(19375,30.5537109,47.9941406,1199.6870117,0.0000000,90.0000000,0.0000000); //object(wall023) (9)
	CreateObject(19375,30.5537109,38.3984375,1199.6870117,0.0000000,90.0000000,0.0000000); //object(wall023) (10)
	CreateObject(19375,30.5537109,28.8544922,1199.6870117,0.0000000,90.0000000,0.0000000); //object(wall023) (11)
	CreateObject(19375,30.5540009,19.2709999,1199.6870117,0.0000000,90.0000000,0.0000000); //object(wall023) (12)
	CreateObject(19375,30.5537109,9.8613281,1199.6870117,0.0000000,90.0000000,0.0000000); //object(wall023) (13)
	CreateObject(19375,30.5537109,66.7617188,1199.6870117,0.0000000,90.0000000,0.0000000); //object(wall023) (15)


	CreateObject(4570,-1527.9599609,371.0869141,962.3239746,0.0000000,0.0000000,0.0000000); //object(stolenbuilds08) (2)
	CreateObject(4570,-1470.3632812,360.3408203,957.3200073,0.0000000,0.0000000,0.0000000); //object(stolenbuilds08) (4)
    CreateObject(4585,-93.3730469,-64.8271484,947.5679932,0.0000000,0.0000000,0.0000000); //object(towerlan2) (2)
	CreateObject(4585,-93.3525391,-17.9531250,947.5679932,0.0000000,0.0000000,0.0000000); //object(towerlan2) (3)
	CreateObject(4585,-53.5039062,-17.8632812,947.5679932,0.0000000,0.0000000,0.0000000); //object(towerlan2) (4)
	CreateObject(4585,-53.6806641,-64.7617188,947.5679932,0.0000000,0.0000000,0.0000000); //object(towerlan2) (5)
	CreateObject(18766,-73.9384766,-43.5156250,1046.9000244,90.0000000,0.0000000,0.0000000); //object(concrete10mx1mx5m) (20)
	CreateObject(18766,-74.1523438,-38.8310547,1046.9000244,90.0000000,0.0000000,0.0000000); //object(concrete10mx1mx5m) (21)

	new Sklad = CreateObject(19353, -896.4046, 1865.4517, 23.3564, 0.0000, 0.1999, 0.2987);
	SetObjectMaterialText(Sklad, "Склад", 0, 50, "Arial", 24, 0, -16776961, 0, 1);
	new Zavod = CreateObject(19479, -50.2537, -269.3410, 17.2057, 0.0000, 0.0000, 267.6314);
	SetObjectMaterialText(Zavod, "Завод", 0, 20, "Arial", 24, 0, -65536, 0, 1);
	new Berou111 = CreateObject(19479, 1416.5278, -1702.6184, 17.1384, 0.0000, 4.8999, -41.7215);
	SetObjectMaterialText(Berou111, "Бюро Занятости", 0, 100, "Arial", 24, 0, -65536, 0, 1);
	new BankSL = CreateObject(19479, 1498.4630, -1582.3345, 19.2158, 0.0000, 1.6000, -90.1820);
	SetObjectMaterialText(BankSL, "Банк", 0, 50, "Arial", 24, 0, -16468988, 0, 1);
	new Sklad1 = CreateObject(19482, 26.0607, 55.3819, 1202.6739, 0.0000, 0.0000, 178.9569);
	SetObjectMaterialText(Sklad1, "Математика", 0, 100, "Arial", 24, 0, -32256, 0, 1);
    new INfroma = CreateObject(19482, 26.0835, 45.8779, 1202.6033, 0.2000, -0.3999, 179.9770);
	SetObjectMaterialText(INfroma, "Информатика", 0, 100, "Arial", 24, 0, -32256, 0, 1);
	new istory = CreateObject(19482, 26.0888, 33.2531, 1202.6030, -0.0999, -0.2000, -179.9430);
	SetObjectMaterialText(istory, "История", 0, 100, "Arial", 24, 0, -32256, 0, 1);
	new russian9zik = CreateObject(19482, 26.0443, 23.8412, 1202.5836, 0.0000, 0.0000, -178.9763);
	SetObjectMaterialText(russian9zik, "Русский язык", 0, 100, "Arial", 24, 0, -32256, 0, 1);
	new bilogy = CreateObject(19482, 26.0517, 11.2447, 1202.5340, 0.2000, -1.6999, -178.4363);
	SetObjectMaterialText(bilogy, "Биология", 0, 100, "Arial", 24, 0, -32256, 0, 1);
	new Math = CreateDynamicObject(19479, 1122.3789, -2036.8245, 75.3063, 0.0000, 0.4999, 0.0455);
	SetDynamicObjectMaterialText(Math, 0, "Университет", 80, "Arial", 24, 0, -16468988, 0, 1);
	new Phone = CreateObject(19479, 1418.8553, -1623.8931, 19.1905, 0.5999, 0.5000, -0.1113);
	SetObjectMaterialText(Phone, "Сотовые телефоны", 0, 80, "Arial", 24, 0, -16776961, 0, 1);
	new Razdevalka = CreateObject(19482, -896.3123, 1843.3627, 22.3425, 0.1000, -0.2000, -0.1780);
	SetObjectMaterialText(Razdevalka, "Раздевалка", 0, 110, "Arial", 24, 0, -16776961, 0, 1);
    new Sklad2 = CreateObject(19482, -48.9210, 26.9858, 6.4849, -0.6999, 0.0000, -109.2195);
	SetObjectMaterialText(Sklad2, "Склад", 0, 20, "Arial", 24, 0, -32256, 0, 1);
    //Пол в больке
    CreateObject(18783,1123.1875000,38.6269531,1017.6348877,0.0000000,0.0000000,0.0000000); //object(funboxtop1) (1)
	CreateObject(18783,1143.1770020,58.5760002,1017.6350098,0.0000000,0.0000000,0.0000000); //object(funboxtop1) (2)
	CreateObject(18783,1143.1660156,38.5950012,1017.6350098,0.0000000,0.0000000,0.0000000); //object(funboxtop1) (3)
	CreateObject(18783,1123.1767578,58.5937500,1017.6350098,0.0000000,0.0000000,0.0000000); //object(funboxtop1) (4)
	//Пол в центре занятости
	CreateObject(19462, 247.39638, 1812.26611, 540.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19462, 247.46146, 1821.89697, 540.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19462, 250.92598, 1821.92175, 540.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19462, 254.39726, 1821.83118, 540.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19462, 257.88699, 1821.86267, 540.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19462, 257.81320, 1812.23828, 540.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19462, 254.34100, 1812.21777, 540.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19462, 250.86212, 1812.28333, 540.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19462, 240.46133, 1812.22058, 540.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19462, 240.48567, 1821.85046, 540.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19462, 243.96300, 1812.23889, 540.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19462, 243.96300, 1821.84619, 540.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19462, -1990.02625, 1573.41431, -0.90663,   0.00000, 0.00000, 0.00000);
	CreateObject(19462, 261.29941, 1821.90149, 540.00000,   0.00000, 90.00000, 0.00000);
	CreateObject(19462, 261.30463, 1812.31042, 540.00000,   0.00000, 90.00000, 0.00000);
	//[Пол для завода]
	//CreateObject(8136,-888.4249878,1872.8020020,14.5699997,0.0000000,0.0000000,0.0000000); //object(vgsbikeschl04) (2)
	CreateObject(4007,-886.6500244,1843.9189453,-62.9000015,0.0000000,0.0000000,0.0000000); //object(wellsfargo1_lan) (1)
	CreateObject(4007,-889.3380127,1873.4649658,-62.9000015,0.0000000,0.0000000,150.7500000); //object(wellsfargo1_lan) (2)
	CreateObject(4007,-888.9459839,1897.3709717,-62.9000015,0.0000000,0.0000000,150.7489014); //object(wellsfargo1_lan) (3)
	CreateObject(4007,-890.6859741,1920.0439453,-62.9000015,0.0000000,0.0000000,150.7489014); //object(wellsfargo1_lan) (4)
    CreateObject(14593,264.5469971,14.1990004,924.8259888,0.0000000,0.0000000,270.0000000); //object(paperchase04) (5)
    CreateObject(14597,237.5379944,7.2820001,924.4940186,0.0000000,0.0000000,0.0000000); //object(paperchase07) (4)
    CreateObject(4141, 1424.56396, -1003.65002, 2899.27588,   270.00000, 90.00000, 1.00000);
    CreateObject(4141, 1422.19958, -982.65417, 2899.27588,   270.00000, 90.00000, 1.00000);
	CreateObject(4141, 1424.56396, -1003.65002, 2899.27588,   270.00000, 90.00000, 1.00000);
	CreateObject(19458, 1423.70898, -1002.75195, 2926.46899,   0.00000, 90.00000, 0.00000);
	CreateObject(19458, 1423.70898, -993.12402, 2926.46899,   0.00000, 90.00000, 0.00000);
	CreateObject(19458, 1423.50586, -986.55664, 2926.46899,   0.00000, 90.00000, 90.00000);




	for(new i; i < sizeof(PickUpVodka); i++)
        PickUpVodka1[i] = CreateDynamicPickup(19198,1, PickUpVodka[i][0],PickUpVodka[i][1],PickUpVodka[i][2]);


    SetGameModeText("Loading 2");


    CreateDynamic3DTextLabel("Разгрузить материалы - {FFFFFF}/pcc",COLOR_AQUA, 343.3745,1919.7368,21.3966,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Загрузить материалы - {FFFFFF}/pcc",COLOR_AQUA, -1874.5353,1418.5308,9.8980,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Загрузить материалы на лодку - {FFFFFF}/pcc",COLOR_AQUA, -1891.6542,1396.6702,5.6267,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Разгрузить материалы с лодки - {FFFFFF}/pcc",COLOR_AQUA, -2004.3121,1817.4220,5.6625,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);



    CreateDynamic3DTextLabel("Стоимость лицензий:\n\
	{FFCD00}Водительские права - {FFFFFF}5000$\n\
	{FFCD00}Лицензия на оружие - {FFFFFF}30000$\n\
	{FFCD00}Лицензия на водный транспорт - {FFFFFF}10000$\n\
	{FFCD00}Лицензия на воздушный транспорт - {FFFFFF}20000$",COLOR_AQUA, -2027.0135,-98.8650,551.0859,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);


    CreateDynamic3DTextLabel("Вертолетная площадка",COLOR_AQUA, 1599.7141,1815.2430,10.8203,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Вертолетная площадка",COLOR_AQUA, -2643.3789,640.1634,14.4531,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Вертолетная площадка",COLOR_AQUA, 1172.0808,-1325.3687,15.4074,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

    CreateDynamic3DTextLabel("Устройство на работу",COLOR_AQUA, 243.8038,1810.0696,541.0859,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Устройство на работу",COLOR_AQUA, -53.5038,30.1362,3.1172,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Открыть ворота - {FFFFFF}/open",COLOR_AQUA, 340.5229,1791.5184,18.2703,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Открыть ворота - {FFFFFF}/open",COLOR_AQUA, 349.0566,1804.5603,18.6703,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Информация",COLOR_AQUA, -901.0707,1844.6896,20.2586,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Информация",COLOR_AQUA, 283.6086,1351.2800,10.5859,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Информация",COLOR_AQUA, 830.3559,-1360.3384,-0.5015,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Информация",COLOR_AQUA, 22.7559,75.2726,1200.7729,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Сдача на права",COLOR_AQUA, -2028.5881,-106.4883,551.0859,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Покупка авто",COLOR_AQUA, 555.4096,-1292.7769,17.2482,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Открыть ворота - {FFFFFF}/open",COLOR_AQUA, 99.8920,1917.1266,18.6703,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Открыть ворота - {FFFFFF}/open",COLOR_AQUA, 94.3787,1925.1085,18.2703,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Ремонт двигателя\n{FFFFFF}500$",COLOR_AQUA, 2071.8591,-1834.0555,14.1871,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Ремонт двигателя\n{FFFFFF}500$",COLOR_AQUA, 491.3501,-1734.8330,11.9054,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Ремонт двигателя\n{FFFFFF}500$",COLOR_AQUA, 1022.2894,-1029.7275,32.7591,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Ремонт двигателя\n{FFFFFF}500$",COLOR_AQUA, -1908.7631,277.4669,42.1397,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Ремонт двигателя\n{FFFFFF}500$",COLOR_AQUA, -1790.5776,1208.9847,25.8162,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Ремонт двигателя\n{FFFFFF}500$",COLOR_AQUA, -2421.3394,1028.4756,51.2994,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Ремонт двигателя\n{FFFFFF}500$",COLOR_AQUA, -95.9454,1111.1870,20.7266,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Ремонт двигателя\n{FFFFFF}500$",COLOR_AQUA, -1424.8156,2591.3955,56.6675,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Ремонт двигателя\n{FFFFFF}500$",COLOR_AQUA, 1967.6978,2158.4023,11.9438,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Здесь Вы можете\n{FFFFFF}Отмыть деньги украденные в банке",COLOR_AQUA, 1048.3768,-652.6378,121.8795,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

    CreateObject(19379, -29.1494, -79.9130, 1018.3679, 0.0, 90.0, 269.9945);
	CreateObject(19379, -29.0100, -89.4800, 1018.1680, 0.0, 90.0, 269.9945);
	CreateObject(19379, -19.7958, -79.7314, 1018.3679, 0.0, 90.0, 269.9890);
	CreateObject(19379, -19.8509, -69.2890, 1018.3679, 0.0, 90.0, 270.2471);
	CreateObject(19379, -19.7822, -58.8066, 1018.3679, 0.0, 90.0, 270.0);
	CreateObject(19379, -18.2269, -48.4949, 1018.3679, 0.0, 90.0, 270.2471);
	CreateObject(19379, -29.2600, -49.5779, 1018.3679, 0.0, 90.0, 268.2471);
	CreateObject(19379, -29.3659, -60.0999, 1018.3679, 0.0, 90.0, 270.2471);
	CreateObject(19379, -40.0940, -58.0239, 1018.3679, 0.0, 90.0, 270.2471);
	CreateObject(19379, -10.1199, -69.0869, 1018.3679, 0.0, 90.0, 270.2471);
	CreateObject(19379, -20.1480, -48.3279, 1018.3679, 0.0, 90.0, 269.9944);


	CreateObject(11083,148.50000000,1859.89941406,1006.00000000,179.99450684,0.00000000,0.00000000); //object(drivingschlgnd_sfs) (1)
	CreateObject(11083,148.60000610,1868.50000000,1003.03997803,0.00000000,0.00000000,0.00000000); //object(drivingschlgnd_sfs) (2)

	//Eioa?ua? CNN
	CreateObject(19369,-1747.6700439,2606.3701172,63.2999992,0.0000000,0.0000000,0.0000000,300.0); //object(wall017) (1)
	CreateObject(19384,-1742.7392578,2589.2099609,63.2999992,0.0000000,0.0000000,90.0000000,300.0); //object(wall032) (1)
	CreateObject(19354,-1741.0693359,2590.7197266,63.2999992,0.0000000,0.0000000,0.1757812,300.0); //object(wall002) (1)
	CreateObject(19354,-1744.4199219,2590.7294922,63.2999992,0.0000000,0.0000000,0.1757812,300.0); //object(wall002) (2)
	CreateObject(19354,-1747.6093750,2606.4199219,63.2999992,0.0000000,0.0000000,0.1757812,300.0); //object(wall002) (3)
	CreateObject(19354,-1744.4199219,2593.8896484,63.2999992,0.0000000,0.0000000,0.1757812,300.0); //object(wall002) (4)
	CreateObject(19354,-1741.0693359,2593.8896484,63.2999992,0.0000000,0.0000000,0.1757812,300.0); //object(wall002) (5)
	CreateObject(19379,-1742.4892578,2603.2197266,61.5800018,0.0000000,90.0000000,0.0000000,300.0); //object(wall027) (1) ////
	CreateObject(1505,-1742.7500000,2589.1500000,61.5500000,0.0000000,-0.6200000,0.0000000,300.0); //object(gen_doorext07) (1)
	CreateObject(1505,-1743.5100000,2589.2000000,61.5500000,0.0000000,-0.6200000,0.0000000,300.0); //object(gen_doorext07) (2)
	CreateObject(1505,-1744.0700000,2589.1500000,61.5500000,0.0000000,-0.6200000,0.0000000,300.0); //object(gen_doorext07) (3)
	CreateObject(19379,-1746.0996094,2593.8994141,61.5800018,0.0000000,90.0000000,0.0000000,300.0); //object(wall027) (2) ////
	CreateObject(2289,-1741.1900000,2602.2200000,64.0600000,0.0000000,0.0000000,-90.0000000,300.0); //object(frame_2) (1)
	CreateObject(1723,-1746.9599609,2604.4892578,61.5800018,0.0000000,0.0000000,90.0000000,300.0); //object(mrk_seating1) (1)
	CreateObject(19174,-1741.1600000,2592.0600000,63.4200000,0.0000000,0.0000000,-90.0000000,300.0); //object(samppicture3) (1)
	CreateObject(19172,-1744.3000000,2591.5900000,63.4200000,0.0000000,0.0000000,90.0000000,300.0); //object(samppicture1) (1)
	CreateObject(1886,-1747.1099854,2599.0400391,65.1299973,18.0000000,0.0000000,140.0000000,300.0); //object(shop_sec_cam) (1)
	CreateObject(19354,-1744.4199219,2597.0000000,63.2999992,0.0000000,0.0000000,0.1757812,300.0); //object(wall002) (6)
	CreateObject(1723,-1746.9600000,2599.1200000,61.5800000,0.0000000,0.0000000,90.0000000,300.0); //object(mrk_seating1) (2)
	CreateObject(19354,-1745.9394531,2598.5097656,63.2999992,0.0000000,0.0000000,90.1757812,300.0); //object(wall002) (7)
	CreateObject(19354,-1747.6093750,2600.0195312,63.2999992,0.0000000,0.0000000,0.1757812,300.0); //object(wall002) (8)
	CreateObject(19354,-1747.6093750,2603.2099609,63.2999992,0.0000000,0.0000000,0.1757812,300.0); //object(wall002) (9)
	CreateObject(1827,-1746.6400000,2602.8600000,61.6700000,0.0000000,0.0000000,0.0000000,300.0); //object(man_sdr_tables) (1)
	CreateObject(1886,-1742.7600000,2589.7300000,65.1300000,18.0000000,0.0000000,180.0000000,300.0); //object(shop_sec_cam) (2)
	CreateObject(19354,-1741.0693359,2597.0000000,63.2999992,0.0000000,0.0000000,0.1757812,300.0); //object(wall002) (10)
	CreateObject(19354,-1741.0693359,2600.1699219,63.2999992,0.0000000,0.0000000,0.1757812,300.0); //object(wall002) (11)
	CreateObject(2267,-1747.4800000,2605.0200000,63.6500000,0.0000000,0.0000000,90.0000000,300.0); //object(frame_wood_3) (1)
	CreateObject(2258,-1745.6500000,2598.6200000,63.4700000,0.0000000,0.0000000,180.0000000,300.0); //object(frame_clip_5) (1)
	CreateObject(2252,-1746.7000000,2602.8500000,62.3500000,0.0000000,0.0000000,90.0000000,300.0); //object(plant_pot_21) (1)
	CreateObject(2259,-1747.0400000,2599.8300000,63.0500000,0.0000000,0.0000000,90.0000000,300.0); //object(frame_clip_6) (1)
	CreateObject(2596,-1741.4700000,2603.4900000,64.0900000,0.0000000,0.0000000,-90.0000000,300.0); //object(cj_sex_tv) (1)
	CreateObject(2596,-1741.4700000,2600.8800000,64.0900000,0.0000000,0.0000000,-90.0000000,300.0); //object(cj_sex_tv) (2)
	CreateObject(2002,-1744.5800000,2599.0700000,61.6700000,0.0000000,0.0000000,180.0000000,300.0); //object(water_coolnu) (1)
	CreateObject(19175,-1741.1600000,2596.4200000,63.4200000,0.0000000,0.0000000,-90.0000000,300.0); //object(samppicture4) (1)
	CreateObject(19354,-1741.0693359,2603.3798828,63.2999992,0.0000000,0.0000000,0.1757812,300.0); //object(wall002) (12)
	CreateObject(19354,-1741.0693359,2606.5693359,63.2999992,0.0000000,0.0000000,0.1757812,300.0); //object(wall002) (13)
	CreateObject(1302,-1741.7100000,2607.9600000,61.6700000,0.0000000,0.0000000,0.0000000,300.0); //object(vendmachfd) (1)
	CreateObject(2344,-1746.8000000,2604.2200000,62.4600000,0.0200000,0.0000000,60.0000000,300.0); //object(cj_remote) (1)
	CreateObject(2613,-1742.2200000,2608.7900000,61.6700000,0.0000000,0.0000000,0.0000000,300.0); //object(police_wastebin) (1)
	CreateObject(1775,-1743.4000000,2607.9600000,62.7500000,0.0000000,0.0000000,0.0000000,300.0); //object(cj_sprunk1) (1)
	CreateObject(2072,-1741.1900000,2599.9500000,63.1500000,0.0000000,0.0000000,90.0000000,300.0); //object(cj_mlight4) (1)
	CreateObject(2818,-1743.2700000,2589.3600000,61.6700000,0.0000000,0.0000000,0.0000000,300.0); //object(gb_bedrug02) (1)
	CreateObject(2853,-1744.5700000,2610.9300000,62.6900000,0.0000000,0.0000000,90.0000000,300.0); //object(gb_bedmags03) (1)
	CreateObject(1703,-1741.5400000,2603.1400000,61.6700000,0.0000000,0.0000000,-90.0000000,300.0); //object(kb_couch02) (1)
	CreateObject(1892,-1743.2800000,2590.0900000,61.6500000,0.0000000,0.0000000,0.0000000,300.0); //object(security_gatsh) (1)
	CreateObject(2001,-1746.8994141,2607.4599609,61.6500015,0.0000000,0.0000000,0.0000000,300.0); //object(nu_plant_ofc) (1)
	CreateObject(2423,-1747.5600000,2609.7500000,61.6300000,0.0000000,0.0000000,-90.0000000,300.0); //object(cj_ff_conter_1b) (1)
	CreateObject(2072,-1741.2000000,2603.8400000,63.1500000,0.0000000,0.0000000,90.0000000,300.0); //object(cj_mlight4) (2)
	CreateObject(2239,-1747.0000000,2601.9100000,61.6100000,0.0000000,0.0000000,90.0000000,300.0); //object(cj_mlight16) (1)
	CreateObject(2423,-1744.6800000,2609.6800000,61.6300000,0.0000000,0.0000000,0.0000000,300.0); //object(cj_ff_conter_1b) (2)
	CreateObject(2424,-1744.6000000,2611.9000000,61.6300000,0.0000000,0.0000000,90.0000000,300.0); //object(cj_ff_conter_1) (1)
	CreateObject(2661,-1745.6000000,2612.2600000,62.4500000,0.0000000,0.0000000,0.0000000,300.0); //object(cj_banner07) (1)
	CreateObject(19354,-1742.5700000,2608.2500000,63.3000000,0.0000000,0.0000000,90.1800000,300.0); //object(wall002) (14)
	CreateObject(19354,-1744.0693359,2609.9091797,63.2999992,0.0000000,0.0000000,0.1757812,300.0); //object(wall002) (15)
	CreateObject(19354,-1744.0693359,2612.6992188,63.2999992,0.0000000,0.0000000,0.1757812,300.0); //object(wall002) (16)
	CreateObject(19354,-1745.7695312,2612.3701172,63.2999992,0.0000000,0.0000000,90.1757812,300.0); //object(wall002) (17)
	CreateObject(2816,-1746.1900000,2602.7300000,62.1100000,0.0000000,0.0000000,90.0000000,300.0); //object(gb_bedmags01) (1)
	CreateObject(2828,-1744.7100000,2609.7700000,62.6900000,0.0000000,0.0000000,18.0000000,300.0); //object(gb_ornament02) (1)
	CreateObject(2424,-1745.6100000,2609.6800000,61.6300000,0.0000000,0.0000000,0.0000000,300.0); //object(cj_ff_conter_1) (2)
	CreateObject(2424,-1744.6000000,2610.6100000,61.6300000,0.0000000,0.0000000,90.0000000,300.0); //object(cj_ff_conter_1) (3)
	CreateObject(2424,-1744.6000000,2611.5300000,61.6300000,0.0000000,0.0000000,90.0000000,300.0); //object(cj_ff_conter_1) (4)
	CreateObject(2647,-1744.5700000,2610.4900000,62.7900000,0.0000000,0.0000000,0.0000000,300.0); //object(cj_bs_cup) (1)
	CreateObject(1714,-1745.9300000,2610.8400000,61.6700000,0.0000000,0.0000000,0.0000000,300.0); //object(kb_swivelchair1) (1)
	CreateObject(2608,-1747.2400000,2612.1800000,63.7500000,0.0000000,0.0000000,0.0000000,300.0); //object(polce_shelf) (1)
	CreateObject(2422,-1745.8400000,2609.8500000,62.6900000,0.0000000,0.0000000,0.0000000,300.0); //object(cj_ff_till) (1)
	CreateObject(2827,-1747.3800000,2609.7300000,62.6900000,0.0000000,0.0000000,-18.0000000,300.0); //object(gb_novels05) (1)
	CreateObject(2164,-1749.5500000,2612.3800000,61.6700000,0.0000000,0.0000000,0.0000000,300.0); //object(med_office_unit_5) (1)
	CreateObject(2611,-1745.1400000,2612.1400000,63.6100000,0.0000000,0.0000000,0.0000000,300.0); //object(police_nb1) (1)
	CreateObject(2660,-1747.4000000,2612.2500000,62.4500000,0.0000000,0.0000000,0.0000000,300.0); //object(cj_banner06) (1)
	CreateObject(2894,-1745.5300000,2609.7200000,62.7100000,0.0000000,0.0000000,180.0000000,300.0); //object(kmb_rhymesbook) (1)
	CreateObject(2961,-1747.5097656,2603.9091797,62.8499985,0.0000000,0.0000000,90.0000000,300.0); //object(fire_break) (1)
	CreateObject(19377,-1756.5400391,2603.4697266,65.1399994,0.0000000,90.0000000,0.0000000,300.0); //object(wall025) (1) ////
	CreateObject(19377,-1746.2597656,2593.8300781,65.1399994,0.0000000,90.0000000,0.0000000,300.0); //object(wall025) (2) ////
	CreateObject(2424,-1746.5300000,2609.6800000,61.6300000,0.0000000,0.0000000,0.0000000,300.0); //object(cj_ff_conter_1) (5)
	CreateObject(19379,-1749.0179443,2612.7770996,61.5299988,0.0000000,90.0000000,0.0000000,300.0); //object(wall027) (3) ////
	CreateObject(19354,-1748.9296875,2612.3701172,63.2999992,0.0000000,0.0000000,90.1757812,300.0); //object(wall002) (18)
	CreateObject(19354,-1754.2500000,2609.5898438,63.2999992,0.0000000,0.0000000,0.1757812,300.0); //object(wall002) (19)
	CreateObject(19397,-1752.2792969,2607.8994141,63.2999992,0.0000000,0.0000000,90.1757812,300.0); //object(wall045) (1)
	CreateObject(19397,-1749.0097656,2602.5898438,63.2999992,0.0000000,0.0000000,90.0000000,300.0); //object(wall045) (2)
	CreateObject(19384,-1752.2900391,2607.9091797,63.2999992,0.0000000,0.0000000,90.1757812,300.0); //object(wall032) (2)
	CreateObject(19369,-1749.1500000,2607.8900000,63.3000000,0.0000000,0.0000000,90.0000000,300.0); //object(wall017) (2)
	CreateObject(19369,-1757.8400000,2604.2300000,61.9400000,0.0000000,0.0000000,90.0000000,300.0); //object(wall017) (3)
	CreateObject(19369,-1756.9000000,2606.3200000,63.3000000,0.0000000,0.0000000,0.0000000,300.0); //object(wall017) (4)
	CreateObject(19369,-1750.8800000,2597.7200000,63.2800000,0.0000000,0.0000000,0.0000000,300.0); //object(wall017) (5)
	CreateObject(19369,-1747.6500244,2603.1699219,63.2999992,0.0000000,0.0000000,0.0000000,300.0); //object(wall017) (6)
	CreateObject(19369,-1755.3700000,2598.9800000,63.3000000,0.0000000,0.0000000,90.0000000,300.0); //object(wall017) (7)
	CreateObject(19369,-1752.1700000,2598.9700000,63.3000000,0.0000000,0.0000000,90.0000000,300.0); //object(wall017) (8)
	CreateObject(19369,-1756.9000000,2600.3100000,63.3000000,0.0000000,0.0000000,0.0000000,300.0); //object(wall017) (9)
	CreateObject(19369,-1747.6500000,2599.9900000,63.3000000,0.0000000,0.0000000,0.0000000,300.0); //object(wall017) (10)
	CreateObject(19354,-1749.1396484,2607.9199219,63.2999992,0.0000000,0.0000000,90.1757812,300.0); //object(wall002) (20)
	CreateObject(19354,-1755.4892578,2607.9091797,63.2999992,0.0000000,0.0000000,90.1757812,300.0); //object(wall002) (21)
	CreateObject(1494,-1756.0000000,2602.6400000,61.6700000,0.0000000,0.0000000,0.0000000,300.0); //object(gen_doorint03) (1)
	CreateObject(14680,-1747.3299561,2603.0600586,63.4700012,359.9799805,0.0000000,0.0000000,300.0); //object(int_tat_lights01) (1)
	CreateObject(14680,-1743.9100342,2602.5100098,63.4700012,359.9799805,0.0000000,0.0000000,300.0); //object(int_tat_lights01) (2) ////
	CreateObject(19377,-1752.9199219,2603.1494141,61.5800018,0.0000000,90.0000000,0.0000000,300.0); //object(wall025) (3)
	CreateObject(2523,-1749.9900000,2607.3400000,61.6700000,0.0000000,0.0000000,0.0000000,300.0); //object(cj_b_sink3) (1)
	CreateObject(2523,-1751.6700000,2607.3400000,61.6700000,0.0000000,0.0000000,0.0000000,300.0); //object(cj_b_sink3) (2)
	CreateObject(2523,-1750.8800000,2607.3400000,61.6700000,0.0000000,0.0000000,0.0000000,300.0); //object(cj_b_sink3) (3)
	CreateObject(1778,-1748.5200000,2607.8100000,61.6700000,0.0000000,0.0000000,0.0000000,300.0); //object(cj_mop_pail) (1)
	CreateObject(1738,-1753.6500000,2607.7200000,62.2700000,0.0000000,0.0000000,0.0000000,300.0); //object(cj_radiator_old) (1)
	CreateObject(19369,-1749.0200000,2598.9800000,63.3000000,0.0000000,0.0000000,90.0000000,300.0); //object(wall017) (11)
	CreateObject(19369,-1756.9000000,2603.1700000,63.3000000,0.0000000,0.0000000,0.0000000,300.0); //object(wall017) (12)
	CreateObject(19397,-1755.2400000,2602.5800000,63.3000000,0.0000000,0.0000000,90.0000000,300.0); //object(wall045) (3)
	CreateObject(19369,-1753.8800000,2600.9100000,63.3000000,0.0000000,0.0000000,0.0000000,300.0); //object(wall017) (13)
	CreateObject(19397,-1752.0498047,2602.5800781,63.2999992,0.0000000,0.0000000,90.0000000,300.0); //object(wall045) (4)
	CreateObject(19369,-1753.8800000,2597.7000000,63.3000000,0.0000000,0.0000000,0.0000000,300.0); //object(wall017) (14)
	CreateObject(19369,-1750.8800000,2600.8800000,63.2800000,0.0000000,0.0000000,0.0000000,300.0); //object(wall017) (15)
	CreateObject(1641,-1749.2600000,2601.1300000,61.6700000,0.0000000,0.0000000,129.0000000,300.0); //object(beachtowel03) (1)
	CreateObject(1643,-1755.4900000,2601.3500000,61.6700000,0.0000000,0.0000000,129.0000000,300.0); //object(beachtowel01) (1)
	CreateObject(1642,-1752.2500000,2601.2900000,61.6700000,0.0000000,0.0000000,129.0000000,300.0); //object(beachtowel02) (1)
	CreateObject(2525,-1755.4100000,2599.5300000,61.6700000,0.0000000,0.0000000,180.0000000,300.0); //object(cj_toilet4) (1)
	CreateObject(2525,-1749.3100000,2599.5300000,61.6700000,0.0000000,0.0000000,180.0000000,300.0); //object(cj_toilet4) (2)
	CreateObject(2525,-1752.4700000,2599.5300000,61.6700000,0.0000000,0.0000000,180.0000000,300.0); //object(cj_toilet4) (3)
	CreateObject(2739,-1756.7300000,2604.3100000,61.2500000,25.0000000,0.0000000,90.0000000,300.0); //object(cj_b_sink1) (1)
	CreateObject(2739,-1756.7300000,2606.3300000,61.2500000,25.0000000,0.0000000,90.0000000,300.0); //object(cj_b_sink1) (2)
	CreateObject(2739,-1756.7300000,2605.3000000,61.2500000,25.0000000,0.0000000,90.0000000,300.0); //object(cj_b_sink1) (3)
	CreateObject(19369,-1755.3800000,2607.9000000,63.3000000,0.0000000,0.0000000,90.0000000,300.0); //object(wall017) (16)
	CreateObject(19369,-1757.9500000,2607.3900000,61.9400000,0.0000000,0.0000000,90.0000000,300.0); //object(wall017) (17)
	CreateObject(19369,-1757.9300000,2606.3500000,61.9400000,0.0000000,0.0000000,90.0000000,300.0); //object(wall017) (18)
	CreateObject(19369,-1757.8800000,2605.2600000,61.9400000,0.0000000,0.0000000,90.0000000,300.0); //object(wall017) (19)
	CreateObject(2523,-1757.7600000,2604.2900000,62.1500000,90.0000000,0.0000000,90.0000000,300.0); //object(cj_b_sink3) (4)
	CreateObject(2523,-1757.7700000,2606.3400000,62.1500000,90.0000000,0.0000000,90.0000000,300.0); //object(cj_b_sink3) (5)
	CreateObject(2523,-1757.8000000,2605.3300000,62.1500000,90.0000000,0.0000000,90.0000000,300.0); //object(cj_b_sink3) (6)
	CreateObject(2613,-1754.6600000,2600.3900000,61.6700000,0.0000000,0.0000000,0.0000000,300.0); //object(police_wastebin) (2)
	CreateObject(2613,-1751.6000000,2600.2200000,61.6700000,0.0000000,0.0000000,0.0000000,300.0); //object(police_wastebin) (3)
	CreateObject(2613,-1748.4400000,2600.1100000,61.6700000,0.0000000,0.0000000,0.0000000,300.0); //object(police_wastebin) (4)
	CreateObject(1494,-1753.0693359,2607.8994141,61.6500015,0.0000000,0.0000000,0.0000000,300.0); //object(gen_doorint03) (2)
	CreateObject(1494,-1749.7900391,2602.5898438,61.6699982,0.0000000,0.0000000,0.0000000,300.0); //object(gen_doorint03) (3)
	CreateObject(1494,-1752.8200000,2602.5800000,61.6700000,0.0000000,0.0000000,0.0000000,300.0); //object(gen_doorint03) (4)
	CreateObject(14680,-1752.2695312,2603.0595703,63.4700012,359.9780273,0.0000000,0.0000000,300.0); //object(int_tat_lights01) (3)
	CreateObject(14680,-1743.9200000,2598.1000000,63.4700000,-0.0200000,0.0000000,0.0000000,300.0); //object(int_tat_lights01) (4)
	CreateObject(2256,-1747.7700000,2604.0100000,63.5100000,0.0000000,0.0000000,-90.0000000,300.0); //object(frame_clip_3) (1)
	CreateObject(2257,-1747.7700000,2606.4700000,63.5100000,0.0000000,0.0000000,-90.0000000,300.0); //object(frame_clip_4) (1)
	CreateObject(1789,-1753.6500000,2602.9800000,62.2300000,0.0000000,0.0000000,0.0000000,300.0); //object(cj_chambermaid) (1)
	CreateObject(19354,-1744.0839844,2615.9091797,63.2989998,0.0000000,0.0000000,0.1757812,300.0); //object(wall002) (23)
	CreateObject(19384,-1750.4472656,2614.0585938,63.3001900,0.0000000,0.0000000,0.0000000,300.0); //object(wall032) (3)
	CreateObject(19354,-1750.4560547,2617.2666016,63.3001900,0.0000000,0.0000000,0.1799927,300.0); //object(wall002) (24)
	CreateObject(19379,-1748.9759521,2622.3820801,61.5299988,0.0000000,90.0000000,0.0000000,300.0); //object(wall027) (4) ////
	CreateObject(19354,-1744.0947266,2619.1171875,63.2989998,0.0000000,0.0000000,0.1757812,300.0); //object(wall002) (25)
	CreateObject(2290,-1744.6979980,2616.6699219,61.6660004,0.0000000,0.0000000,270.0000000,300.0); //object(swk_couch_1) (1)
	CreateObject(1754,-1744.8160400,2618.0358887,61.6660004,0.0000000,0.0000000,286.0000000,300.0); //object(swank_single_1) (1)
	CreateObject(1754,-1744.9229736,2613.2629395,61.6660004,0.0000000,0.0000000,235.9960938,300.0); //object(swank_single_1) (2)
	CreateObject(2024,-1746.9969482,2616.2360840,61.6660004,0.0000000,0.0000000,270.0000000,300.0); //object(mrk_liv_tble) (1)
	CreateObject(2827,-1746.5889893,2616.2509766,62.2000008,0.0000000,0.0000000,0.0000000,300.0); //object(gb_novels05) (2)
	CreateObject(2826,-1746.7170410,2615.2648926,62.2000008,0.0000000,0.0000000,0.0000000,300.0); //object(gb_novels04) (1)
	CreateObject(2091,-1750.3129883,2616.0480957,61.6660004,0.0000000,0.0000000,90.0000000,300.0); //object(tv_ward_med_1) (1)
	CreateObject(2028,-1749.5930176,2616.1149902,61.7490005,0.0000000,0.0000000,80.0000000,300.0); //object(swank_console) (2)
	CreateObject(1828,-1747.6490479,2615.8898926,61.6660004,0.0000000,0.0000000,90.0000000,300.0); //object(man_sdr_rug) (1)
	CreateObject(1808,-1750.1860352,2612.8588867,61.6660004,0.0000000,0.0000000,90.0000000,300.0); //object(cj_watercooler2) (1)
	CreateObject(1787,-1750.2709961,2616.0048828,63.3100014,0.0000000,0.0000000,92.0000000,300.0); //object(med_video_1) (2)
	CreateObject(1510,-1746.0679932,2614.9589844,62.2000008,0.0000000,0.0000000,0.0000000,300.0); //object(dyn_ashtry) (1)
	CreateObject(2239,-1744.5069580,2617.3720703,61.6660004,0.0000000,0.0000000,235.2500000,300.0); //object(cj_mlight16) (2)
	CreateObject(2239,-1744.4775391,2613.8710938,61.6660004,0.0000000,0.0000000,235.2447510,300.0); //object(cj_mlight16) (3)
	CreateObject(2256,-1747.2010498,2618.6770020,63.5890007,0.0000000,0.0000000,0.0000000,300.0); //object(frame_clip_3) (2)
	CreateObject(2267,-1747.2740479,2612.5029297,63.5499992,0.0000000,0.0000000,179.5000000,300.0); //object(frame_wood_3) (2)
	CreateObject(19446,-1748.9785156,2626.2783203,63.2989998,0.0000000,0.0000000,270.0000000,300.0); //object(wall086) (3)
	CreateObject(19384,-1752.3879395,2618.7890625,63.2999992,0.0000000,0.0000000,270.0000000,300.0); //object(wall032) (4)
	CreateObject(1491,-1750.4785156,2614.8398438,61.5660019,0.0000000,0.0000000,270.0000000,300.0); //object(gen_doorint01) (3)
	CreateObject(2208,-1749.8193359,2622.5292969,61.5909996,0.0000000,0.0000000,0.0000000,300.0); //object(med_office7_unit_1) (1)
	CreateObject(2207,-1746.2734375,2623.5302734,61.6660004,0.0000000,0.0000000,270.0000000,300.0); //object(med_office7_desk_1) (1)
	CreateObject(2309,-1747.5529785,2621.3950195,61.6660004,0.0000000,0.0000000,340.7500000,300.0); //object(med_office_chair2) (1)
	CreateObject(1671,-1744.9833984,2622.5986328,62.1259995,0.0000000,0.0000000,270.0000000,300.0); //object(swivelchair_a) (1)
	CreateObject(2309,-1747.6569824,2623.6960449,61.6660004,0.0000000,0.0000000,210.7458649,300.0); //object(med_office_chair2) (4)
	CreateObject(2309,-1748.5529785,2621.4331055,61.6660004,0.0000000,0.0000000,340.7464600,300.0); //object(med_office_chair2) (5)
	CreateObject(2309,-1749.5058594,2621.4414062,61.6660004,0.0000000,0.0000000,340.7464600,300.0); //object(med_office_chair2) (6)
	CreateObject(2309,-1748.5820312,2623.6599121,61.6660004,0.0000000,0.0000000,210.7452393,300.0); //object(med_office_chair2) (7)
	CreateObject(2309,-1749.4360352,2623.6679688,61.6660004,0.0000000,0.0000000,210.7452393,300.0); //object(med_office_chair2) (8)
	CreateObject(19384,-1754.2558594,2612.7988281,63.2999992,0.0000000,0.0000000,0.0000000,300.0); //object(wall032) (5)
	CreateObject(19446,-1754.2656250,2619.2128906,63.2999992,0.0000000,0.0000000,0.0000000,300.0); //object(wall086) (6)
	CreateObject(19427,-1754.3925781,2618.7910156,63.2999992,0.0000000,0.0000000,270.0000000,300.0); //object(wall067) (1)
	CreateObject(19354,-1754.2709961,2625.6289062,63.2999992,0.0000000,0.0000000,0.1757812,300.0); //object(wall002) (27)
	CreateObject(19427,-1754.5410156,2626.2802734,63.2999992,0.0000000,0.0000000,270.0000000,300.0); //object(wall067) (2)
	CreateObject(19354,-1747.5799561,2618.7890625,63.2999992,0.0000000,0.0000000,270.0000000,300.0); //object(wall002) (25)
	CreateObject(19354,-1744.3719482,2618.7890625,63.2999992,0.0000000,0.0000000,270.0000000,300.0); //object(wall002) (25)
	CreateObject(19427,-1749.9820557,2618.7890625,63.2999992,0.0000000,0.0000000,270.0000000,300.0); //object(wall067) (1)
	CreateObject(19354,-1744.1035156,2622.3251953,63.2989998,0.0000000,0.0000000,0.1757812,300.0); //object(wall002) (25)
	CreateObject(19354,-1744.1140137,2625.5371094,63.2989998,0.0000000,0.0000000,0.1757812,300.0); //object(wall002) (25)
	CreateObject(2025,-1753.7080078,2624.6721191,61.6660004,0.0000000,0.0000000,90.0000000,300.0); //object(mrk_wrobe_tmp) (1)
	CreateObject(2066,-1744.6929932,2625.8769531,61.6660004,0.0000000,0.0000000,270.0000000,300.0); //object(cj_m_fileing2) (1)
	CreateObject(2066,-1744.6889648,2625.2910156,61.6660004,0.0000000,0.0000000,270.0000000,300.0); //object(cj_m_fileing2) (3)
	CreateObject(2161,-1746.8210449,2619.2661133,61.6660004,0.0000000,0.0000000,0.0000000,300.0); //object(med_office_unit_4) (1)
	CreateObject(2164,-1744.6889648,2618.8798828,61.6660004,0.0000000,0.0000000,180.0000000,300.0); //object(med_office_unit_5) (2)
	CreateObject(2164,-1754.0820312,2622.0759277,61.6660004,0.0000000,0.0000000,90.0000000,300.0); //object(med_office_unit_5) (3)
	CreateObject(2835,-1752.8809814,2618.7929688,61.6660004,0.0000000,0.0000000,0.0000000,300.0); //object(gb_livingrug04) (1)
	CreateObject(2824,-1748.5019531,2619.9755859,61.4458389,0.0000000,0.0000000,0.0000000,300.0); //object(gb_novels02) (1)
	CreateObject(2824,-1746.1800537,2622.5480957,62.4430008,0.0000000,0.0000000,102.0000000,300.0); //object(gb_novels02) (2)
	CreateObject(2186,-1753.7270508,2619.5830078,61.6660004,0.0000000,0.0000000,90.0000000,300.0); //object(photocopier_1) (2)
	CreateObject(1665,-1745.4780273,2621.9418945,62.4539986,0.0000000,0.0000000,0.0000000,300.0); //object(propashtray1) (1)
	CreateObject(14455,-1746.6970215,2626.1879883,63.1479988,0.0000000,0.0000000,180.0000000,300.0); //object(gs_bookcase) (1)
	CreateObject(2286,-1749.3039551,2618.9108887,63.6329994,0.0000000,0.0000000,180.0000000,300.0); //object(frame_5) (1)
	CreateObject(1491,-1753.1400146,2618.7561035,61.5660019,0.0000000,0.0000000,0.0000000,300.0); //object(gen_doorint01) (3)
	CreateObject(2855,-1747.0579834,2619.0539551,63.0239983,0.0000000,0.0000000,0.0000000,300.0); //object(gb_bedmags05) (1)
	CreateObject(1736,-1744.4799805,2622.6240234,64.1839981,0.0000000,0.0000000,270.0000000,300.0); //object(cj_stags_head) (1)
	CreateObject(14680,-1750.6490479,2608.3400879,63.4700012,359.9780273,0.0000000,0.0000000,300.0); //object(int_tat_lights01) (2)
	CreateObject(14680,-1750.7089844,2612.4440918,63.4700012,359.9780273,0.0000000,0.0000000,300.0); //object(int_tat_lights01) (2)
	CreateObject(14392,-1762.9379883,2612.4389648,62.8510017,0.0000000,0.0000000,0.0000000,300.0); //object(dr_gsnew08) (2)
	CreateObject(14393,-1762.8979492,2612.4799805,63.8740005,0.0000000,0.0000000,0.0000000,300.0); //object(dr_gsnew09) (2)
	CreateObject(19427,-1754.9189453,2616.4729004,63.2999992,0.0000000,0.0000000,54.5000000,300.0); //object(wall067) (3)
	CreateObject(19377,-1754.2049561,2612.7539062,65.1399994,0.0000000,90.0000000,0.0000000,300.0); //object(wall025) (4)
	CreateObject(19454,-1760.5400391,2612.6860352,66.4260025,0.0000000,318.0000000,0.0000000,300.0); //object(wall094) (2)
	CreateObject(14391,-1762.2769775,2611.5710449,62.6069984,0.0000000,0.0000000,0.0000000,300.0); //object(dr_gsnew07) (2)
	CreateObject(1671,-1760.5159912,2610.6708984,62.1069984,0.0000000,0.0000000,270.0000000,300.0); //object(swivelchair_a) (1)
	CreateObject(1671,-1760.5699463,2612.8850098,62.1069984,0.0000000,0.0000000,270.0000000,300.0); //object(swivelchair_a) (1)
	CreateObject(1491,-1754.2569580,2613.5849609,61.5660019,0.0000000,0.0000000,270.0000000,300.0); //object(gen_doorint01) (3)
	CreateObject(14680,-1755.4980469,2612.3190918,63.4949989,359.9799805,0.0000000,0.0000000,300.0); //object(int_tat_lights01) (2)
	CreateObject(14680,-1755.3330078,2607.5310059,63.4949989,359.9780273,0.0000000,0.0000000,300.0); //object(int_tat_lights01) (2)
	CreateObject(14680,-1766.1610107,2609.7570801,63.9199982,359.9782410,352.0000000,359.9969482,300.0); //object(int_tat_lights01) (2)
	CreateObject(2747,-1767.8370361,2612.3339844,62.0519981,0.0000000,0.0000000,90.0000000,300.0); //object(cj_donut_table) (1)
	CreateObject(2309,-1768.0069580,2610.9140625,61.6399994,0.0000000,0.0000000,340.7409668,300.0); //object(med_office_chair2) (6)
	CreateObject(2309,-1768.9859619,2612.3920898,61.6399994,0.0000000,0.0000000,271.4909668,300.0); //object(med_office_chair2) (6)
	CreateObject(2309,-1768.1330566,2613.7990723,61.6399994,0.0000000,0.0000000,222.7409668,300.0); //object(med_office_chair2) (6)
	CreateObject(2961,-1750.5529785,2613.0080566,62.8499985,0.0000000,0.0000000,270.0000000,300.0); //object(fire_break) (1)
	CreateObject(2001,-1753.9100342,2608.2209473,61.6160011,0.0000000,0.0000000,0.0000000,300.0); //object(nu_plant_ofc) (1)
	CreateObject(2266,-1752.5140381,2625.6970215,63.1660004,0.0000000,0.0000000,0.0000000,300.0); //object(frame_wood_5) (1)
	CreateObject(2257,-1754.1409912,2616.0590820,63.3759995,0.0000000,0.0000000,90.5000000,300.0); //object(frame_clip_4) (3)
	CreateObject(2258,-1749.6419678,2608.0610352,63.6119995,0.0000000,0.0000000,180.0000000,300.0); //object(frame_clip_5) (2)
	CreateObject(2261,-1753.6510010,2610.0939941,63.2999992,0.0000000,0.0000000,90.0000000,300.0); //object(frame_slim_2) (1)
	CreateObject(14680,-1745.4139404,2612.8989258,63.5950012,359.9780273,0.0000000,0.0000000,300.0); //object(int_tat_lights01) (2)
	CreateObject(19377,-1746.0720215,2603.4680176,65.1399994,0.0000000,90.0000000,0.0000000,300.0); //object(wall025) (4) ////
	CreateObject(19377,-1743.7390137,2612.9580078,65.1399994,0.0000000,90.0000000,0.0000000,300.0); //object(wall025) (4) ////
	CreateObject(19377,-1754.2459717,2622.3510742,65.1399994,0.0000000,90.0000000,0.0000000,300.0); //object(wall025) (4) ////
	CreateObject(19377,-1743.7640381,2622.5700684,65.1399994,0.0000000,90.0000000,0.0000000,300.0); //object(wall025) (4) ////
	CreateObject(14680,-1744.1639404,2620.1469727,63.5950012,359.9780273,0.0000000,0.0000000,300.0); //object(int_tat_lights01) (2)
	CreateObject(14680,-1747.6970215,2620.1088867,63.5950012,359.9780273,0.0000000,0.0000000,300.0); //object(int_tat_lights01) (2)
	CreateObject(14680,-1750.7590332,2620.0891113,63.5950012,359.9780273,0.0000000,0.0000000,300.0); //object(int_tat_lights01) (2)
	CreateObject(19378, -1995.609375, 1115.00390625, 53.445999145508, 0, 270, 0,300.0);
	CreateObject(19378, -2006.083984375, 1115.00390625, 53.445999145508, 0, 270, 0,300.0);
	CreateObject(19378, -2016.56640625, 1115.00390625, 53.445999145508, 0, 270, 0,300.0);
    CreateObject(19378, -2027.0361328125, 1106.5546875, 53.445999145508, 0, 270, 0,300.0);
    CreateObject(19378, -2027.046875, 1116.189453125, 53.445999145508, 0, 270, 0,300.0);
	CreateObject(19378, -2026.9449462891, 1128.9279785156, 53.445999145508, 0, 270, 0,300.0);
	CreateObject(19377, -1995.5625, 1119.779296875, 56.956001281738, 0, 270, 0,300.0);
	CreateObject(19377, -2006.02734375, 1119.7802734375, 56.956001281738, 0, 270, 0,300.0);
	CreateObject(19377, -2016.498046875, 1119.7841796875, 56.956001281738, 0, 270, 0,300.0);
	CreateObject(19377, -2026.982421875, 1119.8076171875, 56.956001281738, 0, 270, 0,300.0);
	CreateObject(19377, -2024.3349609375, 1129.3549804688, 56.956001281738, 0, 270, 0,300.0);
	CreateObject(19377, -2027.0078125, 1110.193359375, 56.956001281738, 0, 270, 0,300.0);
	CreateObject(987,1843.5419922,-1847.9350586,9.3830004,0.0000000,0.0000000,270.0000000); //object(elecfence_bar) (1)
	CreateObject(1425,1842.2120361,-1855.8830566,12.8350000,0.0000000,0.0000000,270.0000000); //object(dyn_roadbarrier_3) (1)
	CreateObject(3264,1842.9659424,-1856.9279785,11.6330004,0.0000000,0.0000000,270.0000000); //object(privatesign3) (1)
	CreateObject(14594,1238.2128906,-1176.5205078,-48.4790001,0.0000000,0.0000000,257.9919434); //object(paperchase03)(1)  - YOI IIE.....
	CreateObject(14597,1233.5927734,-1180.2548828,-62.5419998,0.0000000,0.0000000,0.0000000); //object(paperchase07)(1) - YOI OI?A IIE......
	CreateObject(14531,2811.9870605,920.1530151,-33.3860016,0.0000000,0.0000000,0.0000000); //object(int_zerosrc01) (1)
	CreateObject(4604,-111.4000000,80.1000000,4006.1000000,0.0000000,0.0000000,0.0000000,300.0); //
	CreateObject(19376, 2478.07007, 2377.56006, 15.31000,   0.00000, 90.00000, 0.00000); //???
	CreateObject(19376, 2465.15991, 2367.94995, 15.31000,   0.00000, 90.00000, 0.00000); //???
	CreateObject(19376, 2475.65991, 2367.93994, 15.31000,   0.00000, 90.00000, 0.00000); //???
	CreateObject(19376, 2475.62988, 2387.17993, 15.31000,   0.00000, 90.00000, 0.00000); //???
	CreateObject(19376, 2465.14990, 2387.17993, 15.31000,   0.00000, 90.00000, 0.00000); //???
	CreateObject(19376, 2486.13989, 2367.93994, 15.31000,   0.00000, 90.00000, 0.00000); //???
	CreateObject(19376, 2465.12988, 2396.79004, 15.31000,   0.00000, 90.00000, 0.00000); //???
	CreateObject(19376, 2475.61011, 2396.79004, 15.31000,   0.00000, 90.00000, 0.00000); //???
	CreateObject(19376, 2496.63989, 2367.92993, 15.31000,   0.00000, 90.00000, 0.00000); //???
	CreateObject(19376, 2486.11011, 2387.18994, 15.31000,   0.00000, 90.00000, 0.00000); //???
	CreateObject(19376, 2486.11011, 2396.79004, 15.31000,   0.00000, 90.00000, 0.00000); //???
	CreateObject(19376, 2496.58008, 2396.79004, 15.31000,   0.00000, 90.00000, 0.00000); //???
	CreateObject(19376, 2496.57007, 2387.14990, 15.31000,   0.00000, 90.00000, 0.00000); //???
	CreateObject(19376, 2499.01001, 2377.58008, 15.31000,   0.00000, 90.00000, 0.00000); //???
	CreateObject(19377,415.4200100,2536.0600600,1122.0000000,0.0000000,90.0000000,90.0000000); //Iie (1)
	CreateObject(19377,415.4200100,2525.5600600,1122.0000000,0.0000000,90.0000000,90.0000000); //Iie (Aoia-Aaa?e)
	CreateObject(19377,415.4200100,2515.0800800,1122.0000000,0.0000000,90.0000000,90.0000000); //Iie (3)
	CreateObject(19377,425.0400100,2515.0800800,1122.0000000,0.0000000,90.0000000,90.0000000); //Iie (4)
	CreateObject(19377,425.0400100,2525.5600600,1122.0000000,0.0000000,90.0000000,90.0000000); //Iie (5)
	CreateObject(19377,425.0400100,2536.0600600,1122.0000000,0.0000000,90.0000000,90.0000000); //Iie (6)
	CreateObject(19377,434.6600000,2536.0600600,1122.0000000,0.0000000,90.0000000,90.0000000); //Iie (Eeoo-1)
	CreateObject(19377,434.6600000,2525.5600600,1122.0000000,0.0000000,90.0000000,90.0000000); //Iie (8)
	CreateObject(19377,434.6600000,2515.0800800,1122.0000000,0.0000000,90.0000000,90.0000000); //Iie (9)
	CreateObject(19377,444.2800000,2515.0800800,1122.0000000,0.0000000,90.0000000,90.0000000); //Iie (10)
	CreateObject(19377,444.2800000,2525.5600600,1122.0000000,0.0000000,90.0000000,90.0000000); //Iie (11)
	CreateObject(19377,444.2800000,2536.0600600,1122.0000000,0.0000000,90.0000000,90.0000000); //Iie (Eeoo-2)


	//Aii ia?aue
	CreateObject(19379,1542.2049561,-1345.1330566,934.7189941,0.0000000,90.0000000,0.0000000,300.0);
	CreateObject(19379,1542.2049561,-1354.7600098,934.7189941,0.0000000,90.0000000,0.0000000,300.0);
	CreateObject(19379,1542.2041016,-1364.3945312,934.7189941,0.0000000,90.0000000,0.0000000,300.0);
	CreateObject(19379,1552.6894531,-1364.3945312,934.7189941,0.0000000,90.0000000,0.0000000,300.0);
	CreateObject(19379,1552.6894531,-1354.7597656,934.7189941,0.0000000,90.0000000,0.0000000,300.0);
	CreateObject(19379,1552.6894531,-1345.1328125,934.7189941,0.0000000,90.0000000,0.0000000,300.0);
	CreateObject(19377, 115.94, 22.80, 988.00,   0.00, 90.00, 0.00);    //iie 1 cae
	CreateObject(19377, 105.50, 22.88, 988.00,   0.00, 90.00, 0.00);    //iie 1 cae
	CreateObject(19377, 95.11, 22.92, 988.00,   0.00, 90.00, 0.00);     //iie 1 cae
	CreateObject(19377, 95.04, 32.44, 988.00,   0.00, 90.00, 0.00);     //iie 1 cae
	CreateObject(19377, 105.47, 32.44, 988.00,   0.00, 90.00, 0.00);    //iie 1 cae
	CreateObject(19377, 115.98, 32.38, 988.00,   0.00, 90.00, 0.00);    //iie 1 cae
	CreateObject(19377, 126.45, 22.80, 988.00,   0.00, 90.00, 0.00);    //iie 1 cae
	CreateObject(19377, 126.47, 32.43, 988.00,   0.00, 90.00, 0.00);    //iie 1 cae
	CreateObject(19378, 612.84766, -1636.88672, 14.93000,   0.00000, 270.00000, 309.99573); // iie
	CreateObject(19378, 614.03223, -1622.79590, 14.93000,   0.00000, 270.00000, 39.99573);  // iie
	CreateObject(19378, 620.24701, -1630.71802, 14.93000,   0.00000, 270.00000, 309.99573); // iie
	CreateObject(19378, 606.02344, -1629.52051, 14.93000,   0.00000, 270.00000, 39.99573);  // iie
	CreateObject(19378, 605.48999, -1643.10095, 14.93000,   0.00000, 270.00000, 309.99573); // iie
	CreateObject(19378, 607.83594, -1615.42871, 14.93000,   0.00000, 270.00000, 39.99573);  // iie
	CreateObject(19378, 598.02930, -1635.65820, 14.93000,   0.00000, 270.00000, 309.99573); // iie
	CreateObject(19378, 599.83099, -1622.15906, 14.93000,   0.00000, 270.00000, 39.99573);  // iie
	CreateObject(19378, 593.65234, -1614.79297, 14.93000,   0.00000, 270.00000, 39.99573);  // iie
	CreateObject(19378, 591.22638, -1628.23547, 14.93000,   0.00000, 270.00000, 39.99573);  // iie

	for(new i; i < 15; i++)
	{//888
	//72.7784
		gTree[i] = CreateDynamicObject(717, ObjectTree[i][0], ObjectTree[i][1], ObjectTree[i][2], 0.00000, 0.00000, 359.23209);
		gTreeCP[i] = CreateDynamicCP(ObjectTree[i][0],ObjectTree[i][1],ObjectTree[i][2]+(72.9820-69.38030),2.5);
		gTreeStatus[i] = true;
		gTreeHealth[i] = 100;
	}
	CreateDynamicCP(1059.5696,-345.3574,73.9922,2.5);

	gCasinoCP[0] = CreateDynamicCP(1956.8848,1047.3472,992.4688,0.5);
	gCasinoCP[1] = CreateDynamicCP(1961.3521,1042.8406,992.4688,0.5);
	gCasinoCP[2] = CreateDynamicCP(1963.8490,1036.9584,992.4688,0.5);
	gCasinoCP[3] = CreateDynamicCP(1963.8263,998.5096,992.4745,0.5);
	gCasinoCP[4] = CreateDynamicCP(1961.3284,992.6361,992.4688,0.5);
	gCasinoCP[5] = CreateDynamicCP(1957.0155,988.2988,992.4688,0.5);

	gOtmiv[0] = CreateDynamicCP(1046.8826,-653.6313,120.1105,2.5);
	gOtmiv[2] = CreateDynamicPickup(1654, 1, 1045.1531,-642.6520,120.1172);//1045.1531,-642.6520,120.1172
	gOtmiv[3] = CreateDynamicCP(243.2449,1823.6335,541.0859, 1.5);

	gOtmiv[4] = CreateDynamicCP(355.9277,166.1772,1008.3771, 0.5);





	wallzal1 = CreateObject(3113, 93.55663, 87.07695, 988.04486,   -1.24000, 15.84000, 269.50946);
	SetObjectMaterial(wallzal1,0,8497,"vgseland","triadcarpet2",0);
	wallzal2 = CreateObject(3113, 116.16508, 86.86851, 988.04486,   -1.24000, 15.84000, 269.50946);
	SetObjectMaterial(wallzal2,0,8497,"vgseland","triadcarpet2",0);
	wallzal3 = CreateObject(3113, 138.71852, 86.68595, 988.04486,   -1.24000, 15.84000, 269.50946);
	SetObjectMaterial(wallzal3,0,8497,"vgseland","triadcarpet2",0);

	new NewLineCinema = CreateDynamicObject(9188, 108.20987, 103.57771, 990.17181,  0.00000, 0.00000, 0.74815);
	SetDynamicObjectMaterialText(NewLineCinema, 0, "{AA3333}Happy New Year 2014", OBJECT_MATERIAL_SIZE_256x256, "Arial", 30, 1, 0xFFFFFFFF, -1, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);


	LoadGZ();
	LoadWH();
	/*new string[256];
	for(new i; i < sizeof(zones_points_0); i++)
	{
		f(string, "UPDATE `gangzone` SET `ginfo1` = '%f', `ginfo2` = '%f', `ginfo3` = '%f', `ginfo4` = '%f', `fraction` = '0'", zones_points_0[i][0], zones_points_0[i][1], zones_points_0[i][2], zones_points_0[i][3]);
		sql_query(zConn, string);
	}*/
	for(new i; i < 8; i++) zGangTime[i] = 2;
	sql_query(zConn, "UPDATE `accounts` SET `status` = '0'", QUERY_THREADED);
	


	barrier[0] = CreateObject(989, 96.6240, 1920.3663, 18.9035, 0.0000, 0.0000, 197.2799);
	barrier[1] = CreateObject(980, 344.9785, 1797.9651, 19.6898, 0.0000, 0.0000, 216.5380);
	barrier[2] = CreateObject(19313, 286.1854, 1821.2990, 19.7891,   0.0000, 0.0000, 89.5303);
	barrier[3] = CreateObject(968, 1544.70, -1630.86, 13.00,   0.00, 270.00, 270.08);
	barrier[4] = CreateObject(968, -1572.21, 658.72, 6.77,   0.00, 270.00, 269.96);
	barrier[5] = CreateObject(968, -1701.44, 687.69, 24.65,   0.00, 269.50, 90.02);
	barrier[6] = CreateObject(968, 2238.20, 2450.40, 10.52,   0.00, 270.00, 270.00);
	barrier[7] = CreateObject(980, -1531.7875, 482.1791, 8.9441,   0.0000, 0.0000, 358.8463);




	SetNameTagDrawDistance(30.0);

	SendRconCommand("mapname Dallas City");
	SetGameModeText("Dallas-RP");

	gCurDay = GetDayNumber();

	printf("Какой сегодня номер дня ВАЖНО: %d", gCurDay);

	new h,addob;
	gettime(h,gCurMinutes,gCurHour);
	SetWorldTime(h);
	CreateTextDraws();
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	ManualVehicleEngineAndLights();
	LimitGlobalChatRadius(13.0);
	LimitPlayerMarkerRadius(12.0);


	//Остальные обнуления
	for(new i;i<MAX_VEHICLES;i++)
	{

		gVehicleDriver[i] = INVALID_PLAYER_ID;
		gVehicles[i][vOwnerid] = INVALID_PLAYER_ID;
		gVehicles[i][vID] = INVALID_VEHICLE_ID;
		gCars[i][carVid] = INVALID_VEHICLE_ID;
		gVehicles[i][vHealth] = 1000.0;
		gVehicles[i][vFuel] = 50;
		if(IsNotDriving(i) == 1)
		SetVehicleParamsEx(i, 0, 0, 0, 0, 0, 0, 0);
	}

	/**for(new i;i<20;i++)
	{
		if(i<10)
		{
			gTruckLoadTurn[0][i] = INVALID_PLAYER_ID;
			gTruckLoadTurn[1][i] = INVALID_PLAYER_ID;
		}
		gDSTurn[i] = INVALID_PLAYER_ID;
	}*/
	//CreateComputer();
	AddPlayerClass(36,0.0,0.0,5.0,0.0,0,0,0,0,0,0);



	CreateDynamicMapIcon(-2030.4879,1117.5510,54.9929,21,CWHITE);
	CreateDynamicPickup(2821, 1,593.2574,837.9584,-42.9784); //eda1
	CreateDynamicPickup(2821, 1,-1950.5547,-2399.1353,30.6618); //eda2
	CreateDynamicPickup(1240,1,-2030.4879,1117.5510,54.9929);

	TyritPT[0] = CreateDynamicCP(376.0814,1953.9209,17.7444, 1.0, -1, -1);//GROVE
	TyritPT[1] = CreateDynamicCP(-2111.5747,1883.5104,11.3047, 1.0, -1, -1);//GROVE

	//Авто (НЕ В КОЕМ СЛУЧАЕ НЕ СОЗДАВАТЬ АВТО ВНАЧАЛЕ / ВСЕРЕДИНЕ)



	aBus[0] = AddStaticVehicleEx(437,1064.7408,-1740.2673,13.5787,269.5717,3,3,30); // Автобус ЛС1
	AddStaticVehicleEx(437,1064.8063,-1746.1619,13.5849,269.7159,3,3,30); // Автобус ЛС2
	AddStaticVehicleEx(437,1064.7137,-1752.0062,13.5589,270.0064,3,3,30); // Автобус ЛС3
	AddStaticVehicleEx(437,1064.9130,-1757.9834,13.5504,269.8225,3,3,30); // Автобус ЛС4
	AddStaticVehicleEx(437,1064.8796,-1763.7347,13.4997,270.7264,3,3,30); // Автобус ЛС5
	AddStaticVehicleEx(437,1064.9003,-1769.7889,13.4973,269.7157,3,3,30); // Автобус ЛС6
	AddStaticVehicleEx(437,1064.8269,-1775.6287,13.4765,270.5611,3,3,30); // Автобус ЛС7
	AddStaticVehicleEx(431,1276.5565,-1794.9916,13.4994,89.6058,3,3,30); // Автобус ЛС медленный1
	AddStaticVehicleEx(431,1276.5465,-1799.8387,13.4816,89.4046,3,3,30); // Автобус ЛС медленный2
	AddStaticVehicleEx(431,1276.6088,-1804.5668,13.4635,90.6652,3,3,30); // Автобус ЛС медленный3
	AddStaticVehicleEx(431,1276.6517,-1809.2903,13.4599,89.7985,3,3,30); // Автобус ЛС медленный4
	AddStaticVehicleEx(431,1276.2072,-1814.0276,13.5063,91.2305,3,3,30); // Автобус ЛС медленный5
	AddStaticVehicleEx(431,1276.7614,-1818.7365,13.4682,92.1470,3,3,30); // Автобус ЛС медленный6
	AddStaticVehicleEx(431,1276.7753,-1823.3787,13.5248,88.7915,3,3,30); // Автобус ЛС медленный7
	AddStaticVehicleEx(437,-1974.5662,79.9505,27.7880,89.6588,4,6,30); // Автобус СФ1
	AddStaticVehicleEx(437,-1974.7742,85.2088,27.7961,89.4503,4,6,30); // Автобус СФ2
	AddStaticVehicleEx(437,-1974.7593,90.4277,27.8233,89.8009,4,6,30); // Автобус СФ3
	AddStaticVehicleEx(437,-1974.7319,95.4987,27.8325,89.9304,4,6,30); // Автобус СФ4
	AddStaticVehicleEx(437,-1974.4574,100.5167,27.7903,89.7918,4,6,30); // Автобус СФ5
	AddStaticVehicleEx(437,-1974.4415,105.4177,27.7921,89.4235,4,6,30); // Автобус СФ6
	AddStaticVehicleEx(437,2850.8462,1367.8689,10.9342,89.5404,7,7,30); // Автобус ЛВ1
	AddStaticVehicleEx(437,2850.8711,1361.3657,10.9332,91.0428,7,7,30); // Автобус ЛВ2
	AddStaticVehicleEx(437,2850.9458,1354.8525,10.9330,91.2310,7,7,30); // Автобус ЛВ3
	AddStaticVehicleEx(437,2851.0024,1348.6986,10.9329,89.6504,7,7,30); // Автобус ЛВ4
	AddStaticVehicleEx(437,2807.4780,1329.2764,10.8615,268.4407,7,7,30); // Автобус ЛВ5
	AddStaticVehicleEx(437,2807.6301,1335.6969,10.8540,270.1271,7,7,30); // Автобус ЛВ6
	AddStaticVehicleEx(437,2807.6985,1342.1449,10.8502,269.6431,7,7,30); // Автобус ЛВ7
	AddStaticVehicleEx(437,2807.7358,1348.5432,10.8502,269.8987,7,7,30); // Автобус ЛВ8
	AddStaticVehicleEx(437,2807.4233,1354.9742,10.9191,270.7675,7,7,30); // Автобус ЛВ9
	AddStaticVehicleEx(437,2807.3533,1361.3651,10.8502,270.1880,7,7,30); // Автобус ЛВ10
	aBus[1] = AddStaticVehicleEx(437,2807.3960,1367.6841,10.8502,269.7089,7,7,30); // Автобус ЛВ11

	aFuel[0] = AddStaticVehicleEx(403,283.3630066,1371.0019531,11.2860003,90.0000000,-1,-1,15); //Linerunner
	AddStaticVehicleEx(403,283.3630066,1376.7519531,11.2860003,90.0000000,-1,-1,15); //Linerunner
	AddStaticVehicleEx(403,283.3630066,1382.5090332,11.2860003,90.0000000,-1,-1,15); //Linerunner
	AddStaticVehicleEx(403,283.3630066,1365.0019531,11.2860003,90.0000000,-1,-1,15); //Linerunner
	aFuel[1] = AddStaticVehicleEx(584,271.9509888,1342.1540527,11.7449999,0.0000000,-1,-1,15); //Trailer 3
	AddStaticVehicleEx(584,266.7330017,1342.1540527,11.7449999,0.0000000,-1,-1,15); //Trailer 3
	AddStaticVehicleEx(584,261.3080139,1342.1540527,11.7449999,0.0000000,-1,-1,15); //Trailer 3
	aFuel[2] = AddStaticVehicleEx(584,277.3559875,1342.1540527,11.7449999,0.0000000,-1,-1,15); //Trailer 3

	/*
	aTruck[0][0] = AddStaticVehicleEx(514,-469.1459,-473.4471,26.1093,180.2381,0,0,900); // Фура1лвл1
	AddStaticVehicleEx(514,-474.1866,-473.4327,26.1071,179.9294,0,0,900); // Фура1лвл2
	AddStaticVehicleEx(514,-479.3604,-473.4899,26.1051,179.5581,0,0,900); // Фура1лвл3
	AddStaticVehicleEx(514,-484.4390,-473.7063,26.1114,178.9247,0,0,900); // Фура1лвл4
	AddStaticVehicleEx(514,-489.4919,-473.4153,26.1039,178.6035,0,0,900); // Фура1лвл5
	AddStaticVehicleEx(514,-494.4366,-473.3100,26.1119,178.7549,0,0,900); // Фура1лвл6
	AddStaticVehicleEx(514,-499.6933,-473.2940,26.1072,178.6932,0,0,900); // Фура1лвл7
	AddStaticVehicleEx(514,-504.5554,-473.5667,26.1142,179.1300,0,0,900); // Фура1лвл8
	AddStaticVehicleEx(514,-509.4192,-473.5828,26.1128,178.7524,0,0,900); // Фура1лвл9
	aTruck[0][1] = AddStaticVehicleEx(514,-514.4427,-473.4759,26.1085,178.4884,0,0,900); // Фура1лвл10
	aTruck[1][0] = AddStaticVehicleEx(515,-554.6284,-473.2245,26.5392,179.2423,3,3,900); // Фура2лвл1
	AddStaticVehicleEx(515,-549.5732,-473.3942,26.5318,178.5233,3,3,900); // Фура2лвл2
	AddStaticVehicleEx(515,-544.6066,-473.5886,26.5414,178.8056,3,3,900); // Фура2лвл3
	AddStaticVehicleEx(515,-539.5967,-473.4187,26.5398,178.8304,3,3,900); // Фура2лвл4
	aTruck[1][1] = AddStaticVehicleEx(515,-534.5204,-473.5534,26.5366,179.5508,3,3,900); // Фура2лвл5
	aTruck[2][0] = AddStaticVehicleEx(403,-574.7922,-499.1019,26.1426,359.6614,1,1,900); // Фура3лвл1
	AddStaticVehicleEx(403,-568.7316,-499.2216,26.1426,358.6755,1,1,900); // Фура3лвл2
	AddStaticVehicleEx(403,-563.1112,-499.4803,26.1427,358.1664,1,1,900); // Фура3лвл3
	AddStaticVehicleEx(403,-549.8482,-499.3929,26.1407,359.7108,1,1,900); // Фура3лвл4
	aTruck[2][1] = AddStaticVehicleEx(403,-544.5610,-499.5505,26.1276,359.8664,1,1,900); // Фура3лвл5

 	*/
	aTaxi[0] = AddStaticVehicleEx(420,2785.1572,1295.2816,10.5620,180.0198,6,6,900); // Такси ЛВ1
	AddStaticVehicleEx(420,2781.9224,1295.2544,10.5620,180.0753,6,6,900); // Такси ЛВ2
	AddStaticVehicleEx(420,2778.6846,1295.2860,10.5619,179.1296,6,6,900); // Такси ЛВ3
	AddStaticVehicleEx(420,2775.5442,1295.3667,10.5619,180.4662,6,6,900); // Такси ЛВ4
	AddStaticVehicleEx(420,2772.3521,1295.3768,10.5620,179.6482,6,6,900); // Такси ЛВ5
	AddStaticVehicleEx(420,2765.2195,1284.7410,10.5619,270.0596,6,6,900); // Такси ЛВ6
	AddStaticVehicleEx(420,2765.1753,1281.5685,10.5618,270.2468,6,6,900); // Такси ЛВ7
	AddStaticVehicleEx(420,2765.1846,1278.4487,10.5596,270.2396,6,6,900); // Такси ЛВ8
	AddStaticVehicleEx(420,2765.2285,1275.2799,10.5616,269.6746,6,6,900); // Такси ЛВ9
	AddStaticVehicleEx(420,1098.8580,-1775.5159,13.1251,90.0097,6,6,900); // Такси ЛС1
	AddStaticVehicleEx(420,1098.8524,-1769.6758,13.1286,90.7036,6,6,900); // Такси ЛС2
	AddStaticVehicleEx(420,1098.8311,-1763.7877,13.1307,89.7914,6,6,900); // Такси ЛС3
	AddStaticVehicleEx(420,1098.8375,-1757.9298,13.1324,90.3164,6,6,900); // Такси ЛС4
	AddStaticVehicleEx(420,1098.7848,-1751.9996,13.1326,89.8989,6,6,900); // Такси ЛС5
	AddStaticVehicleEx(438,1258.2703,-1833.3954,13.4275,1.1680,6,6,900); // Такси ЛС6
	AddStaticVehicleEx(438,1253.9207,-1833.6650,13.3997,1.8044,6,6,900); // Такси ЛС7
	AddStaticVehicleEx(438,1250.0957,-1833.6025,13.4008,2.7303,6,6,900); // Такси ЛС8
	AddStaticVehicleEx(438,1246.4359,-1833.6925,13.4453,2.0426,6,6,900); // Такси ЛС9
	AddStaticVehicleEx(438,1242.8356,-1833.8541,13.4601,3.3625,6,6,900); // Такси ЛС10
	AddStaticVehicleEx(438,1239.1595,-1834.1650,13.4529,3.7672,6,6,900); // Такси ЛС11
	AddStaticVehicleEx(438,1235.5560,-1834.0867,13.4531,2.5968,6,6,900); // Такси ЛС12
	AddStaticVehicleEx(438,1198.8932,-1835.0891,13.4518,269.6247,6,6,900); // Такси ЛС13
	AddStaticVehicleEx(438,1198.8965,-1831.1794,13.4740,271.2631,6,6,900); // Такси ЛС14
	AddStaticVehicleEx(438,1198.9929,-1827.3090,13.4696,270.8661,6,6,900); // Такси ЛС15
	AddStaticVehicleEx(438,-1977.4370,172.3956,27.6954,88.3047,6,76,900); // Такси СФ1
	AddStaticVehicleEx(438,-1977.3954,175.8823,27.7415,89.3899,6,76,900); // Такси СФ2
	AddStaticVehicleEx(438,-1977.5884,179.4335,27.6926,90.5927,6,76,900); // Такси СФ3
	AddStaticVehicleEx(438,-1977.4791,183.2728,27.6918,89.7004,6,6,900); // Такси СФ4
	AddStaticVehicleEx(438,-1977.6316,186.8006,27.6924,89.6788,6,6,900); // Такси СФ5
	AddStaticVehicleEx(438,-1977.6765,190.5353,27.6905,88.7568,6,76,900); // Такси СФ6
	AddStaticVehicleEx(438,-1977.6230,194.5092,27.6691,88.5622,6,6,900); // Такси СФ7
	AddStaticVehicleEx(438,-1977.7797,197.9955,27.6219,88.9157,6,6,900); // Такси СФ8
	aTaxi[1] = AddStaticVehicleEx(420,2765.1987,1272.1050,10.5619,270.2938,6,6,900); // Такси ЛВ10
	aMech[0] = AddStaticVehicleEx(525,1629.9731,-1107.3790,23.7770,269.0417,1,1,900); // mech1
	AddStaticVehicleEx(525,1629.4841,-1103.1021,23.7909,269.0558,1,1,900); // mech
	AddStaticVehicleEx(525,1629.2927,-1098.5747,23.7868,267.8041,1,1,900); // mech
	AddStaticVehicleEx(525,1629.7563,-1094.1249,23.7804,270.0126,1,1,900); // mech
	AddStaticVehicleEx(525,1629.6484,-1089.6924,23.7825,268.6381,1,1,900); // mech
	AddStaticVehicleEx(525,1629.6514,-1085.4105,23.7888,269.7866,1,1,900); // mech
	//СФ
	AddStaticVehicleEx(525,-2542.8318,626.8029,27.7013,0.8478,1,1,900); // механи СФ
	AddStaticVehicleEx(525,-2552.7805,626.5549,27.6896,0.3108,1,1,900); // механи СФ
	AddStaticVehicleEx(525,-2563.0820,626.3918,27.6969,0.1958,1,1,900); // механи СФ
	AddStaticVehicleEx(525,-2573.5085,626.6068,27.6933,359.9201,1,1,900); // механи СФ
	AddStaticVehicleEx(525,-2583.8140,626.5056,27.6865,0.5515,1,1,900); // механи СФ
	AddStaticVehicleEx(525,-2593.7747,626.9008,27.6983,0.3756,1,1,900); // механи СФ
	//ЛВ
	AddStaticVehicleEx(525,2145.4631,1397.9276,10.6925,180.2625,1,1,900); // механик лв
	AddStaticVehicleEx(525,2132.6948,1397.9480,10.7021,180.9633,1,1,900); // механик лв
	AddStaticVehicleEx(525,2119.8611,1397.9591,10.6907,181.0341,1,1,900); // механик лв
	AddStaticVehicleEx(525,2107.1111,1398.0739,10.6937,179.0640,1,1,900); // механик лв
	aMech[1] = AddStaticVehicleEx(525,2100.6272,1398.2645,10.6974,180.4208,1,1,900); // механик лв
	//Развозчики
	aProduct[0] = AddStaticVehicleEx(578,2445.9709,-2115.5151,14.1740,1.5377,1,1,900); // product_delivery_DFT
	AddStaticVehicleEx(578,2450.9590,-2115.3340,14.1750,1.1378,1,1,900); // product_delivery_DFT
	AddStaticVehicleEx(578,2456.0015,-2115.1748,14.1733,1.6843,1,1,900); // product_delivery_DFT
	aProduct[1] = AddStaticVehicleEx(578,2461.1812,-2115.0378,14.1741,1.4003,1,1,900); // product_delivery_DFT

	aInstructor[0] = AddStaticVehicleEx(426,-2068.5632,-84.3722,34.9247,180.1640,161, 161,200); // instructor_car
	AddStaticVehicleEx(426,-2072.8613,-84.3771,34.9239,180.8162,161, 161,200); // instructor_car
	AddStaticVehicleEx(426,-2077.1477,-84.3704,34.9227,179.3821,161, 161,200); // school
	AddStaticVehicleEx(426,-2081.4104,-84.3706,34.9260,180.0093,161, 161,200); // school
	AddStaticVehicleEx(426,-2085.6968,-84.3700,34.9182,179.8555,161, 161,200); // school
	AddStaticVehicleEx(426,-2089.9785,-84.3745,34.9292,179.5597,161, 161,200); // school
	AddStaticVehicleEx(586,-2018.8984,-93.9412,34.6840,91.8201,161,161,200); // INS-1
	AddStaticVehicleEx(586,-2018.8588,-95.1897,34.6840,91.8202,161,161,200); // INS-2
	AddStaticVehicleEx(586,-2018.8364,-95.8846,34.6840,91.8202,161,161,200); // INS-3
	AddStaticVehicleEx(586,-2018.8126,-96.6372,34.6840,91.8202,161,161,200); // INS-4

	AddStaticVehicleEx(500,-2034.8481,-92.7639,35.3524,88.7361,161,161,200); // INSA-1
	AddStaticVehicleEx(500,-2027.4124,-92.9280,35.5459,88.7361,161,161,200); // INSA-2
	AddStaticVehicleEx(500,-2052.2244,-84.9828,35.3745,0.8898,161,161,200); // INSA-3
	aInstructor[1] = AddStaticVehicleEx(426,-2094.2437,-84.3714,34.9323,180.1266,161, 161,200);

	//Медики LS

	aHospital[0][0] = AddStaticVehicleEx(416,1180.6941,-1338.9548,13.9049,272.2392,1,3,900); // Болька ЛС
	AddStaticVehicleEx(416,1179.5175,-1308.8210,13.8747,271.9976,1,3,900); // Болька ЛС
	AddStaticVehicleEx(416,1190.6077,-1297.7067,13.6175,359.8137,1,3,900); // Болька ЛС
	AddStaticVehicleEx(416,1190.4465,-1345.3871,13.6188,359.8110,1,3,900); // Болька ЛС
	aHospital[0][1] = AddStaticVehicleEx(563,1163.9513,-1298.6824,32.2224,359.9046,1,3,900); //


	aHospital[2][0] = AddStaticVehicleEx(416,1616.9485,1839.7766,10.9706,358.9094,1,3,900); // LV
	AddStaticVehicleEx(416,1612.5883,1839.6746,10.9737,359.1996,1,3,900); // LV
	AddStaticVehicleEx(416,1600.0608,1839.7880,10.9723,0.5822,1,3,900); // LV
	AddStaticVehicleEx(563,1607.3376,1770.0793,38.0264,0.8345,1,3,900); // ЛВ
	aHospital[2][1] = AddStaticVehicleEx(416,1595.7424,1839.6642,10.9720,0.6194,1,3,900); // LV
	aHospital[1][0] = AddStaticVehicleEx(416,-2645.5139,613.7324,14.6031,180.3632,1,3,900); // Больница СФ
	AddStaticVehicleEx(416,-2653.6699,613.6129,14.6037,179.4984,1,3,900); // Больница СФ
	AddStaticVehicleEx(416,-2661.4819,613.7541,14.6044,179.9835,1,3,900); // Больница СФ
	AddStaticVehicleEx(416,-2669.4487,614.0829,14.6053,180.0966,1,3,900); // Больница СФ
	//AddStaticVehicleEx(405,980.1100,1087.2708,10.6953,271.2129,0,0,900); // Минздрав
	aHospital[1][1] = AddStaticVehicleEx(563,-2655.5032,613.3363,66.8087,180.2663,1,3,900); // СФ
	//ВМФ

	aArmy3[0] = AddStaticVehicleEx(595,-2000.4921,1812.5382,-0.0069,239.9503,86,86,900); // VMF-1
	AddStaticVehicleEx(595,-1998.1539,1816.5515,0.3498,239.5139,86,86,900); // VMF-2
	AddStaticVehicleEx(595,-2008.4952,1809.6606,0.2199,239.8868,86,86,900); // VMF-3
	AddStaticVehicleEx(595,-2010.7374,1805.8074,0.2176,239.8291,86,86,900); // VMF-4
	AddStaticVehicleEx(487,-2042.7814,1841.7687,18.3870,330.7083,86,86,900); // VMF-5
	AddStaticVehicleEx(487,-2036.0807,1838.0095,18.4129,330.7083,86,86,900); // VMF-6
	AddStaticVehicleEx(487,-2027.4727,1833.1796,18.4461,330.7083,86,86,900); // VMF-7
	AddStaticVehicleEx(520,-2165.5637,1897.2943,18.9569,239.6725,86,86,900); // VMF-8
	AddStaticVehicleEx(548,-2114.4678,1884.3623,20.0888,120.1820,86,86,900); // VMF-9
	AddStaticVehicleEx(548,-2133.9861,1896.7988,19.9924,120.1971,86,86,900); // VMF-10
	AddStaticVehicleEx(595,-1286.2708,487.0111,0.1722,270.4492,86,86,900); // VMF-11
	AddStaticVehicleEx(595,-1300.6681,487.0146,0.1512,269.9623,86,86,900); // VMF-12
	AddStaticVehicleEx(595,-1478.5580,487.1252,0.1673,89.9523,86,86,900); // VMF-13
	AddStaticVehicleEx(595,-1462.4753,487.1387,0.0943,92.8106,86,86,900); // VMF-14
	AddStaticVehicleEx(470,-1442.3153,477.7478,7.1811,180.1929,86,86,900); // VMF-15
	AddStaticVehicleEx(470,-1438.3934,477.7612,7.1810,180.1929,86,86,900); // VMF-16
	AddStaticVehicleEx(470,-1434.3392,477.7749,7.1809,180.1929,86,86,900); // VMF-17
	AddStaticVehicleEx(470,-1428.9967,477.7929,7.1807,180.1929,86,86,900); // VMF-18
	AddStaticVehicleEx(487,-1239.8440,444.5897,7.3387,175.4691,86,86,900); // VMF-19
	AddStaticVehicleEx(487,-1253.3921,444.6941,7.4020,175.4692,86,86,900); // VMF-20
	AddStaticVehicleEx(437,-1331.4388,441.9487,7.3185,0.2606,86,86,900); // VMF-21
	aArmy3[1] = AddStaticVehicleEx(437,-1326.9764,441.9689,7.3185,0.2606,86,86,900); // VMF-22


	/*aArmy3[0] = AddStaticVehicleEx(470,2766.4739,-2433.6526,13.5394,359.8602,104,104,900); //
	AddStaticVehicleEx(470,2766.4685,-2439.6277,13.5487,359.8612,104,104,900); //
	AddStaticVehicleEx(470,2766.4583,-2448.3174,13.5387,359.8654,104,104,900); //
	AddStaticVehicleEx(470,2766.4365,-2459.1274,13.5402,359.8706,104,104,900); //
	AddStaticVehicleEx(470,2766.4148,-2467.7751,13.5516,359.8713,104,104,900); //
	AddStaticVehicleEx(487,2743.5977,-2465.4644,13.8186,83.5099,46,46,900); //
	AddStaticVehicleEx(433,2784.8679,-2417.1648,14.0710,91.5616,104,104,900); //
	AddStaticVehicleEx(433,2785.4717,-2455.2102,14.0462,90.1170,104,104,900); //
	aArmy3[1] = AddStaticVehicleEx(455,2784.3735,-2494.6135,14.0911,89.2514,104,104,900);*/


	aMaterial[0] = AddStaticVehicleEx(433,-1881.5380,1387.8727,7.5977,180.2271,1,1,900); // MET-1
	AddStaticVehicleEx(433,-1891.2316,1387.8341,7.6087,180.2271,1,1,900); // MET-2
	AddStaticVehicleEx(433,-1897.4663,1387.8092,7.6158,180.2271,1,1,900); // MET-3
	AddStaticVehicleEx(433,-1903.2866,1387.7860,7.6224,180.2271,1,1,900); // MET-4
	aMaterial[1] = AddStaticVehicleEx(433,-1910.1676,1387.7589,7.6303,180.2271,1,1,900); // MET-5

	aPesok[0] = AddStaticVehicleEx(573,11.6368,-257.2499,6.0801,91.4753,1,1,900); //
	AddStaticVehicleEx(573,11.5274,-253.0140,6.0858,91.4753,1,1,900); //
	AddStaticVehicleEx(573,11.4240,-249.0082,6.0909,91.4753,1,1,900); //
	AddStaticVehicleEx(573,11.3105,-244.5855,6.0968,91.4753,1,1,900); //
	AddStaticVehicleEx(573,11.2065,-240.5591,6.1023,91.4754,1,1,900); //
	AddStaticVehicleEx(573,11.1058,-236.6331,6.1077,91.4754,1,1,900); //
	AddStaticVehicleEx(573,11.0030,-232.6193,6.1136,91.4754,1,1,900); //
	AddStaticVehicleEx(573,10.8957,-228.4549,6.1132,91.4753,1,1,900); //
	aPesok[1] = AddStaticVehicleEx(573,11.0074,-224.3809,6.1130,91.4753,1,1,900); //




	aRazvoz[0] = AddStaticVehicleEx(478,-26.9971,-218.4484,5.4110,352.7318,1,1,900); //
	AddStaticVehicleEx(478,-30.3998,-218.0148,5.4280,352.7308,1,1,900); //
	AddStaticVehicleEx(478,-34.6131,-217.4777,5.4419,352.7309,1,1,900); //
	AddStaticVehicleEx(478,-38.2440,-217.0147,5.4486,352.7314,1,1,900); //
	AddStaticVehicleEx(478,-42.4010,-216.4844,5.4552,352.7319,1,1,900); //
	AddStaticVehicleEx(478,-46.0333,-216.0212,5.4552,352.7319,1,1,900); //
	aRazvoz[1] = AddStaticVehicleEx(478,-49.8903,-215.5293,5.4551,352.7320,1,1,900); //


	//СВ
    aArmy1[0] = AddStaticVehicleEx(500,211.2803,1917.5157,17.7466,179.2473,61,61,900); // zona1
    AddStaticVehicleEx(487,248.5106,2019.1226,17.7864,0.0018,65,65,900); // 1
	AddStaticVehicleEx(487,237.2193,2019.1226,17.7143,0.0018,65,65,900); // 2
	AddStaticVehicleEx(500,202.1380,1917.5739,17.7802,179.2463,61,61,900); // 3
	AddStaticVehicleEx(445,220.1442,1916.1222,17.5140,179.6700,200,200,900); // zona2
	AddStaticVehicleEx(445,193.5018,1916.2491,17.5203,179.7302,200,200,900); // zona4
	AddStaticVehicleEx(470,325.7198,1900.2025,17.6410,90.6738,61,61,900); // zone-avto-1
	AddStaticVehicleEx(470,325.7908,1894.1611,17.6409,90.6738,61,61,900); // zone-avto-2
	AddStaticVehicleEx(470,325.8614,1888.1571,17.6407,90.6738,61,61,900); // zone-avto-3
	AddStaticVehicleEx(470,325.9306,1882.2732,17.6406,90.6738,61,61,900); // zone-avto-4
	AddStaticVehicleEx(470,325.9996,1876.2830,17.6593,90.6739,61,61,900); // zone-avto-5
	AddStaticVehicleEx(470,326.0743,1869.9557,17.6490,90.6739,61,61,900); // zone-avto-6
	AddStaticVehicleEx(470,290.8454,1900.7634,17.6340,270.5883,61,61,900); // zone-avto-7
	AddStaticVehicleEx(470,290.9050,1894.9562,17.6341,270.5882,61,61,900); // zone-avto-8
	AddStaticVehicleEx(470,290.9679,1888.8290,17.6343,270.5882,61,61,900); // zone-avto-9
	AddStaticVehicleEx(470,291.0293,1882.8385,17.6344,270.5882,61,61,900); // zone-avto-10
	AddStaticVehicleEx(470,291.0911,1876.8276,17.6345,270.5882,61,61,900); // zone-avto-11
	AddStaticVehicleEx(470,291.1522,1870.8688,17.6347,270.5882,61,61,900); // zone-avto-12
	AddStaticVehicleEx(433,278.1893,1984.0181,18.0773,271.3438,61,61,900); // zone-avto-13
	AddStaticVehicleEx(433,278.1017,1987.7506,18.0773,271.3438,61,61,900); // zone-avto-14
	AddStaticVehicleEx(433,278.0022,1991.9872,18.0773,271.3438,61,61,900); // zone-avto-15
	AddStaticVehicleEx(433,277.8890,1996.8124,18.0773,271.3438,61,61,900); // zone-avto-16
	AddStaticVehicleEx(433,277.4425,2017.3995,18.0773,271.6142,61,61,900); // zone-avto-17
	AddStaticVehicleEx(433,277.3300,2021.3948,18.0773,271.6142,61,61,900); // zone-avto-18
	AddStaticVehicleEx(433,277.2070,2025.7601,18.0773,271.6142,61,61,900); // zone-avto-19
	AddStaticVehicleEx(433,277.0493,2031.3572,18.0773,271.6142,61,61,900); // zone-avto-20
	AddStaticVehicleEx(433,277.9388,1949.6995,18.0771,272.6393,61,61,900); // zone-avto-20
	AddStaticVehicleEx(433,277.7436,1953.9349,18.0771,272.6393,61,61,900); // zone-avto-21
	AddStaticVehicleEx(433,277.5059,1959.0918,18.0771,272.6393,61,61,900); // zone-avto-22
	aArmy1[1] = AddStaticVehicleEx(433,277.2129,1965.4463,18.0771,272.6393,61,61,900); // zone-avto-23
	//ВВС
	//Meria LS
	aMeriaLS[0] = AddStaticVehicleEx(400,1404.4515,-1803.6553,13.6393,89.6774,1,1,900); // Мэрия ЛС Джип1
	AddStaticVehicleEx(400,1404.4690,-1808.6183,13.6403,89.3238,1,1,900); // Мэрия ЛС Джип2
	AddStaticVehicleEx(421,1404.4449,-1779.6514,13.4306,90.4722,1,1,900); // Мэрия ЛС Седан1
	AddStaticVehicleEx(421,1404.5554,-1776.3044,13.4308,88.9753,1,1,900); // Мэрия ЛС Седан2
	aMeriaLS[1] = AddStaticVehicleEx(421,1404.4832,-1773.0430,13.4281,89.1699,1,1,900); // Мэрия ЛС Седан3
	//Meria LV
	aMeria1[0] = AddStaticVehicleEx(421,2432.7048,2384.5908,10.6250,0.0143,1,1,900); // LVMY-1
	AddStaticVehicleEx(409,2432.7185,2375.9539,10.5429,359.0373,1,1,900); // LVMY-2
	AddStaticVehicleEx(421,2432.6309,2367.6384,10.6258,359.8374,1,1,900); // LVMY-3
	AddStaticVehicleEx(400,2422.3481,2375.7219,10.8513,180.5512,1,0,900); // LVMY-4
	aMeria1[1] = AddStaticVehicleEx(400,2422.2708,2383.1089,10.8353,180.5921,1,1,900); // LVMY-5
	//Meria SF
	aMeria[0] =	AddStaticVehicleEx(421,-2754.7405,367.8479,4.1415,180.0641,1,1,900); // SFMY-1
	AddStaticVehicleEx(409,-2754.8184,375.5645,4.0484,180.6043,1,1,900); // SFMY-2
	AddStaticVehicleEx(421,-2754.8066,383.2983,4.1092,179.5075,1,1,900); // SFMY-3
	AddStaticVehicleEx(400,-2745.1042,399.2875,4.3327,0.6258,1,0,900); // SFMY-4
	aMeria[1] = AddStaticVehicleEx(400,-2744.6057,353.2245,4.3787,0.6195,1,0,900); // SFMY-5
	//Prezident
	aPrez[0] = AddStaticVehicleEx(533,1461.7780,-1369.2521,13.2559,359.9454,1,1,900); //
	AddStaticVehicleEx(445,1461.8822,-1352.3596,13.3642,0.3743,1,1,900); //
	AddStaticVehicleEx(445,1461.7498,-1343.8594,13.3648,359.6847,1,1,900); //
	aPrez[1] = AddStaticVehicleEx(409,1461.6678,-1334.2372,13.3469,359.3995,1,1,900); //

	MinStr[0] = AddStaticVehicleEx(445,1292.6648,-1390.2814,13.2284,90.6416,1,1,900); // Min-1
	AddStaticVehicleEx(445,1301.4740,-1390.2928,13.2486,89.5705,1,1,900); // Min-2
	AddStaticVehicleEx(445,1309.5834,-1390.3434,13.2825,89.8598,1,1,900); // Min-3
	MinStr[1] = AddStaticVehicleEx(445,1317.1063,-1390.3037,13.3162,89.7341,1,1,900); // Min-4
	//Radiosentr LV

	aRadio1[0] = AddStaticVehicleEx(582,642.8422,-1341.2837,13.5178,179.3486,1,6,900); // TV-1
	AddStaticVehicleEx(582,642.6971,-1353.8300,13.4173,179.3351,1,6,900); // TV-2
	AddStaticVehicleEx(582,642.5297,-1368.2756,13.3017,179.3351,1,6,900); // TV-3
	AddStaticVehicleEx(582,736.5684,-1351.4904,13.5565,89.6379,1,6,900); // TV-4
	AddStaticVehicleEx(582,736.5912,-1347.8766,13.5565,89.6379,1,6,900); // TV-5
	AddStaticVehicleEx(582,736.6515,-1338.3514,13.5564,89.6379,1,6,900); // TV-6
	AddStaticVehicleEx(582,736.6768,-1334.3193,13.5564,89.6379,1,6,900); // TV-7
	aRadio1[1] = AddStaticVehicleEx(488,742.8287,-1371.6993,25.8427,360.0000,1,6,900); // TV-8
	//Radiosentr LS
	aRadio[0] = AddStaticVehicleEx(582,1670.3719,-1703.3143,20.5416,90.2389,1,158,900); // лсфм
	AddStaticVehicleEx(582,1670.3875,-1708.5779,20.5390,90.0264,1,158,900); // лсфм
	AddStaticVehicleEx(582,1670.3926,-1713.6144,20.5687,89.7743,1,158,900); // лсфм
	AddStaticVehicleEx(582,1670.4172,-1718.5328,20.5409,89.5113,1,158,900); // лсфм
	AddStaticVehicleEx(582,1668.2069,-1695.3879,15.6711,89.3689,1,158,900); // лсфм
	AddStaticVehicleEx(582,1667.8236,-1701.7527,15.6581,89.1948,1,158,900); // лсфм
	AddStaticVehicleEx(582,1667.8092,-1708.5509,15.6654,88.6345,1,158,900); // лсфм
	AddStaticVehicleEx(582,1667.8226,-1715.5067,15.6654,88.1111,1,158,900); // лсфм
	aRadio[1] = AddStaticVehicleEx(488,1654.1884,-1638.2789,83.9595,180.0181,1,158,900); // лсфм




    aFBI[0] = AddStaticVehicleEx(490,1003.8361,1071.1361,10.9482,83.4657,0,0,900); // FBI-1
	AddStaticVehicleEx(490,1004.3859,1075.1871,10.9378,84.0569,0,0,900); // FBI-2
	AddStaticVehicleEx(490,1004.8957,1079.5769,10.9505,85.1974,0,0,900); // FBI-3
	AddStaticVehicleEx(490,980.3120,1071.2354,10.9423,271.6584,0,0,900); // FBI-4
	AddStaticVehicleEx(490,980.2471,1074.9149,10.9412,270.4433,0,0,900); // FBI-5
	AddStaticVehicleEx(490,980.1765,1078.6455,10.9420,269.8968,0,0,900); // FBI-6
	AddStaticVehicleEx(415,988.0067,1069.9501,10.5925,0.0949,0,0,900); // FBI-7
	AddStaticVehicleEx(482,990.7593,1070.1874,10.9385,2.9949,0,0,900); // FBI-8
	AddStaticVehicleEx(482,993.7584,1070.3619,10.9406,2.4360,0,0,900); // FBI-9
	AddStaticVehicleEx(415,996.5438,1070.1057,10.5806,1.7257,0,0,900); // FBI-10
	aFBI[1] = AddStaticVehicleEx(487,1088.9559,1074.6699,11.0135,132.8357,0,0,900); // FBI-11

	//Drugs Car
	//Russian Mafian
	aColomb[0] = AddStaticVehicleEx(579,-2710.7278,119.4664,4.1779,180.8616,0,0,900); // 1
	AddStaticVehicleEx(409,-2711.0364,127.7541,4.0537,179.4549,0,0,900); //
	AddStaticVehicleEx(579,-2710.9644,135.6744,4.2341,179.2391,0,0,900); //
	AddStaticVehicleEx(413,-2737.3057,91.1437,4.4946,178.1020,0,0,900); //
	AddStaticVehicleEx(579,-2701.7493,130.9113,4.1847,0.6120,0,0,900); // RM-1
	AddStaticVehicleEx(579,-2701.6467,121.5576,4.1385,0.6134,0,0,900); // RM-2
	AddStaticVehicleEx(487,-2746.2866,105.2601,7.4782,179.0787,0,0,900); // RM-3
	aColomb[1] = AddStaticVehicleEx(413,-2740.6584,91.3073,4.6262,179.1624,0,0,900); //

	//LCN
	aMexico[0] = AddStaticVehicleEx(413,1422.3677,2826.0366,10.8985,89.5117,0,0,900); // LCN-1
	AddStaticVehicleEx(413,1422.4069,2830.4473,10.9125,89.5118,0,0,900); // LCN-2
	AddStaticVehicleEx(545,1422.2611,2838.8735,10.6314,91.2706,0,0,900); // LCN-3
	AddStaticVehicleEx(545,1422.1678,2843.0679,10.6316,91.2706,0,0,900); // LCN-4
	AddStaticVehicleEx(580,1472.9421,2782.8525,10.5394,359.2403,0,0,900); // LCN-9
	AddStaticVehicleEx(409,1472.8345,2773.4810,10.5467,359.9695,0,0,900); // LCN-10
	AddStaticVehicleEx(580,1473.0050,2764.3523,10.5405,0.9575,0,0,900); // LCN-11
	aMexico[1] = AddStaticVehicleEx(487,1519.1158,2735.7864,10.9792,359.9032,0,0,900); // LCN-12

	//YAKUZA
 	aYakuza[0] = AddStaticVehicleEx(560,659.9265,-1266.2148,13.2514,180.2479,0,0,900); // Yak
	AddStaticVehicleEx(409,660.1425,-1274.2893,13.3890,180.6316,0,0,900); //
	AddStaticVehicleEx(560,660.1449,-1282.0059,13.2324,181.9301,0,0,900); //
	AddStaticVehicleEx(506,670.4683,-1290.6594,13.2028,359.8113,0,0,900); //
	AddStaticVehicleEx(487,745.6678,-1269.0972,13.7170,358.3362,0,0,900); // YAK-1
	AddStaticVehicleEx(413,685.2136,-1235.7268,15.8780,299.8191,0,0,900); // YAK-2
	AddStaticVehicleEx(413,690.6483,-1232.5538,16.2962,299.3909,0,0,900); // YAK-3
	aYakuza[1] = AddStaticVehicleEx(506,670.4457,-1283.0563,13.2307,359.9696,0,0,900); //

	//LSPD
	aLSPD[0] = AddStaticVehicleEx(596,1595.6506,-1711.8431,5.6183,359.8867,209,1,900); // lspdcar
	AddStaticVehicleEx(596,1591.7241,-1711.8275,5.6235,359.8774,209,1,900); // lspdcar
	AddStaticVehicleEx(596,1587.4192,-1711.8121,5.6188,359.3947,209,1,900); // lspdcar
	AddStaticVehicleEx(596,1583.4957,-1711.8350,5.5571,0.8552,209,1,900); // lspdcar
	AddStaticVehicleEx(596,1578.6215,-1711.8555,5.6216,0.8517,209,1,900); // lspdcar
	AddStaticVehicleEx(596,1574.6592,-1711.8396,5.6250,0.0291,209,1,900); // lspdcar
	AddStaticVehicleEx(596,1570.1732,-1711.8813,5.5593,0.0281,209,1,900); // lspdcar
	AddStaticVehicleEx(596,1564.6235,-1711.8700,6.0872,359.2119,209,1,900); // lspdcar
	AddStaticVehicleEx(596,1558.6179,-1711.8911,5.5346,359.9999,209,1,900); // lspdcar
	AddStaticVehicleEx(599,1546.8105,-1662.9476,6.0823,89.9610,209,1,900); // lspdranger
	AddStaticVehicleEx(599,1546.8788,-1659.0616,6.0797,89.2484,209,1,900); // lspdranger
	AddStaticVehicleEx(523,1548.1615,-1669.5220,5.4618,112.7056,209,1,900); // lspdmoto
	AddStaticVehicleEx(523,1548.2115,-1671.5839,5.4610,120.0000,209,1,900); // lspdmoto
	AddStaticVehicleEx(523,1548.2952,-1673.6007,5.4590,114.6303,209,1,900); // lspdmoto
	AddStaticVehicleEx(523,1548.1531,-1675.7496,5.4518,120.6376,209,1,900); // lspdmoto
	AddStaticVehicleEx(523,1548.1145,-1677.8777,5.4414,118.0241,209,1,900); // lspdmoto
	AddStaticVehicleEx(427,1529.1628,-1688.1145,6.0276,270.2883,209,1,900); // lspd427
	AddStaticVehicleEx(497,1565.4439697,-1651.8249512,28.5359993,90.0000000,209,1,900); //Police Maverick
	AddStaticVehicleEx(497,1564.9360352,-1700.3129883,28.5359993,90.0000000,209,1,900); //Police Maverick
	AddStaticVehicleEx(596,1560.6472,-1606.8055,13.1041,180.0686,209,1,900); //
	AddStaticVehicleEx(596,1565.4406,-1606.7998,13.1041,180.0686,209,1,900); //
	AddStaticVehicleEx(596,1570.0778,-1606.7944,13.1041,180.0686,209,1,900); //
	AddStaticVehicleEx(415,1602.3180,-1691.9369,5.6618,90.7483,1,1,900); // LSPD-1
	AddStaticVehicleEx(415,1602.2657,-1687.9408,5.6723,90.7445,1,1,900); // LSPD-2
	aLSPD[1] = AddStaticVehicleEx(427,1529.0786,-1683.8983,6.0236,270.4686,209,1,900); // lspd427
	//SFPD
	aSFPD[0] = AddStaticVehicleEx(427,-1639.3903,678.5317,-5.1077,270.4305,209,1,900); // SFPD 1
	AddStaticVehicleEx(427,-1639.0208,682.1624,-5.1017,270.5640,209,1,900); // SFPD 2
	AddStaticVehicleEx(523,-1616.7563,694.3472,-5.6779,178.5857,209,1,900); // SFPD 3
	AddStaticVehicleEx(523,-1612.5643,694.1449,-5.6719,181.3674,209,1,900); // SFPD 4
	AddStaticVehicleEx(523,-1608.5116,694.2671,-5.6879,182.6192,209,1,900); // SFPD 5
	AddStaticVehicleEx(523,-1604.4436,694.2633,-5.6883,174.8659,209,1,900); // SFPD 6
	AddStaticVehicleEx(523,-1600.2852,694.2676,-5.6897,179.3204,209,1,900); // SFPD 7
	AddStaticVehicleEx(597,-1572.7251,710.3836,-5.4705,90.0638,209,1,900); // SFPD 8
	AddStaticVehicleEx(597,-1572.8872,714.5289,-5.4798,89.9963,209,1,900); // SFPD 9
	AddStaticVehicleEx(597,-1572.8658,718.1848,-5.4778,91.9901,209,1,900); // SFPD 10
	AddStaticVehicleEx(597,-1572.9222,722.1935,-5.4777,87.0564,209,1,900); // SFPD 11
	AddStaticVehicleEx(597,-1572.6788,726.5761,-5.4780,89.1760,209,1,900); // SFPD 12
	AddStaticVehicleEx(597,-1572.6208,730.7073,-5.4736,86.8869,209,1,900); // SFPD 13
	AddStaticVehicleEx(597,-1572.7478,734.6937,-5.4810,91.2954,209,1,900); // SFPD 14
	AddStaticVehicleEx(597,-1572.2704,738.7764,-5.4771,91.3458,209,1,900); // SFPD 15
	AddStaticVehicleEx(597,-1572.2769,742.8514,-5.4780,91.1504,209,1,900); // SFPD 16
	AddStaticVehicleEx(599,-1605.1837,651.5769,7.4298,0.2081,209,1,900); // SFPD 17
	AddStaticVehicleEx(599,-1599.5822,651.4153,7.4183,0.6099,209,1,900); // SFPD 18
	AddStaticVehicleEx(599,-1593.5369,651.3624,7.4184,357.8047,209,1,900); // SFPD 19


	AddStaticVehicleEx(415,-1584.0469,749.3018,-5.4708,178.6479,1,1,900); // SFPD-1
	AddStaticVehicleEx(415,-1588.0636,749.3963,-5.4632,178.6455,1,1,900); // SFPD-2

	AddStaticVehicleEx(599,-1587.4382,651.2068,7.4211,356.9031,209,1,900); // SFPD 20
	AttachDynamicObjectToVehicle(CreateDynamicObject(19420,0.0,0.0,0.0,0.0,0.0,0.0),addob,0.0,0.8,0.9,0.0,0.0,0.0);
	aSFPD[1] = AddStaticVehicleEx(497,-1679.0363,705.4996,30.7444,91.9547,209,1,900); // SFPD 21
	//LVPD
	aLVPD[0] = AddStaticVehicleEx(598,2273.4194,2477.5430,10.5910,179.4096,209,1,900); // LVPD 1
	AddStaticVehicleEx(598,2281.7764,2477.1228,10.5910,180.8957,209,1,900); // LVPD 2
	AddStaticVehicleEx(598,2277.7417,2442.7717,10.5910,2.0201,209,1,900); // LVPD 3
	AddStaticVehicleEx(598,2269.2202,2443.0571,10.5909,0.1150,209,1,900); // LVPD 4
	AddStaticVehicleEx(598,2315.1675,2470.2280,3.0445,89.4380,209,1,900); // LVPD 5
	AddStaticVehicleEx(598,2314.9285,2465.3550,3.0502,91.3043,209,1,900); // LVPD 6
	AddStaticVehicleEx(598,2314.5879,2460.7271,3.0441,89.8483,209,1,900); // LVPD 7
	AddStaticVehicleEx(598,2297.9597,2460.4087,3.0492,271.0110,209,1,900); // LVPD 8
	AddStaticVehicleEx(598,2298.2188,2455.8787,3.0440,270.4527,209,1,900); // LVPD 9
	AddStaticVehicleEx(598,2298.2354,2451.5549,3.0487,269.7104,209,1,900); // LVPD 10
	AddStaticVehicleEx(523,2303.6331,2430.4048,2.8378,2.3720,209,1,900); // LVPD 11
	AddStaticVehicleEx(523,2299.1753,2430.5671,2.8334,1.5327,209,1,900); // LVPD 12
	AddStaticVehicleEx(523,2294.7705,2430.4231,2.8411,2.5746,209,1,900); // LVPD 13
	AddStaticVehicleEx(523,2290.1516,2430.2471,2.8376,1.6545,209,1,900); // LVPD 14
	AddStaticVehicleEx(523,2285.8977,2430.3706,2.8386,357.1434,209,1,900); // LVPD 15
	AddStaticVehicleEx(427,2240.3721,2446.9475,3.4361,270.0312,209,1,900); // LVPD 16
	AddStaticVehicleEx(427,2240.3967,2442.6682,3.4307,271.4677,209,1,900); // LVPD 17
	AddStaticVehicleEx(599,2268.0820,2474.0771,3.4646,0.8852,209,1,900); // LVPD 18
	AddStaticVehicleEx(599,2272.5852,2474.2610,3.5032,359.8934,209,1,900); // LVPD 19
	AddStaticVehicleEx(599,2276.9758,2474.3726,3.5081,1.3558,209,1,900); // LVPD 20

	AddStaticVehicleEx(415,2277.9641,2458.7112,10.5917,0.3224,1,1,900); // LVPD-1
	AddStaticVehicleEx(415,2273.7068,2458.6875,10.6030,0.3251,1,1,900); // LVPD-

	AddStaticVehicleEx(497,2310.1367,2449.0723,11.0230,179.2629,209,1,900); // LVPD 21
	AttachDynamicObjectToVehicle(CreateDynamicObject(19420,0.0,0.0,0.0,0.0,0.0,0.0),addob,0.0,0.8,0.9,0.0,0.0,0.0);
	aLVPD[1] = AddStaticVehicleEx(598,2256.2200,2459.2947,10.5664,181.2002,209,1,900); // LVPD 22


	AddStaticVehicleEx(509,825.8063,-1333.9694,13.0593,359.2035,0,0,900); //
	AddStaticVehicleEx(509,824.4346,-1333.9500,13.0641,359.2079,0,0,900); //
	AddStaticVehicleEx(509,823.6897,-1333.9398,13.0643,359.2079,0,0,900); //
	AddStaticVehicleEx(509,822.3026,-1333.9209,13.0690,359.2133,0,0,900); //
	AddStaticVehicleEx(509,821.5556,-1333.9106,13.0689,359.2133,0,0,900); //
	AddStaticVehicleEx(509,820.2446,-1333.8927,13.0689,359.2133,0,0,900); //
	AddStaticVehicleEx(509,819.2338,-1333.8798,13.0701,359.2133,0,0,900); //
	AddStaticVehicleEx(509,818.4758,-1333.8694,13.0700,359.2134,0,0,900); //
	AddStaticVehicleEx(509,817.7178,-1333.8591,13.0700,359.2133,0,0,900); //
	AddStaticVehicleEx(509,816.7072,-1333.8456,13.0573,359.2133,0,0,900); //
	AddStaticVehicleEx(509,815.9492,-1333.8357,13.0623,359.2187,0,0,900); //
	AddStaticVehicleEx(509,815.4437,-1333.8289,13.0623,359.2187,0,0,900); //
	AddStaticVehicleEx(509,814.1611,-1333.8110,13.0673,359.2138,0,0,900); //
	AddStaticVehicleEx(509,813.1351,-1333.7970,13.0672,359.2138,0,0,900); //
	AddStaticVehicleEx(509,811.5293,-1333.7749,13.0672,359.2138,0,0,900); //
	AddStaticVehicleEx(509,810.2280,-1333.7568,13.0672,359.2138,0,0,900); //
	AddStaticVehicleEx(509,809.4700,-1333.7435,13.6087,359.2138,0,0,900); //
	AddStaticVehicleEx(509,808.9398,-1333.7362,13.6087,359.2138,0,0,900); //

	//Пикапы
	CreateDynamicPickup(1275,1,2488.5825,2369.2634,16.3959,-1);
	CreateDynamicPickup(1275,1,638.9107,1610.9178,-4.1041);
	CreateDynamicPickup(1275,1,-53.5038,30.1362,3.1172);
	CreateDynamicPickup(1275,1,-899.8574,1842.1827,20.2616);
	CreateDynamicPickup(1275,1,-50.6571,-233.0148,6.7646);
	CreateDynamicPickup(1275,1,283.5644,1355.7679,10.5859);
	CreateDynamicPickup(1275,1,16.5130,-266.2355,5.4297);
	CreateDynamicPickup(1213,1,555.4199,-1292.8099,17.2482);
	CreateDynamicPickup(1275,1,2568.2566,-1281.5046,1044.1250);
	CreateDynamicPickup(1239,1,319.6559,868.7329,19.9622);
	CreateDynamicPickup(1239,1,-2038.3032,-2380.3428,30.6422);
	CreateDynamicPickup(2485,1,-2028.5881,-106.4883,551.0859);//Пикап экзамена АШ
	CreateDynamicPickup(1239,1,1345.9944,-805.9055,1185.7059); //Пикап столовой
	CreateDynamicPickup(1239,1,2426.4575,-2101.8687,13.5469); //Пикап заказа товаров для доставки товаров
	CreateDynamicPickup(1239,1,354.8374,187.7465,1008.3798,1,3); //Пикап Оружия в мэрии
	CreateDynamicPickup(1239,1,354.8374,187.7465,1008.3798,0,3); //Пикап Оружия в мэрии
	CreateDynamicPickup(1239,1,354.8374,187.7465,1008.3798,2,3); //Пикап Оружия в мэрии
	CreateDynamicPickup(1239,1,-26.2599,-68.8835,1019.4539,3,5); //Пикап Оружия в мэрии
	CreateDynamicPickup(19133,1,1520.9233,-1667.0339,-51.6506); //Пикап Оружия в ПД
	gAreas[arGruz1] = CreateDynamicSphere(1106.3994,-299.7129,74.5391,2.0);
	CreateDynamicPickup(1275,1,1106.3994,-299.7129,74.5391);

	gAreas[arGruz2] = CreateDynamicSphere(21.5861,79.2866,1200.7729,2.0);
	CreateDynamicPickup(1275,1,21.5861,79.2866,1200.7729);

	//Зоны
	gAreas[arMaskirovka] = CreateDynamicSphere(2488.5825,2369.2634,16.3959,1,-1);

	gAreas[arCoalman] = CreateDynamicSphere(371.3972,-1638.1580,32.8906,2.0);
	CreateDynamicPickup(1275,1,371.3972,-1638.1580,32.8906);

	gAreas[arBronArmy][0] = CreateDynamicSphere(248.7306,1858.7427,14.0840,1.0);
	gAreas[arBronArmy][1] = CreateDynamicSphere(-2085.7847,1859.3673,11.1827,1.0);
	CreateDynamicPickup(1242,1,248.7306,1858.7427,14.0840);
	CreateDynamicPickup(1242,1,-2085.7847,1859.3673,11.1827);
	gAreas[arRace][0] = CreateDynamicSphere(777.2285,1871.4658,4.9070,1.0);
	CreateDynamicPickup(19131,1,777.2285,1871.4658,4.9070);
	gAreas[arRace][1] = CreateDynamicSphere(-2409.7190,-2189.9954,34.0391,1.0);
	CreateDynamicPickup(19131,1,-2409.7190,-2189.9954,34.0391);
    gAreas[arInfo][8] = CreateDynamicSphere(-1475.9331,355.7525,1009.7480,1.0,-1,-1);
    CreateDynamicPickup(1239,1,-1475.9331,355.7525,1009.7480,-1,-1);
    CreateDynamic3DTextLabel("Информация",COLOR_AQUA, -1475.9331,355.7525,1009.7480,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1, -1);
    gAreas[arInfo][9] = CreateDynamicSphere(-1104.5618,844.3418,1093.6859,1.0,-1,-1);
    CreateDynamicPickup(1239,1,-1104.5618,844.3418,1093.6859,-1,-1);
    CreateDynamic3DTextLabel("Информация",COLOR_AQUA, -1104.5618,844.3418,1093.6859,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1, -1);
    gAreas[arInfo][10] = CreateDynamicSphere(-1648.0786,1575.7097,1164.7581,1.0,-1,-1);
    CreateDynamicPickup(1239,1,-1648.0786,1575.7097,1164.7581,-1,-1);
    CreateDynamic3DTextLabel("Информация",COLOR_AQUA, -1648.0786,1575.7097,1164.7581,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1, -1);
    gAreas[arInfo][11] = CreateDynamicCP(824.3848,-1354.9065,-0.5078,1.0);
    CreateDynamic3DTextLabel("Для новичков",COLOR_AQUA, 824.3848,-1354.9065,-0.5078,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1, -1);
    gAreas[arInfo][1] = CreateDynamicSphere(22.7910,75.3166,1200.7729,1.0,2,2);
    CreateDynamicPickup(1239,1,22.7910,75.3166,1200.7729);
    gAreas[arInfo][0] = CreateDynamicSphere(283.6512,1351.3257,10.5859,1.0);
    CreateDynamicPickup(1239,1,283.6512,1351.3257,10.5859);
    gAreas[arInfo][2] = CreateDynamicSphere(-901.0707,1844.6896,20.2586,1.0);
    CreateDynamicPickup(1239,1,-901.0707,1844.6896,20.2586);
    gAreas[arInfo][3] = CreateDynamicSphere(830.3559,-1360.3384,-0.5015,1.0);
    CreateDynamicPickup(2894,1,830.3559,-1360.3384,-0.5015);
    gAreas[arInfo][4] = CreateDynamicSphere(1116.0018,47.0972,1021.1349,1.0,1,1);
    CreateDynamicPickup(2894,1,1116.0018,47.0972,1021.1349,1,1);
    CreateDynamic3DTextLabel("Информация",COLOR_AQUA, 1115.8470,47.0941,1021.1349,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1, -1);
    gAreas[arInfo][5] = CreateDynamicSphere(1115.8470,47.0941,1021.1349,1.0,2,2);
    CreateDynamicPickup(2894,1,1115.8470,47.0941,1021.1349,2,2);
    gAreas[arInfo][6] = CreateDynamicSphere(1116.0018,47.0972,1021.1349,1.0,3,3);
    CreateDynamicPickup(2894,1,1116.0018,47.0972,1021.1349,3,3);
	gAreas[arWood] = CreateDynamicSphere(-53.5038,30.1362,3.1172,1.0);
	gAreas[arWood1] = CreateDynamicSphere(-899.8574,1842.1827,20.2661,1.0);
	CreateDynamic3DTextLabel("Устройство на работу",COLOR_AQUA, -899.8574,1842.1827,20.2661,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	gAreas[arWood2] = CreateDynamicSphere(-50.6571,-233.0148,6.7646,1.0);
	CreateDynamic3DTextLabel("Устройство на работу",COLOR_AQUA, -50.6571,-233.0148,6.7646,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	gAreas[arWood3] = CreateDynamicSphere(283.5644,1355.7679,10.5859,1.0);
	CreateDynamic3DTextLabel("Устройство на работу",COLOR_AQUA, 283.5644,1355.7679,10.5859,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	gAreas[arWood4] = CreateDynamicSphere(16.5130,-266.2355,5.4297,1.0);
	CreateDynamic3DTextLabel("Устройство на работу",COLOR_AQUA, 16.5130,-266.2355,5.4297,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);





	gAreas[arBuyCars] = CreateDynamicSphere(555.4199,-1292.8099,17.2482,1.0);



	gAreas[arKioskPay] = CreateDynamicSphere(593.2574,837.9584,-42.9784,1.0);
	gAreas[arKioskPays] = CreateDynamicSphere(-1950.5547,-2399.1353,30.6618,1.0);
	gAreas[arCoalLoad1] = CreateDynamicSphere(494.8073,787.9619,-22.0785,12.0);
	gAreas[arCoalUnload1] = CreateDynamicSphere(696.3429,842.6878,-27.3646,2.0);
	gAreas[arCoalUnload2] = CreateDynamicSphere(683.9480,822.1237,-27.2425,2.0);
	gAreas[arCoalmanLoad1] = CreateDynamicSphere(gCoalManCPs[0][0],gCoalManCPs[0][1],gCoalManCPs[0][2],3.0);
	gAreas[arCoalmanLoad2] = CreateDynamicSphere(gCoalManCPs[1][0],gCoalManCPs[1][1],gCoalManCPs[1][2],3.0);
	gAreas[arCoalmanLoad3] = CreateDynamicSphere(gCoalManCPs[2][0],gCoalManCPs[2][1],gCoalManCPs[2][2],3.0);
	gAreas[arCoalCenter] = CreateDynamicCircle(598.9229,850.1863,280.0);
	gAreas[arWoodUnload] = CreateDynamicSphere(-48.2419,43.1337,3.1172,10.0);

	gAreas[arWoodUnload1] = CreateDynamicSphere(-900.8949,1869.0201,20.2616,3.0);

	gAreas[arGunWork] = CreateDynamicSphere(2568.2566,-1281.5046,1044.1250,1.0,0,2);
	gAreas[arTruckLoadCoal] = CreateDynamicSphere(319.6559,868.7329,19.9622,5.0);
	gAreas[arTruckWagonCoal] = CreateDynamicSphere(384.9763,902.6101,20.2163,35.0);
	gAreas[arTruckLoadWood] = CreateDynamicSphere(-2038.3032,-2380.3428,31.6422,5.0);
	gAreas[arTruckWagonWood] = CreateDynamicSphere(-2003.7578,-2421.1641,31.6471,25.0);
	gAreas[arGunFraction][0] = CreateDynamicSphere(354.7966,187.5076,1008.3799,1.0);
	gAreas[arGunFraction][1] = CreateDynamicSphere(-26.2599,-68.8835,1019.4539,1.0,3,5);
	gAreas[arGunFraction][2] = CreateDynamicSphere(1520.9233,-1667.0339,-51.6506,1.0);
	gAreas[arGunFraction][3] = CreateDynamicSphere(2494.0042,2367.6489,16.3959,1.0,2,1);



	gAreas[arGunPolice][0] = CreateDynamicSphere(253.6839,76.9174,1003.6406,2.0);
	CreateDynamicCP(253.6839,76.9174,1003.6406,0.9,-1,-1);
	gAreas[arGunPolice][1] = CreateDynamicSphere(220.0060,151.4583,1003.0234,2.0);
	CreateDynamicCP(220.0060,151.4583,1003.0234,0.9,-1,-1);
	gAreas[arGunPolice][2] = CreateDynamicSphere(232.6431,120.9143,1003.2188,2.0);
	CreateDynamicCP(232.6431,120.9143,1003.2188,0.9,-1,-1);


	gAreas[DrugsPick] = CreateDynamicSphere(-1061.4800,-1195.4921,129.8281,1.0);
	CreateDynamicPickup(1239,1,-1061.4800,-1195.4921,129.8281);

	CreateDynamicPickup(1239,1,2494.0042,2367.6489,16.3959,2,1);

	gAreas[arBankMenu][0] = CreateDynamicSphere(2164.7764,1630.0315,980.8889,1.0);
	CreateDynamicPickup(1274,1,2164.7764,1630.0315,980.8889);


	gAreas[OplataHoBiz] = CreateDynamicSphere(2164.5723,1624.2831,980.8889,1.0);
	CreateDynamicPickup(1274,1,2164.5723,1624.2831,980.8889,-1,-1);
	gAreas[arHotelReception] = CreateDynamicSphere(1320.5645,-1051.0974,3359.7109,1.0);
	gAreas[arHotelExit] = CreateDynamicSphere(1330.9351,-1063.2609,3359.7158,1.0,-1,4);
	gAreas[arAutoExam] = CreateDynamicSphere(-2028.5881,-106.4883,551.0859,1.3,1,3);//2028.6395,-106.4816,551.0859
	gAreas[arAutoExamEnter] = CreateDynamicSphere(-2029.7671,-119.6200,1035.1719,1.0,1,0);
	gAreas[arAutoExamExit] = CreateDynamicSphere(-2029.8129,-120.7440,35.1719,1.0,0,0);
	gAreas[arInstructorBarrier] = CreateDynamicSphere(-2059.0325,-97.4644,35.1641,15.0,0,0);
	gAreas[arKiosk] = CreateDynamicSphere(1345.9944,-805.9055,1185.7059,1.0,-1,-1);
	gAreas[arGreenZone][0] = CreateDynamicSphere(1755.0529,-1894.1108,13.5568,100.0,0,0);//ЖДЛС
	gAreas[arGreenZone][1] = CreateDynamicCircle(486.8350,883.5020,250.0,0,0);//Карьер
	gAreas[arGreenZone][2] = CreateDynamicSphere(-1965.6868,-2368.5894,30.6868,150.0,0,0);//Лесопилка
	gAreas[arGreenZone][3] = CreateDynamicSphere(-2029.6866,-112.1862,1035.1719,30.0,-1,3);//АШ
	gAreas[arGreenZone][4] = CreateDynamicSphere(333.4385,-1337.6041,14.5078,30.0,-1,0);//Респ 1
	gAreas[arGreenZone][5] = CreateDynamicSphere(2130.4749,-1149.5190,24.2389,30.0,-1,0);//Респ 2
	gAreas[arGreenZone][6] = CreateDynamicSphere(2568.2566,-1281.5046,1044.1250,30.0,-1,2);//Оруж завод
	gAreas[arGreenZone][7] = CreateDynamicSphere(1176.0903,-1795.3257,13.3984,60.0,-1,0);//Стоянка
	gAreas[arGreenZone][8] = CreateDynamicCircle(1784.12, -1301.11,60.0,-1,0);//Центр занятости
	gAreas[arGreenZone][9] = CreateDynamicSphere(1326.5133,-827.1273,1185.7059,60.0,-1,-1);//Больница

	gAreas[arGreenZone][10] = CreateDynamicSphere(819.1815,-1342.2859,13.5240,60.0,-1,-1);//СПАВН
	gAreas[arGreenZone][11] = CreateDynamicSphere(824.9097,-1361.1578,-0.5078,60.0,-1,-1);//СПАНВ
	gAreas[arGreenZone][12] = CreateDynamicSphere(1969.0052,1018.6863,992.4688,100.0,-1,-1);//Больница
	gAreas[arGreenZone][13] = CreateDynamicSphere(201.4488,217.3837,501.0859,100.0,-1,-1);//Больница

	gAreas[arGreenZone][14] = CreateDynamicSphere(-887.6867,1867.0271,20.2641,100.0,-1,-1);//Больница
	//	gAreas[arGangBuyCar] = CreateDynamicSphere(2494.0757,-1464.6000,24.0254,1.0);

	CreateDynamicPickup(1239, 1, 243.8235,1810.0735,541.0859, -1, -1);
	gAreas[arHire] = CreateDynamicSphere(243.8235,1810.0735,541.0859,1.0);

	gAreas[arAntiCleo] = CreateDynamicCircle(613.0270,870.0396,50.0);
	gAreas[arAntiCleoWood] = CreateDynamicCircle(-1966.3129,-2369.2002,15.0);
	gAreas[arBarrier][0] = CreateDynamicSphere(339.8503,1796.2324,18.1347,2.0);
	gAreas[arBarrier][1] = CreateDynamicSphere(143.1136,1964.7142,19.4872,2.0);
	gAreas[arBarrier][2] = CreateDynamicSphere(462.21, 2540.05, 19.31,2.0);
	gAreas[arArmyAmmo] = CreateDynamicSphere(312.4241,-165.9406,999.6010,1.0,-1,-1);
	gAreas[arDorm] = CreateDynamicSphere(1521.5228,-79.2000,1054.1859,2.0);
	gAreas[arArrest][0] = CreateDynamicSphere(1568.6235,-1693.2693,5.8906,20.0,-1,-1); //LSPD
	gAreas[arArrest][1] = CreateDynamicSphere(-1590.3177,716.3592,-5.2422,20.0,-1,-1); //SFPD
	gAreas[arArrest][2] = CreateDynamicSphere(2281.6394,2429.6323,3.2734,20.0,-1,-1); //LVPD
	gAreas[arDoorLS] = CreateDynamicSphere(1540.1976,-1695.1836,-51.6684,1.0); //LSPD
	gAreas[arDoorLSn] = CreateDynamicSphere(1540.1921,-1692.2007,-51.6619,1.0); //LSPD
	gAreas[arDoornew] = CreateDynamicSphere(1537.1134,-1695.5382,-51.6619,1.0); //LSPD
	gAreas[arDoornewn] = CreateDynamicSphere(1534.5598,-1696.2845,-51.6684,1.0); //LSPD
	gAreas[arDor] = CreateDynamicSphere(1577.6394,-1675.3365,-47.5200,0.8); //LSPD
	gAreas[arDorn] = CreateDynamicSphere(1577.6548,-1673.3263,-47.5200,0.8); //LSPD
	/*gAreas[arCristmas][0] = CreateDynamicSphere(-2026.48, -92.92, 33.81,50.0);
	gAreas[arCristmas][1] = CreateDynamicSphere(1479.11, -1710.20, 13.05,50.0);
	gAreas[arCristmas][2] = CreateDynamicSphere(1838.73, -1864.41, 12.37,50.0);
	gAreas[arCristmas][3] = CreateDynamicSphere(-1805.43, 560.02, 34.16,50.0);
	gAreas[arCristmas][4] = CreateDynamicSphere(-1047.74, -581.22, 31.00,50.0);

	gAreas[arCristmas][5] = CreateDynamicSphere(-2026.48, -92.92, 33.81,4.0);
	gAreas[arCristmas][6] = CreateDynamicSphere(1479.11, -1710.20, 13.05,4.0);
	gAreas[arCristmas][7] = CreateDynamicSphere(1838.73, -1864.41, 12.37,4.0);
	gAreas[arCristmas][8] = CreateDynamicSphere(-1805.43, 560.02, 34.16,4.0);
	gAreas[arCristmas][9] = CreateDynamicSphere(-1047.74, -581.22, 31.00,4.0);*/
	//gAreas[arBusinessBuyProd] = CreateDynamicSphere(2798.1987,-2393.9775,13.9560,1.0);
	//	gAreas[arDrugDelivery][0] = CreateDynamicSphere(944.8346,1732.5624,8.8516,5.0);
	///	gAreas[arDrugDelivery][1] = CreateDynamicSphere(1460.7419,2773.2566,10.8203,5.0);
	//	gAreas[arDrugDelivery][2] = CreateDynamicSphere(2628.3823,1824.4650,11.0234,5.0);
	gAreas[arBusinessDelivery] = CreateDynamicSphere(2426.4575,-2101.8687,13.5469,1.0);
	gAreas[arDeliLoad][0] = CreateDynamicRectangle(2775.7600,-2428.7532,2800.6060,-2406.8003);
	gAreas[arDeliLoad][1] = CreateDynamicRectangle(2775.7607,-2466.8469,2800.6057,-2444.8938);
	gAreas[arDeliLoad][2] = CreateDynamicRectangle(2775.7551,-2504.9473,2800.6074,-2482.9939);


	/*gPDCamArea[0] = CreateDynamicRectangle(1533.3993,-1701.9745,-51.6684,270.4092,-1,6);
	gPDCamArea[1] = CreateDynamicRectangle(1533.1967,-1705.0847,-51.6684,271.9758,-1,6);
	gPDCamArea[2] = CreateDynamicRectangle(1533.7284,-1708.6755,-51.6684,265.7091,-1,6);
	gPDCamArea[3] = CreateDynamicRectangle(1533.3402,-1711.2813,-51.6684,274.7959,-1,6);
	gPDCamArea[4] = CreateDynamicRectangle(1533.0508,-1714.6227,-51.6684,267.2758,-1,6);
	gPDCamArea[5] = CreateDynamicRectangle(1532.8953,-1717.7277,-51.6684,269.4692,-1,6);
	gPDCamArea[6] = CreateDynamicRectangle(1532.6958,-1721.8301,-51.6684,272.2892,-1,6);
	gPDCamArea[7] = CreateDynamicRectangle(1533.4951,-1722.7712,-47.9819,267.2992,-1,6);
	gPDCamArea[8] = CreateDynamicRectangle(1532.9181,-1719.3228,-47.9819,92.1676,-1,6);
	gPDCamArea[9] = CreateDynamicRectangle(1532.9636,-1715.9635,-47.9819,104.7011,-1,6);
	gPDCamArea[10] = CreateDynamicRectangle(1533.3662,-1712.8292,-47.9819,97.4944,-1,6);
	gPDCamArea[11] = CreateDynamicRectangle(1533.3662,-1712.8292,-47.9819,97.4944,-1,6);
	gPDCamArea[12] = CreateDynamicRectangle(1532.9363,-1706.8845,-47.9819,71.8008,-1,6);
	gPDCamArea[13] = CreateDynamicRectangle(1533.1512,-1703.6213,-47.9819,345.3200,-1,6);
	gPDCamArea[14] = CreateDynamicRectangle(1533.4662,-1699.9644,-47.9819,350.0201,-1,6);
	gPDCamArea[15] = CreateDynamicRectangle(1533.6410,-1695.6608,-47.9819,357.8535,-1,6);
	*/


	gRepairArea[0] = CreateDynamicRectangle(1016.6974,-1437.6859,1031.1575,-1431.4160,0,0);
	gRepairArea[1] = CreateDynamicRectangle(-2186.4395,963.8301,-2180.1125,978.5938,0,0);
	gRepairArea[2] = CreateDynamicRectangle(1938.1539,2158.9758,1947.6489,2168.8398,0,0);


	CheckGang[1] = CreateDynamicCP(-509.6063,-293.7073,1997.4139, 1.0, 0+2003, 8);//BALLAS
	CheckGang[0] = CreateDynamicCP(-509.6063,-293.7073,1997.4139, 1.0, 1+2003, 2);//GROVE
	CheckGang[3] = CreateDynamicCP(-509.6063,-293.7073,1997.4139, 1.0, 2+2003, 2);//AZTEC
	CheckGang[4] = CreateDynamicCP(-509.6063,-293.7073,1997.4139, 1.0, 3+2003, 5);//VAGOS
	CheckGang[2] = CreateDynamicCP(-509.6063,-293.7073,1997.4139, 1.0, 4+2003, 6);//RIFA



	CheckGang[5] = CreateDynamicCP(-1100.9453,852.4727,1093.6859, 1.0, 2, 1);//Якудза
	CheckGang[6] = CreateDynamicCP(-1658.0190,1567.8282,1164.7581, 1.0, 3, 1);//LCN
	CheckGang[7] = CreateDynamicCP(-1463.7689,360.2170,1009.7480-1, 1.0, 4, 1);//RM
	Mafia3d[0] = CreateDynamic3DTextLabel("_",CWHITE,-1100.9453,852.4727,1093.6859,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,2);
	Mafia3d[1] = CreateDynamic3DTextLabel("_",CWHITE,-1658.0190,1567.8282,1164.7581,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,3);
	Mafia3d[2] = CreateDynamic3DTextLabel("_",CWHITE,-1463.7689,360.2170,1009.7480,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,4);


	gMafiaPickup[0] = CreateDynamicCP(-1114.6246,840.5479,1085.9139, 1.0, 2, 1);//Якудза
	gMafiaPickup[1] = CreateDynamicCP(-1675.6893,1619.7463,1164.7581, 1.0, 3, 1);//LCN
	gMafiaPickup[2] = CreateDynamicCP(-1517.3014,388.0705,1014.7322-1, 1.0, 4, 1);//RM
	gMafia3D[0] = CreateDynamic3DTextLabel("_",CWHITE,-1114.6246,840.5479,1085.9139+0.9,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,2);
	gMafia3D[1] = CreateDynamic3DTextLabel("_",CWHITE,-1675.6893,1619.7463,1164.7581+0.9,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,3);
	gMafia3D[2] = CreateDynamic3DTextLabel("_",CWHITE,-1517.3014,388.0705,1014.7322+0.9,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,4);

	gGangDormText[0] = CreateDynamic3DTextLabel("_",CWHITE,-509.6063,-293.7073,1997.4139+0.9,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,8,0+2003);
	gGangDormText[1] = CreateDynamic3DTextLabel("_",CWHITE,-509.6063,-293.7073,1997.4139+0.9,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,2,1+2003);
	gGangDormText[2] = CreateDynamic3DTextLabel("_",CWHITE,-509.6063,-293.7073,1997.4139+0.9,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,2,2+2003);
	gGangDormText[3] = CreateDynamic3DTextLabel("_",CWHITE,-509.6063,-293.7073,1997.4139+0.9,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,5,3+2003);
	gGangDormText[4] = CreateDynamic3DTextLabel("_",CWHITE,-509.6063,-293.7073,1997.4139+0.9,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,6,4+2003);

	for(new i;i<5;i++)
	{
		new mess[150];
		f(mess,"{%s}%s\n{FFFFFF}Количество территорий: {%s}%d\n{FFFFFF}Материалы: {%s}%d/10000\n{FFFFFF}Наркотики: {%s}%d/30000\n{FFFFFF}Деньги: {%s}%d$",
		GetColor3DText(i),gGangName3D[i],
		GetColor3DText(i),TotalGz[i],
		GetColor3DText(i),gGangDorm[i][0],
		GetColor3DText(i),gGangDorm[i][2],
		GetColor3DText(i),gGangDorm[i][3]);
		UpdateDynamic3DTextLabelText(gGangDormText[i],-1,mess);
	}

	for(new i;i<5;i++)
	{
		arGang[i] = CreateDynamicPickup(1318,1,gGangEnter[i][0],gGangEnter[i][1],gGangEnter[i][2],0,0);
		arGangExit[i] = CreateDynamicPickup(1318,1,gGangExit[i][0],gGangExit[i][1],gGangExit[i][2],i+2003,gGangInterior[i][0]);
	}
	gEmCall[0] = INVALID_PLAYER_ID;
	gEmCall[1] = INVALID_PLAYER_ID;
	gEmCall[2] = INVALID_PLAYER_ID;
	for(new i;i<TELEPORTS_COUNT;i++)
	{
		gTeleportAreas[i][0] = CreateDynamicPickup(1318,1,gTeleports[i][0][0],gTeleports[i][0][1],gTeleports[i][0][2],gTeleportData[i][0][0]);
		gTeleportAreas[i][1] = CreateDynamicPickup(1318,1,gTeleports[i][1][0],gTeleports[i][1][1],gTeleports[i][1][2],gTeleportData[i][1][0]);
	}
	for(new i;i<24;i++)
	{
		Hospital_hStatus[i][1] = false;
		Hospital_hStatus[i][2] = false;
		Hospital_hStatus[i][3] = false;
		hospital[i][1] = CreateDynamic3DTextLabel("Больничная койка\n{FFFFFF}Занять: /hospital", COLOR_AQUA, hospos[i][0], hospos[i][1], hospos[i][2], 6.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 1);
		hospital[i][2] = CreateDynamic3DTextLabel("Больничная койка\n{FFFFFF}Занять: /hospital", COLOR_AQUA, hospos[i][0], hospos[i][1], hospos[i][2], 6.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 2, 2);
		hospital[i][3] = CreateDynamic3DTextLabel("Больничная койка\n{FFFFFF}Занять: /hospital", COLOR_AQUA, hospos[i][0], hospos[i][1], hospos[i][2], 6.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 3, 3);
	}

	tmpobjid = CreateObject(1835, 1957.3203, 1047.9766, 992.1027,   356.8584, 0.0000, 325.6672);
	tmpobjid = CreateObject(1835, 1962.1381, 1043.4320, 992.1027,   356.8584, 0.0000, 304.1042);
	tmpobjid = CreateObject(1835, 1964.7604, 1037.1677, 992.1027,   356.8584, 0.0000, 282.7065);
	tmpobjid = CreateObject(1835, 1964.5901, 998.3930, 992.1027,   356.8584, 0.0000, 263.3527);
	tmpobjid = CreateObject(1835, 1961.9609, 992.2031, 992.1027,   356.8584, 0.0000, 233.3556);
	tmpobjid = CreateObject(1835, 1957.4453, 987.6719, 992.1027,   356.8584, 0.0000, 209.4884);

	new ferma = CreateObject(12921, -128.18, -179.38, 4.10,   356.86, 0.00, -2.97);
	SetObjectMaterialText(ferma, "~~~ Ферма ~~~", 2, OBJECT_MATERIAL_SIZE_256x128, "Arial", 25, 0, 0xFFFF0000, -1, 1);
	for(new i;i<ATM_COUNT;i++)
	{
		gATMO[i] = CreateObject(2754,gATMC[i][0],gATMC[i][1],gATMC[i][2],gATMC[i][3],gATMC[i][4],gATMC[i][5]);
		SetObjectMaterial(gATMO[i], 2, 2314, "cj_tv_stand", "CJ_LIGHTWOOD", 0);
		gATMArea[i] = CreateDynamicSphere(gATMC[i][0],gATMC[i][1],gATMC[i][2],1.0);
		gATM3D[i] = CreateDynamic3DTextLabel("Банкомат\n{FFFFFF}[ Нажмите ALT ]",COLOR_AQUA,gATMC[i][0],gATMC[i][1],gATMC[i][2],9.0);
	}

	ferma = CreateObject(13612, -1398.44, 995.65, 1024.46,   0.00, 0.00, 0.00);
	SetObjectMaterial(ferma, 0, 4821, "union_las", "lasunion994", 0);
	SetObjectMaterial(ferma, 1, 8171, "vgssland01", "ws_runwaytarmac", 0);

	gGunWorkWHText = CreateDynamic3DTextLabel("_",CWHITE,2566.6143,-1292.8054,1047.7266,20.0);
	ZavodText[0] = CreateDynamic3DTextLabel("_",CWHITE,-883.4730,1843.8748,21.8426,20.0);
	ZavodText[1] = CreateDynamic3DTextLabel("_",CWHITE,-23.1897,-269.8877,8.6491,20.0);
	gWoodWHText = CreateDynamic3DTextLabel("_",CWHITE,-901.6545,1869.2329,22.2565,20.0);
	gWoodWHText3 = CreateDynamic3DTextLabel("_",CWHITE,-26.9249,43.2478,5.0927,20.0);
	gWoodWHText33 = CreateDynamic3DTextLabel("_",CWHITE,250.4960,1415.1991,18.0115,40.0);
	gWoodWHText333 = CreateDynamic3DTextLabel("_",CWHITE,370.6266,854.7623,28.4075,20.0);
	CreateDynamic3DTextLabel("{ffcf00}Вход",CWHITE,2571.9583,-1301.9756,1046.4250,20.0);

	gArmyWarehouseText[3] = CreateDynamic3DTextLabel("_",CWHITE,376.0814,1953.9209,17.7444,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0);
	gArmyWarehouseText[4] = CreateDynamic3DTextLabel("_",CWHITE,-2111.5747,1883.5104,11.3047,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0);


	CreateDynamicObject(967, 2527.41, 2424.78, 9.81,   0.00, 0.00, 269.00);
	CreateDynamicObject(966, 2528.32, 2423.84, 9.84,   0.00, 0.00, 179.83);
	CreateDynamicObject(966, 2526.44, 2423.79, 9.86,   0.00, 0.00, 359.64);
	CreateDynamicObject(967, 2479.11, 2517.39, 9.82,   0.00, 0.00, 180.00);
	CreateDynamicObject(966, 2478.56, 2515.63, 9.82,   0.00, 0.00, 90.90);
	CreateDynamicObject(967, 2516.17, 2340.83, 9.82,   0.00, 0.00, 0.00);
	CreateDynamicObject(966, 2516.7739, 2343.4800, 9.8200,   0.0000, 0.0000, 269.2340);



	//Тексты
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		gCalls[i][g_caller] = INVALID_PLAYER_ID;
		gCalls[i][g_callee] = INVALID_PLAYER_ID;
		//gInterfaceWantedList[i] = INVALID_PLAYER_ID;
	}
	// Закусочные
	// черный бокс вокруг
	gEateryTextDraw[4] = TextDrawCreate(200.0, 100.0, "                                           ~n~");
	TextDrawFont(gEateryTextDraw[4], 1);
	TextDrawLetterSize(gEateryTextDraw[4], 5.0, 3.5);
	TextDrawUseBox(gEateryTextDraw[4], 1);
	TextDrawTextSize(gEateryTextDraw[4], 510.0, 0.0);
	TextDrawBackgroundColor(gEateryTextDraw[4], 0xFFFFFF00);
	TextDrawBoxColor(gEateryTextDraw[4], 0x00000066);

	gEateryTextDraw[9] = TextDrawCreate(200.0, 82.0, "Eatery");
	TextDrawLetterSize(gEateryTextDraw[9], 1.0, 2.5);
	TextDrawAlignment(gEateryTextDraw[9], 1);
	TextDrawColor(gEateryTextDraw[9], -1);
	TextDrawSetShadow(gEateryTextDraw[9], 0);
	TextDrawSetOutline(gEateryTextDraw[9], 1);
	TextDrawBackgroundColor(gEateryTextDraw[9], 51);
	TextDrawFont(gEateryTextDraw[9], 0);
	TextDrawSetProportional(gEateryTextDraw[9], 1);

	new Float: gEateryPos[2];
	gEateryPos[0] = 200.0, gEateryPos[1] = 100.0;
	for(new x = 0; x <= 3; x ++) { // превьюшки
		if(x > 0) gEateryPos[1] += 50.0;
		gEateryTextDraw[x] = TextDrawCreate(gEateryPos[0], gEateryPos[1], "_");
		TextDrawFont(gEateryTextDraw[x], TEXT_DRAW_FONT_MODEL_PREVIEW);
		TextDrawUseBox(gEateryTextDraw[x], 1);
		if(x == 3) TextDrawTextSize(gEateryTextDraw[x], 100.0, 75.0);
		else TextDrawTextSize(gEateryTextDraw[x], 100.0, 50.0);
		TextDrawBackgroundColor(gEateryTextDraw[x], 0xFFFFFF00);

		TextDrawSetPreviewModel(gEateryTextDraw[x], gEateryObj[x]);

		if(x == 3) TextDrawSetPreviewRot(gEateryTextDraw[x], 0, 0, 180, 1.5);
		else TextDrawSetPreviewRot(gEateryTextDraw[x], -60, -45, 90, 1.0);
	}

	gEateryPos[0] = 305.0, gEateryPos[1] = 125.0;
	for(new x = 5; x <= 8; x ++) { // названия
		if(x > 5) gEateryPos[1] += 50.0;
		gEateryTextDraw[x] = TextDrawCreate(gEateryPos[0], gEateryPos[1], gEateryNames[x - 5]);
		TextDrawLetterSize(gEateryTextDraw[x], 0.460000, 1.722499);
		TextDrawTextSize(gEateryTextDraw[x], 450.000000, 20.0);
		TextDrawAlignment(gEateryTextDraw[x], 1);
		TextDrawColor(gEateryTextDraw[x], -1);
		TextDrawSetShadow(gEateryTextDraw[x], 0);
		TextDrawSetOutline(gEateryTextDraw[x], 1);
		TextDrawBackgroundColor(gEateryTextDraw[x], 51);
		TextDrawFont(gEateryTextDraw[x], 2);
		TextDrawSetProportional(gEateryTextDraw[x], 1);
		TextDrawSetSelectable(gEateryTextDraw[x], 1);
	}

	// Магазин одежды
	gSkinShopDraw[0] = TextDrawCreate(88.000000, 242.000000, "~>~");
	TextDrawBackgroundColor(gSkinShopDraw[0], 255);
	TextDrawFont(gSkinShopDraw[0], 1);
	TextDrawLetterSize(gSkinShopDraw[0], 0.500000, 2.000000);
	TextDrawColor(gSkinShopDraw[0], -1);
	TextDrawSetOutline(gSkinShopDraw[0], 0);
	TextDrawSetProportional(gSkinShopDraw[0], 1);
	TextDrawSetShadow(gSkinShopDraw[0], 1);
	TextDrawTextSize(gSkinShopDraw[0], 107.000000, 22.000000);
	TextDrawSetSelectable(gSkinShopDraw[0], 1);

	gSkinShopDraw[1] = TextDrawCreate(18.000000, 242.000000, "~<~");
	TextDrawBackgroundColor(gSkinShopDraw[1], 255);
	TextDrawFont(gSkinShopDraw[1], 1);
	TextDrawLetterSize(gSkinShopDraw[1], 0.500000, 2.000000);
	TextDrawColor(gSkinShopDraw[1], -1);
	TextDrawSetOutline(gSkinShopDraw[1], 0);
	TextDrawSetProportional(gSkinShopDraw[1], 1);
	TextDrawSetShadow(gSkinShopDraw[1], 1);
	TextDrawTextSize(gSkinShopDraw[1], 36.000000, 22.000000);
	TextDrawSetSelectable(gSkinShopDraw[1], 1);

	gSkinShopDraw[2] = TextDrawCreate(115.000000, 221.000000, "_");
	TextDrawBackgroundColor(gSkinShopDraw[2], 0x00000066);
	TextDrawBoxColor(gSkinShopDraw[2], 0x00000066);
	TextDrawFont(gSkinShopDraw[2], 1);
	TextDrawLetterSize(gSkinShopDraw[2], 0.000000, 7.199996);
	TextDrawUseBox(gSkinShopDraw[2], 1);
	TextDrawTextSize(gSkinShopDraw[2], 11.000000, 0.000000);
	TextDrawSetSelectable(gSkinShopDraw[2], 0);

	gSkinShopDraw[3] = TextDrawCreate(45.000000, 245.000000, "BUY");
	TextDrawBackgroundColor(gSkinShopDraw[3], 255);
	TextDrawFont(gSkinShopDraw[3], 3);
	TextDrawLetterSize(gSkinShopDraw[3], 0.629999, 1.500000);
	TextDrawColor(gSkinShopDraw[3], -1);
	TextDrawSetOutline(gSkinShopDraw[3], 0);
	TextDrawSetProportional(gSkinShopDraw[3], 1);
	TextDrawSetShadow(gSkinShopDraw[3], 1);
	TextDrawTextSize(gSkinShopDraw[3], 83.000000, 15.000000);
	TextDrawSetSelectable(gSkinShopDraw[3], 1);


	gSkinShopDraw[4] = TextDrawCreate(30.000000, 268.000000, "CANCEL");
	TextDrawBackgroundColor(gSkinShopDraw[4], 255);
	TextDrawFont(gSkinShopDraw[4], 3);
	TextDrawLetterSize(gSkinShopDraw[4], 0.629998, 1.500000);
	TextDrawColor(gSkinShopDraw[4], -1);
	TextDrawSetOutline(gSkinShopDraw[4], 0);
	TextDrawSetProportional(gSkinShopDraw[4], 1);
	TextDrawSetShadow(gSkinShopDraw[4], 1);
	TextDrawTextSize(gSkinShopDraw[4], 101.000000, 15.000000);
	TextDrawSetSelectable(gSkinShopDraw[4], 1);

//	gCasinoTextt = TextDrawCreate(105.999961, 296.592498, "UP RATE");
//	TextDrawLetterSize(gCasinoTextt, 0.449999, 1.600000);
//	TextDrawAlignment(gCasinoTextt, 1);
//	TextDrawColor(gCasinoTextt, -1);
//	TextDrawSetShadow(gCasinoTextt, 0);
//	TextDrawSetOutline(gCasinoTextt, 1);
//	TextDrawBackgroundColor(gCasinoTextt, 51);
//	TextDrawFont(gCasinoTextt, 3);
//	TextDrawSetProportional(gCasinoTextt, 1);
//	TextDrawSetSelectable(gCasinoTextt, 1);

	// Бары
	// черный бокс вокруг
	gBarTextDraw[5] = TextDrawCreate(200.0, 100.0, "                                           ~n~");
	TextDrawFont(gBarTextDraw[5], 1);
	TextDrawLetterSize(gBarTextDraw[5], 5.0, 4.35);
	TextDrawUseBox(gBarTextDraw[5], 1);
	TextDrawTextSize(gBarTextDraw[5], 510.0, 0.0);
	TextDrawBackgroundColor(gBarTextDraw[5], 0xFFFFFF00);
	TextDrawBoxColor(gBarTextDraw[5], 0x00000066);

	gBarTextDraw[11] = TextDrawCreate(200.0, 82.0, "Bar");
	TextDrawLetterSize(gBarTextDraw[11], 1.0, 2.5);
	TextDrawAlignment(gBarTextDraw[11], 1);
	TextDrawColor(gBarTextDraw[11], -1);
	TextDrawSetShadow(gBarTextDraw[11], 0);
	TextDrawSetOutline(gBarTextDraw[11], 1);
	TextDrawBackgroundColor(gBarTextDraw[11], 51);
	TextDrawFont(gBarTextDraw[11], 0);
	TextDrawSetProportional(gBarTextDraw[11], 1);


	//capture
	//--------[CAPTURE-SYSTEM]--------



    new Float:Y = 119.636962;

	Box = TextDrawCreate(477.333221, 83.633308, "usebox");
	TextDrawLetterSize(Box, 0.000000, 29.843835);
	TextDrawTextSize(Box, 157.000045, 0.000000);
	TextDrawAlignment(Box, 1);
	TextDrawColor(Box, 0);
	TextDrawUseBox(Box, true);
	TextDrawBoxColor(Box, 102);
	TextDrawSetShadow(Box, 0);
	TextDrawSetOutline(Box, 0);
	TextDrawFont(Box, 0);

	KeyStartGang = TextDrawCreate(168.999984, 315.674194, "Start");
	TextDrawLetterSize(KeyStartGang, 0.837332, 3.068445);
	TextDrawTextSize(KeyStartGang, 257.666748, 39.822223);
	TextDrawAlignment(KeyStartGang, 1);
	TextDrawColor(KeyStartGang, -1);
	TextDrawUseBox(KeyStartGang, true);
	TextDrawBoxColor(KeyStartGang, -2139062153);
	TextDrawSetShadow(KeyStartGang, 0);
	TextDrawSetOutline(KeyStartGang, 1);
	TextDrawBackgroundColor(KeyStartGang, 51);
	TextDrawFont(KeyStartGang, 3);
	TextDrawSetProportional(KeyStartGang, 1);
	TextDrawSetSelectable(KeyStartGang, true);

	KeyMoneyGang = TextDrawCreate(280.666748, 316.259368, "Money");
	TextDrawLetterSize(KeyMoneyGang, 0.837332, 3.068445);
	TextDrawTextSize(KeyMoneyGang, 374.666778, 18.251852);
	TextDrawAlignment(KeyMoneyGang, 1);
	TextDrawColor(KeyMoneyGang, -65281);
	TextDrawUseBox(KeyMoneyGang, true);
	TextDrawBoxColor(KeyMoneyGang, -2139062153);
	TextDrawSetShadow(KeyMoneyGang, 0);
	TextDrawSetOutline(KeyMoneyGang, 1);
	TextDrawBackgroundColor(KeyMoneyGang, 51);
	TextDrawFont(KeyMoneyGang, 3);
	TextDrawSetProportional(KeyMoneyGang, 1);
	TextDrawSetSelectable(KeyMoneyGang, true);

	KeyExitGang = TextDrawCreate(410.333221, 317.674102, "Exit");
	TextDrawLetterSize(KeyExitGang, 0.837332, 3.068445);
	TextDrawTextSize(KeyExitGang, 470.666717, 44.385173);
	TextDrawAlignment(KeyExitGang, 1);
	TextDrawColor(KeyExitGang, -1);
	TextDrawUseBox(KeyExitGang, true);
	TextDrawBoxColor(KeyExitGang, -2139062153);
	TextDrawSetShadow(KeyExitGang, 0);
	TextDrawSetOutline(KeyExitGang, 1);
	TextDrawBackgroundColor(KeyExitGang, 51);
	TextDrawFont(KeyExitGang, 3);
	TextDrawSetProportional(KeyExitGang, 1);
	TextDrawSetSelectable(KeyExitGang, true);

	KasinoGangBox = TextDrawCreate(230.333389, 98.311134, "~g~--------------------------~n~~n~~n~~n~~n~~g~--------------------------");
	TextDrawLetterSize(KasinoGangBox, 0.449999, 1.600000);
	TextDrawAlignment(KasinoGangBox, 1);
	TextDrawColor(KasinoGangBox, -1);
	TextDrawSetShadow(KasinoGangBox, 0);
	TextDrawSetOutline(KasinoGangBox, 1);
	TextDrawBackgroundColor(KasinoGangBox, 51);
	TextDrawFont(KasinoGangBox, 1);
	TextDrawSetProportional(KasinoGangBox, 1);

	// Cherries (x25)
	Digit1[0] = CreateSprite(229.999954,Y,"LD_SLOT:cherry");
	Digit2[0] = CreateSprite(291.333465,Y,"LD_SLOT:cherry");
	Digit3[0] = CreateSprite(354.000152,Y,"LD_SLOT:cherry");

	// grapes (x100)
	Digit1[1] = CreateSprite(229.999954,Y,"LD_SLOT:grapes");
	Digit2[1] = CreateSprite(291.333465,Y,"LD_SLOT:grapes");
	Digit3[1] = CreateSprite(354.000152,Y,"LD_SLOT:grapes");

	// 69's (x250)
	Digit1[2] = CreateSprite(229.999954,Y,"LD_SLOT:r_69");
	Digit2[2] = CreateSprite(291.333465,Y,"LD_SLOT:r_69");
	Digit3[2] = CreateSprite(354.000152,Y,"LD_SLOT:r_69");

	// bells (x500)
	Digit1[3] = CreateSprite(229.999954,Y,"LD_SLOT:bell");
	Digit2[3] = CreateSprite(291.333465,Y,"LD_SLOT:bell");
	Digit3[3] = CreateSprite(354.000152,Y,"LD_SLOT:bell");

	// Bars [1 bar] (x1000)
	Digit1[4] = CreateSprite(229.999954,Y,"LD_SLOT:bar1_o");
	Digit2[4] = CreateSprite(291.333465,Y,"LD_SLOT:bar1_o");
	Digit3[4] = CreateSprite(354.000152,Y,"LD_SLOT:bar1_o");

	// Bars [2 bar] (x2000)
	Digit1[5] = CreateSprite(229.999954,Y,"LD_SLOT:bar2_o");
	Digit2[5] = CreateSprite(291.333465,Y,"LD_SLOT:bar2_o");
	Digit3[5] = CreateSprite(354.000152,Y,"LD_SLOT:bar2_o");



	new Float: gBarPos[2];
	gBarPos[0] = 200.0, gBarPos[1] = 100.0;
	for(new x = 0; x < 5; x ++) { // превьюшки
		if(x > 0) gBarPos[1] += 50.0;
		gBarTextDraw[x] = TextDrawCreate(gBarPos[0], gBarPos[1], "_");
		TextDrawFont(gBarTextDraw[x], TEXT_DRAW_FONT_MODEL_PREVIEW);
		TextDrawUseBox(gBarTextDraw[x], 1);
		TextDrawTextSize(gBarTextDraw[x], 100.0, 75.0);
		TextDrawBackgroundColor(gBarTextDraw[x], 0xFFFFFF00);

		TextDrawSetPreviewModel(gBarTextDraw[x], gBarObj[x]);

		TextDrawSetPreviewRot(gBarTextDraw[x], 0, 0, 0, 1.3);
		if(x == 0) TextDrawSetPreviewRot(gBarTextDraw[x], 0, 0, 90, 1.3);
		else if(x == 4) TextDrawSetPreviewRot(gBarTextDraw[x], -75, -20, 10, 1.3);
	}

	gBarPos[0] = 305.0, gBarPos[1] = 125.0;
	for(new x = 6; x < 11; x ++) { // названия
		if(x > 6) gBarPos[1] += 50.0;
		gBarTextDraw[x] = TextDrawCreate(gBarPos[0], gBarPos[1], gBarNames[x - 6]);
		TextDrawLetterSize(gBarTextDraw[x], 0.460000, 1.722499);
		TextDrawTextSize(gBarTextDraw[x], 450.000000, 20.0);
		TextDrawAlignment(gBarTextDraw[x], 1);
		TextDrawColor(gBarTextDraw[x], -1);
		TextDrawSetShadow(gBarTextDraw[x], 0);
		TextDrawSetOutline(gBarTextDraw[x], 1);
		TextDrawBackgroundColor(gBarTextDraw[x], 51);
		TextDrawFont(gBarTextDraw[x], 2);
		TextDrawSetProportional(gBarTextDraw[x], 1);
		TextDrawSetSelectable(gBarTextDraw[x], 1);
	}

	//Таймеры

	for(new i; i < 50; i++)
	{
		gGraffityCP[i] = CreateDynamicCP(gGraffityPos[i][0],gGraffityPos[i][1],gGraffityPos[i][2],0.9);
	    CreateDynamicMapIcon(gGraffityPos[i][0], gGraffityPos[i][1], gGraffityPos[i][2],39,CWHITE);
	}
	new Float:OX, Float:OY, Float:OZ, Float:ORX, Float:ORY, Float:ORZ, id, tag;
	new Result:grafity = sql_query(zConn, "SELECT `id`,`gang`,`x`,`y`,`z`,`rx`,`ry`,`rz` FROM `graffityy`", QUERY_CACHED);
 	if(sql_num_rows(grafity))
	{
		for(new i; i < sql_num_rows(grafity); i++)
		{
		    id = sql_get_field_int_ex(grafity, i, 0);
			gGraffityGang[id-1] = sql_get_field_int_ex(grafity, i, 1);
			switch(gGraffityGang[id-1])
			{
				case F_BALLAS: tag = 18662;
				case F_GROVE: tag = 18659;
				case F_AZTEC: tag = 18661;
				case F_VAGOS: tag = 18665;
				case F_RIFA: tag = 18663;
			}
			OX = sql_get_field_float_ex(grafity, i, 2);
			OY = sql_get_field_float_ex(grafity, i, 3);
			OZ = sql_get_field_float_ex(grafity, i, 4);
			ORX = sql_get_field_float_ex(grafity, i, 5);
			ORY = sql_get_field_float_ex(grafity, i, 6);
			ORZ = sql_get_field_float_ex(grafity, i, 7);
			gGraffityObject[id-1] = CreateDynamicObject( tag,  OX, OY, OZ, ORX, ORY, ORZ);
			printf("ID = %d | GANG = %d", id-1, gGraffityGang[id-1]);
    	}
    }



	new Result:hints = sql_query(zConn, "SELECT * FROM `hints`", QUERY_CACHED);
	if(sql_num_rows(hints) != HINTS_COUNT) print("Hints count difference");
	else
	{
		for(new i; i < sql_num_rows(hints); i++)
		{
			sql_fetch_row(hints,"|",zRes);
			sql_next_row(hints);
			sscanf(zRes,"p<|>e<iffffffffis[51]>",gHints[i]);
		}
		sql_free_result(hints);
	}


	new Result:busns = sql_query(zConn, "SELECT * FROM `business` ORDER BY `id`", QUERY_CACHED);
	gBusinessCount = sql_num_rows(busns);
	if(gBusinessCount >= MAX_BUSINESS_COUNT) print("Кол-во бизнесов в базе превышает предопределнное количество");
	for(new i;i<gBusinessCount;i++)
	{
		sql_fetch_row(busns,"|",zRes);
		sql_next_row(busns);
		sscanf(zRes, "p<|>is[64]iiiiiiiiffffiiiiiiiis[64]i",
		gBusiness[i][busiID],
		gBusiness[i][busiName],
		gBusiness[i][busiType],
		gBusiness[i][busiBint],
		gBusiness[i][busiOwnerID],
		gBusiness[i][busiSellPrice],
		gBusiness[i][busiBank],
		gBusiness[i][busiPrice],
		gBusiness[i][busiProduct],
		gBusiness[i][busiStatus],
		gBusiness[i][busiX],
		gBusiness[i][busiY],
		gBusiness[i][busiZ],
		gBusiness[i][busiR],
		gBusiness[i][busiOrder],
		gBusiness[i][busiDeliving],
		gBusiness[i][busiDay],
		gBusiness[i][busiMafia],
		gBusiness[i][busiEnterPrice],
		gBusiness[i][busiLic],
		gBusiness[i][busiTicket],
		FBI_Info[i][FBI_Status],
		FBI_Info[i][FBI_Reason],
		FBI_Info[i][FBI_Ticket]);

		if(FBI_Info[i][FBI_Status])
		{
		    strmid(FBI_Info[FBI_TOTALY][FBI_ReasonTrue],FBI_Info[i][FBI_Reason],0,strlen(FBI_Info[i][FBI_Reason]),64);
		    FBI_Info[FBI_TOTALY][FBI_X] = gBusiness[i][busiX];
		    FBI_Info[FBI_TOTALY][FBI_Y] = gBusiness[i][busiY];
		    FBI_Info[FBI_TOTALY][FBI_Z] = gBusiness[i][busiZ];
		    FBI_Info[FBI_TOTALY][FBI_R] = gBusiness[i][busiR];
		    FBI_Info[FBI_TOTALY][FBI_BussinesID] = 1;
		    FBI_Info[FBI_TOTALY][FBI_Lic] = gBusiness[i][busiLic];
		    FBI_Info[FBI_TOTALY][FBI_BussinesOwner] = gBusiness[i][busiOwnerID];
		    FBI_TOTALY++;
		}

		if(gBusiness[i][busiOwnerID]) printf("Владелец есть у бизнеса: %d", i);


		gBusinessArea[i] = CreateDynamicPickup(19132, 1, gBusiness[i][busiX],gBusiness[i][busiY],gBusiness[i][busiZ]);
		gBusinessText[i] = CreateDynamic3DTextLabel("_",CWHITE,gBusiness[i][busiX],gBusiness[i][busiY],gBusiness[i][busiZ]+1.0,20.0);
		new icon = 0, bint = gBusiness[i][busiBint];
		if(bint == 16) icon = 56;
		else if(bint == 7 || bint == 23 || bint == 6
		|| bint == 5 || bint == 8) icon = 45;
		if(icon) gBusinessIcon[i] = CreateDynamicMapIcon(gBusiness[i][busiX], gBusiness[i][busiY], gBusiness[i][busiZ], icon, -1);
	}
	sql_free_result(busns);

	for(new i;i<gBusinessCount;i++)
	{
		UpdateBusinessText(i);
		gBusiness[i][busiDelivingArea] = CreateDynamicSphere(gBusiness[i][busiX],gBusiness[i][busiY],gBusiness[i][busiZ],10.0);
	}

	/*
	new Result:forders = sql_query(zConn, "SELECT * FROM `fuelorders` ORDER BY `id`", QUERY_CACHED);
	fuelOrders = sql_num_rows(forders);
	zFuelUpdate();
	sql_free_result(forders);
	*/

    new Result:nark = sql_query(zConn, "SELECT * FROM `nark`", QUERY_CACHED);
	for(new i; i < sql_num_rows(nark); i++)
	{
		sql_fetch_row(nark,"|",zRes);
		sql_next_row(nark);
		sscanf(zRes,"p<|>iii",
		gNark[i][nID],
		gNark[i][nCena],
		gNark[i][nOwner]);
		printf("Зона %d - %d - %d - %d", i, gNark[i][nID],gNark[i][nCena],gNark[i][nOwner]);
	}
	sql_free_result(nark);

//	for(new i; i < sizeof(zones_points_0); i++)
//	{
//		GZMZ[i][idm] = GangZoneCreate(zones_points_0[i][0], zones_points_0[i][1], zones_points_0[i][2], zones_points_0[i][3]);
//	}

	mes ="";
	for(new i; i < sizeof(gMafiaCoord); i++)
	{
	    CreateObject(3861, gMafiaCoord[i][0], gMafiaCoord[i][1], gMafiaCoord[i][2], gMafiaCoord[i][3], gMafiaCoord[i][4], gMafiaCoord[i][5]);
	    gNark[i][nID] = GangZoneCreate(gMafiaCoord[i][0]+80.0, gMafiaCoord[i][1]+80.0,gMafiaCoord[i][0]-80.0, gMafiaCoord[i][1]-80.0);
	    f(mes, "Наркоточка принадлежит {%s}%s", GetColor3DTextMafia(gNark[i][nOwner]-13), GetMafiaName(gNark[i][nOwner]));
	    gNark[i][nText] = CreateDynamic3DTextLabel(mes,-1,gMafiaCoord[i][0], gMafiaCoord[i][1], gMafiaCoord[i][2]+2.0,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1, -1);
	}
    new Result:visk = sql_query(zConn, "SELECT * FROM `viska`", QUERY_CACHED);
	for(new i; i < sql_num_rows(visk); i++)
	{
		sql_fetch_row(visk,"|",zRes);
		sql_next_row(visk);
		sscanf(zRes,"p<|>is[64]iiifff",
		gViska[i][vvID],
		gViska[i][vvOwner],
		gViska[i][vvFuel],
		gViska[i][vvMoney],
		gViska[i][vvStatus],
		gViska[i][vvX],
		gViska[i][vvY],
		gViska[i][vvZ]);
		if(gViska[i][vvStatus] == 1)
		{
		    mes = "";
		    f(mes, "{ffcf00}ID: {FFFFFF}%d\n{ffcf00}Владелец: {FFFFFF}%s\n{ffcf00}Состояние: {FFFFFF}Работает", gViska[i][vvID], gViska[i][vvOwner]);
		    Viska3D[i] = CreateDynamic3DTextLabel(mes,-1,gViska[i][vvX],gViska[i][vvY],gViska[i][vvZ],10.0);
		}
		else if(gViska[i][vvStatus] == 0)
		{
		    mes = "";
		    f(mes, "{ffcf00}ID: %d\n{FFFFFF}Продается\n{ffcf00}Стоимость: {FFFFFF}10000000$\n{FFFFFF}/buyviska", gViska[i][vvID]);
		   	Viska3D[i] = CreateDynamic3DTextLabel(mes,-1,gViska[i][vvX],gViska[i][vvY],gViska[i][vvZ],10.0);
		}
		printf("Вышка %d - %f - %f - %f - %s", i, gViska[i][vvX],gViska[i][vvY],gViska[i][vvZ], gViska[i][vvOwner]);
	}
	sql_free_result(visk);

	new Result:mafias = sql_query(zConn, "SELECT * FROM `mafia` ORDER BY `id`", QUERY_CACHED);
	if(sql_num_rows(mafias) != 3) print("Кол-во мафий в базе не совпадает с предопределным количеством");
	else
	{
		for(new i;i<sql_num_rows(mafias);i++)
		{
			sql_fetch_row(mafias,"|",zRes);
			sql_next_row(mafias);
			sscanf(zRes,"p<|>ddda<i>[7]",gMafiaInfo[i][mID],gMafiaInfo[i][mEdenits],gMafiaInfo[i][mMaterial], gMafiaInfo[i][mGun]);
		}
	}

	new Result:houses = sql_query(zConn, "SELECT * FROM `houses` ORDER BY `id`", QUERY_CACHED);
	if(sql_num_rows(houses) >= MAX_HOUSE_COUNT) print("Кол-во домов в базе больше максимального");
	else if(!sql_num_rows(houses)) print("Домов в базе не найдено");
	else
	{
		gHouseCount = sql_num_rows(houses);
		for(new i;i < gHouseCount;i++)
		{
			sql_fetch_row(houses,"|",zRes);
			sql_next_row(houses);
			sscanf(zRes,"p<|>iiiiia<i>[7]a<i>[9]a<i>[4]iiiiiffffffffis[24]a<i>[3]s[24]s[24]s[24]fffdd",gHouses[i][houseID],
			gHouses[i][houseClass],gHouses[i][houseDays],
			gHouses[i][housePrice],gHouses[i][houseHint],gHouses[i][houseImprove],gHouses[i][houseGun],
			gHouses[i][houseSkin],gHouses[i][houseSafeCode],gHouses[i][houseSafeMoney],
			gHouses[i][houseDrugs],gHouses[i][houseProducts],gHouses[i][houseClose],
			gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],gHouses[i][houseR],
			gHouses[i][houseParkX],gHouses[i][houseParkY],gHouses[i][houseParkZ],
			gHouses[i][houseParkR],gHouses[i][houseOwnerID],gHouses[i][houseOwner],
			gHouses[i][houseHabitID],gHouseHabits[i][0],gHouseHabits[i][1],gHouseHabits[i][2],
			//=============================================
			gHouses[i][hShx],gHouses[i][hShy],gHouses[i][hShz],
 			gHouses[i][houseMats], gHouses[i][houseMoney]);
			if(gHouses[i][houseOwnerID] != 0)
			{
				gHousePickup[i] = CreateDynamicPickup(1272,1,gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ]);
				gHouseIcon[i] = CreateDynamicMapIcon(gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],32,CWHITE);
			}
			else
			{
				gHousePickup[i] = CreateDynamicPickup(1273,1,gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ]);
				gHouseIcon[i] = CreateDynamicMapIcon(gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],31,CWHITE);
			}
//			new hintid = gHouses[i][houseHint];
			if(gHouses[i][houseImprove][5])
			{
				mes = "";
				f(mes, "Шкаф\nМатериалы: %d\nНаркотики: %d\nДеньги: %d$\n\n/use", gHouses[i][houseMats], gHouses[i][houseDrugs], gHouses[i][houseMoney]);
			    gStoreText[i] = CreateDynamic3DTextLabel(mes,CWHITE,gHouses[i][hShx], gHouses[i][hShy], gHouses[i][hShz]+0.9,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,-1,i+1);
			}
		}
		sql_free_result(houses);
	}

	/*new Result:cars = sql_query(zConn, "SELECT * FROM `cars` ORDER BY `id`", QUERY_CACHED);
	for(new i;i<sql_num_rows(cars);i++)
	{
		sql_fetch_row(cars,"|",zRes);
		sql_next_row(cars);
		sscanf(zRes,"p<|>ddds[12]fffdda<i>[13]dd",
		gCars[i][carMysqlID],
		gCars[i][carOwnerid],
		gCars[i][carModelid],
		gCars[i][carPlate],
		gCars[i][carFuel],
		gCars[i][carDrived],
		gCars[i][carHealth],
		gCars[i][carColor1],
		gCars[i][carColor2],
		gCars[i][carTuning],
		gCars[i][carPaintJob],
		gCars[i][carSell]);


		//sscanf(zRes,"a<i>[13]",gCars[i][carTuning]);
		//sscanf(zRes,"ddds[12]fffdd",zRes);
	}
	sql_free_result(cars);*/

    new Result:forders = sql_query(zConn, "SELECT * FROM `fuelorders` ORDER BY `id`", QUERY_CACHED);
	fuelOrders = sql_num_rows(forders);
	sql_free_result(forders);

	/*new Result:plkeys = sql_query(zConn, "SELECT `id`,`car`,`house` FROM `accounts` WHERE NOT `house` = '0' AND NOT `car` = '0'", QUERY_CACHED);
 	for(new i2;i2 < sql_num_rows(plkeys);i2++)
	{
		sql_fetch_row(plkeys,"|",zRes);
		sql_next_row(plkeys);
		new car,house,houseid,plid;
		sscanf(zRes,"p<|>ddd",plid,car,house);
		houseid = house - 1;
		new i = -1;
		for(new i3; i3 < MAX_VEHICLES; i3++)
		{
			if(car == gCars[i3][carMysqlID])
			{
				i = i3;
				break;
			}
		}
		if(i != -1)
		{
			if(house)
			{
				new vehicleid = CreateVehicle(gCars[i][carModelid],gHouses[houseid][houseParkX],gHouses[houseid][houseParkY],gHouses[houseid][houseParkZ],gHouses[houseid][houseParkR],gCars[i][carColor1],gCars[i][carColor2],-1);
				gCars[i][carVid] = vehicleid;
				for(new i5;i5<14;i5++)
				{
					new tun = gCars[i][carTuning][i5];
					if(tun != 0) AddVehicleComponent(vehicleid, tun);
				}
				if(!gCars[i][carPaintJob]) ChangeVehiclePaintjob(gCars[i][carVid], gCars[i][carPaintJob]);
				SetVehicleHealthEx(vehicleid, 1000);
				ToggleLock(vehicleid);
				gVehicles[vehicleid-1][vFuel] = gCars[i][carFuel];
				gVehicles[vehicleid-1][vDrived] = gCars[i][carDrived];
				gVehicles[vehicleid-1][vHealth] = gCars[i][carHealth];
				gVehicles[vehicleid-1][vOwnerid] = gCars[i][carOwnerid];
			}
		}
  		else printf("Неверная связка машины у игрока %d (машина %d не найдена)",plid,car);
	}
	sql_free_result(plkeys);*/



	for(new houseid; houseid < MAX_HOUSE_COUNT; houseid ++)
	{
		if(!gHouses[houseid][houseOwnerID]) continue;
		new zStr[126];
		format(zStr, sizeof(zStr), "SELECT * FROM `accounts` WHERE `id` = %d AND `house` = %d", gHouses[houseid][houseOwnerID], houseid+1);
		new Result: howners = sql_query(zConn, zStr, QUERY_CACHED);
		if(!sql_num_rows(howners))
		{
			format(zStr,sizeof(zStr),"UPDATE `houses` SET `ownerid` = '0', `owner` = '', improve = '0|0|0|0|0|0|0', gun = '0|0|0|0|0|0|0|0|0', skin = '0|0|0|0',safecode='0', safemoney='0', drugs='0', products='0',inhabit2id = '0',inhabit3id = '0',inhabit4id = '0',inhabit2='',inhabit3='',inhabit4='' WHERE `id` = '%d'",houseid+1);
			sql_query(zConn, zStr);
			gHouses[houseid][houseOwnerID] = 0;
			strdel(gHouses[houseid][houseOwner],0,24);
			strdel(gHouseHabits[houseid][0],0,24);
			strdel(gHouseHabits[houseid][1],0,24);
			strdel(gHouseHabits[houseid][2],0,24);
			gHouses[houseid][houseHabitID][0] = 0;
			gHouses[houseid][houseHabitID][1] = 0;
			gHouses[houseid][houseHabitID][2] = 0;
			for(new i;i<9;i++)
			{
				if(i < 7)
				{
					gHouses[houseid][houseImprove][i] = 0;
				}
				gHouses[houseid][houseGun][i] = 0;
			}
			gHouses[houseid][houseSafeCode] = 0;
			gHouses[houseid][houseSafeMoney] = 0;
			gHouses[houseid][houseDrugs] = 0;
			gHouses[houseid][houseProducts] = 0;
			DestroyDynamicPickup(gHousePickup[houseid]);
			gHousePickup[houseid] = CreateDynamicPickup(1273,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ]);
			DestroyDynamicMapIcon(gHouseIcon[houseid]);
			gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],31,CWHITE);
		}
		sql_free_result(howners);

	}


	new Result:trans = sql_query(zConn, "SELECT * FROM `transport` ORDER BY `model`", QUERY_CACHED);
	for(new i;i<sql_num_rows(trans);i++)
	{
		sql_fetch_row(trans,"|",zRes);
		sql_next_row(trans);
		sscanf(zRes,"p<|>e<iis[35]iiiiiii>",gTransport[i]);
		gTransport[i][trTank] = 150;
	}
	sql_free_result(trans);


    new Result:bints = sql_query(zConn, "SELECT * FROM `bints` ORDER BY `id`", QUERY_CACHED);
	if(sql_num_rows(bints) != BINT_COUNT) print("Кол-во БИНТ'ов в базе не совпадает с предопределным количеством");
	else
	{
		for(new i;i<BINT_COUNT;i++)
		{
			sql_fetch_row(bints,"|",zRes);
			sql_next_row(bints);
			sscanf(zRes,"p<|>e<iifffffffs[32]>",gBints[i]);
			gBintEnterArea[i] = CreateDynamicPickup(1318, 1,gBints[i][bintX],gBints[i][bintY],gBints[i][bintZ]);
		}
		for(new i;i<BINT_COUNT;i++)
		{
	 		gBintBuyArea[i] = CreateDynamicPickup(2663,2,gBints[i][bintXB],gBints[i][bintYB],gBints[i][bintZB]);
            gBintBuyAreaText[i] = CreateDynamic3DTextLabel("{00BF00}Список\nтоваров\n{FFCD00}Покупка: /buy",-1, gBints[i][bintXB],gBints[i][bintYB],gBints[i][bintZB],3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, -1, -1);
		}
	}
	sql_free_result(bints);




	LoadGangs();


	for(new i; i<= aNews[1];i++)
	{
		if(GetVehicleModel(i) >= 400 && i > 0)
		{
			gVehicles[i-1][vFuel] = 50;
			gVehicles[i-1][vHealth] = 1000.0;
			gVehicles[i-1][vOwnerid] = INVALID_PLAYER_ID;
			gVehicles[i-1][vLock] = 0;
			gVehicles[i-1][vID] = i;
		}
	}
	for(new i; i<= aRadio[1];i++)
	{
		if(GetVehicleModel(i) >= 400 && i > 0)
		{
			gVehicles[i-1][vFuel] = 50;
			gVehicles[i-1][vHealth] = 1000.0;
			gVehicles[i-1][vOwnerid] = INVALID_PLAYER_ID;
			gVehicles[i-1][vLock] = 0;
			gVehicles[i-1][vID] = i;
		}
	}
	for(new i; i<= aNews[1];i++)
	{
		if(GetVehicleModel(i) >= 400 && i > 0)
		{
			gVehicles[i-1][vFuel] = 50;
			gVehicles[i-1][vHealth] = 1000.0;
			gVehicles[i-1][vOwnerid] = INVALID_PLAYER_ID;
			gVehicles[i-1][vLock] = 0;
			gVehicles[i-1][vID] = i;
		}
	}
	for(new i;i<DELIVERY_DFT_COUNT;i++)
	{
		gDFTObject[i][0] = INVALID_OBJECT_ID;
		gDFTObject[i][1] = INVALID_OBJECT_ID;
	}

	new Result:fillings = sql_query(zConn, "SELECT * FROM `fillings` ORDER BY `id`", QUERY_CACHED);
	if(sql_num_rows(fillings) != FILLING_COUNT) print("Кол-во заправок в базе не совпадает с предопределным количеством");
	for(new i;i<sql_num_rows(fillings);i++)
	{
		sql_fetch_row(fillings,"|",zRes);
		sql_next_row(fillings);
		sscanf(zRes,"p<|>iis[24]iiiiia<i>[5]dd",
		gFillings[i][fillMysqlID],
		gFillings[i][fillOwnerID],
		gFillings[i][fillOwner],
		gFillings[i][fillDay],
		gFillings[i][fillPrice],
		gFillings[i][fillBank],
		gFillings[i][fillWorking],
		gFillings[i][fillPumps],
		gFillings[i][fillTanks],
		gFillings[i][fillFuel],
		gFillings[i][fillFuelPrice]);

  		gFillings[i][fillWorking] = true;
  		gFillingText[i] = CreateDynamic3DTextLabel("_",CWHITE,gFillingBuy[i][0],gFillingBuy[i][1],gFillingBuy[i][2],20.0);
		CreateDynamicMapIcon(gFillingBuy[i][0], gFillingBuy[i][1], gFillingBuy[i][2], 47, -1);
		gFillingBuyArea[i] = CreateDynamicSphere(gFillingBuy[i][0],gFillingBuy[i][1],gFillingBuy[i][2],30.0);
		for(new i2;i2<4;i2++)
		{
			if(gFuelPumps[i][i2][0] == 0.0) break;
			if(!gFillings[i][fillPumps]) gFuelPumpObjects[i][i2] = CreateDynamicObject(1686,gFuelPumps[i][i2][0],gFuelPumps[i][i2][1],gFuelPumps[i][i2][2],gFuelPumps[i][i2][3],gFuelPumps[i][i2][4],gFuelPumps[i][i2][5]);
			else gFuelPumpObjects[i][i2] = CreateDynamicObject(1676,gFuelPumps[i][i2][0],gFuelPumps[i][i2][1],gFuelPumps[i][i2][2]+1.5,gFuelPumps[i][i2][3],gFuelPumps[i][i2][4],gFuelPumps[i][i2][5]+90.0);
		}
		UpdateFillingText(i);
	}
	for(new i;i<sql_num_rows(fillings);i++) gAreas[arFill][i] = CreateDynamicSphere(gFuelPumps[i][0][0],gFuelPumps[i][0][1],gFuelPumps[i][0][2],10.0);
	sql_free_result(fillings);




	//UpdateEconomic();
	SetWeather(1);
	//LoadDeliveryData();




	return 1;
}




/*stock LoadHotels() {
	new Result:hotels = sql_query(zConn, "SELECT * FROM `hotels` ORDER BY `id`", QUERY_CACHED);
	if(sql_num_rows(hotels) != HOTEL_COUNT) print("К-во отелей не совпадает с предопределенным количеством");
	else
	{
		new zRes[256], name[24];
		for(new i;i<sql_num_rows(hotels);i++)
		{
			sql_fetch_row(hotels,"|",zRes);
			sql_next_row(hotels);
			sscanf(zRes,"p<|>e<iis[24]iii>a<i>[8]a<i>[8]",gHotelData[i],gHotelResidents[i],gHotelEndurance[i]);
			for(new k; k<8; k++) {
				if(gHotelResidents[i][k]) {
					new id = gHotelResidents[i][k];
					GetPlayerNameByID(id,name);
					format(gHotelName[i][k], 24, "%s", name);
					if(gHotelEndurance[i][k]-gCurDay < 0) {
						format(zRes, sizeof(zRes), "SELECT `car` FROM `accounts` WHERE `id` = '%d'",id);
						new Result:carfind = sql_query(zConn, zRes, QUERY_CACHED);
						if(sql_num_rows(carfind)) {
							new car = sql_get_field_int(carfind, 0);
							new carID = GetCarSlot(car);
							if(carID != -1) {
								new vehicleid = gCars[carID][carVid];
								new modelid = GetVehicleModel(vehicleid) - 400;
								format(zRes,sizeof(zRes),"DELETE FROM `cars` WHERE `id` = '%d'",car);
								sql_query(zConn, zRes);
								format(zRes,sizeof(zRes),"UPDATE `accounts` SET `car` = '0',`bank` = 'bank+%d' WHERE `id` = '%d'",floatround(gTransport[modelid][trPrice]*0.8),id);
								DestroyVehicle(vehicleid);
								gCars[carID][carOwnerid] = 0;
								gCars[carID][carMysqlID] = 0;
								gCars[carID][carModelid] = 0;
								gCars[carID][carFuel] = 0.0;
								gCars[carID][carDrived] = 0.0;
								gCars[carID][carHealth] = 0.0;
								gCars[carID][carColor1] = 0;
								gCars[carID][carColor2] = 0;
								gCars[carID][carVid] = INVALID_VEHICLE_ID;
								strdel(gCars[carID][carPlate],0,12);
							}
						}

						gHotelResidents[i][k] = 0;
						gHotelEndurance[i][k] = 0;
						UpdateHotelResidents(i);
					}
				}
			}
			CreateDynamicPickup(19132,1,gHotels[i][0], gHotels[i][1], gHotels[i][2]);
			gHotelArea[i] = CreateDynamicSphere(gHotels[i][0],gHotels[i][1],gHotels[i][2],1.0);
			UpdateHotel3D(i);
		}
	}
	sql_free_result(hotels);
	return 1;
}*/


stock FixCarKeys()
{
	new zRes[256];
	new Result:plkeys = sql_query(zConn, "SELECT `id`,`car`,`house`,`hotel`,`hotelroom` FROM `accounts` WHERE (NOT `house` = '0' OR NOT `hotel` = '0') AND NOT `car` = '0'", QUERY_CACHED);
	for(new i2;i2 < sql_num_rows(plkeys);i2++)
	{
		sql_fetch_row(plkeys,"|",zRes);
		sql_next_row(plkeys);
		new car,house,hotel,houseid,hotelid,plid,room;
		sscanf(zRes,"p<|>iiiii",plid,car,house,hotel,room);
		houseid = house - 1;
		hotelid = hotel - 1;
		new i=-1;
		for(new i3;i3<MAX_VEHICLES;i3++)
		{
			if(car == gCars[i3][carMysqlID])
			{
				i = i3;
				break;
			}
		}
		if(i != -1)
		{
			new modelid = gCars[i][carModelid];
			if(house)
			{
				new vehicleid = CreateVehicle(gTransport[modelid][trModel],gHouses[houseid][houseParkX],gHouses[houseid][houseParkY],gHouses[houseid][houseParkZ],gHouses[houseid][houseParkR],gCars[i][carColor1],gCars[i][carColor2],-1);
				gCars[i][carVid] = vehicleid;
				//UpdateVehicleDamageStatus(vehicleid,gCars[i][carDemages][0],gCars[i][carDemages][1],gCars[i][carDemages][2],gCars[i][carDemages][3]);
				if(gCars[i][carHealth] < 300.0) gCars[i][carHealth] = 300.0;
				SetVehicleHealthEx(vehicleid,gCars[i][carHealth]);
				ToggleLock(vehicleid);
				gVehicles[vehicleid-1][vFuel] = gCars[i][carFuel];
				gVehicles[vehicleid-1][vDrived] = gCars[i][carDrived];
				gVehicles[vehicleid-1][vHealth] = gCars[i][carHealth];
				gVehicles[vehicleid-1][vOwnerid] = gCars[i][carOwnerid];
				gVehicles[vehicleid-1][vProbability] = gCars[i][carProbability];
			}
			/*else if(hotel)
			{
				new vehicleid = CreateVehicle(gTransport[modelid][trModel],gHotelPark[hotelid][room][0],gHotelPark[hotelid][room][1],gHotelPark[hotelid][room][2],gHotelPark[hotelid][room][3],gCars[i][carColor1],gCars[i][carColor2],-1);
				SetVehicleZAngle(vehicleid,gHotelPark[hotelid][room][3]);
				gCars[i][carVid] = vehicleid;
				UpdateVehicleDamageStatus(vehicleid,gCars[i][carDemages][0],gCars[i][carDemages][1],gCars[i][carDemages][2],gCars[i][carDemages][3]);
				SetVehicleHealthEx(vehicleid,gCars[i][carHealth]);
				ToggleLock(vehicleid);
				gVehicles[vehicleid-1][vFuel] = gCars[i][carFuel];
				gVehicles[vehicleid-1][vDrived] = gCars[i][carDrived];
				gVehicles[vehicleid-1][vHealth] = gCars[i][carHealth];
				gVehicles[vehicleid-1][vOwnerid] = gCars[i][carOwnerid];
				gVehicles[vehicleid-1][vX] = gHotelPark[hotelid][room][0];
				gVehicles[vehicleid-1][vY] = gHotelPark[hotelid][room][1];
				gVehicles[vehicleid-1][vZ] = gHotelPark[hotelid][room][2];
			}*/
		}
		else printf("Неверная связка машины у игрока %d (машина %d не найдена)",plid,car);
	}
	sql_free_result(plkeys);
	return 1;
}



stock LoadGangs()
{
	new Result:gangs = sql_query(zConn, "SELECT * FROM `gangs` ORDER BY `id`", QUERY_CACHED);
	if(sql_num_rows(gangs) != 5) print("Кол-во банд в базе не совпадает с предопределным количеством");
	else
	{
		new zRes[512];
		for(new i;i<sql_num_rows(gangs);i++)
		{
			new ranks[256];
			sql_fetch_row(gangs,"|",zRes);
			sql_next_row(gangs);
			sscanf(zRes,"p<|>{i}s[255]a<i>[7]ia<i>[4]ia<i>[4]",ranks,gGangCars[i],gGangDormLimit[i],gGangDorm[i],gGangCode[i],gGangAccess[i]);
			explode(gFractionRankName[i+2],ranks,",");
			for(new j;j<7;j++)
			{
				if(!gGangCars[i][j]) gGangCars[i][j] = 481;
				new vid;
				vid = CreateVehicle(gGangCars[i][j],gGangCarSlot[i][j][0],gGangCarSlot[i][j][1],gGangCarSlot[i][j][2],gGangCarSlot[i][j][3],gGangCarColors[i],gGangCarColors[i],900);
				aGang[i][j] = vid;
				gVehicles[vid-1][vFuel] = 50;
				gVehicles[vid-1][vHealth] = 1000.0;
				gVehicles[vid-1][vOwnerid] = INVALID_PLAYER_ID;
				gVehicles[vid-1][vLock] = 0;
				gVehicles[vid-1][vID] = vid;
			}

		}
	}
	sql_free_result(gangs);
	return 1;
}



stock LoadWH()
{
	new fid = ini_openFile("warehouses.ini");
	if(fid < 0) printf("Error while opening file warehouses.ini (%d)",fid);
	ini_getInteger(fid,"coal",gCoalWH);
	ini_getInteger(fid,"wood",gWoodWH);
	ini_getInteger(fid,"guncoal",gGunWorkWH[0]);
	ini_getInteger(fid,"gunwood",gGunWorkWH[1]);
	ini_getInteger(fid,"gun",gGunWorkWH[2]);
	ini_getInteger(fid,"gunammo",gGunWorkWH[3]);
	ini_getInteger(fid,"army1gun",gArmyWarehouse[0][0]);
	ini_getInteger(fid,"army1ammo",gArmyWarehouse[0][1]);
	ini_getInteger(fid,"army2gun",gArmyWarehouse[1][0]);
	ini_getInteger(fid,"army2ammo",gArmyWarehouse[1][1]);
	ini_getInteger(fid,"army3gun",gArmyWarehouse[2][0]);
	ini_getInteger(fid,"army3ammo",gArmyWarehouse[2][1]);
	//**************Мафия*********************
	ini_getInteger(fid,"yakpat",MafiaPatr[0]);
	ini_getInteger(fid,"meciapat",MafiaPatr[1]);
	ini_getInteger(fid,"columpat",MafiaPatr[2]);
	ini_getInteger(fid,"yaked",MafiaEd[0]);
	ini_getInteger(fid,"meciaed",MafiaEd[1]);
	ini_getInteger(fid,"columed",MafiaEd[2]);
	ini_getInteger(fid,"yakdr",MafiaDrug[0]);
	ini_getInteger(fid,"meciadr",MafiaDrug[1]);
	ini_getInteger(fid,"columdr",MafiaDrug[2]);
	ini_getInteger(fid,"yakmn",MafiaMoney[0]);
	ini_getInteger(fid,"meciamn",MafiaMoney[1]);
	ini_getInteger(fid,"colummn",MafiaMoney[2]);
	//*****************************************
	//*****************************************

	ini_getInteger(fid,"ballas",WaitCapture[3]);
	ini_getInteger(fid,"grove",WaitCapture[4]);
	ini_getInteger(fid,"aztec",WaitCapture[5]);
	ini_getInteger(fid,"vagos",WaitCapture[6]);
	ini_getInteger(fid,"rifa",WaitCapture[7]);
	//
	ini_getInteger(fid,"zavod1",ZavodInfo[0]);
	ini_getInteger(fid,"zavod2",ZavodInfo[1]);
	ini_getInteger(fid,"zavod3",ZavodInfo[2]);
	ini_getInteger(fid,"zavod4",ZavodInfo[3]);
	ini_getInteger(fid,"zavod5",ZavodInfo[4]);
	//
	ini_getInteger(fid,"fuel",FuelInfo[0]);
	ini_getInteger(fid,"pesok",FuelInfo[1]);

	ini_closeFile(fid);
	return 1;
}

public OnGameModeExit()
{
	SaveServerData();
	for(new i; i < 11; i++)
	{
 		mes = "";
		f(mes, "UPDATE `viska` SET `fuel` = '%d' WHERE id = '%d'",gViska[i][vvFuel],gViska[i][vvID]);
		sql_query(zConn, mes); mes = "";
	}
	sql_disconnect(zConn);
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
    if(IsPlayerNPC(playerid))
	{
		SpawnPlayer(playerid);
		return 1;
	}
	if(pTemp[playerid][pLogin4] == false)
	{
		SpawnPlayer(playerid);
		SendClientMessage(playerid, CGRAY, "Данная функция заблокированна");
	}
	if(pTemp[playerid][pLogined]) return SpawnPlayer(playerid);
	new ip[24];
	GetPlayerIp(playerid,ip,24);
	pTemp[playerid][pJoined] = true;
	SetTimerEx("OnPlayerJoin",300,false,"i",playerid);
	return 1;
}

stock GangZoneMafiasColor(i)
{
	switch(i)
	{
		case 13: return 0xff0000AA;
		case 14: return 0x9b2d30AA;
		case 15: return 0x505050AA;
	}
	return 1;
}

public OnPlayerConnect(playerid)
{
    cvector_push_back(PLAYERS,playerid);

    new ip[16], currtime = gettime();
	GetPlayerIp(playerid, ip, 16);
	if(slotused{playerid} && strcmp(playerIp[playerid], ip, false) == 0) {
		return BanEx(playerid, "Флуд коннектами");
	}

	if((currtime - GetProp(ip)) < 5) {
		SendClientMessage(playerid, COLOR_LIGHTRED, "Перезаходить можно не менее чем через 5 секунд!");
		return NewKick(playerid);
	}

	slotused{playerid} = true;
	strmid(playerIp[playerid], ip, 0, strlen(ip), 16);
	
	pTemp[playerid][pWorldKick] = -1;

	NEWLIST[playerid][1] = 1;
	for(new i; i < sizeof(gMafiaCoord); i++)
	{
		GangZoneShowForPlayer(playerid, gNark[i][nID], GangZoneMafiasColor(gNark[i][nOwner]));
	}
	pTemp[playerid][pChoosingTable] = 0;
	pTemp[playerid][pCasinoMoney] = 0;
	pTemp[playerid][pCasinoNumber] = -1;
	pTemp[playerid][pCasinoStart] = false;
	pTemp[playerid][pCarTesting] = INVALID_VEHICLE_ID;


    SetPVarInt(playerid,"GameStol",-1);
	SetPVarInt(playerid,"Ochki",-1);

	//[Стадион]
	RemoveBuildingForPlayer(playerid, 13612, -1398.4609, 995.6406, 1024.4609, 0.25);
	//[Китайский район]
	RemoveBuildingForPlayer(playerid, 1342, -2193.7734, 605.1875, 35.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1342, -2194.0234, 613.4063, 35.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1342, -2197.5859, 613.4063, 35.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1342, -2181.4766, 613.7031, 35.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1342, -2187.1484, 614.5469, 35.2109, 0.25);


	//[Казино]---

	RemoveBuildingForPlayer(playerid, 2325, 1957.4453, 987.6719, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.7188, 987.1953, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1961.9609, 992.2031, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1962.4063, 991.8750, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1964.5703, 998.4531, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1965.1016, 998.3047, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1964.5469, 1037.2813, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1965.0938, 1037.3516, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1961.9219, 1043.3594, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1962.3984, 1043.6328, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.3203, 1047.9766, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.6563, 1048.4141, 992.9844, 0.25);
	//---------------------------------------------------------------------------


	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1029.6641, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1029.6563, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.0234, 1014.2266, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1939.6953, 1014.2188, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.0234, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1939.6953, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.8438, 1029.1328, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1940.5547, 1029.4766, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1942.1250, 1006.5703, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1940.8828, 1006.1094, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1940.8828, 1006.1094, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1941.5234, 1006.3828, 993.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1942.1250, 1006.5703, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1939.6953, 1014.2188, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1940.3906, 1014.2031, 993.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.0234, 1014.2266, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1939.6953, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1940.3906, 1021.4141, 993.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.0234, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1959.3984, 1010.1172, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1960.3672, 1015.6641, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2773, 1960.3047, 1017.9219, 992.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1960.3672, 1020.1719, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2773, 1961.3516, 1021.4297, 992.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 2773, 1961.3750, 1014.3672, 992.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1962.3438, 1015.6641, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2773, 1962.3750, 1017.9219, 992.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1962.3438, 1020.1797, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1963.7109, 1010.1172, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1968.0938, 1006.3594, 993.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1968.0938, 1013.9844, 993.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1968.0938, 1021.6797, 993.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1940.5547, 1029.4766, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1941.2188, 1029.2969, 993.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.8438, 1029.1328, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1959.3984, 1025.6953, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1963.7109, 1025.6953, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1029.6563, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1968.0938, 1029.5391, 993.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1029.6641, 992.3125, 0.25);
	//--------------------------------------------------------------------------
    pTemp[playerid][PlayerLoad] = 0;
    HideSpeedometr(playerid);

    //Bl::Init(playerid);
    gLastCar[playerid]					= INVALID_VEHICLE_ID;


    SetPlayerMapIcon(playerid, 1,1165.7969,-1323.0210,31.4879, 22, 0 );
	SetPlayerMapIcon(playerid, 2,-2655.2722,632.7734,66.0938, 22, 0 );
	SetPlayerMapIcon(playerid, 3,1607.5408,1814.7209,30.4688, 22, 0 );
	SetPlayerMapIcon(playerid, 4,1557.4760,-1675.6566,28.3955, 30, 0 );
	SetPlayerMapIcon(playerid, 5,2340.0308,2460.1814,38.6837, 30, 0 );
	SetPlayerMapIcon(playerid, 6,-1605.5367,707.8068,48.9375, 30, 0 );
	SetPlayerMapIcon(playerid, 51,-1877.8529,1421.4315,18.2156, 51, 0 );
	SetPlayerMapIcon(playerid, 52,1498.5055,-1581.5195,23.5469, 52, 0 );
	SetPlayerMapIcon(playerid, 19,1117.6992,-2037.0966,78.7500, 19, 0 );
	SetPlayerMapIcon(playerid, 36,-2026.3163,-107.6388,38.9219, 36, 0 );
	SetPlayerMapIcon(playerid, 8,-2645.9480,376.1984,26.9071, 52, 0 );
	SetPlayerMapIcon(playerid, 9,2365.2100,2375.2402,27.9022, 52, 0 );

    //-----------------Удаленные граффити по всему городу --------------------------
    RemoveBuildingForPlayer(playerid, 1531, 1799.1328, -1708.7656, 14.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 1530, 1732.7344, -963.0781, 41.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 1531, 1746.7500, -1359.7734, 16.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1525, 1687.2266, -1239.1250, 15.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1531, 1889.2422, -1982.5078, 15.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1525, 2065.4375, -1897.2344, 13.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 1528, 2763.0000, -2012.1094, 14.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 1527, 2392.3594, -1914.5703, 14.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 1527, 2430.3281, -1997.9063, 14.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 1527, 2587.3203, -2063.5234, 4.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 1528, 2794.5313, -1906.8125, 14.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 1528, 2812.9375, -1942.0703, 11.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 1524, 2162.7813, -1786.0703, 14.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 1524, 2034.3984, -1801.6719, 14.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 1524, 1910.1641, -1779.6641, 18.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 1524, 1837.1953, -1814.1875, 4.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 1524, 1959.3984, -1577.7578, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1524, 2074.1797, -1579.1484, 14.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 1527, 2182.2344, -1467.8984, 25.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1527, 2132.2344, -1258.0938, 24.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 1527, 2233.9531, -1367.6172, 24.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1527, 2224.7656, -1193.0625, 25.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1527, 2119.2031, -1196.6172, 24.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 1525, 1974.0859, -1351.1641, 24.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 1525, 2093.7578, -1413.4453, 24.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 1525, 1969.5938, -1289.6953, 24.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 1525, 1966.9453, -1174.7266, 20.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 1525, 1911.8672, -1064.3984, 25.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 1530, 2281.4609, -1118.9609, 27.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1530, 2239.7813, -999.7500, 59.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1530, 2122.6875, -1060.8984, 25.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 1530, 2062.7188, -996.4609, 48.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 1530, 2076.7266, -1071.1328, 27.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 1490, 2399.4141, -1552.0313, 28.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 1490, 2353.5391, -1508.2109, 24.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 1490, 2394.1016, -1468.3672, 24.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 1530, 2756.0078, -1388.1250, 39.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 1530, 2767.7813, -1621.1875, 11.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1530, 2667.8906, -1469.1328, 31.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1530, 2612.9297, -1390.7734, 35.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 1530, 2536.2188, -1352.7656, 31.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 1530, 2580.9453, -1274.0938, 46.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1524, 2542.9531, -1363.2422, 31.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1527, 2522.4609, -1478.7422, 24.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1525, 2346.5156, -1350.7813, 24.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 1527, 2322.4531, -1254.4141, 22.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 1525, 2273.0156, -1687.4297, 14.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 1525, 2422.9063, -1682.2969, 13.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 1530, 2797.9219, -1097.6953, 31.0625, 0.25);




    ////////////////////////////////////////////////////////////////////////////////
    RemoveBuildingForPlayer(playerid, 2103, 2524.1563, -1675.9609, 1015.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2867, 2524.2891, -1673.7578, 1015.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 14496, 2530.5313, -1672.1875, 1016.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 14528, 2531.2891, -1676.7344, 1004.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 2253, 2532.8047, -1677.4766, 1014.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 2100, 2532.0938, -1671.7344, 1014.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 2869, 2538.0391, -1676.7188, 1014.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 14493, 2535.8516, -1671.5703, 1016.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 2046, 2806.2266, -1174.5703, 1026.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 2049, 2805.2109, -1173.4922, 1026.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 2241, 2805.6875, -1173.5156, 1025.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 2060, 2810.3047, -1172.8516, 1025.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2060, 2810.3047, -1172.8516, 1025.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 2060, 2810.3047, -1172.8516, 1024.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 2060, 2810.3047, -1172.8516, 1024.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 2060, 2811.6016, -1172.8516, 1024.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 2060, 2811.6016, -1172.8516, 1024.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 2060, 2811.6016, -1172.8516, 1025.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 2060, 2811.6016, -1172.8516, 1025.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2048, 2805.2109, -1172.0547, 1026.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 2055, 2805.1953, -1170.5391, 1026.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2060, 2810.0234, -1171.2266, 1024.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 2064, 2810.8359, -1171.8984, 1025.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 2068, 2809.2031, -1169.3672, 1027.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 2069, 2806.3906, -1166.8203, 1024.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1764, 2808.6563, -1166.9531, 1024.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 2100, 2805.5078, -1165.5625, 1024.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 2276, 2809.2109, -1165.2734, 1026.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 1821, 2810.5938, -1167.6172, 1024.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 2053, 2810.6094, -1167.5781, 1024.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 2058, 2809.6406, -1165.3359, 1024.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 2272, 2811.3438, -1165.2734, 1026.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 2297, 2811.0234, -1165.0625, 1024.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 1765, 2811.4766, -1168.4063, 1024.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 2059, 2814.8359, -1173.4766, 1025.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 2116, 2814.3047, -1173.4219, 1024.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 2050, 2813.1250, -1173.3359, 1026.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 1736, 2812.8281, -1172.2969, 1027.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 2051, 2813.1250, -1171.2891, 1026.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 2121, 2813.9531, -1172.4609, 1025.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 2121, 2815.3828, -1172.4844, 1025.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 2275, 2812.6094, -1168.1094, 1026.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 2255, 2814.5703, -1169.2891, 1029.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 2047, 2817.3125, -1170.9688, 1031.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 2160, 2815.8984, -1164.9063, 1024.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 2159, 2817.2656, -1164.9063, 1024.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 2157, 2818.7109, -1173.9531, 1024.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 2157, 2818.6406, -1164.9063, 1024.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 2300, 2818.6484, -1166.5078, 1028.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 2046, 2819.4453, -1174.0000, 1026.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 2091, 2819.8047, -1165.6641, 1028.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 2157, 2820.6328, -1167.3125, 1024.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1734, 2452.0313, -1702.0234, 1015.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 14742, 2451.9063, -1701.1875, 1014.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 14763, 2447.7500, -1694.2578, 1014.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 14741, 2447.4219, -1693.4531, 1012.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 2241, 2459.3828, -1691.4766, 1013.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 14745, 2460.2422, -1695.1016, 1012.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 14862, 245.5547, 300.8594, 998.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1740, 243.8828, 301.9766, 998.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 14861, 245.7578, 302.2344, 998.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 14860, 246.5156, 301.5859, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 14864, 246.1875, 303.1094, 998.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 1734, 246.7109, 303.8750, 1002.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 14863, 246.9844, 303.5781, 998.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 2103, 248.4063, 300.5625, 999.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 2088, 248.4922, 304.3516, 998.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1741, 248.4844, 306.1250, 998.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 1741, 248.8672, 301.9609, 998.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 1744, 250.1016, 301.9609, 999.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1744, 250.1016, 301.9609, 1000.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2251, 266.4531, 303.3672, 998.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 14867, 270.2813, 302.5547, 999.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1720, 272.9063, 304.7891, 998.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 14870, 273.1641, 303.1719, 1000.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 2251, 273.9922, 303.3672, 998.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 14868, 274.1328, 304.5078, 1001.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 948, 266.5703, 306.4453, 998.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 14866, 270.1172, 307.6094, 998.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 14869, 273.8125, 305.0156, 998.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 1741, 2261.6953, -1223.0781, 1048.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2088, 2258.1406, -1220.5859, 1048.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 2090, 2258.5938, -1221.5469, 1048.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 2138, 2247.5547, -1213.9219, 1048.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2138, 2247.5547, -1212.9375, 1048.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2121, 2250.3047, -1213.9375, 1048.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 2297, 2255.4219, -1213.5313, 1048.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1816, 2261.4141, -1213.4531, 1048.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 2249, 2247.2969, -1212.1641, 1049.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 2249, 2247.2969, -1208.8594, 1049.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 2139, 2247.5625, -1211.9531, 1048.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 2136, 2247.5469, -1210.9688, 1048.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2303, 2247.5469, -1208.9844, 1048.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2138, 2247.5547, -1207.9766, 1048.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2305, 2247.5547, -1206.9922, 1048.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2109, 2250.2813, -1212.2500, 1048.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2121, 2249.2344, -1211.4531, 1048.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 2121, 2250.3047, -1210.8984, 1048.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 2135, 2248.5234, -1206.9922, 1048.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2319, 2250.3438, -1206.9609, 1048.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1760, 2261.4609, -1212.0625, 1048.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 2126, 2258.1094, -1210.3750, 1048.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2247, 2258.4766, -1209.7891, 1048.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 2099, 2262.8047, -1208.4922, 1048.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2254, 2254.1172, -1206.5000, 1050.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 2240, 2254.6328, -1207.2734, 1048.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 2252, 2256.2109, -1206.1016, 1048.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 2235, 2256.2188, -1206.8594, 1048.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1760, 2257.6172, -1207.7266, 1048.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 2235, 2261.4297, -1206.2031, 1048.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 2252, 2262.1172, -1206.1016, 1048.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 15025, 2249.6641, -1138.1250, 1051.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 15028, 2263.1250, -1138.2422, 1049.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 15027, 2250.1016, -1132.5078, 1049.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 15026, 2264.9063, -1137.7656, 1051.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 15032, 2278.5547, -1136.6250, 1051.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 15036, 2278.5859, -1135.2266, 1051.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 2023, 2305.5547, -1212.6406, 1048.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1768, 2305.8281, -1210.3750, 1048.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2076, 2308.7578, -1209.7188, 1051.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1818, 2308.8438, -1208.9141, 1048.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1717, 2305.7813, -1207.8125, 1048.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1764, 2310.9844, -1209.1797, 1048.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 2100, 2311.5547, -1206.6719, 1048.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 15052, 2313.8438, -1212.7344, 1049.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1764, 2286.1250, -1138.4766, 1049.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 15037, 2280.5703, -1137.7422, 1050.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 2099, 2281.1953, -1136.0156, 1049.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 2077, 2357.5469, -1134.1875, 1050.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 2298, 2361.2969, -1134.1484, 1049.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 2141, 2367.5625, -1135.3906, 1049.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 2339, 2367.5625, -1134.3906, 1049.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 2134, 2367.5625, -1133.3906, 1049.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 2077, 2357.5469, -1131.5234, 1050.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 2271, 2357.8594, -1132.8828, 1051.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 2087, 2360.2969, -1129.9766, 1049.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 2103, 2360.8281, -1130.1406, 1051.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2279, 2369.8125, -1135.4375, 1052.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 2370.5781, -1134.0313, 1050.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 2371.7500, -1133.5938, 1050.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 2278, 2372.1875, -1135.4297, 1052.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 2075, 2370.8281, -1132.8750, 1053.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 2030, 2371.2266, -1132.9219, 1050.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 2812, 2371.2969, -1133.0156, 1050.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 2371.7500, -1131.8594, 1050.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 2370.5781, -1131.8594, 1050.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 2288, 2373.3828, -1130.4531, 1051.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2141, 2374.5000, -1135.3906, 1049.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 2132, 2374.5000, -1131.3906, 1049.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 2339, 2374.5078, -1134.3828, 1049.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 2134, 2374.5078, -1133.3828, 1049.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 2339, 2374.5078, -1130.3828, 1049.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 2225, 2369.1797, -1125.8047, 1049.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 2260, 2369.7188, -1123.8594, 1052.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2331, 2367.3672, -1123.1563, 1050.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 2302, 2364.5547, -1122.9688, 1049.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 2259, 2368.6094, -1122.5078, 1052.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 2333, 2367.5703, -1122.1484, 1049.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 2255, 2361.5703, -1122.1484, 1052.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2811, 2372.7031, -1128.9141, 1049.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 15061, 2371.6094, -1128.1875, 1051.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 2868, 2370.1250, -1125.2344, 1049.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 1703, 2370.3906, -1124.4375, 1049.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1822, 2372.0938, -1124.2188, 1049.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 2828, 2374.2578, -1129.2578, 1050.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 2084, 2374.4688, -1129.2109, 1049.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 1703, 2374.6797, -1122.5313, 1049.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 2281, 2375.6641, -1128.1016, 1051.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 2868, 2374.9766, -1125.2344, 1049.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 2280, 2375.6484, -1122.3828, 1051.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 15039, 2232.3438, -1106.7422, 1049.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 1798, 2242.0469, -1078.4297, 1048.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 1798, 2244.5469, -1078.4297, 1048.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 15035, 2205.9375, -1073.9922, 1049.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 2280, 2240.3203, -1070.8906, 1050.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1703, 2240.7344, -1069.5156, 1048.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2269, 2240.3203, -1068.4453, 1050.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 2108, 2240.7734, -1066.3047, 1048.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1741, 2241.3125, -1072.4688, 1048.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2297, 2242.1719, -1066.2266, 1048.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1822, 2243.3281, -1067.8281, 1048.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1703, 2243.8203, -1073.1875, 1048.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2271, 2245.3203, -1068.4453, 1050.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 1703, 2245.0313, -1067.6094, 1048.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2108, 2244.7969, -1066.2734, 1048.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 2099, 2331.2031, -1069.2578, 1048.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2280, 2330.6875, -1068.8047, 1050.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 2112, 2335.7188, -1068.4609, 1048.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 2831, 2335.7656, -1068.2109, 1048.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1720, 2336.7422, -1067.9219, 1048.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1720, 2335.7734, -1067.7578, 1048.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1744, 2337.3359, -1069.4609, 1050.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 1744, 2337.3359, -1069.4609, 1049.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 2134, 2338.4141, -1068.5234, 1048.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2866, 2338.5938, -1068.6094, 1049.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2330.6172, -1067.3359, 1048.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1815, 2334.7500, -1065.9922, 1048.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1747, 2335.4297, -1065.7422, 1048.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 2132, 2338.4063, -1066.5234, 1048.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 15047, 2337.1172, -1065.3047, 1048.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 2831, 2338.6406, -1066.6953, 1049.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 1744, 2339.0781, -1066.9375, 1049.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 1744, 2339.0781, -1066.9375, 1050.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 1728, 2333.2969, -1061.8125, 1048.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 2269, 2330.1563, -1061.8047, 1050.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 2266, 2336.2969, -1061.8125, 1050.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 2268, 2338.3047, -1061.8047, 1050.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 2227, 2370.2344, -1120.5859, 1049.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2366.6953, -1119.2500, 1049.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 1703, 2371.6016, -1121.5078, 1049.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 2227, 2375.5859, -1120.9922, 1049.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 2813, 2342.1563, -1067.9766, 1048.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 2302, 2342.6484, -1065.8047, 1048.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2845, 2344.0313, -1068.0703, 1048.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 1720, 2344.3125, -1065.4844, 1048.0234, 0.25);
	//
	RemoveBuildingForPlayer(playerid, 3114, -1430.3319,503.3230,19.7853, 123);
	RemoveBuildingForPlayer(playerid, 3115, -1430.3319,503.3230,19.7853, 123);
	//ВМФ
	RemoveBuildingForPlayer(playerid, 10771, -1357.6953, 501.2969, 5.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 10901, -1357.6953, 501.2969, 5.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 11145, -1420.5781, 501.2969, 4.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 11146, -1366.6875, 501.8516, 12.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 11148, -1366.6875, 501.2969, 12.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3884, -1394.8047, 493.3984, 18.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 3885, -1394.8047, 493.3984, 18.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3884, -1324.3281, 493.8125, 21.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 3885, -1324.3281, 493.8125, 21.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 11404, -1354.4688, 493.7500, 38.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1459.5703, 514.3516, 5.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1459.5703, 488.2344, 5.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1448.1172, 488.2344, 5.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1448.1172, 514.3516, 5.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 11401, -1449.2969, 507.8047, 4.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1436.6563, 488.2344, 5.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1425.1953, 488.2344, 5.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1435.8125, 488.6094, 13.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1425.2500, 501.2891, 15.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1436.6563, 514.3516, 5.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1435.8125, 513.9844, 13.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1425.1953, 514.3516, 5.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 11147, -1418.4141, 501.2969, 5.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1414.6719, 488.6094, 13.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3800, -1414.5234, 504.9453, 2.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1414.0625, 506.4844, 2.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1413.1172, 514.3516, 5.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1413.1250, 488.2344, 5.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1411.2500, 489.1406, 2.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3800, -1410.7969, 490.6797, 2.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3800, -1412.7969, 488.6797, 2.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3799, -1408.7969, 489.5938, 1.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3799, -1405.8672, 489.5938, 1.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3799, -1405.8672, 492.5234, 1.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3799, -1408.7969, 492.5234, 1.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1409.2578, 492.9844, 4.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1404.4766, 492.9844, 4.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 3800, -1407.6250, 493.2813, 4.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 3794, -1404.8281, 499.8828, 10.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 3793, -1403.8984, 500.0859, 10.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1408.4297, 506.4844, 2.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1401.6641, 488.2344, 5.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 3795, -1401.8359, 494.9063, 10.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 3792, -1401.0078, 494.6875, 10.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 3793, -1398.1797, 494.7734, 10.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3788, -1399.0625, 494.4453, 10.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 3799, -1400.0078, 489.5938, 1.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3799, -1402.9375, 489.5938, 1.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3799, -1397.0781, 489.5938, 1.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3799, -1397.0781, 492.5234, 1.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3799, -1400.0078, 492.5234, 1.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3799, -1402.9375, 492.5234, 1.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1402.4766, 492.9844, 4.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1396.6172, 489.1250, 4.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1396.6172, 491.1250, 4.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1403.6641, 501.2891, 15.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1399.7578, 497.2891, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3796, -1398.1875, 502.7031, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1400.2109, 499.7422, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3792, -1401.2031, 502.2188, 11.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 3789, -1403.6172, 504.0938, 10.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 3799, -1400.0078, 495.4531, 1.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3799, -1397.0781, 495.4531, 1.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1396.6172, 495.9141, 4.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1398.6172, 495.9141, 4.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 3800, -1400.2031, 496.4219, 4.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1396.6172, 497.9141, 2.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1401.6641, 514.3516, 5.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 3799, -1400.2578, 512.8359, 1.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3799, -1397.3281, 512.8359, 1.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1390.2031, 488.2344, 5.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1366.3750, 490.0625, 13.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1393.1172, 488.6094, 13.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3800, -1395.0781, 492.6016, 2.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3800, -1395.0781, 493.6797, 2.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3800, -1395.0781, 494.7578, 2.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1381.6094, 500.7109, 5.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1371.9688, 501.6016, 13.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1370.7422, 501.1172, 13.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 11149, -1363.7734, 496.0938, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 11374, -1363.7734, 496.0938, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1390.2031, 514.3516, 5.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1393.1016, 513.9844, 13.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 11406, -1396.2656, 504.5078, 5.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 3799, -1387.4609, 507.1875, 1.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1387.6094, 504.7188, 2.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1387.6094, 509.6563, 2.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3800, -1389.1484, 505.1797, 2.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3800, -1386.0703, 509.1953, 2.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3800, -1388.0703, 509.3281, 4.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1371.9688, 513.9844, 13.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3799, -1365.6016, 502.7891, 10.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3800, -1364.1172, 504.8359, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1362.5313, 505.7500, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1308.5781, 488.6094, 13.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 11150, -1292.4844, 490.7656, 11.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3800, -1349.8203, 490.6563, 10.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 3800, -1350.0000, 490.6563, 11.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 3800, -1341.5547, 490.1875, 10.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 3800, -1342.7422, 490.1875, 10.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 3800, -1341.2344, 490.2031, 11.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 10770, -1354.4688, 493.7500, 38.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 3791, -1289.9766, 494.7734, 10.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 11237, -1354.4219, 493.7500, 38.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 955, -1350.1172, 492.2891, 10.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 11334, -1346.8984, 492.7969, 10.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 956, -1350.1172, 493.8594, 10.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3800, -1341.2969, 493.7344, 12.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1341.7109, 493.9766, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1350.1094, 499.1797, 20.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1329.7031, 500.5391, 13.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3796, -1335.9688, 499.9297, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3787, -1329.4297, 499.6016, 10.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 3787, -1328.3906, 497.9375, 10.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 3791, -1334.2891, 497.6094, 10.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3791, -1333.0547, 496.0000, 10.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1328.6016, 496.0469, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3800, -1349.9766, 495.8281, 10.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 3795, -1294.1172, 499.3359, 10.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 3791, -1290.5000, 496.4375, 10.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3787, -1290.2656, 499.9609, 10.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 3787, -1290.3125, 497.9609, 10.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 3792, -1294.5938, 497.3750, 10.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 10772, -1356.3516, 501.1172, 17.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1350.8359, 501.6016, 13.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1350.8438, 513.9844, 13.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1359.8281, 501.1172, 13.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1348.2813, 501.1172, 13.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 3799, -1342.6016, 502.8047, 10.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1329.7031, 501.6016, 13.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1329.2734, 513.9844, 13.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3800, -1340.5547, 504.0938, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1340.0859, 502.5469, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1328.2891, 503.1016, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3799, -1329.7891, 512.3984, 10.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1328.4844, 509.4766, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3785, -1308.6016, 513.9844, 13.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3787, -1300.6406, 504.0391, 10.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 3789, -1301.5859, 511.1094, 10.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 3792, -1301.5859, 511.9688, 10.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 3794, -1305.3359, 511.1953, 10.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 3793, -1305.2891, 512.1484, 10.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3800, -1298.2109, 503.1641, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1297.7422, 501.6172, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3788, -1294.0156, 509.2188, 10.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 3793, -1294.0156, 510.1563, 10.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3794, -1294.6172, 501.3281, 10.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 3798, -1293.2344, 512.4531, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3795, -1290.3984, 503.4688, 10.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 3792, -1289.7031, 503.9922, 10.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 3793, -1294.3750, 503.1094, 10.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 11400, -1288.8281, 504.5391, 13.0078, 0.25);
	//
    RemoveBuildingForPlayer(playerid, 16094, 191.1406, 1870.0391, 21.4766, 0.25);
    //
    RemoveBuildingForPlayer(playerid, 968, -1526.4375, 481.3828, 6.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 966, -1526.3906, 481.3828, 6.1797, 0.25);
	//
    RemoveBuildingForPlayer(playerid, 1411, 347.1953, 1799.2656, 18.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 342.9375, 1796.2891, 18.7578, 0.25);
	//
    RemoveBuildingForPlayer(playerid, 12921, -128.2578, -179.3203, 4.1016, 0.25);
	//С фермы
    RemoveBuildingForPlayer(playerid, 3295, 1099.1172, -358.4766, 77.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 3404, 1019.3828, -300.2422, 72.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3404, 1045.5625, -300.6016, 72.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1503, 1019.3203, -282.7891, 73.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3402, 1019.3828, -300.2422, 72.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3402, 1045.5625, -300.6016, 72.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 13206, 1072.9531, -289.1797, 72.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 3286, 1099.1172, -358.4766, 77.6172, 0.25);
	//
    /*RemoveBuildingForPlayer(playerid, 3374, -1206.1406, -1169.8359, 129.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 3374, -1198.8672, -1169.8359, 129.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 3374, -1191.6016, -1169.8359, 129.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 3374, -1184.3281, -1169.8359, 129.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -1122.7656, -1238.1563, 129.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 790, -1143.7578, -1228.9375, 130.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -1122.7656, -1226.4688, 129.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -1151.7422, -1220.7891, 129.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -1140.0625, -1220.7891, 129.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -1128.5703, -1220.7891, 129.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 708, -1084.1641, -1217.5547, 128.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 708, -1073.5703, -1187.2266, 128.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3374, -1177.0547, -1169.8359, 129.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1454, -1164.7813, -1156.7969, 129.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1454, -1161.2578, -1156.7969, 129.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1454, -1157.7344, -1156.7969, 129.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1454, -1154.2031, -1156.7969, 129.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1454, -1150.6797, -1156.7969, 129.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1454, -1147.1563, -1156.7969, 129.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1454, -1143.6328, -1156.7969, 129.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1454, -1140.1094, -1156.7969, 129.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1454, -1136.5859, -1156.7969, 129.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1454, -1133.0625, -1156.7969, 129.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1454, -1129.5391, -1156.7969, 129.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 3260, -1078.7109, -1153.1719, 129.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3260, -1078.7109, -1157.1719, 129.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3260, -1078.7109, -1155.1719, 129.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 705, -1081.5938, -1143.2500, 128.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 691, -1081.1484, -1162.4844, 128.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3260, -1071.7656, -1152.0391, 129.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3260, -1073.7656, -1152.0391, 129.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3260, -1073.7656, -1158.2578, 129.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3260, -1071.7578, -1158.2578, 129.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3260, -1075.7734, -1152.0391, 129.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3260, -1075.7734, -1158.2578, 129.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3260, -1077.7734, -1152.0391, 129.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3260, -1077.7734, -1158.2578, 129.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3260, -1065.7734, -1158.2578, 129.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3260, -1065.7734, -1152.0391, 129.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3260, -1067.7734, -1152.0391, 129.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3260, -1069.7656, -1152.0391, 129.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3260, -1069.7734, -1158.2578, 129.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3260, -1067.7734, -1158.2578, 129.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3260, -1063.7344, -1152.1875, 129.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3260, -1064.7734, -1157.2344, 129.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3260, -1064.0313, -1155.3984, 129.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 17009, -1070.8672, -1156.1641, 128.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 691, -1069.4766, -1135.6797, 128.5859, 0.25);
	*/


	pTemp[playerid][pWorkGruzObject] = 0;
	pTemp[playerid][pInviteLeader1] = -1;
	pTemp[playerid][pInviteInvite] = -1;
	pTemp[playerid][pInviteSell] = -1;
	pTemp[playerid][pHatOn] = false;
	gCalls[playerid][g_caller] = INVALID_PLAYER_ID;
	gCalls[playerid][g_callee] = INVALID_PLAYER_ID;


	RemoveBuildingForPlayer(playerid, 3281, -2399.6484, -2216.2031, 33.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 3281, -2392.0313, -2217.6016, 33.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 3281, -2396.1641, -2217.6250, 33.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 3281, -2403.9766, -2209.6094, 33.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 3281, -2404.7188, -2205.8828, 33.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 3281, -2404.3594, -2202.0469, 33.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 3281, -2402.2500, -2213.0234, 33.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 3281, -2380.8438, -2208.2734, 33.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 3281, -2382.7188, -2211.5938, 33.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 3281, -2377.1016, -2201.7109, 33.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 3281, -2378.9844, -2204.9844, 33.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 3281, -2402.3750, -2198.5859, 33.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 3281, -2392.3203, -2193.7031, 33.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 3281, -2388.5078, -2193.6641, 33.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 3281, -2380.9531, -2193.6172, 33.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 3281, -2384.7266, -2193.6328, 33.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 18275, -2376.1172, -2196.2500, 34.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 3281, -2371.2969, -2197.2031, 33.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 3281, -2374.1094, -2192.0000, 33.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 3281, -2370.6953, -2190.3672, 33.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 3281, -2367.8906, -2195.5703, 33.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 3281, -2364.4766, -2193.9688, 33.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 3281, -2367.2813, -2188.7656, 33.3047, 0.25);



	pTemp[playerid][pTempLeader] = 0;




	DisableGPSForPlayer(playerid);

	pTemp[playerid][pSpectating] = false;
	pTemp[playerid][pSpectator] = INVALID_PLAYER_ID;
	pTemp[playerid][pSpectatee] = INVALID_PLAYER_ID;




	//
	/*
    ReconNickID = CreatePlayerTextDraw(playerid, 535.0, 260.0, "Igor_Antonov~n~id:0");
 	PlayerTextDrawFont(playerid, ReconNickID, 2);
 	PlayerTextDrawSetShadow(playerid, ReconNickID, 0);
    PlayerTextDrawSetOutline(playerid, ReconNickID, 1);
	PlayerTextDrawLetterSize(playerid, ReconNickID, 0.3, 0.7);

	ReconArmour = CreatePlayerTextDraw(playerid, 535.0, 275.0, "~r~]Armour: ~w~0");
 	PlayerTextDrawFont(playerid, ReconArmour, 2);
 	PlayerTextDrawSetShadow(playerid, ReconArmour, 0);
    PlayerTextDrawSetOutline(playerid, ReconArmour, 1);
	PlayerTextDrawLetterSize(playerid, ReconArmour, 0.3, 0.7);

	ReconHealth = CreatePlayerTextDraw(playerid, 535.0, 285.0, "~g~]HP: ~w~0");
 	PlayerTextDrawFont(playerid, ReconHealth, 2);
 	PlayerTextDrawSetShadow(playerid, ReconHealth, 0);
 	PlayerTextDrawSetOutline(playerid, ReconHealth, 1);
	PlayerTextDrawLetterSize(playerid, ReconHealth, 0.3, 0.7);

	ReconCarHealth = CreatePlayerTextDraw(playerid, 535.0, 295.0, "~g~]HPCar: ~w~0");
 	PlayerTextDrawFont(playerid, ReconCarHealth, 2);
 	PlayerTextDrawSetShadow(playerid, ReconCarHealth, 0);
    PlayerTextDrawSetOutline(playerid, ReconCarHealth, 1);
	PlayerTextDrawLetterSize(playerid, ReconCarHealth, 0.3, 0.7);

	ReconMoney = CreatePlayerTextDraw(playerid, 535.0, 305.0, "~r~]Money: ~w~0");
 	PlayerTextDrawFont(playerid, ReconMoney, 2);
 	PlayerTextDrawSetShadow(playerid, ReconMoney, 0);
    PlayerTextDrawSetOutline(playerid, ReconMoney, 1);
	PlayerTextDrawLetterSize(playerid, ReconMoney, 0.3, 0.7);

	ReconGun = CreatePlayerTextDraw(playerid, 535.0, 315.0, "~b~]Gun: ~w~0");
 	PlayerTextDrawFont(playerid, ReconGun, 2);
 	PlayerTextDrawSetShadow(playerid, ReconGun, 0);
    PlayerTextDrawSetOutline(playerid, ReconGun, 1);
	PlayerTextDrawLetterSize(playerid, ReconGun, 0.3, 0.7);

	ReconAmmo = CreatePlayerTextDraw(playerid, 535.0, 325.0, "~b~]Ammo: ~w~0");
 	PlayerTextDrawFont(playerid, ReconAmmo, 2);
 	PlayerTextDrawSetShadow(playerid, ReconAmmo, 0);
    PlayerTextDrawSetOutline(playerid, ReconAmmo, 1);
	PlayerTextDrawLetterSize(playerid, ReconAmmo, 0.3, 0.7);

	ReconWarns = CreatePlayerTextDraw(playerid, 535.0, 335.0, "~h~]Warns: ~w~0");
 	PlayerTextDrawFont(playerid, ReconWarns, 2);
 	PlayerTextDrawSetShadow(playerid, ReconWarns, 0);
    PlayerTextDrawSetOutline(playerid, ReconWarns, 1);
	PlayerTextDrawLetterSize(playerid, ReconWarns, 0.3, 0.7);

	ReconPing = CreatePlayerTextDraw(playerid, 535.0, 345.0, "~y~]Ping: ~w~0");
 	PlayerTextDrawFont(playerid, ReconPing, 2);
 	PlayerTextDrawSetShadow(playerid, ReconPing, 0);
    PlayerTextDrawSetOutline(playerid, ReconPing, 1);
	PlayerTextDrawLetterSize(playerid, ReconPing, 0.3, 0.7);

	ReconSpeed = CreatePlayerTextDraw(playerid, 535.0, 355.0, "~b~]Speed: ~w~0");
 	PlayerTextDrawFont(playerid, ReconSpeed, 2);
 	PlayerTextDrawSetShadow(playerid, ReconSpeed, 0);
    PlayerTextDrawSetOutline(playerid, ReconSpeed, 1);
	PlayerTextDrawLetterSize(playerid, ReconSpeed, 0.3, 0.7);
	*/
	//
	State99[playerid] = TextDrawCreate(541.500000, 7.000000, "Dallas RP");
	TextDrawLetterSize(State99[playerid], 0.345500, 1.328749);
	TextDrawAlignment(State99[playerid], 1);
	TextDrawColor(State99[playerid], 8421546);
	TextDrawSetShadow(State99[playerid], 4);
	TextDrawSetOutline(State99[playerid], 0);
	TextDrawBackgroundColor(State99[playerid], 51);
	TextDrawFont(State99[playerid], 2);
	TextDrawSetProportional(State99[playerid], 1);

    State999[playerid] = TextDrawCreate(519.000000, 6.125000, "LD_DUAL:rockshp");
//	State999[playerid] = TextDrawCreate(519.000000, 6.125000, "LD_CHAT:thumbup");
	TextDrawLetterSize(State999[playerid], 0.000000, 0.000000);
	TextDrawTextSize(State999[playerid], 16.500000, 14.000000);
	TextDrawAlignment(State999[playerid], 1);
	TextDrawColor(State999[playerid], -1);
	TextDrawSetShadow(State999[playerid], 0);
	TextDrawSetOutline(State999[playerid], 0);
	TextDrawFont(State999[playerid], 4);

	GPSDraw[playerid] = TextDrawCreate(89.000000, 315.000000, "GPS ~g~Included");
	TextDrawAlignment(GPSDraw[playerid], 2);
	TextDrawBackgroundColor(GPSDraw[playerid], 255);
	TextDrawFont(GPSDraw[playerid], 2);
	TextDrawLetterSize(GPSDraw[playerid], 0.359999, 1.000000);
	TextDrawColor(GPSDraw[playerid], -1);
	TextDrawSetOutline(GPSDraw[playerid], 0);
	TextDrawSetProportional(GPSDraw[playerid], 1);
	TextDrawSetShadow(GPSDraw[playerid], 1);
	TextDrawUseBox(GPSDraw[playerid], 1);
	TextDrawBoxColor(GPSDraw[playerid], 119);
	TextDrawTextSize(GPSDraw[playerid], 0.000000, 108.000000);


	TextDrawShowForPlayer(playerid,State99[playerid]);
	TextDrawShowForPlayer(playerid,State999[playerid]);



    RECON[playerid] = CreatePlayerTextDraw(playerid, 425.000000, 250.000000, "_");
	PlayerTextDrawFont(playerid, RECON[playerid], 2);
	PlayerTextDrawColor(playerid, RECON[playerid],-1);
	PlayerTextDrawSetOutline(playerid, RECON[playerid], 0);
	PlayerTextDrawLetterSize(playerid, RECON[playerid], 0.410000, 1.000000);
	PlayerTextDrawSetOutline(playerid, RECON[playerid],1);
	PlayerTextDrawSetProportional(playerid, RECON[playerid], 1);
	PlayerTextDrawAlignment(playerid, RECON[playerid], 1);
	PlayerTextDrawSetShadow(playerid, RECON[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, RECON[playerid], 51);
	PlayerTextDrawUseBox(playerid,RECON[playerid], 1);
	PlayerTextDrawBoxColor(playerid,RECON[playerid], 100);


	SendClientMessage(playerid, 0x7FC0E3FF, "Добро пожаловать на {ad7373}"NAME_SERVER"");
	pTemp[playerid][pWorkSalary] = 0;
	PreloadAllAnims(playerid);

	pTemp[playerid][pShowPasspl] = -1;
	pTemp[playerid][pShowPassact] = -1;

	pTemp[playerid][pShowPasspl1] = -1;
	pTemp[playerid][pShowPassact1] = -1;
	pTemp[playerid][pShowSkillpl] = -1;
	pTemp[playerid][pShowLicpl] = -1;
	pTemp[playerid][pShowLicact] = -1;
	pTemp[playerid][pInviteSubLeader] = -1;
	pTemp[playerid][pInviteSubLeader1] = -1;
	pTemp[playerid][pOfferFraction1] = -1;

	Vor[playerid] = 0;

	pTemp[playerid][pLogin4] = true;
	//салют
	SetPVarInt(playerid, "PType", 0);
	SetPVarInt(playerid, "PColor", 0);
	num[playerid] = 0;


	// удаляем газировки ;3

	// Coda
	RemoveBuildingForPlayer(playerid, 1209, -2420.2188,   984.5781,   44.2969, 0.1); // P'n'S около Jizzy
	RemoveBuildingForPlayer(playerid, 1302, -2420.1797,   985.9453,   44.2969, 0.1); // P'n'S около Jizzy
	//АЗС у ЛВПД
	RemoveBuildingForPlayer(playerid, 3465, 2196.8984, 2480.3281, 11.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2196.8984, 2470.2500, 11.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2196.8984, 2474.6875, 11.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2207.6953, 2480.3281, 11.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2207.6953, 2470.2500, 11.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2207.6953, 2474.6875, 11.3125, 0.25);
	//азс У стадиона в ЛВ
	RemoveBuildingForPlayer(playerid, 3465, 1590.3516, 2193.7109, 11.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 1596.1328, 2193.7109, 11.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 1602.0000, 2193.7109, 11.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 1596.1328, 2204.5000, 11.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 1602.0000, 2204.5000, 11.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 1590.3516, 2204.5000, 11.3125, 0.25);
	//АЗС недалеко от Казино в ЛВ
	RemoveBuildingForPlayer(playerid, 3465, 2114.9063, 925.5078, 11.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2109.0469, 925.5078, 11.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2109.0469, 914.7188, 11.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2114.9063, 914.7188, 11.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2120.8203, 925.5078, 11.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2120.8203, 914.7188, 11.2578, 0.25);
	//Заправка к северу от ЛВ:
	RemoveBuildingForPlayer(playerid, 3465, 2141.6719, 2753.3203, 11.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2141.6719, 2742.5234, 11.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2147.5313, 2753.3203, 11.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2147.5313, 2742.5234, 11.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2153.3125, 2753.3203, 11.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2153.3125, 2742.5234, 11.2734, 0.25);
	//Заправка, кот. недалеко от ЖДЛВ
	RemoveBuildingForPlayer(playerid, 3465, 2634.6406, 1100.9453, 11.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2639.8750, 1100.9609, 11.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2645.2500, 1100.9609, 11.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2639.8750, 1111.7500, 11.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2634.6406, 1111.7500, 11.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 3465, 2645.2500, 1111.7500, 11.2500, 0.25);
	//Заправка в пустыне
	RemoveBuildingForPlayer(playerid, 1686, 624.0469, 1677.6016, 6.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, 603.4844, 1707.2344, 6.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, 606.8984, 1702.2188, 6.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, 610.2500, 1697.2656, 6.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, 613.7188, 1692.2656, 6.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, 617.1250, 1687.4531, 6.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, 620.5313, 1682.4609, 6.1797, 0.25);
	//Заправка к северу пустыни
	RemoveBuildingForPlayer(playerid, 1686, -1329.2031, 2669.2813, 49.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, -1328.5859, 2674.7109, 49.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, -1327.7969, 2680.1250, 49.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, -1327.0313, 2685.5938, 49.4531, 0.25);
	//Заправка, недалеко от Jizzy
	RemoveBuildingForPlayer(playerid, 1686, -2410.8047, 970.8516, 44.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, -2410.8047, 976.1875, 44.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, -2410.8047, 981.5234, 44.4844, 0.25);
	//Заправка, кот. недалеко от лесопилки:
	RemoveBuildingForPlayer(playerid, 1686, -2246.7031, -2559.7109, 31.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, -2241.7188, -2562.2891, 31.0625, 0.25);
	//Заправка, по окружной:
	RemoveBuildingForPlayer(playerid, 1686, -1610.6172, -2721.0000, 47.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, -1607.3047, -2716.6016, 47.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, -1603.9922, -2712.2031, 47.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, -1600.6719, -2707.8047, 47.9297, 0.25);

	// Chips
	RemoveBuildingForPlayer(playerid,  956,  1634.1094, -2237.5313,   12.8906, 0.1); // LS, Airport International
	RemoveBuildingForPlayer(playerid,  956,  2139.5156, -1161.4844,   23.3594, 0.1); // LS, Jefferson
	RemoveBuildingForPlayer(playerid,  956,  2153.2344, -1016.1484,   62.2344, 0.1); // LS, Las Colinas
	RemoveBuildingForPlayer(playerid,  956,  2480.8594, -1959.2734,   12.9609, 0.1); // LS, Willowfield
	RemoveBuildingForPlayer(playerid,  956, -2229.1875,   286.4141,   34.7031, 0.1); // SF, Park behind Build
	RemoveBuildingForPlayer(playerid,  956, -1350.1172,   493.8594,   10.5859, 0.1); // SF, Avianosec
	RemoveBuildingForPlayer(playerid,  956,  1398.8438,  2222.6094,   10.4219, 0.1); // LV, Redsans West, Baseball
	RemoveBuildingForPlayer(playerid,  956,  1659.4609,  1722.8594,   10.2188, 0.1); // LV, Airport, Binco
	RemoveBuildingForPlayer(playerid,  956,  2647.6953,  1129.6641,   10.2188, 0.1); // LV, Come-a-lot, Gas Station
	RemoveBuildingForPlayer(playerid,  956,  2845.7266,  1295.0469,   10.7891, 0.1); // LV, Linden Stantion
	RemoveBuildingForPlayer(playerid,  956,   662.4297,  -552.1641,   15.7109, 0.1); // Dillmore, Gas Station
	RemoveBuildingForPlayer(playerid,  956,  2271.7266,   -76.4609,   25.9609, 0.1); // Palomino Creek, Library
	RemoveBuildingForPlayer(playerid,  956, -1455.1172,  2591.6641,   55.2344, 0.1); // El Quebrados
	RemoveBuildingForPlayer(playerid,  956,  -253.7422,  2599.7578,   62.2422, 0.1); // Las Payasadas
	RemoveBuildingForPlayer(playerid,  956,   -76.0313,  1227.9922,   19.1250, 0.1); // Fort Carson
	RemoveBuildingForPlayer(playerid, 1776,  2155.8438,  1607.8750, 1000.0625, 0.1); // Int 1, LV, Caligula Hall
	RemoveBuildingForPlayer(playerid, 1776,  2202.4531,  1617.0078, 1000.0625, 0.1); // Int 1, LV, Caligula Warehouse
	RemoveBuildingForPlayer(playerid, 1776,  2209.2422,  1621.2109, 1000.0625, 0.1); // Int 1, LV, Caligula Warehouse
	RemoveBuildingForPlayer(playerid, 1776,  2222.3672,  1602.6406, 1000.0625, 0.1); // Int 1, LV, Caligula Garage
	RemoveBuildingForPlayer(playerid, 1776,   330.6797,   178.5000, 1020.0703, 0.1); // Int 3, LV, Architec, 3rd Floor
	RemoveBuildingForPlayer(playerid, 1776,   331.9219,   178.5000, 1020.0703, 0.1); // Int 3, LV, Architec, 3rd Floor
	RemoveBuildingForPlayer(playerid, 1776,   350.9063,   206.0859, 1008.4766, 0.1); // Int 3, LV, Architec, Office
	RemoveBuildingForPlayer(playerid, 1776,   361.5625,   158.6172, 1008.4766, 0.1); // Int 3, LV, Architec, Hall
	RemoveBuildingForPlayer(playerid, 1776,   371.5938,   178.4531, 1020.0703, 0.1); // Int 3, LV, Architec, 3rd Floor
	RemoveBuildingForPlayer(playerid, 1776,   374.8906,   188.9766, 1008.4766, 0.1); // Int 3, LV, Architec, Lounge Hall
	RemoveBuildingForPlayer(playerid, 1776,   379.0391,  -178.8828, 1000.7344, 0.1); // Int 17, Ring Donut
	RemoveBuildingForPlayer(playerid, 1776,   500.5625,    -1.3672, 1000.7344, 0.1); // Int 17, Club Alhambra
	RemoveBuildingForPlayer(playerid, 1776,   -33.8750,  -186.7656, 1003.6328, 0.1); // 24/7
	RemoveBuildingForPlayer(playerid, 1776,   -16.5313,  -140.2969, 1003.6328, 0.1); // 24/7
	RemoveBuildingForPlayer(playerid, 1776,   -17.5469,   -91.7109, 1003.6328, 0.1); // 24/7
	RemoveBuildingForPlayer(playerid, 1776,   -36.1484,   -57.8750, 1003.6328, 0.1); // 24/7

	// Sprunk
	RemoveBuildingForPlayer(playerid,  955, -2118.9688,  -423.6484,   34.7266, 0.1); // SF, Stadium
	RemoveBuildingForPlayer(playerid,  955, -2118.6172,  -422.4141,   34.7266, 0.1); // SF, Stadium
	RemoveBuildingForPlayer(playerid,  955, -2097.2734,  -398.3359,   34.7266, 0.1); // SF, Stadium
	RemoveBuildingForPlayer(playerid,  955, -2092.0859,  -490.0547,   34.7266, 0.1); // SF, Stadium
	RemoveBuildingForPlayer(playerid,  955, -2068.5625,  -398.3359,   34.7266, 0.1); // SF, Stadium
	RemoveBuildingForPlayer(playerid,  955, -2063.2734,  -490.0547,   34.7266, 0.1); // SF, Stadium
	RemoveBuildingForPlayer(playerid,  955, -2039.8516,  -398.3359,   34.7266, 0.1); // SF, Stadium
	RemoveBuildingForPlayer(playerid,  955, -2034.4609,  -490.0547,   34.7266, 0.1); // SF, Stadium
	RemoveBuildingForPlayer(playerid,  955, -2011.1406,  -398.3359,   34.7266, 0.1); // SF, Stadium
	RemoveBuildingForPlayer(playerid,  955, -2005.6484,  -490.0547,   34.7266, 0.1); // SF, Stadium
	RemoveBuildingForPlayer(playerid,  955, -1980.7891,   142.6641,   27.0703, 0.1); // SF, Depot
	RemoveBuildingForPlayer(playerid,  955, -1350.1172,   492.2891,   10.5859, 0.1); // SF, Avianosec
	RemoveBuildingForPlayer(playerid,  955,  -862.8281,  1536.6094,   21.9844, 0.1); // Las Barrancas, Cow
	RemoveBuildingForPlayer(playerid,  955,  -253.7422,  2597.9531,   62.2422, 0.1); // Las Payasadas, Place
	RemoveBuildingForPlayer(playerid,  955,   -14.7031,  1175.3594,   18.9531, 0.1); // Fort Carson, Cow
	RemoveBuildingForPlayer(playerid,  955,   201.0156,  -107.6172,    0.8984, 0.1); // Blueberry
	RemoveBuildingForPlayer(playerid, 1775,   373.8281,  -178.1406, 1000.7344, 0.1); // Int 17, Ring Donut
	RemoveBuildingForPlayer(playerid, 1775,   501.8281,    -1.4297, 1000.7344, 0.1); // Int 17, Club Alhambra
	RemoveBuildingForPlayer(playerid, 1775,   495.9688,   -24.3203, 1000.7344, 0.1); // Int 17, Club Alhambra (Exit)
	RemoveBuildingForPlayer(playerid,  955,  1154.7266, -1460.8906,   15.1563, 0.1); // LS, Market
	RemoveBuildingForPlayer(playerid,  955,  1277.8359,   372.5156,   18.9531, 0.1); // Montgomery, Paper Cuts
	RemoveBuildingForPlayer(playerid,  955,  1520.1484,  1055.2656,   10.0000, 0.1); // LV, LVA Freight Depot
	RemoveBuildingForPlayer(playerid,  955,  1729.7891, -1943.0469,   12.9453, 0.1); // LS, Uniti Station
	RemoveBuildingForPlayer(playerid,  955,  1789.2109, -1369.2656,   15.1641, 0.1); // LS, Downtown
	RemoveBuildingForPlayer(playerid,  955,  1928.7344, -1772.4453,   12.9453, 0.1); // LS, Idlewood
	RemoveBuildingForPlayer(playerid,  955,  2060.1172, -1897.6406,   12.9297, 0.1); // LS, Willowfield
	RemoveBuildingForPlayer(playerid,  955,  2085.7734,  2071.3594,   10.4531, 0.1); // LV, Sexshop
	RemoveBuildingForPlayer(playerid, 1775,  2155.9063,  1606.7734, 1000.0547, 0.1); // Int 1, LV, Caligula Hall
	RemoveBuildingForPlayer(playerid, 1775,  2209.9063,  1607.1953, 1000.0547, 0.1); // Int 1, LV, Caligula Stolovaja
	RemoveBuildingForPlayer(playerid, 1775,  2222.2031,  1606.7734, 1000.0547, 0.1); // Int 1, LV, Caligula Garage
	RemoveBuildingForPlayer(playerid, 1775,  2225.2031, -1153.4219, 1025.9063, 0.1); // Int 15, LS, Jefferson Hotel
	RemoveBuildingForPlayer(playerid,  955,  2319.9922,  2532.8516,   10.2188, 0.1); // LV, Julius Threway North, Pizza
	RemoveBuildingForPlayer(playerid,  955,  2325.9766, -1645.1328,   14.2109, 0.1); // LS, East, Green Bar
	RemoveBuildingForPlayer(playerid,  955,  2352.1797, -1357.1563,   23.7734, 0.1); // LS, East, Liquor
	RemoveBuildingForPlayer(playerid,  955,  2503.1406,  1243.6953,   10.2188, 0.1); // LV, The Camel's Toe
	RemoveBuildingForPlayer(playerid, 1775,  2576.7031, -1284.4297, 1061.0938, 0.1); // Int 2, LS, Crackpalace
	RemoveBuildingForPlayer(playerid, 1775,   -19.0391,   -57.8359, 1003.6328, 0.1); // Int #, 24/7
	RemoveBuildingForPlayer(playerid, 1775,   -16.1172,   -91.6406, 1003.6328, 0.1); // Int #, 24/7
	RemoveBuildingForPlayer(playerid, 1775,   -32.4453,  -186.6953, 1003.6328, 0.1); // Int #, 24/7
	RemoveBuildingForPlayer(playerid, 1775,   -35.7266,  -140.2266, 1003.6328, 0.1); // Int #, 24/7
	RemoveBuildingForPlayer(playerid, 1775,   -15.1016,  -140.2266, 1003.6328, 0.1); // Int #, 24/7


	//Зона 51
	RemoveBuildingForPlayer(playerid, 1411, 347.20, 1799.27, 18.76, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 342.94, 1796.29, 18.76, 0.25);


	//салют
	//
	SetPVarInt(playerid, "ArendKey", -1);
	//
	RemoveBuildingForPlayer(playerid, 16596, 412.8281, 2542.8672, 15.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 16101, 321.6719, 2463.4922, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 16368, 321.6719, 2463.4922, 25.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 16327, 412.8281, 2542.8672, 15.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 347.1953, 1799.2656, 18.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 342.9375, 1796.2891, 18.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 16096, 120.5078, 1934.0313, 19.8281, 0.25);
	//Карьер
	RemoveBuildingForPlayer(playerid, 16309, 566.6484, 874.4844, -39.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 16310, 581.3750, 875.6094, -43.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 16311, 585.8438, 869.6328, -39.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 16325, 590.2969, 870.2734, -44.2656, 0.25);
	//-
	RemoveBuildingForPlayer(playerid, 3345, 400.1172, 2543.5703, 15.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 149.9141, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 161.7891, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 123.0469, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 311.1328, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 176.7891, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 338.0078, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 323.0078, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 203.6563, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 349.8750, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 269.2656, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 242.3984, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 188.6563, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 108.0469, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 176.7891, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 230.5234, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 257.3984, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 284.2656, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 296.1406, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 215.5313, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 134.9141, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 16595, 419.3750, 2538.5000, 15.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 16596, 412.8281, 2542.8672, 15.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 16597, 437.3828, 2547.5156, 15.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 3295, 392.7109, 2596.4531, 17.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3296, 376.2969, 2606.3438, 20.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3295, 390.8203, 2604.0703, 20.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3295, 389.1328, 2611.0625, 20.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3295, 382.1875, 2609.4766, 19.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 16600, 435.6250, 2532.0859, 20.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 16602, 307.9531, 2543.4531, 20.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 16772, 404.7969, 2454.7188, 22.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 108.0469, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 161.7891, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3364, 77.3203, 2456.2500, 15.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 188.6563, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 134.9141, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 215.5313, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 242.3984, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 269.2656, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 278.1484, 2555.1875, 15.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 16098, 307.9531, 2543.4531, 20.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 296.1406, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 158.3125, 2571.6563, 15.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 200.3594, 2571.9219, 15.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 16373, 160.2031, 2571.9688, 27.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 244.5938, 2573.1328, 15.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 123.0469, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 176.7891, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 230.5234, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 284.2656, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 149.9141, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 176.7891, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 203.6563, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 257.3984, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 323.0078, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 349.8750, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 352.7734, 2444.4063, 15.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 346.8984, 2435.5547, 16.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 345.2422, 2432.1328, 16.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 346.4141, 2445.2969, 15.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 357.5938, 2449.6172, 15.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 364.2266, 2450.7578, 15.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, 316.3672, 2531.6094, 16.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, 316.1641, 2534.6484, 16.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, 316.2656, 2533.0781, 16.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 316.3984, 2570.3672, 15.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, 316.3516, 2545.1406, 16.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, 315.5625, 2551.6250, 16.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, 315.6641, 2550.0625, 16.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 361.3750, 2571.8125, 15.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 338.0078, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 311.1328, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3287, 376.2969, 2606.3438, 20.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3286, 382.1875, 2609.4766, 19.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 16771, 404.7969, 2454.7188, 22.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 16773, 397.4766, 2476.6328, 19.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 16775, 412.1172, 2476.6328, 19.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, 410.8281, 2528.5703, 16.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, 409.8047, 2529.6328, 16.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, 408.7188, 2530.7656, 16.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, 407.1563, 2530.4688, 16.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3172, 400.1172, 2543.5703, 15.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, 407.8828, 2532.0078, 16.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 405.3594, 2563.0859, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 16370, 385.3438, 2598.6250, 17.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 3286, 390.8203, 2604.0703, 20.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3286, 392.7109, 2596.4531, 17.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3286, 389.1328, 2611.0625, 20.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 16326, 419.3750, 2538.5000, 15.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 16377, 416.1875, 2533.8281, 19.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 16378, 414.4063, 2536.5469, 18.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 16327, 412.8281, 2542.8672, 15.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 16374, 425.4688, 2531.0000, 22.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1498, 422.8281, 2535.7344, 15.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 16501, 429.9844, 2546.5156, 17.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 16409, 437.3828, 2547.5156, 15.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 16601, 435.6250, 2532.0859, 20.1797, 0.25);
	//


	RemoveBuildingForPlayer(playerid, 7235, 2504.6719, 2292.7109, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 7093, 2515.8906, 2247.5547, 20.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 3520, 2513.1484, 2246.7969, 10.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3520, 2513.1484, 2251.6797, 10.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3520, 2513.1484, 2256.5625, 10.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3520, 2514.5469, 2256.6328, 10.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 7234, 2504.6719, 2292.7109, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1344, 2514.1875, 2316.5938, 10.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 3520, 2513.1484, 2261.4453, 10.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3520, 2513.1484, 2271.2188, 10.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3520, 2513.1484, 2276.1016, 10.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3520, 2513.1484, 2280.9844, 10.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3520, 2512.8906, 2266.4609, 10.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3520, 2512.8828, 2284.5625, 10.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3520, 2514.1797, 2279.3203, 10.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1264, 2514.1016, 2323.5547, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1264, 2514.4922, 2324.2344, 10.2031, 0.25);

	RemoveBuildingForPlayer(playerid, 16310, 581.3750, 875.6094, -43.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 16311, 585.8438, 869.6328, -39.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 16325, 590.2969, 870.2734, -44.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 968, -1526.4375, 481.3828, 6.9063, 0.25);

	//На ВМФ
	//	RemoveBuildingForPlayer(playerid, 968, -1526.4375, 481.3828, 6.9063, 0.25);
	//	RemoveBuildingForPlayer(playerid, 966, -1526.3906, 481.3828, 6.1797, 0.25);
	//	RemoveBuildingForPlayer(playerid, 10829, -1523.2578, 486.7969, 6.1563, 0.25);






	/*CAPTU[playerid][ScoreCapt] = TextDrawCreate(6.000000, 252.000000, "Time:");
	TextDrawBackgroundColor(CAPTU[playerid][ScoreCapt], 255);
	TextDrawFont(CAPTU[playerid][ScoreCapt], 1);
	TextDrawLetterSize(CAPTU[playerid][ScoreCapt], 0.449999, 1.200000);
	TextDrawColor(CAPTU[playerid][ScoreCapt], 45089023);
	TextDrawSetOutline(CAPTU[playerid][ScoreCapt], 1);
	TextDrawSetProportional(CAPTU[playerid][ScoreCapt], 1);
	TextDrawSetSelectable(CAPTU[playerid][ScoreCapt], 0);

	CAPTU[playerid][Textdraw4] = TextDrawCreate(183.000000, 253.000000, "_");
	TextDrawBackgroundColor(CAPTU[playerid][Textdraw4], 65553);
	TextDrawFont(CAPTU[playerid][Textdraw4], 1);
	TextDrawLetterSize(CAPTU[playerid][Textdraw4], 0.519999, 4.299999);
	TextDrawColor(CAPTU[playerid][Textdraw4], 1347440720);
	TextDrawSetOutline(CAPTU[playerid][Textdraw4], 0);
	TextDrawSetProportional(CAPTU[playerid][Textdraw4], 1);
	TextDrawSetShadow(CAPTU[playerid][Textdraw4], 2);
	TextDrawUseBox(CAPTU[playerid][Textdraw4], 1);
	TextDrawBoxColor(CAPTU[playerid][Textdraw4], 0x00000060);
	TextDrawTextSize(CAPTU[playerid][Textdraw4], 2.000000, 10.000000);
	TextDrawSetSelectable(CAPTU[playerid][Textdraw4], 0);

	CAPTU[playerid][BandaCapt1a] = TextDrawCreate(6.000000, 265.000000, "_");
	TextDrawBackgroundColor(CAPTU[playerid][BandaCapt1a], 255);
	TextDrawFont(CAPTU[playerid][BandaCapt1a], 1);
	TextDrawLetterSize(CAPTU[playerid][BandaCapt1a], 0.419999, 1.200000);
	TextDrawColor(CAPTU[playerid][BandaCapt1a], -1);
	TextDrawSetOutline(CAPTU[playerid][BandaCapt1a], 1);
	TextDrawSetProportional(CAPTU[playerid][BandaCapt1a], 1);
	TextDrawSetSelectable(CAPTU[playerid][BandaCapt1a], 0);

	CAPTU[playerid][BandaCapt2a] = TextDrawCreate(6.000000, 278.000000, "_");
	TextDrawBackgroundColor(CAPTU[playerid][BandaCapt2a], 255);
	TextDrawFont(CAPTU[playerid][BandaCapt2a], 1);
	TextDrawLetterSize(CAPTU[playerid][BandaCapt2a], 0.419999, 1.200000);
	TextDrawColor(CAPTU[playerid][BandaCapt2a], -1);
	TextDrawSetOutline(CAPTU[playerid][BandaCapt2a], 1);
	TextDrawSetProportional(CAPTU[playerid][BandaCapt2a], 1);
	TextDrawSetSelectable(CAPTU[playerid][BandaCapt2a], 0);

	CaptTime[playerid] = TextDrawCreate(51.000000, 253.000000, "3:00");
	TextDrawBackgroundColor(CaptTime[playerid], 255);
	TextDrawFont(CaptTime[playerid], 1);
	TextDrawLetterSize(CaptTime[playerid], 0.400000, 1.200000);
	TextDrawColor(CaptTime[playerid], 45089023);
	TextDrawSetOutline(CaptTime[playerid], 1);
	TextDrawSetProportional(CaptTime[playerid], 1);
	TextDrawSetSelectable(CaptTime[playerid], 0);*/



	SetPlayerDataToDefault(playerid);


	ResetPlayerWeaponsEx(playerid);
	new Float: gEateryPos[2], str[16];
	gEateryPos[0] = 450.0; gEateryPos[1] = 125.0;
	for(new x = 0; x < 4; x ++) { // цены
		if(x > 0) gEateryPos[1] += 50.0;
		format(str, sizeof(str), "$%i", gEateryCosts[x]);
		gEateryCostTextDraw[playerid][x] = CreatePlayerTextDraw(playerid, gEateryPos[0], gEateryPos[1], str);
		PlayerTextDrawLetterSize(playerid, gEateryCostTextDraw[playerid][x], 0.560000, 2.142500);
		PlayerTextDrawAlignment(playerid, gEateryCostTextDraw[playerid][x], 1);
		PlayerTextDrawColor(playerid, gEateryCostTextDraw[playerid][x], -1);
		PlayerTextDrawSetShadow(playerid, gEateryCostTextDraw[playerid][x], 0);
		PlayerTextDrawSetOutline(playerid, gEateryCostTextDraw[playerid][x], 1);
		PlayerTextDrawBackgroundColor(playerid, gEateryCostTextDraw[playerid][x], 51);
		PlayerTextDrawFont(playerid, gEateryCostTextDraw[playerid][x], 3);
		PlayerTextDrawSetProportional(playerid, gEateryCostTextDraw[playerid][x], 1);
	}
	new Float: gBarPos[2];
	gBarPos[0] = 450.0; gBarPos[1] = 125.0;
	for(new x = 0; x < 5; x ++) { // цены
		if(x > 0) gBarPos[1] += 50.0;
		format(str, sizeof(str), "$%i", gBarCosts[x]);
		gBarCostTextDraw[playerid][x] = CreatePlayerTextDraw(playerid, gBarPos[0], gBarPos[1], str);
		PlayerTextDrawLetterSize(playerid, gBarCostTextDraw[playerid][x], 0.560000, 2.142500);
		PlayerTextDrawAlignment(playerid, gBarCostTextDraw[playerid][x], 1);
		PlayerTextDrawColor(playerid, gBarCostTextDraw[playerid][x], -1);
		PlayerTextDrawSetShadow(playerid, gBarCostTextDraw[playerid][x], 0);
		PlayerTextDrawSetOutline(playerid, gBarCostTextDraw[playerid][x], 1);
		PlayerTextDrawBackgroundColor(playerid, gBarCostTextDraw[playerid][x], 51);
		PlayerTextDrawFont(playerid, gBarCostTextDraw[playerid][x], 3);
		PlayerTextDrawSetProportional(playerid, gBarCostTextDraw[playerid][x], 1);
	}
	gSkinShopPriceDraw[playerid] = CreatePlayerTextDraw(playerid, 31.000000, 224.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, gSkinShopPriceDraw[playerid], 255);
	PlayerTextDrawFont(playerid, gSkinShopPriceDraw[playerid], 3);
	PlayerTextDrawLetterSize(playerid, gSkinShopPriceDraw[playerid], 0.500000, 1.600000);
	PlayerTextDrawColor(playerid, gSkinShopPriceDraw[playerid], -1);
	PlayerTextDrawSetOutline(playerid, gSkinShopPriceDraw[playerid], 0);
	PlayerTextDrawSetProportional(playerid, gSkinShopPriceDraw[playerid], 1);
	PlayerTextDrawSetShadow(playerid, gSkinShopPriceDraw[playerid], 1);

	for(new v; v < MAX_GZONE; v++) GangZoneShowForPlayer(playerid, GZMZ[v][idm], GetGangZoneColor(v));





	return 1;
}



//static DisconnectState[MAX_PLAYERS char];

public OnPlayerDisconnect(playerid, reason)
{

    new idx = cvector_find(PLAYERS,playerid); // Find player
    if(idx !=-1){ // If idx == -1, Vector didn't contains this player
        cvector_remove(PLAYERS,idx);
    }

    slotused{playerid} = false;
    SetProp(playerIp[playerid], gettime());

    HideSpeedometr(playerid);
    pTemp[playerid][pObjectMebel] = 0;
    if(pTemp[playerid][BuyVehicle])
	{
        pTemp[playerid][BuyVehicle] = -1;
	}
	if(pTemp[playerid][pGraffity1])
	{
		pTemp[playerid][pGraffityID1] = 0;
 		pTemp[playerid][pGraffityStop1] = 0;
 		pTemp[playerid][pGraffity1] = 0;
 		KillTimer(pTemp[playerid][pGraffity1Timer]);
	    DestroyProgressBar(Graffity[playerid]);
	}
	if(pTemp[playerid][pWorldKick] != -1) KillTimer(pTemp[playerid][pWorldKick]);

	if(GetPVarInt(playerid, "StartCasino"))
	{
		ExitPlayerFromSlotMachine(playerid);
	 	HideSlotsForPlayer(playerid);
	}
    if(GetPVarInt(playerid, "dCancelInfoCasino1"))
	{
		for(new i; i < 14; i++)
  		{
    		PlayerTextDrawDestroy(playerid,gInfoCasino[i]);
    	}
	}
	if(pTemp[playerid][pCarTesting]) DestroyVehicle(pTemp[playerid][pCarTesting]);
	if(GetPVarInt(playerid, "ShowTextDrawCar"))
	{
		PlayerTextDrawHide(playerid, gCarInfoBuy);
	  	PlayerTextDrawDestroy(playerid,gCarInfoBuy);
	}
	if(pTemp[playerid][pCarTesting])
	{
	    DestroyVehicle(pTemp[playerid][pCarTesting]);
	    pTemp[playerid][pCarTesting] = INVALID_VEHICLE_ID;
	}
	if(SlotTimer[playerid] != -1) KillTimer(SlotTimer[playerid]);

	if(pTemp[playerid][pChoosingGlasses]) pTemp[playerid][pChoosingGlasses] = false;
	if(pTemp[playerid][pChoosingHats]) pTemp[playerid][pChoosingHats] = false;
	if(pTemp[playerid][pChoosingMebel]) pTemp[playerid][pChoosingMebel] = false;
	if(pTemp[playerid][pChoosingElectro]) pTemp[playerid][pChoosingElectro] = false;
    //--------------------------------------------------------------------------
    if(pData[playerid][pAdmin] > 0)
    {
		mes = "";
		f(mes, "UPDATE `accounts` SET `adminonline` = '%d' WHERE `nickname`='%s'", pData[playerid][pAdminOnline], pData[playerid][pNickname]);
		sql_query(zConn, mes); mes = "";
	}

	if(pData[playerid][pHouse])
	{
		for(new i = 0; i < pData[playerid][pObjectHouse]; i++)
		{
		    if(ObjectHousesModel[pData[playerid][pHouse]-1][i] != -1)
		    {
	    		DestroyDynamicObject(ObjectHouses[pData[playerid][pHouse]-1][i]);
				ObjectHousesModel[pData[playerid][pHouse]-1][i] = -1;
			}
		}
	}
	//--------------------------------------------------------------------------
    if(pTemp[playerid][AntiID])
        pTemp[playerid][AntiID] = 0;
    if(GetPVarInt(playerid, "CPForID") == 1)
	{
 		DestroyDynamicCP(CPForID[playerid][0]);
		DestroyDynamicCP(CPForID[playerid][1]);
  		DestroyDynamicCP(CPForID[playerid][2]);
    	DestroyDynamicCP(CPForID[playerid][3]);
    	CPForID[playerid][0] = 0;
    	CPForID[playerid][1] = 0;
    	CPForID[playerid][2] = 0;
    	CPForID[playerid][3] = 0;
	}
	if(GetPVarInt(playerid, "learnobject") == 1)
	{
	    SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "", 0, 140, "Arial", 24, 0, -1, 0, 1);
		DestroyPlayerObject(playerid, LearnObject[playerid]);
		KillTimer(LearnTimer[playerid]);
		LearnObject[playerid] = 0;
	}
    if(GetPVarInt(playerid, "dust"))
	    DestroyObject(pTemp[playerid][dust]);

    IDPhoneMoney[playerid] = "";
    if(pTemp[playerid][pTruckWagonText] != Text3D:INVALID_3DTEXT_ID) DestroyDynamic3DTextLabelEx(pTemp[playerid][pTruckWagonText]);
    if(IsValid3DTextLabel(pTemp[playerid][pVodka3DText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pVodka3DText]);
    if(IsValid3DTextLabel(pTemp[playerid][pPesok3DText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pPesok3DText]);
    PlayerTextDrawDestroy(playerid, RECON[playerid]);
	mes = "";
 	printf("Сохранен Скиллы");
	pTemp[playerid][pOnExam] = false;
	if(pTemp[playerid][pCheckAD] != -1)
	{
		gAdvert[GetPVarInt(playerid, "editadvert")][adCheking] = false;
		pTemp[playerid][pCheckAD] = -1;
	}
	if(GetPVarInt(playerid, "FactoryPlace") > 0)
  	{
	    new i = GetPVarInt(playerid, "FactoryPlace")-1;
	    StatusFactory[i] = false;
	    Delete3DTextLabel(InFactory3DText[i]);
	    DeletePVar(playerid, "FactoryPlace");
	    DeletePVar(playerid, "MinerCount");
 	}
	pTemp[playerid][pInviteLeader1] = -1;
	pTemp[playerid][pInviteInvite] = -1;
	pTemp[playerid][pRadioOnline] = 0;
	TextDrawDestroy(State99[playerid]);
	TextDrawDestroy(State999[playerid]);
	if(pTemp[playerid][GPSON])
	{
		TextDrawDestroy(GPSDraw[playerid]);
	}
	DisableGPSForPlayer(playerid);
	pTemp[playerid][pRaceID] = 0;
	if(pTemp[playerid][pTempLeader] == 1)
	{
		SetPlayerArmourEx(playerid, 0);
		ResetPlayerWeaponsEx(playerid);
		pData[playerid][pFraction] = 0;
		pData[playerid][pRank] = 0;
		pData[playerid][pFractionSkin] = 0;
		pData[playerid][pSubfraction] = 0;
		ResetPlayerWeaponsEx(playerid);
		SetPlayerColor(playerid,0xFFFFFF11);
		SetPlayerSkin(playerid,pData[playerid][pSkin]);
		pTemp[playerid][pTempLeader] = 0;
	}
	if(pTemp[playerid][pLec] == true)
	{
		new h = pTemp[playerid][pHospital];
		new v = pTemp[playerid][pHospitalVW];
		UpdateDynamic3DTextLabelText(hospital[h][v], -1, "{FFCD00}Больничная койка\n{FFFFFF}Занять: /hospital");
		Hospital_hStatus[h][v] = false;
		pTemp[playerid][pLec] = false;
		pTemp[playerid][pHospital] = 0;
		pTemp[playerid][pHospitalVW] = -1;
	}
	if(pTemp[playerid][pTextDrawCapture])
	{
	 	TextDrawDestroy(CAPTU[playerid][Textdraw0]);
        pTemp[playerid][pTextDrawCapture] = false;
	}
	pTemp[playerid][pWorkSalary] = 0;
	DeletePVar(playerid, "code");
	pTemp[playerid][pLogin4] = true;
	DeletePVar(playerid,"nnick");
	pTemp[playerid][admloged] = 0;
	if(GetPVarInt(playerid,"pgunobject"))
	{
		new objectid = GetPVarInt(playerid,"pgunobject");
		if(IsValidDynamicObject(objectid)) DestroyDynamicObject(objectid);
	}
	if(pData[playerid][pJob] == 1 && pTemp[playerid][pBusID] != INVALID_VEHICLE_ID)
	{
		SetVehicleToRespawnEx(pTemp[playerid][pBusID]);
	}
	if(pData[playerid][pJob] == 6 && pTemp[playerid][pTruckID] != INVALID_VEHICLE_ID)
	{
		SetVehicleToRespawn(pTemp[playerid][pTruckID]);
		//if(IsValid3DTextLabel(pTemp[playerid][pTruckWagonText])) DestroyDynamic3DTextLabel(pTemp[playerid][pTruckWagonText]);
		pTemp[playerid][pTruckID] = INVALID_VEHICLE_ID;

	}
	if(pData[playerid][pJob] == 3 && pTemp[playerid][pTaxiID] != INVALID_VEHICLE_ID)
	{
		SetVehicleToRespawnEx(pTemp[playerid][pTaxiID]);
		if(IsValid3DTextLabel(pTemp[playerid][pTaxi3DText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pTaxi3DText]);
	}
	if(GetPVarInt(playerid,"pgunlocat"))
	{
		new locat = GetPVarInt(playerid,"pgunlocat") - 1;
		gGunWorkTableStat[locat] = false;
	}
	new ids = pTemp[playerid][pCuffee];
	if(pTemp[playerid][pTazer]
	|| ids == playerid)
	{
		mes = "";
		f(mes, "» » %s выходит при аресте [ 20 минут заключения ]", pData[playerid][pNickname]);
  		SendClientMessageToAll(0xFF5030AA, mes);
		pData[playerid][pJail] = 20*60;
		pData[playerid][pPrison] = 1;
		UpdatePlayerData(playerid, "jail", pData[playerid][pJail]);
		UpdatePlayerData(playerid, "prison", pData[playerid][pPrison]);
	}
	if(pTemp[playerid][pCuffee] != INVALID_PLAYER_ID)
	{
		new id = pTemp[playerid][pCuffee];
		if(IsPlayerConnected(id))
		{
			SetPlayerSpecialAction(id,SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(id,0);
			pTemp[id][pCuffer] = INVALID_PLAYER_ID;
			pTemp[id][pCuffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pCuffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pCuffer] = INVALID_PLAYER_ID;
			SendClientMessage(playerid,0x7FC0E3FF,"Офицер, надевший на вас наручники, вышел из игры. Наручники сняты");
		}
	}
	if(gCalls[playerid][g_caller] == playerid || gCalls[playerid][g_callee] == playerid)
	{
		new id;
		if(gCalls[playerid][g_caller] == playerid) id = gCalls[playerid][g_callee];
		else if(gCalls[playerid][g_callee] == playerid) id = gCalls[playerid][g_caller];
		else return SendClientMessage(playerid,CWHITE,"» Ошибка (#112)");
		SendClientMessage(id,CYELLOW,"Собеседник вышел из игры");
		SetPlayerSpecialAction(id,SPECIAL_ACTION_STOPUSECELLPHONE);
		SetTimerEx("ClearPhone",2000,false,"i",id);
		gCalls[playerid][g_caller] = INVALID_PLAYER_ID;
		gCalls[playerid][g_callee] = INVALID_PLAYER_ID;
		gCalls[id][g_caller] = INVALID_PLAYER_ID;
		gCalls[id][g_callee] = INVALID_PLAYER_ID;
		pTemp[playerid][pCall] = false;
		pTemp[id][pCall] = false;
	}
	if(pTemp[playerid][pDFTID] != INVALID_VEHICLE_ID) SetVehicleToRespawnEx(pTemp[playerid][pDFTID]);
	for(new i; i<3; i++) {
		if(gNewsDialee[i] == playerid)
		{
			gNewsDialee[i] = INVALID_PLAYER_ID;
			SendClientMessage(gNewsDialer[i], CSYSTEM, "Игрок вышел из игры");
		}
		if(gNewsDialer[i] == playerid) _stopdial(playerid, "");
	}
	new h,m,s;
	gettime(h,m,s);
	new gunids[56],ammos[56],cnt,pgun[128];
	for (new i;i<13;i++)
	{
		new weapid,ammo;
		GetPlayerWeaponData(playerid,i,weapid,ammo);
		if(weapid && ammo && gGuns[playerid][i] == weapid && gAmmos[playerid][i] <= ammo)
		{
			if(!cnt)
			{
				format(gunids,sizeof(gunids),"%d",gGuns[playerid][i]);
				format(ammos,sizeof(ammos),"%d",gAmmos[playerid][i]);
			}
			else
			{
				format(gunids,sizeof(gunids),"%s|%d",gunids,gGuns[playerid][i]);
				format(ammos,sizeof(ammos),"%s|%d",ammos,gAmmos[playerid][i]);
			}
			cnt++;
			if(cnt >= 6) break;
		}
	}
	if(!pTemp[playerid][pLogined] || !pTemp[playerid][pJoined]) return 1;
	if(strlen(gunids) && strlen(ammos)) format(pgun,sizeof(pgun),"%s:%s",gunids,ammos);
	f(mes, "UPDATE `accounts` SET `health` = '%.2f',`money` = %d,`gun`='%s',`otigral`='%d',`status`='0' WHERE `nickname`='%s'", pData[playerid][pHealth],pData[playerid][pMoney], pgun, pTemp[playerid][pGiveExp], pData[playerid][pNickname]);
	sql_query(zConn, mes); mes = "";
	UpdatePlayerData(playerid,"status", 0);
	SetPlayerDataToDefault(playerid);
	return 1;
}

forward OnPlayerLoaded(Result:r, playerid);
public OnPlayerLoaded(Result:r, playerid) {
    if(IsPlayerNPC(playerid)) return 1;
	new rows = sql_num_rows(r);
	if(rows) {
		new id = sql_get_field_assoc_int(r, "id");
  		mes = "";
		f(mes, "SELECT `time`, `reason` FROM `ban` WHERE `takeid` = '%d'",id);
		new Result:bantest = sql_query(zConn, mes, QUERY_CACHED);
		if(sql_num_rows(bantest))
		{
			new result[64];
			sql_fetch_row(bantest,"|",result);
			new time, reason[128];
			sscanf(result,"p<|>is[128]",time,reason);
			time = time - gCurDay;
			if(time <= 0) {
				f(mes, "DELETE FROM `ban` WHERE `takeid` = '%d'",id);
				sql_query(zConn, mes); mes = "";
			}
			else {
				if(time == -1) f(mes, "Вы забанены по причине: %s",reason);
				else f(mes, "Вы забанены по причине: %s. Осталось дней: %d",reason,time);
				SendClientMessage(playerid,-1,mes);
				sql_free_result(r);
				NewKick(playerid);
				return 1;
			}
		}
		sql_get_field_assoc(r, "password", pData[playerid][pPassword]);
		new code[24]; sql_get_field_assoc(r, "code", code);
		new rcode = sql_get_field_assoc_int(r, "requestcode");
		if(rcode) SetPVarString(playerid,"code",code);
		else SetPVarString(playerid, "code", "zmeytest");
        DialogLogin(playerid);
	}
	else {
		DialogRegister(playerid);
	}
	sql_free_result(r);
	return 1;
}


forward OnPlayerJoinZBT(playerid);
public OnPlayerJoinZBT(playerid)
{
	SendClientMessage(playerid, -1, "Время на ввод пароля ЗБТ ограничено");
	NewKick(playerid);
}
public OnPlayerJoin(playerid)
{
    if(IsPlayerNPC(playerid)) return 1;
	TogglePlayerControllable(playerid,0);
	//SpawnPlayer(playerid);
	//SetPlayerPos(playerid, 1102.91406, -2036.98438, 77.33594);
	SetPlayerPos(playerid, -1494.1250, 901.8281, -16.8672);
	SetPlayerVirtualWorld(playerid, playerid+1);

 	SetPlayerCameraPos(playerid, -1408.8862, 906.2117, 108.0255);
	SetPlayerCameraLookAt(playerid, -1409.5039, 905.4230, 107.7262);
	//SetPlayerCameraPos(playerid, 1058.2507, -2068.6265, 87.1497);
	//SetPlayerCameraLookAt(playerid, 1059.0117, -2067.9751, 86.7799);
	GetPlayerName(playerid,pData[playerid][pNickname],MAX_PLAYER_NAME);
	mes = "";
	sql_escape_string(zConn, pData[playerid][pNickname],pData[playerid][pNickname], 24);
	f(mes, "SELECT * FROM `accounts` WHERE `nickname` = '%s'",pData[playerid][pNickname]);
	sql_query(zConn, mes, QUERY_THREADED | QUERY_CACHED, "OnPlayerLoaded", "ri", playerid);
	return 1;
}

public OnPlayerSpawn(playerid)
{
    TogglePlayerControllable(playerid,1);
    new Float:x, Float:y, Float:z;
   	if(pData[playerid][pMoney])
	{
		ResetPlayerMoney(playerid);
		GivePlayerMoney(playerid,pData[playerid][pMoney]);
	}
	if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
	Vor[playerid] = 0;
	pTemp[playerid][pAbletoGun] = 2;
	SetPlayerColor(playerid,0xFFFFFF11);
	pTemp[playerid][pChangingSkin] = false;
	HidePlayerClothesTD(playerid);
	pTemp[playerid][pWork] = 0;
	SetPlayerScore(playerid,pData[playerid][pLevel]);
	if(pData[playerid][pWanted]) SetPlayerWantedLevel(playerid,pData[playerid][pWanted]);
	SetPlayerDrunkLevel(playerid, pData[playerid][pDrunk]);
	pTemp[playerid][pREGISKL] = false;
	if(GetPVarInt(playerid,"maskedf") > 0)
	{
		SetPlayerSkin(playerid,GetPVarInt(playerid,"OldSkinm"));
		SetPVarInt(playerid,"maskedf",0);
		SetPVarInt(playerid,"seloldsk",0);
		SetPlayerColor(playerid,gFractionColor[pData[playerid][pFraction] - 1]);
	}
    if(!pTemp[playerid][pLogined] || !pTemp[playerid][pJoined]) return 1;
	if(!pData[playerid][pSkin]) //Если игрок не выбрал скин
	{
		SetPlayerPos(playerid, 233.6182,116.4953,1010.2118); // Warp the player
		SetPlayerFacingAngle(playerid, 144.9898);
		SetPlayerCameraPos(playerid, 230.3327, 112.6508, 1010.7769);
		SetPlayerCameraLookAt(playerid, 230.9585, 113.4291, 1010.7371);
		SetPlayerVirtualWorld(playerid, playerid);
		SetPlayerInterior(playerid, 10);
		ApplyAnimation(playerid,"DEALER"," DEALER_IDLE ",4.1,1,1,1,1,1);
		TogglePlayerControllable(playerid, 0);
		SetPlayerAttachedObject(playerid,4,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
		TextDrawShowForPlayer(playerid,TD[tdNextSkin]);
		TextDrawShowForPlayer(playerid,TD[tdBackSkin]);
		TextDrawShowForPlayer(playerid,TD[tdSelSkin]);
		//SelectTextDraw(playerid,COLOR_GREEN);
		pTemp[playerid][pChoosingSkin] = true;
		SetPVarInt(playerid,"skinid",0);
		new skinid = GetPVarInt(playerid,"skinid");
		SetPlayerSkin(playerid,gRegSkins[pData[playerid][pSex]-1][skinid]);
		SendClientMessage(playerid, -1, "Регистрация завершена!");
		SendClientMessage(playerid, -1, "{66CC00}Теперь выберете внешность Вашего персонажа");
		SendClientMessage(playerid, -1, "{C3C3C3}Подсказка: Используйте {FF4500}клавиши движения {C3C3C3}и {FF4500}пробел {C3C3C3}для выбора");
		return 1;
	}
	if(GetPVarInt(playerid,"Spectating") == 1)
	{
	    SetPlayerHealth(playerid,100.0);
	    pData[playerid][pHealth] = 100.0;
		x = GetPVarFloat(playerid,"oldx");
		y = GetPVarFloat(playerid,"oldy");
		z = GetPVarFloat(playerid,"oldz");
		SetPlayerPos(playerid,x,y,z);
		SetPlayerInterior(playerid,GetPVarInt(playerid,"oldint"));
		SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"oldworld"));
		if(pData[playerid][pFraction]) SetPlayerSkin(playerid,pData[playerid][pFractionSkin]);
		else SetPlayerSkin(playerid,pData[playerid][pSkin]);
		SetPVarInt(playerid,"Spectating",0);
		PlayerTextDrawHide(playerid,RECON[playerid]);
		return 1;
	}
	////////////////////////////////////////////////////////////////////////////
	if(pData[playerid][pJail])
	{
	    if(pData[playerid][pFraction]) SetPlayerSkin(playerid,pData[playerid][pFractionSkin]),SetPlayerColor(playerid,gFractionColor[pData[playerid][pFraction]-1]);
		else SetPlayerSkin(playerid,pData[playerid][pSkin]);
		new prison = pData[playerid][pPrison];
		switch(prison)
		{
		case 1:
			{
				SetPlayerPos(playerid,jailLS[0][0],jailLS[0][1],jailLS[0][2]);
				SetPlayerFacingAngle(playerid,jailLS[0][3]);
				SetPlayerVirtualWorld(playerid, 1);
				SetPlayerInterior(playerid,6);
				SetPlayerHealth(playerid, 50.0);

			}
		case 2:
			{
				SetPlayerPos(playerid,jailSF[random(4)][0],jailSF[random(4)][1],jailSF[random(4)][2]);
				SetPlayerFacingAngle(playerid,jailSF[random(4)][3]);
				SetPlayerVirtualWorld(playerid, 2);
				SetPlayerInterior(playerid, 10);
				SetPlayerHealth(playerid, 50.0);
			}
		case 3:
			{
				SetPlayerPos(playerid,jailLV[random(3)][0],jailLV[random(3)][1],jailLV[random(3)][2]);
				SetPlayerFacingAngle(playerid,jailLV[random(3)][3]);
				SetPlayerVirtualWorld(playerid, 3);
				SetPlayerInterior(playerid,3);
				SetPlayerHealth(playerid, 50.0);
			}
		default:
		    {
		        SendClientMessage(playerid, -1, "Так как нету места в других тюрмах, Вы определены в Тюрьму Сан-Фиерро");
				SetPlayerPos(playerid,jailSF[random(4)][0],jailSF[random(4)][1],jailSF[random(4)][2]);
				SetPlayerFacingAngle(playerid,jailSF[random(4)][3]);
				SetPlayerVirtualWorld(playerid, 2);
				SetPlayerInterior(playerid, 10);
				SetPlayerHealth(playerid, 50.0);
		    }
		}
		pData[playerid][pHealth] = 50.0;
	}
 	else if(GetPVarInt(playerid, "hospital") == 1 || pData[playerid][pHealth] < 20.0)
	{
	   	if(!pData[playerid][pJail])
	    {
		    ResetPlayerWeaponsEx(playerid);
	 		new hospitalspawn;
			hospitalspawn = GetHospitalCity(playerid);
			switch(hospitalspawn)
			{
	  			case 1:
		    	{
					SetPlayerInterior(playerid,1);
					SetPlayerVirtualWorld(playerid, 1);
				}
				case 2:
				{
	   				SetPlayerInterior(playerid,2);
					SetPlayerVirtualWorld(playerid, 3);
				}
				case 3:
				{
	   				SetPlayerInterior(playerid,3);
					SetPlayerVirtualWorld(playerid, 2);
				}
			}
			if(pData[playerid][pFraction]) SetPlayerSkin(playerid,pData[playerid][pFractionSkin]),SetPlayerColor(playerid,gFractionColor[pData[playerid][pFraction]-1]);
			else SetPlayerSkin(playerid,pData[playerid][pSkin]);
			SetPVarInt(playerid, "hospital", 0);
			SetPlayerPos(playerid,203.1301,199.8427,501.0859);
			SetPlayerFacingAngle(playerid,89.6634);
			SetPlayerHealth(playerid, 30.0);
			pData[playerid][pHealth] = 30.0;
		}
	}
	else if(pData[playerid][pSpawn] <= 1 && pData[playerid][pHouse])
	{
	    SetPlayerVirtualWorld(playerid, pData[playerid][pHouse]);
		new interior, Float:r;
		new houseid = pData[playerid][pHouse] - 1;
		new hint = gHouses[houseid][houseHint];
		if(pData[playerid][pFraction])
		{
			SetPlayerSkin(playerid,pData[playerid][pFractionSkin]);
		}
		else SetPlayerSkin(playerid,pData[playerid][pSkin]);
		pTemp[playerid][pSelectedHouseID] = houseid;
		x = gHints[hint][hintSX];
		y = gHints[hint][hintSY];
		z = gHints[hint][hintSZ];
		r = gHints[hint][hintSR];
		interior = gHints[hint][hintInterior];
		SetPlayerInterior(playerid,interior);
		SetPlayerPos(playerid,x,y,z);
		SetPlayerFacingAngle(playerid,r);
		pTemp[playerid][pIsInHouse] = true;
		if(pData[playerid][pFraction]) SetPlayerColor(playerid,gFractionColor[pData[playerid][pFraction] - 1]);
	}
 	else if(pData[playerid][pFraction])
  	{
   		new fractionid = pData[playerid][pFraction]-1;
		if(pData[playerid][pSubfraction])
		{
			new frid;
			frid = GetSubfractionID(fractionid);
			new subid = pData[playerid][pSubfraction] - 1;
			SetPlayerInterior(playerid,gSubfractionSpawnData[frid][subid][0]);
			SetPlayerVirtualWorld(playerid,gSubfractionSpawnData[frid][subid][1]);
			SetPlayerPos(playerid,gSubfractionSpawnC[frid][subid][0],gSubfractionSpawnC[frid][subid][1],gSubfractionSpawnC[frid][subid][2]);
			SetPlayerFacingAngle(playerid,gSubfractionSpawnC[frid][subid][3]);
		}
		else
		{
			SetPlayerVirtualWorld(playerid,gFractionSpawnData[fractionid][1]);
			SetPlayerInterior(playerid,gFractionSpawnData[fractionid][0]);
			SetPlayerPos(playerid,gFractionSpawnC[fractionid][0],gFractionSpawnC[fractionid][1],gFractionSpawnC[fractionid][2]);
		}
		SetPlayerSkin(playerid,pData[playerid][pFractionSkin]);
		SetCameraBehindPlayer(playerid);
		SetPlayerColor(playerid,gFractionColor[pData[playerid][pFraction]-1]);
	}
	else
	{
	    SetPlayerSkin(playerid,pData[playerid][pSkin]);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,823.6964,-1361.9481,-0.5078);
		SetPlayerFacingAngle(playerid,317.1626);
		SetCameraBehindPlayer(playerid);
		SetPlayerColor(playerid,0xFFFFFF11);
	}
	new gun[128];
	GetPVarString(playerid,"mysqlgun",gun,128);
	DeletePVar(playerid,"mysqlgun");
	if(strlen(gun))
	{
		new guns[6],ammos[6],datas[2][56];
		explode(datas,gun,":");
		printf("%s:%s",datas[0],datas[1]);
		sscanf(datas[0],"p<|>a<i>[6]",guns);
		sscanf(datas[1],"p<|>a<i>[6]",ammos);
		for(new i;i<6;i++)
		{
			GivePlayerWeaponEx(playerid,guns[i],ammos[i]);
		}
	}
	SetPVarInt(playerid,"K_Times",0);
    new skin = GetPlayerSkin(playerid) - 1;
    if(pData[playerid][pObjectGlasses] && pData[playerid][pSett] & setGlasses)
    	SetPlayerAttachedObject(playerid, 8, pData[playerid][pObjectGlasses], 2, SkinOffSetGlasses[skin][0], SkinOffSetGlasses[skin][1], SkinOffSetGlasses[skin][2], SkinOffSetGlasses[skin][3], SkinOffSetGlasses[skin][4], SkinOffSetGlasses[skin][5]);
	if(pData[playerid][pObjectHat] && pData[playerid][pSett] & setHats)
 		SetPlayerAttachedObject(playerid, 9, pData[playerid][pObjectHat], 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
    if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
	if(pTemp[playerid][pTruckWagonText] != Text3D:INVALID_3DTEXT_ID) DestroyDynamic3DTextLabelEx(pTemp[playerid][pTruckWagonText]);
	return 1;
}



public OnPlayerDeath(playerid, killerid, reason)
{
	printf("OnPlayerDeath ID = %d REASON = %d", playerid, reason);
	//--------------------------------------------------------------------------
	new Float:xx,Float:yy,Float:zz;
    GetPlayerPos(playerid,xx,yy,zz);
	SetPVarFloat(playerid,"Player_DeathX",xx);
    SetPVarFloat(playerid,"Player_DeathY",yy);
    SetPVarFloat(playerid,"Player_DeathZ",zz);
    SetPVarInt(playerid, "hospital", 1);
    pData[playerid][pHealth] = 13.0;
	//--------------------------------------------------------------------------
    new skin = GetPlayerSkin(playerid) - 1;
    if(pData[playerid][pObjectGlasses] && pData[playerid][pSett] & setGlasses)
    	SetPlayerAttachedObject(playerid, 8, pData[playerid][pObjectGlasses], 2, SkinOffSetGlasses[skin][0], SkinOffSetGlasses[skin][1], SkinOffSetGlasses[skin][2], SkinOffSetGlasses[skin][3], SkinOffSetGlasses[skin][4], SkinOffSetGlasses[skin][5]);
	if(pData[playerid][pObjectHat] && pData[playerid][pSett] & setHats)
 		SetPlayerAttachedObject(playerid, 9, pData[playerid][pObjectHat], 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
	/*if(IsAGang(playerid))
	{
	    SendDeathMessageToPlayer(playerid, killerid, playerid, reason);
	}*/
    if(GetPVarInt(playerid, "CPForID") == 1)
	{
 		DestroyDynamicCP(CPForID[playerid][0]);
		DestroyDynamicCP(CPForID[playerid][1]);
  		DestroyDynamicCP(CPForID[playerid][2]);
    	DestroyDynamicCP(CPForID[playerid][3]);

    	CPForID[playerid][0] = 0;
    	CPForID[playerid][1] = 0;
    	CPForID[playerid][2] = 0;
    	CPForID[playerid][3] = 0;
	}
	if(GetPVarInt(playerid, "learnobject") == 1)
	{
	    SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "", 0, 140, "Arial", 24, 0, -1, 0, 1);
		DestroyPlayerObject(playerid, LearnObject[playerid]);
		KillTimer(LearnTimer[playerid]);
		LearnObject[playerid] = 0;
	}
	SetPVarInt(playerid,"K_Times",GetPVarInt(playerid,"K_Times") + 1);
	if(GetPVarInt(playerid,"K_Times") > 1)
	{
        SendClientMessage(playerid,-1,"Вы были кинуты по подозрению в читерстве (#105)");
		NewKick(killerid);
		return 1;
	}
    if(IsValid3DTextLabel(pTemp[playerid][pVodka3DText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pVodka3DText]);
    if(IsValid3DTextLabel(pTemp[playerid][pPesok3DText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pPesok3DText]);
    if(pTemp[playerid][pTruckWagonText] != Text3D:INVALID_3DTEXT_ID) DestroyDynamic3DTextLabelEx(pTemp[playerid][pTruckWagonText]);
    SetPVarInt(playerid, "loadding", 0);
	pTemp[playerid][pHatOn] = false;
	DisableGPSForPlayer(playerid);
	ResetPlayerWeaponsEx(playerid);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
	if(pTemp[playerid][pOnExam] == true)
	{
		pTemp[playerid][pOnExam] = false;
		DeletePVar(playerid, "LicTestHealth");
		DeletePVar(playerid, "LicTestError");
		SendClientMessage(playerid, COLOR_LIGHTRED, "Вы провалили экзамен по вождению");
	}
	pData[playerid][pMasked] = 0;
	if(!IsACop(killerid) && pData[killerid][pFraction] != 8)
	{
		pData[killerid][pZakon] -= 2;
	}
	if(IsACop(killerid) && pData[playerid][pWanted])
	{
		//if(IsAMafia(killerid) && MAFIA_STARTZAXVAT2 == 1) { }
 		//else if(IsAGang(playerid) && IsCapture == 1 || PustZone == 1) { }
	 	//else
	 	//{
			pData[playerid][pPrison] = 2;
			new fractionid = pData[killerid][pFraction]-1;
			new rank = pData[killerid][pRank];
			mes = "";
			f(mes, "» » %s %s нейтрализовал преступника '%s' в районе %s",gFractionRankName[fractionid][rank-1],pData[killerid][pNickname],pData[playerid][pNickname], GetPlayerZone(killerid, 0));
			CopMes(0xFFA640FF,mes);
			new level = pData[playerid][pWanted];
			new time = level*JAIL_QUATE;
			pData[playerid][pJail] = time;

			switch(pData[killerid][pSubfraction])
			{
			case 0:
				{
					SetPlayerPos(playerid,jailLS[0][0],jailLS[0][1],jailLS[0][2]);
					SetPlayerFacingAngle(playerid,jailLS[0][3]);
					SetPlayerVirtualWorld(playerid, 1);
					SetPlayerInterior(playerid,6);
					pData[playerid][pPrison] = 1;
				}
			case 1:
				{
					SetPlayerPos(playerid,jailLS[0][0],jailLS[0][1],jailLS[0][2]);
					SetPlayerFacingAngle(playerid,jailLS[0][3]);
					SetPlayerVirtualWorld(playerid, 1);
					SetPlayerInterior(playerid,6);
					pData[playerid][pPrison] = 1;
				}
			case 2:
				{
					SetPlayerPos(playerid,jailSF[random(4)][0],jailSF[random(4)][1],jailSF[random(4)][2]);
					SetPlayerFacingAngle(playerid,jailSF[random(4)][3]);
					SetPlayerVirtualWorld(playerid, 2);
					SetPlayerInterior(playerid, 10);
					pData[playerid][pPrison] = 2;
				}
			case 3:
				{
					SetPlayerPos(playerid,jailLV[random(3)][0],jailLV[random(3)][1],jailLV[random(3)][2]);
					SetPlayerFacingAngle(playerid,jailLV[random(3)][3]);
					SetPlayerVirtualWorld(playerid, 3);
					SetPlayerInterior(playerid,3);
					pData[playerid][pPrison] = 3;
				}
			}
			SendClientMessage(playerid, COLOR_GREEN, "Чтобы просмотреть время до освобождения - {FFCD00}/jailtime");
			SendMes(playerid, COLOR_LIGHTRED, "» Вы арестованы Полицией штата");
			pData[playerid][pWanted] = 0;
			UpdatePlayerData(playerid,"wanted",pData[playerid][pWanted]);
			SetPlayerWantedLevel(playerid,0);
		//}
	}
	if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid,3);
	if(killerid != INVALID_PLAYER_ID)
	{
		if(!IsACop(killerid) && pData[killerid][pFraction] != 8)
		{
			pData[killerid][pWanted] ++;
			if(pData[killerid][pWanted] >= 6) pData[killerid][pWanted] = 6;
			UpdatePlayerData(killerid,"wanted",pData[killerid][pWanted]);
			SetPlayerWantedLevel(killerid,pData[killerid][pWanted]);

			SendClientMessage(killerid,-1,"» {54f61b}Вы убили человека. {ff0303}Ваш уровень розыска увеличен");
			mes = "";
			f(mes, "» » %s объявлен в розыск. Убийство в районе '%s' ",pData[killerid][pNickname], GetPlayerZone(killerid, 0));
			CopMes(0xFFA640FF,mes);
		}
	}
	if(pTemp[playerid][pCuffee] == playerid)
	{
		new id = playerid;
		new cuffer = pTemp[id][pCuffer];
		SetPlayerSpecialAction(id,SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(id,0);
		pTemp[id][pCuffer] = INVALID_PLAYER_ID;
		pTemp[id][pCuffee] = INVALID_PLAYER_ID;
		pTemp[cuffer][pCuffee] = INVALID_PLAYER_ID;
		pTemp[cuffer][pCuffer] = INVALID_PLAYER_ID;
		SendClientMessage(cuffer,CINFO,"Арестованный умер");
	}

	new bandkiller,
	bandkill;
	bandkiller = pData[killerid][pFraction];
	bandkill = pData[playerid][pFraction];

	if(IsAMafia(killerid) && MAFIA_STARTZAXVAT2 == 1)
	{
	    if(bandkiller == bandkill && bandkiller == MAFIA_NAPAD && MAFIA_STARTZAXVAT == 1) MAFIA_SCORE[0] -= 10;
	    else if(bandkiller == bandkill && bandkiller != MAFIA_NAPAD && MAFIA_STARTZAXVAT == 1) MAFIA_SCORE2[0] -= 10;
	    else if(bandkiller == bandkill && bandkiller == MAFIA_NAPAD && MAFIA_STARTZAXVAT == 0) MAFIA_SCORE[0] -= 20;
	    else if(bandkiller == bandkill && bandkiller != MAFIA_NAPAD && MAFIA_STARTZAXVAT == 0) MAFIA_SCORE2[0] -= 20;
	    else if(!IsAMafia(playerid) && bandkiller == MAFIA_NAPAD) MAFIA_SCORE[0] -= 20;
	    else if(!IsAMafia(playerid) && bandkiller != MAFIA_NAPAD) MAFIA_SCORE2[0] -= 20;
	    else if(bandkiller != bandkill && bandkiller == MAFIA_NAPAD && MAFIA_STARTZAXVAT == 0) MAFIA_SCORE[0] -= 20;
	    else if(bandkiller != bandkill && bandkiller != MAFIA_NAPAD && MAFIA_STARTZAXVAT == 0) MAFIA_SCORE2[0] -= 20;
	    else if(bandkiller != bandkill && bandkiller == MAFIA_NAPAD && MAFIA_STARTZAXVAT == 1) MAFIA_SCORE[0] += 10;
	    else if(bandkiller != bandkill && bandkiller != MAFIA_NAPAD && MAFIA_STARTZAXVAT == 1) MAFIA_SCORE2[0] += 10;
	}

	if(bandkiller != bandkill)
	{
		if(IsCapture == 1 && PustZone == 0)
		{
			if(IsAGang(playerid) || IsAGang(killerid))
			{
				if(GangInfo[bandkiller][capture] && GangInfo[bandkill][capture] == 1)
				{
					if(GangInfo[bandkiller][captureid] == GangInfo[bandkill][captureid])
					{
						GangInfo[bandkiller][score] = GangInfo[bandkiller][score]+1;
						CaptureUpd(bandkiller);
					}
				}
			}
		}
		else if(PustZone == 1 && IsCapture == 0)
		{
			if(IsAGang(playerid) || IsAGang(killerid))
			{
				if(GangInfo[pData[playerid][pFraction]][captureid]
						|| GangInfo[pData[killerid][pFraction]][captureid])
				{
					GangInfo[bandkiller][score] = GangInfo[bandkiller][score]+1;
					CaptureUpd(bandkiller);
				}
			}
		}
	}
	return 1;
}

public OnVehicleSpawn(vehicleid)
{

	if(IsNotDriving(vehicleid) == 1)
	{
		SetVehicleParamsEx(vehicleid, 1, 0, 0, 0, 0, 0, 0);
	}
	gVehicles[vehicleid - 1][vCheckDelay] = true;
	GetVehiclePos(vehicleid, gVehicles[vehicleid - 1][vX], gVehicles[vehicleid - 1][vY], gVehicles[vehicleid - 1][vZ]);
	GetVehicleZAngle(vehicleid, gVehicles[vehicleid -1][vA]);
	gVehicles[vehicleid - 1][vSpawned] = true;
	gVehicles[vehicleid - 1][vCheckDelay] = true;
	gVehicles[vehicleid - 1][vFuel] = 50;
	if(vehicleid >= aBus[0] && vehicleid <= aBus[1])
	{
		if(ToggleLock(vehicleid)) ToggleLock(vehicleid);
		gVehicles[vehicleid-1][vFuel] = 50;
		for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
		{
		    i = cvector_get(PLAYERS, idx);
			if(pTemp[i][pBusID] == vehicleid)
			{
				BusSpawn(i);
    			if(pTemp[i][pBusText] != Text3D:INVALID_3DTEXT_ID) DestroyDynamic3DTextLabelEx(pTemp[i][pBusText]);
				pTemp[i][pBusID] = INVALID_VEHICLE_ID;
				pTemp[i][pBusRoute] = 0;
				pTemp[i][pBusPos] = 0;
				pTemp[i][pBusPrice] = 0;
				SendClientMessage(i,CWHITE,"» Рабочее т/с было отбуксировано");
				break;
			}
		}

	}
	if(vehicleid >= aTaxi[0] && vehicleid <= aTaxi[1])
	{
		if(ToggleLock(vehicleid)) ToggleLock(vehicleid);
		for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
		{
		    i = cvector_get(PLAYERS, idx);
			if(pTemp[i][pTaxiID] == vehicleid)
			{
				if(pTemp[i][pTaxi3DText] != Text3D:INVALID_3DTEXT_ID) DestroyDynamic3DTextLabelEx(pTemp[i][pTaxi3DText]);
				pTemp[i][pTaxiID] = INVALID_VEHICLE_ID;
				pTemp[i][pTaxiPrice] = 0;
				pTemp[i][pTaxiTurn][0] = INVALID_PLAYER_ID;
				pTemp[i][pTaxiTurn][1] = INVALID_PLAYER_ID;
				SendClientMessage(i,CWHITE,"» Рабочее т/с было отбуксировано");
				break;
			}
		}
	}

	if(vehicleid >= aFuel[0] && vehicleid < aFuel[1])
	{
		if(gVehicles[vehicleid-1][vLock]) ToggleLock(vehicleid);
		for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
		{
		    i = cvector_get(PLAYERS, idx);
			if(pTemp[i][pTruckID] == vehicleid)
			{
				SendClientMessage(i,CWHITE,"» Рабочее т/с было отбуксировано");
				pTemp[i][pTruckID] = INVALID_VEHICLE_ID;
				if(IsValid3DTextLabel(pTemp[i][pTruckWagonText])) DestroyDynamic3DTextLabelEx(pTemp[i][pTruckWagonText]);
				if(pTemp[i][pTruckWagonID] != INVALID_VEHICLE_ID)
				{
					SetVehicleToRespawn(pTemp[i][pTruckWagonID]);
					pTemp[i][pTruckWagonID] = INVALID_VEHICLE_ID;
				}
			}
		}
	}

	if(vehicleid >= aRazvoz[0] && vehicleid <= aRazvoz[1])
	{
		if(ToggleLock(vehicleid)) ToggleLock(vehicleid);
		for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
		{
		    i = cvector_get(PLAYERS, idx);
			if(pTemp[i][pVinogradID] == vehicleid)
			{
				pTemp[i][pVinogradID] = INVALID_VEHICLE_ID;
				SendClientMessage(i,CWHITE,"» Рабочее т/с было отбуксировано");
			}
		}
	}

	if(vehicleid >= aMech[0] && vehicleid <= aMech[1])
	{
		if(ToggleLock(vehicleid)) ToggleLock(vehicleid);
		for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
		{
		    i = cvector_get(PLAYERS, idx);
			if(pTemp[i][pMechID] == vehicleid)
			{
				pTemp[i][pMechID] = INVALID_VEHICLE_ID;
				SendClientMessage(i,CWHITE,"» Рабочее т/с было отбуксировано");
			}
		}
	}

	if(vehicleid >= aPesok[0] && vehicleid <= aPesok[1])
	{
		if(ToggleLock(vehicleid)) ToggleLock(vehicleid);
		for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
		{
		    i = cvector_get(PLAYERS, idx);
			if(pTemp[i][pPesokID] == vehicleid)
			{
				pTemp[i][pPesokID] = INVALID_VEHICLE_ID;
				SendClientMessage(i,CWHITE,"» Рабочее т/с было отбуксировано");
			}
		}
	}





	if(gVehicleGun[vehicleid][vGunGunAmount] > 0)
	{
	    gVehicleGun[vehicleid][vGunGunAmount] = 0;
	}
	if(gVehicles[vehicleid-1][vColor][0])
	{
		ChangeVehicleColor(vehicleid,gVehicles[vehicleid-1][vColor][0]-1,gVehicles[vehicleid-1][vColor][1]-1);
	}
	for(new i; i < sizeof(gCars); i ++)
	{
		if(gCars[i][carVid] != vehicleid) continue;
		for(new i2;i2<14;i2++)
		{
			new tun = gCars[i][carTuning][i2];
			printf("ТЮНИНГ ДЛЯ МАШИНЫ: %d", tun);
			if(tun != 0) AddVehicleComponent(gCars[i][carVid], tun);
		}
		ChangeVehicleColor(gCars[i][carVid], gCars[i][carColor1], gCars[i][carColor2]);
		if(!gCars[i][carPaintJob]) ChangeVehiclePaintjob(gCars[i][carVid], gCars[i][carPaintJob]);
		break;
	}
	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
	if(Patronboxv[vehicleid] > 0)
	{
    	VehicleEdenits[vehicleid] = 0;
		Patronboxv[vehicleid] = 0;
		Delete3DTextLabel(VehPT[vehicleid]);
	}
	gGangRespawnCar = 10;
	if(killerid != INVALID_PLAYER_ID && !IsPlayerConnected(killerid)) return 0;
	new Float: pos[3];
	GetVehicleRotation(vehicleid, pos[0], pos[1], pos[2]);
	if(!IsKicked(killerid) && (pos[1] < 90 && pos[1] > -90) && gVehicleDriver[vehicleid-1] == INVALID_PLAYER_ID && GetPVarInt(killerid, "lastveh") != vehicleid && killerid != INVALID_PLAYER_ID)
	{
	    mes = "";
		f(mes, "» %s был кикнут по подозрению в уничтожении тачек читерским способом [New]",pData[killerid][pNickname]);
		AdminChat(CORANGE,mes);
		SendClientMessage(killerid,CORANGE,"Вы были кинуты по подозрению в читерстве (#105)");
		printf("%s были кинуты по подозрению в читерстве (#105)", killerid);
		NewKick(killerid);
		return 0;
	}
	DeletePVar(killerid, "lastveh");
	gVehicles[vehicleid - 1][vCheckDelay] = true;
	gVehicles[vehicleid - 1][vSpawned] = false;
	gVehicles[vehicleid - 1][vCheckDelay] = true;
	if(vehicleid >= aTaxi[0] && vehicleid <= aTaxi[1])
	{
		new playerid = gVehicleDriver[vehicleid-1];
		if(playerid != INVALID_PLAYER_ID)
		{
			SendClientMessage(playerid,CRED,"Такси уничтожено");
			if(IsValid3DTextLabel(pTemp[playerid][pTaxi3DText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pTaxi3DText]);
			pTemp[playerid][pTaxiID] = INVALID_VEHICLE_ID;
			pTemp[playerid][pTaxiPrice] = 0;
			pTemp[playerid][pTaxi3DText] = Text3D:INVALID_3DTEXT_ID;
			pTemp[playerid][pTaxiGoing] = false;
			pTemp[playerid][pTaxiPass] = INVALID_PLAYER_ID;
			pTemp[playerid][pTaxiStart] = 0.0;
		}
	}
	if(gVehicleDrugs[vehicleid][DrugsStatus] == true)
	{
		gVehicleDrugs[vehicleid][DrugsStatus] = false;
		if(IsValid3DTextLabel(pTemp[killerid][pPesok3DText])) DestroyDynamic3DTextLabelEx(pTemp[killerid][pPesok3DText]);
		if(IsValid3DTextLabel(pTemp[killerid][pVodka3DText])) DestroyDynamic3DTextLabelEx(pTemp[killerid][pVodka3DText]);
		gVehicleDrugs[vehicleid][DrugsKG] = 0;
		ZavodInfo[4] += 100;
		ZavodInfo[0] += 1000;
	}




	if(gVehicleGun[vehicleid][vGunGunAmount] > 0)
	{
	    gVehicleGun[vehicleid][vGunGunAmount] = 0;
	}
	return 1;
}

public OnPlayerText(playerid, text[])
{

	if(pData[playerid][pJail])
	{
		SendClientMessage(playerid, CGRAY, "Вы в тюрьме");
		return 0;
	}
	if(pData[playerid][pMut])
	{
		SendClientMessage(playerid,CWHITE,"» У Вас молчанка, ожидайте снятия..");
		return 0;
	}
	if(pTemp[playerid][pEther])
	{
		new mess[150] = "";
		f(mess,"{6b72fc}[Radio Dallas-RP] %s: %s",pData[playerid][pNickname],text);
        SendClientMessageToAll(-1, mess);
		return 0;
	}
	for(new i; i<3; i++) {
		if(gNewsDialee[i] == playerid && gNewsDialing[i])
		{
			mes = "";
			f(mes, "» {9C9AFF}[Радио [Т] ] %s[%d]: %s",pData[playerid][pNickname],playerid,text);
			new subid = pData[gNewsDialer[i]][pSubfraction];
			foreach(new r: Player)
			{
				if(pData[r][pRadio] == subid || r == playerid) SendClientMessage(r, -1, mes);
			}
			return 0;
		}
	}
	if(pTemp[playerid][pCall])
	{
		new id;
		if(gCalls[playerid][g_caller] == playerid) id = gCalls[playerid][g_callee];
		else if(gCalls[playerid][g_callee] == playerid) id = gCalls[playerid][g_caller];
		else return SendClientMessage(playerid,CWHITE,"» Ошибка (#112)");
		new mess[150];
		f(mess,"[Телефон] %s",text);
		Speech(playerid,mess,LANG_ENGLISH,13.0,0);
		f(mess,"[T] %s: %s",pData[playerid][pNickname],text);
		SendClientMessage(id,CYELLOW,mess);
		return 0;
	}
	Speech(playerid,text,LANG_ENGLISH);
	return 0;
}
CMD:hospital(playerid, params[])
{
    new Float:health;
    GetPlayerHealth(playerid, health);
	if(health >= 95.0) return SendClientMessage(playerid, COLOR_GREY, "Вы полностью здоровы");
	new d = GetPlayerVirtualWorld(playerid);
	if(pTemp[playerid][pLec] == true)
	{
		new h = pTemp[playerid][pHospital];
		new v = pTemp[playerid][pHospitalVW];
		UpdateDynamic3DTextLabelText(hospital[h][v], -1, "{FFCD00}Больничная койка\n{FFFFFF}Занять: /hospital");
		Hospital_hStatus[h][v] = false;
		pTemp[playerid][pLec] = false;
		pTemp[playerid][pHospital] = 0;
		pTemp[playerid][pInHospital] = false;
	}
	else
	{
		for(new s; s < 24; s++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 1.6, hospos[s][0], hospos[s][1], hospos[s][2]))
			{
				if(Hospital_hStatus[s][d] == false)
				{
					new qwe[100];
					format(qwe, 100, "{FF5030}Койка занята: {FFFFFF}%s", pData[playerid][pNickname]);
					UpdateDynamic3DTextLabelText(hospital[s][d], -1, qwe);
					SendMes(playerid, COLOR_GREEN, "» Вы заняли койку {FFCD00}№%i. {33AAFF}В зависимости от состояния здоровья лечение может занять время", s);
					SendMes(playerid, -1, "» Чтобы выписаться подойдите к врачу или выйдите за пределы больницы");
					pTemp[playerid][pHospital] = s;
					pTemp[playerid][pHospitalVW] = d;
					pTemp[playerid][pLec] = true;
					Hospital_hStatus[s][d] = true;
					pTemp[playerid][pInHospital] = true;
				}
			}
		}
	}
	return 1;
}

CMD:makestore(playerid, params[])
{
    new i = pData[playerid][pHouse]-1;
    if(!pTemp[playerid][pIsInHouse]) return SendClientMessage(playerid,CWHITE,"» Вы должны находиться в доме");
	if(!pData[playerid][pHouse]) return SendClientMessage(playerid, -1, "У вас нет дома");
	if(!gHouses[i][houseImprove][5]) return SendMes(playerid, COLOR_FADE4, "У вас нет улучшения для установки шкафа");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	gHouses[i][hShx] = x;
	gHouses[i][hShy] = y;
	gHouses[i][hShz] = z-1.0;
	mes = "";
	f(mes, "UPDATE `houses` SET `hShx` = '%d',`hShy` = '%d',`hShz` = '%d' WHERE `id` = '%d'",i+1);
	sql_query(zConn, mes); mes = "";
	DestroyDynamic3DTextLabel(gStoreText[i]);
	mes = "";
	f(mes, "Шкаф\nМатериалы: %d\nНаркотики: %d\nДеньги: %d$\n\n/use", gHouses[i][houseMats], gHouses[i][houseDrugs], gHouses[i][houseMoney]);
	gStoreText[i] = CreateDynamic3DTextLabel(mes,CWHITE,gHouses[i][hShx], gHouses[i][hShy], gHouses[i][hShz]+0.9,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,-1,i+1);
	return SendClientMessage(playerid, -1, "{66CC00}Шкаф установлен. Используйте {3399FF}/use {66CC00}чтобы открыть его.");
}

CMD:open(playerid, params[])
{
	if(GetBarrierID(playerid) == -1) return 1;
	if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CWHITE,"» Вам недоступна данная функция");
	if(GetBarrierID(playerid) == 3 || GetBarrierID(playerid) == 4 || GetBarrierID(playerid) == 5 || GetBarrierID(playerid) == 6)
	{
		if(!IsACop(playerid)) return SendClientMessage(playerid,CWHITE,"» Этот шлагбаум только для Полиции");
		OpenBarrier(GetBarrierID(playerid));
	}
	if(GetBarrierID(playerid) == 0 || GetBarrierID(playerid) == 1 || GetBarrierID(playerid) == 2 || GetBarrierID(playerid) == 7)
	{
		if(pData[playerid][pFraction] != 8) return SendClientMessage(playerid,CWHITE,"» Эти ворота только для Армии");
		OpenBarrier(GetBarrierID(playerid));
	}
	SetTimerEx("CloseBarrierex", 15000, false, "d", GetBarrierID(playerid));
    PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
	return 1;
}
CMD:agl(playerid, params[])
{
	if(pData[playerid][pAdmin] < 5) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /agl [id игрока]");
	pData[params[0]][pLicenses] = {1,1,1,1,1};
	SendClientMessage(playerid, COLOR_RED, "Вы выдали игроку все лицензии.");
	mes = "";
	f(mes, "UPDATE `accounts` SET `licDrive` = '1',`licFly` = '1',`licBoat` = '1',`licWeap` = '1',`licBusiness` = '1' WHERE `id` = '%d'",pData[params[0]][pMysqlID]);
	sql_query(zConn, mes); mes = "";
	SendClientMessage(params[0], COLOR_RED, "Вы получили все лицензии от администратора.");
	return true;
}

CMD:zbt(playerid, params[])
{
    if(GetPVarInt(playerid,"PAYDEAG1231s") > gettime()) return SendClientMessage(playerid, CGRAY, "Нельзя так часто вводить эту команду!");
	pData[playerid][pLicenses] = {1,1,1,1,1};
	
	mes = "";
	f(mes, "UPDATE `accounts` SET `licDrive` = '1',`licFly` = '1',`licBoat` = '1',`licWeap` = '1',`licBusiness` = '1' WHERE `id` = '%d'",pData[params[0]][pMysqlID]);
	sql_query(zConn, mes); mes = "";
	
    TransferMoney(-1,playerid,1000000,"admingive");
	
	SendClientMessage(playerid, COLOR_YELLOW, "Вам были выдано 1000000$, а также доступ к /templeader [id фракции] [подразделение]");
	SendClientMessage(playerid, COLOR_YELLOW, "О всех ошибка сообщать, в тему тех.раздела на форуме Dallas-rp.ru/forum");
	SendClientMessage(playerid, COLOR_BLUE, "Спасибо за Выбор Dallas Role Play. Приятной игры на сервере!");
	SetPVarInt(playerid,"PAYDEAG1231s",gettime() + 5000);
	return 1;
}
CMD:testexit(playerid, params[])
{
    if(GetPVarInt(playerid, "testexit"))
	{
	    SetPlayerPos(playerid,554.9371,-1290.9916,17.2482);
 		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	    DestroyVehicle(pTemp[playerid][pCarTesting]);
	    pTemp[playerid][pCarTesting] = INVALID_VEHICLE_ID;
	    _buycarguper(playerid, "");
	    DeletePVar(playerid, "testexit");
	}
	return 1;
}
CMD:veh(playerid,params[])
{
	if(pData[playerid][pAdmin] < 4) return 1;
	if(GetPlayerInterior(playerid) > 0) return 1;
	if(sscanf(params, "ddd", params[0],params[1],params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /veh [id машины] [цвет 1] [цвет 2]");
	if(params[0] > 611 || params[0] < 400) return SendClientMessage(playerid, COLOR_GREY, "ID транспорта от 400 до 611!");
	if(params[1] > 126 || params[1] < 0) return SendClientMessage(playerid, COLOR_GREY, "ID цвета от 0 до 126!");
	if(params[2] > 126 || params[2] < 0) return SendClientMessage(playerid, COLOR_GREY, "ID цвета от 0 до 126!");
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid, X,Y,Z);
	new carid = CreateVehicle(params[0], X,Y,Z, 0.0, params[1], params[2], 60000);
	PutPlayerInVehicleEx(playerid, carid, 0);
	gVehicles[carid-1][vFuel] = 100;
	gVehicles[carid-1][vHealth] = 1000.0;
	gVehicles[carid-1][vOwnerid] = INVALID_PLAYER_ID;
	VehicleCreate[carid] = true;
	if(IsNotDriving(params[0]) == 1)
		SetVehicleParamsEx(carid, 0, 0, 0, 0, 0, 0, 0);
	SendMes(playerid, COLOR_WHITE, "Транспорт создан. ID: %d", carid);
	return 1;
}
CMD:dveh(playerid,params[])
{
	if(pData[playerid][pAdmin] < 4) return 1;
	if(IsPlayerInAnyVehicle(playerid))
	{
	    if(VehicleCreate[GetPlayerVehicleID(playerid)] != false)
	    {
	        DestroyVehicle(GetPlayerVehicleID(playerid));
			SendMes(playerid, COLOR_WHITE, "Транспорт удален. ID: %d",GetPlayerVehicleID(playerid));
	    }
	    else SendClientMessage(playerid,COLOR_GREY,"Нужно быть в созданной кем - то машине!");
	}
	else SendClientMessage(playerid,COLOR_GREY,"Вы не в машине");
	return 1;
}

CMD:detonator(playerid, params[])
{
    new h; gettime(h);
	if(h < 13 || h > 23 ) return SendClientMessage(playerid, CGRAY, "Использовать команду можно только с 13:00 до 23:00");
	if(GrabBank[pData[playerid][pFraction] - 3]) return SendClientMessage(playerid,CGRAY,"Ваша банда уже грабила банк сегодня");
	if(ActivDetonatr) return SendClientMessage(playerid,CGRAY,"Где-то уже прогремел взрыв, ожидайте.");
	if(GetPVarInt(playerid, "BombaBuy") != 2) return SendClientMessage(playerid,CGRAY,"У вас не хватит взрывчатки | Либо ее нет");
	if(!IsGang(pData[playerid][pFraction])) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только бандитам");
	if(!IsPlayerInRangeOfPoint(playerid, 4.0, 2166.9478,1615.1477,980.8889)) return SendClientMessage(playerid,CGRAY,"Детонатор можно ставить только у двери");
	pTemp[playerid][pDetonator] = false;
	new Float:x, Float:y, Float:z, Float:x2, Float:y2,Float:a;
	GetPlayerPos(playerid,x,y,z);
	GetPlayerFacingAngle(playerid,a);
	x2 = x + (-2.0*floatsin(a,degrees));
	y2 = y + 2.0*floatcos(a,degrees);
	SetPVarInt(playerid, "BombaBuy", 1);
	ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.1,0,1,1,1,1);
	gDetonatePickup[0][0] = CreateDynamicPickup(1654,1,x,y,z);
	SendClientMessage(playerid,CRED,"Вы установили детонатор. У вас есть 10 секунд!!!");
	SetTimerEx("OnDetonate",15000,false,"ffffffd",x,y,z,x2,y2,z,GetPlayerVirtualWorld(playerid));
	return 1;
}


CMD:breakdoor(playerid, params[])
{
    new h; gettime(h);
	if(h < 13 || h > 23 ) return SendClientMessage(playerid, CGRAY, "Использовать команду можно только с 13:00 до 23:00");
    if(ActivDetonatr1) return SendClientMessage(playerid,CGRAY,"Где-то уже прогремел взрыв, ожидайте.");
    if(!IsGang(pData[playerid][pFraction])) return SendClientMessage(playerid,CGRAY,"Эта функция доступна только бандитам");
    if(!GetPVarInt(playerid, "BombaBuy")) return SendClientMessage(playerid,CGRAY,"У вас не хватит взрывчатки | Либо ее нет");
    if(GrabBank[pData[playerid][pFraction] - 3]) return SendClientMessage(playerid,CGRAY,"Ваша банда уже грабила банк сегодня");
    if(!IsPlayerInRangeOfPoint(playerid, 4.0, 2186.5786,1626.3378,980.8889)) return SendClientMessage(playerid,CGRAY,"Детонатор можно ставить только у двери в сейф");
    BreakDoorObject[0] = CreateObject(1654, 2186.8838, 1627.2205, 980.7460, 0.0000, 0.0000, 273.0000);
	BreakDoorObject[1] = CreateObject(1654, 2186.9463, 1627.2488, 981.5964, 0.0000, 0.0000, 273.0000);
	BreakDoorObject[2] = CreateObject(1654, 2186.9331, 1625.2874, 981.5964, 0.0000, 0.0000, 268.3524);
	BreakDoorObject[3] = CreateObject(1654, 2186.9551, 1625.2863, 980.7805, 0.0000, 0.0000, 268.3524);
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid,x,y,z);
	ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.1,0,1,1,1,1);
	SetTimerEx("BreakDoor",100000,false,"fffd",x,y,z,GetPlayerVirtualWorld(playerid));
	gBreakDoorPickup[2] = CreateDynamicPickup(1654,1,x,y,z,GetPlayerVirtualWorld(playerid));
	SendClientMessage(playerid,CRED,"Вы установили детонатор. У вас есть 100 секунды!!!");
	SetPVarInt(playerid, "BombaBuy", 1);
	mes = "";
	f(mes, "UPDATE `grabbank` SET `gang%d` = '1'", pData[playerid][pFraction]);
	sql_query(zConn, mes); mes = "";
	GrabBank[pData[playerid][pFraction]-3] = 1;
	return 1;
}


/*CMD:w(playerid, params[])
{
	if(pData[playerid][pMut]) return SendClientMessage(playerid,CWHITE,"» У Вас молчанка, ожидайте снятия.");
	if(sscanf(params, "us[64]", params[0], params[1])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /w [id игрока] [text]");
	mes = "";
	f(mes, "» [ ЛС ] От %s [ id:%d ]: %s", pData[playerid][pNickname], playerid, params[1]);
	SendClientMessage(params[0], 0xBDB76BAA, mes);
	mes = "";
	f(mes, "» [ ЛС ] Для %s [ id:%d ]: %s", pData[params[0]][pNickname], params[0], params[1]);
	SendClientMessage(playerid, 0xBDB76BAA, mes);

	new wis[128];
	format(wis,sizeof(wis), "{BDB76B}%s шепчет: %s", pData[playerid][pNickname], params[0]);
	ProxDetector(1.2, playerid, wis,CWHITE,CWHITE,CWHITE,0xE6E6E6E6,0xE6E6E6E6);
	SetPlayerChatBubble(playerid,wis,COLOR_GREEN,1.2,10000);
	return 1;
}*/

CMD:inv(playerid, params[])
{
	ShowInv(playerid);
	return 1;
}

CMD:menu(playerid, params[])
{
	ShowPlayerDialog(playerid,dPlayerMenu,2,"{ffcf00}Основное меню ","1 » Статистика игрока\n2 » Личные настройки\n3 » Команды\n{33AAFF}4 » Связь с администрацией{FFFFFF}\n5 » Безопасность\n6 » Статистика обучения","ОК","Выход");
	return 1;
}
ALT:menu:m;

CMD:lift(playerid, params[])
{
	if(!IsPlayerInDynamicArea(playerid, ElevArea)) return 1;
	if(ElevState == 1) return SendClientMessage(playerid,CWHITE,"» Лифт уже используется");

	if(ElevStare != 0) strcat(mes," 1 этаж. Выход\n");
	if(ElevStare != 1) strcat(mes," 2 этаж. Отдел по трудоустройству\n");
	if(ElevStare != 2) strcat(mes," 3 этаж. Отдел по учету безработицы\n");
	if(!ElevDoorState) strcat(mes," Открыть двери");
	ShowPlayerDialog(playerid,dElevator,2,"{ffcf00}{ffcf00}Выберите этаж",mes,"OK","Отмена");
	return 1;
}
CMD:gunwh(playerid, params[])
{
	if(pData[playerid][pAdmin] < 5) return 1;
	if(sscanf(params, "ddddd", params[0],params[1],params[2],params[3],params[4])) return SendClientMessage(playerid,CRED,"/gunwh [gun1] [gun2] [gun3] [coal] [wood]");
	gGunWorkWH[0] = params[0];
	gGunWorkWH[1] = params[1];
	gGunWorkWH[2] = params[2];
	gCoalWH = params[3];
	gWoodWH = params[4];
	gArmyWarehouse[0][0] = 50000;
	gArmyWarehouse[0][1] = 50000;
	gArmyWarehouse[1][0] = 50000;
	gArmyWarehouse[1][1] = 50000;
	gArmyWarehouse[2][0] = 50000;
	gArmyWarehouse[2][1] = 50000;
	return 1;
}
CMD:end(playerid, params[])
{
	if(pData[playerid][pJob] == 1)
	{
		if(pTemp[playerid][pBusID] == GetPlayerVehicleID(playerid))
		{
			mes = "";
			f(mes, "{FFFFFF}» Вы хотите завершить рабочий день? %d$ будет перечислено на ваш счет в банке.",pData[playerid][pSalary]);
			ShowPlayerDialog(playerid,dBusEnd,0,"Конец рабочего дня",mes,"Да","Нет");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Нужно находится в служебной машине");
	}
	if(pData[playerid][pJob] == 2)
	{
		if(pTemp[playerid][pTruckID] == GetPlayerVehicleID(playerid))
		{
			mes = "";
			f(mes, "{FFFFFF}» Вы хотите завершить рабочий день?");
			ShowPlayerDialog(playerid,dTruckWEnd,0,"Конец рабочего дня",mes,"Да","Нет");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Нужно находится в служебной машине");
	}
	if(pData[playerid][pJob] == 3)
	{
		if(pTemp[playerid][pTaxiID] == GetPlayerVehicleID(playerid))
		{
			mes = "";
			f(mes, "{FFFFFF}» Вы хотите завершить рабочий день?");
			ShowPlayerDialog(playerid,dTaxiWEnd,0,"Конец рабочего дня",mes,"Да","Нет");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Нужно находится в служебной машине");
	}
	return 1;
}
CMD:taxi(playerid, params[])
{
	if(pData[playerid][pJob] != 3) return SendClientMessage(playerid,CWHITE,"» Вы не водитель такси");
	if(pTemp[playerid][pTaxiID] == INVALID_VEHICLE_ID) return SendClientMessage(playerid,CWHITE,"» Сначала нужно арендовать такси");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != pTemp[playerid][pTaxiID]) return SendClientMessage(playerid,CWHITE,"» Вы должны быть за рулем своего такси");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /taxi [id игрока]");
	if(params[0] == playerid) return SendClientMessage(playerid,CWHITE,"» Вы не можете запросить место назначения у себя");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CWHITE,"» Неверный ID игрка");
	new vehicleid = GetPlayerVehicleID(playerid);
	if(GetPlayerState(params[0]) != PLAYER_STATE_PASSENGER || GetPlayerVehicleID(params[0]) != vehicleid) return SendClientMessage(playerid,CWHITE,"» Игрок должен сидеть на пассажирском месте в вашем такси");
	mes = "";
	f(mes, "» %s'y отправлен запрос на получение данных о месте назначения",pData[params[0]][pNickname]);
	SendClientMessage(playerid,CINFO,mes);
	f(mes, "» Водитель такси %s  запросил данные о месте назначения.",pData[playerid][pNickname]);
	SendClientMessage(params[0],CINFO,mes);
	SendClientMessage(params[0],CINFO,"Зайдите в карту и поставте правой кнопкой мыши метку там, куда хотите отправиться");
	SetPVarInt(params[0],"selectpoint",1);
	SetPVarInt(params[0],"taxidriver",playerid);
	return 1;
}
CMD:untaxi(playerid, params[])
{
	if(pData[playerid][pJob] != 3) return SendClientMessage(playerid,CWHITE,"» Вы не водитель такси");
	RemovePlayerMapIcon(playerid,iconTaxi);
	return 1;
}
CMD:fare(playerid, params[])
{
	if(pData[playerid][pJob] != 3) return SendClientMessage(playerid,CWHITE,"» Вы не водитель такси");
	if(pTemp[playerid][pTaxiID] == INVALID_VEHICLE_ID) return SendClientMessage(playerid,CWHITE,"» Сначала нужно арендовать такси");
	new vehicleid = GetPlayerVehicleID(playerid);
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || vehicleid != pTemp[playerid][pTaxiID]) return SendClientMessage(playerid,CWHITE,"» Вы должны быть за рулем своего такси");
	if(sscanf(params, "ds[32]", params[0], params[1])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /fare [цена за 1км] [название]");
	if(params[0] < 1 || params[0] > 100) return SendClientMessage(playerid,CWHITE,"» Цена должны быть от 1 до 100");
	if(strlen(params[1]) > 32) return SendClientMessage(playerid,CWHITE,"» Название должно быть меньше 32 символов");
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(i == playerid) continue;
		if(GetPlayerVehicleID(i) == vehicleid)
		{
			SendClientMessage(playerid,CWHITE,"» Назначать / изменять цену можно только когда у вас в машине нет пассажиров");
			return 1;
		}
	}
	pTemp[playerid][pTaxiPrice] = params[0];
	mes = "";
	f(mes, "» {33AAFF}%s\n{"#cYELLOW"}%d$ за 1 км",params[1],params[0]);
	if(IsValid3DTextLabel(pTemp[playerid][pTaxi3DText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pTaxi3DText]);
	if(!IsValid3DTextLabel(pTemp[playerid][pTaxi3DText])) pTemp[playerid][pTaxi3DText] = CreateDynamic3DTextLabel(mes,-1,0.0,0.0,1.5,20.0,INVALID_PLAYER_ID,vehicleid);
	return 1;
}
/*CMD:miposlavpupsik(playerid, params[])
{
	//if(strcmp(pData[playerid][pNickname], "Sem_Nicholson", true)) return 1;
	ShowHintsDialog(playerid,dCreatehouse1,"Далее","Отмена");
	return 1;
}*/
CMD:buycarguper(playerid, params[])
{
    if(!pData[playerid][pHouse]) return SendClientMessage(playerid,CWHITE,"» У Вас нет дома");
    ShowDostupModel(playerid,dBuyCarDialog,"Купить","Отмена");
    return 1;
}



CMD:hcar(playerid, params[])
{
	//if(strcmp(pData[playerid][pNickname], "Sem_Nicholson", true)) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /hcar [id дома]");
	if(params[0] < 1 || params[0] > MAX_HOUSE_COUNT) return SendClientMessage(playerid,CWHITE,"» Значение Выходит за допустимые пределы");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,CWHITE,"» Вы должны быть в машине");
	new vehicleid = GetPlayerVehicleID(playerid);
	new Float:x, Float:y, Float:z, Float:r;
	GetVehiclePos(vehicleid,x,y,z);
	GetVehicleZAngle(vehicleid,r);
	mes = "";
	f(mes, "UPDATE `houses` SET `parkx`='%.4f', `parky`='%.4f', `parkz`='%.4f', `parkr`='%.4f' WHERE `id`='%d'",x,y,z,r,params[0]);
	sql_query(zConn, mes, QUERY_THREADED);
	SendClientMessage(playerid,0x7FC0E3FF,"Парковочное место к дому установлено");
	new i = params[0] - 1;
	gHouses[i][houseParkX] = x;
	gHouses[i][houseParkY] = y;
	gHouses[i][houseParkZ] = z;
	gHouses[i][houseParkR] = r;
	return 1;
}
CMD:exit(playerid, params[])
{
	if(pTemp[playerid][pIsInHouse])
	{
		if(logExit) SendClientMessage(playerid,CWHITE,"Check 1");
		new houseid = pTemp[playerid][pSelectedHouseID];
		new hint = gHouses[houseid][houseHint];
		new Float:x, Float:y, Float:z;
		x = gHints[hint][hintX];
		y = gHints[hint][hintY];
		z = gHints[hint][hintZ];
		if(IsPlayerInRangeOfPoint(playerid,2.0,x,y,z))
		{
			if(logExit) SendClientMessage(playerid,CWHITE,"Check 2");
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			pTemp[playerid][pJustTP] = true;
			SetPlayerPos(playerid,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ]);
			SetPlayerFacingAngle(playerid,gHouses[houseid][houseR]);
			pTemp[playerid][pIsInHouse] = false;
		}
	}
	return 1;
}
CMD:sellhouse(playerid, params[])
{
	if(!pData[playerid][pHouse]) return SendClientMessage(playerid,CWHITE,"» У Вас нет дома");
	if(pData[playerid][pCar]) return SendClientMessage(playerid,CWHITE,"» У Вас есть машина. Вы должны продать её прежде чем продавать дом");
	new houseid = pData[playerid][pHouse]-1;
	if(pTemp[playerid][pTaxiID] != INVALID_VEHICLE_ID || pTemp[playerid][pTaxiPass] != INVALID_PLAYER_ID) return SendClientMessage(playerid,CWHITE,"» Нельзя использовать данную Команду сейчас");
	if(gHouses[houseid][houseOwnerID] != pData[playerid][pMysqlID])
	{
		SendMes(playerid, -1, "Вы явл владельцем: %i дома",gHouses[houseid][houseOwnerID]);
		return SendClientMessage(playerid,CWHITE,"» Вы не являетесь владельцем дома в котором живете");
	}
	SPFDD(playerid,dSellHouse,0,"Продажа дома","Да","Нет","Вы хотите продать дом государству за {ffcf00}%d$ (80# от гос. стоимости)?\n{"#cGRAY"}(чтобы продать дом другому игроку введите /sellhouse [ID игрока] [Цена])",gHouses[houseid][housePrice]/100*80);
	return 1;
}
/*
CMD:sellcar(playerid, params[])
{
	if(!pData[playerid][pCar]) return SendClientMessage(playerid, -1, "У вас нету машины");
	new v = pTemp[playerid][BuyVehicle];
	if(GetPlayerVehicleID(playerid) != v || GetPlayerState(playerid) != 2) return SendClientMessage(playerid, CWHITE,"» Для продажи своего транспорта Вы должны находиться в нём за рулём");
    TOTALAUTO--;
    mes = "";
	f(mes, "DELETE FROM `vehicles` WHERE `aMysqlID` = '%d'",pData[playerid][pMysqlID]);
	sql_query(zConn, mes); mes = "";
    pData[playerid][pCar] = 0;
    UpdatePlayerData(playerid, "car", pData[playerid][pCar]);
    DestroyDynamic3DTextLabel(nomer[v]);
	DestroyVehicle(v);
    new money = ( PriceCar(GetPlayerVehicleID(playerid)) / 2 ) ;
    TransferMoney(-1,playerid,money,"sellcar");
    pTemp[playerid][BuyVehicle] = -1;
	return 1;
}*/
/*CMD:sellcar(playerid, params[])
{
	if(!pData[playerid][pCar] || (!pData[playerid][pHouse] && !pData[playerid][pHotel])) return SendClientMessage(playerid,CWHITE,"» У Вас нет т/с");
	new carID = GetCarSlot(pData[playerid][pCar]);
	if(carID == -1) return SendClientMessage(playerid,CRED,"Ошибка. Т/С не найдено");
	if(pTemp[playerid][pTaxiID] != INVALID_VEHICLE_ID || pTemp[playerid][pTaxiPass] != INVALID_PLAYER_ID) return SendClientMessage(playerid,CWHITE,"» Нельзя использовать данную Команду сейчас");
	new vehicleid = gCars[carID][carVid];
	if(GetPlayerVehicleID(playerid) != vehicleid || GetPlayerState(playerid) != 2) return SendClientMessage(playerid, CWHITE,"» Для продажи своего транспорта Вы должны находиться в нём за рулём");
	new modelid = GetVehicleModel(vehicleid) - 400;
	new Float:factor;
	if(pData[playerid][pHouse]) factor = 0.5;
	else factor = 0.8;
	new price = floatround(gTransport[modelid][trPrice]*factor);
	SetPVarInt(playerid,"psellcarPrice",price);
	SetPVarInt(playerid,"psellcarID",carID);
	mes = "";
	f(mes, "» Вы хотите продать свое т/с за {ffcf00}%d$?",price);
	ShowPlayerDialog(playerid,dSellCar,0,"Продажа т/с",mes,"Да","Нет");
	return 1;
}
*/
CMD:pay(playerid, params[])
{
	if(sscanf(params, "ud", params[0],params[1])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /pay [id игрока] [сумма]");
	if(!IsPlayerConnected(params[0]) || playerid == params[0]) return SendClientMessage(playerid,CWHITE,"» Неверный ID игрока");
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
	if(pData[playerid][pLevel] < 2) return SendClientMessage(playerid,-1,"Данная команда доступна со 2 уровня");
	if(params[1] < 1 || params[1] > 5000) return SendClientMessage(playerid,CWHITE,"» Можно передавать от 1 до 5000$");
	if(GetPlayerMoneyEx(playerid) < params[1]) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
	if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
	{
		for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
		{
		    i = cvector_get(PLAYERS, idx);
			if(!IsPlayerConnected(i)) continue;
			if(pTemp[i][pTaxiPass] == playerid) return SendClientMessage(playerid,CWHITE,"» Нельзя использовать операции с деньгами, пока вы не расплатитесь за проезд в такси");
		}
	}
	if(GetPVarInt(playerid,"PAYDEAG") > gettime()) return SendClientMessage(playerid, CGRAY, "Нельзя так часто вводить эту команду!");
	ApplyAnimation(playerid,"DEALER","Dealer_Deal",4.1,0,0,0,0,0,1);
	TransferMoney(playerid,params[0],params[1],"pay");
	mes = "";
	f(mes, "» %s передал Вам {ffcf00}%d$",pData[playerid][pNickname],params[1]);
	SendClientMessage(params[0],CWHITE,mes);
	f(mes, "» Вы передали %s {"#cRED"}%d$",pData[params[0]][pNickname],params[1]);
	SendClientMessage(playerid,CINFO,mes);
	mes = "";
	f(mes, "» достал деньги и передал их %s",pData[params[0]][pNickname]);
	MeAction(playerid, mes);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
	new text[54];
	format(text, sizeof(text), "-%d$",params[1]);
	SetPlayerChatBubble(playerid, text, COLOR_LIGHTRED, 20.0, 10000);
	format(text, sizeof(text), "+%d$",params[1]);
	SetPlayerChatBubble(params[0], text, COLOR_GREEN, 20.0, 10000);
	SetPVarInt(playerid,"PAYDEAG",gettime() + 100);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	return 1;
}

CMD:me(playerid, params[])
{
	if(pData[playerid][pMut]) return SendClientMessage(playerid,CWHITE,"» У Вас молчанка, ожидайте снятия.");
	if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /me [текст]");
	MeAction(playerid, params[0]);
	return 1;
}

CMD:do(playerid, params[])
{
	if(pData[playerid][pMut]) return SendClientMessage(playerid,CWHITE,"» У Вас молчанка, ожидайте снятия.");
	if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /do [действие]");
	DoAction(playerid, params[0]);
	return 1;
}

CMD:try(playerid, params[])
{
	if(pData[playerid][pMut]) return SendClientMessage(playerid,CWHITE,"» У Вас молчанка, ожидайте снятия.");
	if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /try [действие]");
	TryAction(playerid,params[0]);
	return 1;
}

CMD:sellcar(playerid, params[])
{
	if(!pData[playerid][pCar] || (!pData[playerid][pHouse] && !pData[playerid][pHotel])) return SendClientMessage(playerid,CGRAY,"У Вас нет т/с");
	new carID = GetCarSlot(pData[playerid][pCar]);
	if(carID == -1) return SendClientMessage(playerid,CRED,"Ошибка. Т/С не найдено");
	if(pTemp[playerid][pTaxiID] != INVALID_VEHICLE_ID || pTemp[playerid][pTaxiPass] != INVALID_PLAYER_ID) return SendClientMessage(playerid,CGRAY,"Нельзя использовать данную Команду сейчас");
	new vehicleid = gCars[carID][carVid];
	if(GetPlayerVehicleID(playerid) != vehicleid || GetPlayerState(playerid) != 2) return SendClientMessage(playerid, CGRAY,"Для продажи своего транспорта Вы должны находиться в нём за рулём");
	new modelid = GetVehicleModel(vehicleid) - 400;
	sscanf(params, "u", params[0]);
	if(!strlen(params[0]))
	{
		new price = gCars[carID][carSell]*100/80;
		SetPVarInt(playerid,"psellcarPrice",price);
		SetPVarInt(playerid,"psellcarID",carID);
		mes = "";
		format(mes,sizeof(mes),"Вы хотите продать свое т/с за {ffcf00}%d?$ {FFFFFF}Это 80% от стоимости",price);
		ShowPlayerDialog(playerid,dSellCar,0,"Продажа т/с",mes,"Да","Нет");
	}
	else
	{
		new actplayerid = params[0];
		if(actplayerid == playerid || !IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CGRAY,"Неверный ID игрока");
		if(!pData[actplayerid][pHouse] ) return SendClientMessage(playerid,CGRAY,"У игрока нет дома");
		new houseid = pData[actplayerid][pHouse]-1;
		if(gHouses[houseid][houseOwnerID] != pData[actplayerid][pMysqlID]) return SendClientMessage(playerid,CGRAY,"Машина может быть только у владельца дома");
		if(pData[actplayerid][pCar]) return SendClientMessage(playerid,CGRAY,"У игрока уже есть своя машина. Если Вы хотите обменятся машинами используйте /changecar");
		if(GetPlayerDistanceToPlayer(playerid,actplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(actplayerid)) return SendClientMessage(playerid,CGRAY,"Вы далеко друг от друга");
		new price;
		if(sscanf(params, "d", price)) return SendClientMessage(playerid, -1, "» Введите цену");
		if(price < 1 || price > 10000) return SendClientMessage(playerid,CGRAY,"Цена не может быть меньше 1$ или больше 10000$.");
		new classname[12];
		mes = "";
		GetCarClassName(gTransport[modelid][trClass],classname);
		format(mes,sizeof(mes),"Вы предложили %s купить ваше т/с",pData[actplayerid][pNickname]);
		SendClientMessage(playerid,CINFO,mes);
		format(mes,sizeof(mes),"%s предлагает Вам купить его авто за {"#cRED"}$%d. Чтобы подтвердить нажмите {ffcf00}Y, иначе {"#cRED"}N",pData[playerid][pNickname],price);
		SendClientMessage(actplayerid,CWHITE,mes);
		pTemp[playerid][pSellCarOffer] = playerid;
		pTemp[actplayerid][pSellCarOffer] = playerid;
		pTemp[actplayerid][pSellCarOffee] = actplayerid;
		pTemp[actplayerid][pSellCarPrice] = price;
		pTemp[actplayerid][pSellCarID] = carID;
	}
	return 1;
}
CMD:home(playerid, params[])
{
	if(!pData[playerid][pHouse]) return SendClientMessage(playerid,CWHITE,"» У Вас нет дома");
	ShowPlayerDialog(playerid,dHouseMenu,2,"{ffcf00}Управление домом","1 » Открыть / закрыть дом\n2 » Информация о доме\n3 » Зареспавнить ТС\n4 » Местоположение ТС\n5 » Улучшения\n6 » Продать дом","ОК","Отмена");
	return 1;
}
CMD:business(playerid, params[])
{
	if(pData[playerid][pBusiness] < 1) return SendClientMessage(playerid,CWHITE,"» У вас нет бизнеса");
	ShowPlayerDialog(playerid,dBusiness,2,"{ffcf00}Управление бизнесом","1 » Управление кассой\n2 » Заказать продукты\n3 » Статистика\n4 » Продать бизнес\n5 » Установить цену за вход\n6 » Установить цену за продукты","OK","Отмена");
	return 1;
}
CMD:binfo(playerid, params[])
{
	if(!pTemp[playerid][pSellBusinessID]) return SendClientMessage(playerid,CWHITE,"» Вам не предлагали купить бизнес");
	ShowBusinessInformation(playerid,pTemp[playerid][pSellBusinessID]-1,dMes);
	return 1;
}
CMD:mask(playerid, params[])
{
	if(!pData[playerid][pMask]) return SendClientMessage(playerid,CWHITE,"» У Вас нет маски.");
	if(pData[playerid][pMasked] == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже одели маску");
	SetPlayerColor(playerid, 0x7a766700);
	SendClientMessage(playerid, -1, "{3399FF}Ваше место положение на GPS скрыто на 10 минут");
	SetPlayerChatBubble(playerid, "{FF9900}Одевает маску", -1, 20.0, 500);
	GameTextForPlayer(playerid, "~b~ INVISABLE ON", 800, 4);
	pData[playerid][pMask] = 0;
	pData[playerid][pMasked] = 1;
	ApplyAnimation(playerid, "shop","ROB_Shifty",4.0,0,0,0,0,0,1);
	SetTimerEx("MaskOff",600000,false,"i",playerid);
	PlayerPlaySound(playerid, 21000, 0.0, 0.0, 0.0);
	return 1;
}
CMD:maskirovka(playerid, params[])
{
	if(pData[playerid][pFraction] != 12) return SendClientMessage(playerid,CWHITE,"» У Вас нет доступа к служебному инвентарю");
	if(pData[playerid][pRank] < 3) return SendClientMessage(playerid,CWHITE,"» Функция доступна только с 5 ранга");
	ShowPlayerDialog(playerid,dMaskirovka,2,"{ffcf00}Выбор маскировки","Grove Street\nBallas Gang\nRifa Gang\nVagos Gang\nAztecas Gang\nРусская мафия\nLa Cosa Nostra\nYakuza\nМВД\nМО\nСМИ\nМэрия\nВернуть свою внешность","Выбрать","Отмена");
	if(GetPVarInt(playerid,"seloldsk") > 0) return 1;
	SetPVarInt(playerid, "OldSkinm", GetPlayerSkin(playerid));
	SetPVarInt(playerid,"seloldsk",1);
	return 1;
}
CMD:filling(playerid, params[])
{
	if(pData[playerid][pBusiness] < FILLING_ID_OFFSET) return SendClientMessage(playerid,CWHITE,"» У Вас нет АЗС");
	new fillingid = -1;
	for(new i;i<FILLING_COUNT;i++)
	{
		if(pData[playerid][pMysqlID] == gFillings[i][fillOwnerID]) fillingid = i;
	}
	if(fillingid == -1) return SendClientMessage(playerid,CRED,"Програмная ошибка (не найдена АЗС)");
	SetPVarInt(playerid,"fillingid",fillingid);
	ShowPlayerDialog(playerid,dFillingInfo,2,"{ffcf00}Управление АЗС","1 » Информация\n2 » Цены\n3 » Улучшения\n4 » Заказать топливо\n5 » Управление кассой\n6 » Открыть / закрыть заправку\n7 » Продать АЗС","ОК","Отмена");
	return 1;
}
CMD:buyfilling(playerid, params[])
{
    new fillingid = -1;
	for(new i;i<FILLING_COUNT;i++)
	{
		if(!IsPlayerInDynamicArea(playerid, gFillingBuyArea[i])) continue;
		else fillingid = i;
	}
	if(fillingid == -1) return SendClientMessage(playerid,CWHITE,"» Вы должны быть на АЗС");
	SetPVarInt(playerid,"bfillingid",fillingid);
	if(!gFillings[fillingid][fillOwnerID])
	{
		mes = "";
		f(mes, "» {"#cWHITE"}Эта автозаправочная станция продается.\n{"#cORANGE"}Номер заправки: {"#cWHITE"}%d\n{"#cORANGE"}Цена: {"#cWHITE"}%d",gFillings[fillingid][fillMysqlID],gFillings[fillingid][fillPrice]);
		ShowPlayerDialog(playerid,dFillingBuy,0,"Автозаправочная станция",mes,"Купить","Отмена");
	}
	else SendClientMessage(playerid, -1, "Данная Автозаправочная станция уже приобретена кем-то");
	return 1;
}
CMD:fill(playerid, params[])
{
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /fill [кол-во бензина]");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,CWHITE,"» Вы должны быть в т/с");
	new vehicleid = GetPlayerVehicleID(playerid);
	if(params[0] < 0) return SendClientMessage(playerid,CWHITE,"» Неверное значение");
	if(GetEngineStat(vehicleid) == 1) return SendClientMessage(playerid,CWHITE,"» Заправляться можно только с заглушенными двигателем");
	new fillingid = -1;
 	for(new i;i<FILLING_COUNT;i++)
	{
		if(!IsPlayerInDynamicArea(playerid, gFillingBuyArea[i])) continue;
		else fillingid = i;
	}
	if(fillingid == -1) return SendClientMessage(playerid,CWHITE,"» Вы должны быть на АЗС");
	if(gFillings[fillingid][fillOwnerID])
	{
		if(gFillings[fillingid][fillFuel] < params[0]) return SendClientMessage(playerid,CWHITE,"» На заправке недостаточно топлива.");
	}
	if(gVehicles[vehicleid-1][vFuel]+float(params[0]) >= 100) return SendClientMessage(playerid,CWHITE,"» Автомобиль полный.");
	pTemp[playerid][pFillingID] = fillingid+1;
	gFillings[fillingid][fillBank] += params[0]*gFillings[fillingid][fillFuelPrice];
	mes = "";
	f(mes, "UPDATE `fillings` SET `bank` = '%d' WHERE `id` = '%d'",gFillings[fillingid][fillBank],fillingid+1);
	sql_query(zConn, mes); mes = "";
	gVehicles[vehicleid-1][vFuel] += float(params[0]);
	gFillings[fillingid][fillFuel] -= params[0]*gFillings[fillingid][fillFuelPrice];
	UpdateFillingFuel(fillingid);
	TransferMoney(playerid, -1, params[0]*gFillings[fillingid][fillFuelPrice], "buyfuel");
	SendMes(playerid, COLOR_GREEN, "Вы заправились на {FFCD00}%d {33AAFF}литров за {FFCD00}%d$", params[0], params[0]*gFillings[fillingid][fillFuelPrice]);
	return 1;
}

CMD:setgun(playerid, params[])
{
	if(pData[playerid][pAdmin] < 4) return 1;
	if(sscanf(params, "udd", params[0],params[1],params[2])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /setgun [id игрока] [id оружия] [id патронов]");
	GivePlayerWeaponEx(params[0],params[1],params[2]);
	return 1;
}

CMD:eat(playerid, params[])
{
	new hunger,name[32];
	switch(pTemp[playerid][pEat])
	{
	case 1: hunger = 20, name = "хот-дог", SetTimerEx("RemovePlayerAttachedObjectDelay",4000,false,"ii",playerid,1), SetPlayerAttachedObject(playerid,1,19346,6,0.059000,0.059999,0.000000,-97.399963,0.000000,0.000000);
	case 2: hunger = 30, name = "бургер", SetTimerEx("RemovePlayerAttachedObjectDelay",4000,false,"ii",playerid,1), SetPlayerAttachedObject(playerid,1,2703,6,0.079999,0.065999,0.015999,0.000000,-11.100000,84.900047,1.000000,1.000000,1.000000);
	case 3: hunger = 60, name = "пиццу", SetTimerEx("RemovePlayerAttachedObjectDelay",4000,false,"ii",playerid,1), SetPlayerAttachedObject(playerid,1,2702,6,0.049000,0.056000,0.098999,73.800193,-104.900100,-11.700014,1.000000,1.000000,1.000000);
	case 4: SetPlayerAttachedObject(playerid,1,2703,6,0.079999,0.065999,0.015999,0.000000,-11.100000,84.900047,1.000000,1.000000,1.000000);
	case 5: SetPlayerAttachedObject(playerid,1,2769,6,0.095999,0.073999,0.049000,-156.000030,-81.899986,12.599999,1.000000,1.000000,1.000000);
	case 6: SetPlayerAttachedObject(playerid,1,2702,6,0.049000,0.056000,0.098999,73.800193,-104.900100,-11.700014,1.000000,1.000000,1.000000);
	case 7: SetPlayerAttachedObject(playerid,1,1546,5,0.126999,0.044999,-0.027000,15.999998,-175.499862,1.400000,1.000000,1.000000,1.000000);
	case 8: name = "сок", SetTimerEx("RemovePlayerAttachedObjectDelay",4000,false,"ii",playerid,1), SetPlayerAttachedObject(playerid,1,1546,5,0.126999,0.044999,-0.027000,15.999998,-175.499862,1.400000,1.000000,1.000000,1.000000);
	case 9: name = "шампанское", SetTimerEx("RemovePlayerAttachedObjectDelay",4000,false,"ii",playerid,1), SetPlayerAttachedObject(playerid,1,1669,5,0.126999,0.044999,-0.027000,15.999998,-175.499862,1.400000,1.000000,1.000000,1.000000);
	case 10: name = "вино", SetTimerEx("RemovePlayerAttachedObjectDelay",4000,false,"ii",playerid,1), SetPlayerAttachedObject(playerid,1,1664,5,0.126999,0.044999,-0.027000,15.999998,-175.499862,1.400000,1.000000,1.000000,1.000000);
	case 11: name = "виски", SetTimerEx("RemovePlayerAttachedObjectDelay",4000,false,"ii",playerid,1), SetPlayerAttachedObject(playerid,1,1668,5,0.126999,0.044999,-0.027000,15.999998,-175.499862,1.400000,1.000000,1.000000,1.000000);
	case 12: name = "мартини", SetTimerEx("RemovePlayerAttachedObjectDelay",4000,false,"ii",playerid,1), SetPlayerAttachedObject(playerid,1,1551,5,0.126999,0.044999,-0.027000,15.999998,-175.499862,1.400000,1.000000,1.000000,1.000000);
	default: return 1;
	}
	if(pTemp[playerid][pEat] >= 4 && pTemp[playerid][pEat] <= 7) {
		SetTimerEx("RemovePlayerAttachedObjectDelay",4000,false,"ii",playerid,1);
		format(name, 24, "%s", gEateryNames[pTemp[playerid][pEat] - 4]);
		hunger = gEateryCosts[pTemp[playerid][pEat] - 4];
	}
	SetPlayerSpecialAction(playerid, 0);
	ClearAnimations(playerid,1);
	RemovePlayerAttachedObject(playerid,0);
	if(pTemp[playerid][pEat] == 7 || pTemp[playerid][pEat] == 8 || pTemp[playerid][pEat] == 9 || pTemp[playerid][pEat] == 10 || pTemp[playerid][pEat] == 11 || pTemp[playerid][pEat] == 12) ApplyAnimation(playerid, "VENDING", "VEND_Drink2_P", 2.0,0,0,0,0,5000,1);
	else ApplyAnimation(playerid,"FOOD","EAT_Burger", 2.0,0,0,0,0,5000,1);
	SetPlayerHealth(playerid,pData[playerid][pHealth]+hunger);
	if(pData[playerid][pHealth] > 100) pData[playerid][pHealth] = 100, SetPlayerHealth(playerid, 100);
	new mess[130];
	f(mess, "кушает %s",name);
	MeAction(playerid, mess);
	if(pTemp[playerid][pEat] == 7 || pTemp[playerid][pEat] == 8|| pTemp[playerid][pEat] == 9 || pTemp[playerid][pEat] == 10 || pTemp[playerid][pEat] == 11 || pTemp[playerid][pEat] == 12) f(mes, "» выпил(-а) %s", name);
	RemovePlayerAttachedObject(playerid,0);
	pTemp[playerid][pEat] = 0;

	return 1;
}
CMD:gps(playerid, params[])
{
	if(pTemp[playerid][pGPS] || pTemp[playerid][pDebtor] == true)
	{
		DisableGPSForPlayer(playerid);
		if(pTemp[playerid][pTruckID] != INVALID_VEHICLE_ID) return SendClientMessage(playerid,CWHITE,"» На данный момент Вам недоступна эта команда.");
		pTemp[playerid][pDebtor] = false;
		SendClientMessage(playerid,CRED,"Метка снята с радара");
	}
	ShowPlayerDialog(playerid,dGPS,2,"{ffcf00}GPS","1 » АвтоПарки\n2 » Общественные места\n3 » Полезные места\n4 » Работы\n5 » Расположение организаций","Выбрать","Выход");
	return 1;
}
CMD:getclass(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,CWHITE,"» Не в машине");
	new vehicleid = GetPlayerVehicleID(playerid);
	new model = GetVehicleModel(vehicleid);
	new modelid = model-400;
	new classname[24];
	GetCarClassName(gTransport[modelid][trClass],classname);
	mes = "";
	f(mes, "» Класс %s",classname);
	SendClientMessage(playerid,CWHITE,mes);
	return 1;
}
CMD:anim(playerid, params[])
{
	if(pTemp[playerid][pCuffee] != INVALID_PLAYER_ID) return 1;
	sscanf(params, "d", params[0]);
	switch(params[0])//ApplyAnimation(playerid,"ON_LOOKERS","wave_loop",4.1,0,1,1,1,1);
	{
	case 0:
		{
			new stringisser[2000];
			new Animsser[][] = {
				{"1 » Танец - 1\n2 » Танец - 2\n3 » Танец - 3\n4 » Танец - 4\n5 » Стойка дилера\n6 » Передал что-то\n7 » Съел что-то\n8 » Справить нужду\n9 » Медитация\n10 » Сидеть раненым\n11 » Спать на боку\n12 » Лечь на спину\n13 » Шлепнуть рукой\n14 » Наносить граффити 1\n15 » Наносить граффити 2\n16 » Курение\n17 » Ограбление\n18 » Одеть маску\n19 » Руки в верх\n20. Позвать кого-то\n21 » Поднять руки\n22 » Болельщик 1\n23 » Болельщик 2\n24 » Болельщик 3\n"},
				{"25 » Показать средний палец\n26 » Выпить что-то\n27 » Махать руками\n28 » Мужское курение\n29 » Прилечь 1\n30. Прилечь 2\n31 » Прилечь 3\n32 » Прилечь 4\n33 » Присесть на пол\n34 » Читать реп 1\n35 » Читать реп 2\n36 » Читать реп 3\n37 » Читать реп 4\n38 » Набивать мяч\n39 » Кинуть мяч\n40. Поднять мяч\n41 » Позвать\n42 » Чинить авто\n43 » Прислониться к авто\n44 » Сложить руки вместе\n"},
				{"45 » Держать биту 1\n46 » Держать биту 2\n47 » Гангстерский жест 1\n48 » Гангстерский жест 2\n49 » Гангстерский жест 3\n50. Гангстерский жест 4\n51 » Гангстерский жест 5\n52 » Гангстерский жест 6\n53 » Гангстерский жест 7\n54 » Гангстерский жест 8\n55 » Плакать\n56 » Присесть 1\n57 » Присесть 2\n58 » Присесть облокотившись\n59 » Женское курение\n60. Искусственное дыхание\n61 » Облокотится\n62 » Облокотится 2\n63 » Facepalm\n64 » Чесаться\n"},
				{"65 » Поднять руку верх\n66 » Поцеловать\n67 » Поцеловать - 2\n68 » Болеть за кого-то\n69 » Приветствовать кого-то"}
			};
			stringisser = "";
			format(stringisser, sizeof(stringisser), "%s%s%s%s", Animsser[0], Animsser[1], Animsser[2], Animsser[3]);
			ShowPlayerDialog(playerid,dAnimliber,DIALOG_STYLE_LIST, "Список анимаций", stringisser, "Выбрать", "Отмена");
			return 1;
		}
	case 1: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE1);
	case 2: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE2);
	case 3: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE3);
	case 4: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE4);
	case 5: GoAnim(playerid,"DEALER","Dealer_idle",4.1,1,0,0,0,0,0);
	case 6: ApplyAnimation(playerid,"DEALER","Dealer_Deal",4.1,0,0,0,0,0,1);
	case 7: ApplyAnimation(playerid,"FOOD","Eat_Burger",4.1,0,0,0,0,0,1);
	case 8: ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,0,0,0,0,1);
	case 9: GoAnim(playerid,"PARK","Tai_Chi_Loop",4.1,1,0,0,0,0,0);
	case 10: GoAnim(playerid,"CRACK","Crckidle1",4.1,1,0,0,0,0,0);
	case 11: GoAnim(playerid,"CRACK","Crckidle2",4.1,1,0,0,0,0,0);
	case 12: GoAnim(playerid,"CRACK","Crckidle4",4.1,1,0,0,0,0,0);
	case 13: ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1,0,0,0,0,0,1);
	case 14: GoAnim(playerid,"SPRAYCAN","spraycan_full",4.1,1,0,0,0,0,0);
	case 15: GoAnim(playerid,"GRAFFITI","spraycan_fire",4.1,1,0,0,0,0,0);
	case 16: GoAnim(playerid,"SMOKING","M_smkstnd_loop",4.1,1,0,0,0,0,0);
	case 17: GoAnim(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,0,0,0);
	case 18: ApplyAnimation(playerid,"SHOP","ROB_shifty",4.1,0,0,0,0,0,1);
	case 19: GoAnim(playerid,"SHOP","SHP_Rob_HandsUP",4.1,1,0,0,0,0,0);
	case 20: GoAnim(playerid,"RYDER","Ryd_Beckon_02",4.1,1,0,0,0,0,0);
	case 21: ApplyAnimation(playerid,"RIOT","Riot_Angry",4.1,0,0,0,0,0,0);
	case 22: GoAnim(playerid,"RIOT","Riot_Angry_B",4.1,1,0,0,0,0,0);
	case 23: GoAnim(playerid,"RIOT","Riot_Chant",4.1,1,1,0,0,0,0);
	case 24: GoAnim(playerid,"RIOT","Riot_Punches",4.1,1,0,0,0,0,0);
	case 25: ApplyAnimation(playerid,"PED","fucku",4.1,0,0,0,0,0,1);
	case 26: ApplyAnimation(playerid,"BAR","dnK_StndM_loop",4.1,0,0,0,0,0,1);
	case 27: GoAnim(playerid,"BD_FIRE","BD_Panic_03",4.1,1,0,0,0,0,0);
	case 28: GoAnim(playerid,"BD_FIRE","M_smklean_loop",4.1,1,0,0,0,0,0);
	case 29: GoAnim(playerid,"BEACH","bather",4.1,1,0,0,0,0,0);
	case 30: GoAnim(playerid,"BEACH","Lay_Bac_loop",4.1,1,0,0,0,0,0);
	case 31: GoAnim(playerid,"BEACH","Parksit_w_loop",4.1,1,0,0,0,0,0);
	case 32: GoAnim(playerid,"BEACH","Sitnwait_Loop_W",4.1,1,0,0,0,0,0);
	case 33: GoAnim(playerid,"BEACH","Parksit_M_loop",4.1,1,0,0,0,0,0);
	case 34: GoAnim(playerid,"benchpress","gym_bp_celebrate",4.1,1,0,0,0,0,0);
	case 35: GoAnim(playerid,"LOWRIDER","Rap_C_loop",4.1,1,0,0,0,0,0);
	case 36: GoAnim(playerid,"LOWRIDER","Rap_B_loop",4.1,1,0,0,0,0,0);
	case 37: GoAnim(playerid,"LOWRIDER","Rap_A_loop",4.1,1,0,0,0,0,0);
	case 38: GoAnim(playerid,"BSKTBALL","BBALL_idleloop",4.1,1,0,0,0,0,0);
	case 39: ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,0,0,0,0,1);
	case 40: ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.1,0,0,0,0,0,1);
	case 41: ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.1,0,0,0,0,0,1);
	case 42: GoAnim(playerid,"CAR","fixn_car_loop",4.1,1,0,0,0,0,0);
	case 43: GoAnim(playerid,"CAR_CHAT","car_talkm_loop",4.1,1,0,0,0,0,0);
	case 44: GoAnim(playerid,"COP_AMBIENT","coplook_loop",4.1,1,0,0,0,0,0);
	case 45: GoAnim(playerid,"CRACK","Bbalbat_Idle_01",4.1,1,0,0,0,0,0);
	case 46: GoAnim(playerid,"CRACK","Bbalbat_Idle_02",4.1,1,0,0,0,0,0);
	case 47: ApplyAnimation(playerid,"GHANDS","gsign1",4.1,0,0,0,0,0,1);
	case 48: ApplyAnimation(playerid,"GHANDS","gsign2",4.1,0,0,0,0,0,1);
	case 49: ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,0,0,0,0,1);
	case 50: ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,0,0,0,0,1);
	case 51: ApplyAnimation(playerid,"GHANDS","gsign5",4.1,0,0,0,0,0,1);
	case 52: ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,0,0,0,0,1);
	case 53: ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,0,0,0,0,1);
	case 54: ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,0,0,0,0,1);
	case 55: GoAnim(playerid,"GRAVEYARD","mrnF_loop",4.1,1,0,0,0,0,0);
	case 56: GoAnim(playerid,"MISC","seat_LR",4.1,1,0,0,0,0,0);
	case 57: GoAnim(playerid,"INT_HOUSE","Lou_in",4.1,0,1,1,1,1,0);
	case 58: GoAnim(playerid,"INT_OFFICE","OFF_sit_Bored_loop",4.1,1,0,0,0,0,0);
	case 59: GoAnim(playerid,"LOWRIDER","F_smklean_loop",4.1,1,0,0,0,0,0);
	case 60: ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0,1);
	case 61: GoAnim(playerid,"GANGS","LeanIn",4.1,0,1,1,1,1,0);
	case 62: GoAnim(playerid,"MISC","plyrlean_loop",4.1,1,0,0,0,0,0);
	case 63: ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
	case 64: GoAnim(playerid,"MISC","scratchballs_01",4.1,1,0,0,0,0,0);
	case 65: ApplyAnimation(playerid,"ON_LOOKERS","Pointup_in",4.1,0,0,0,1,0);
	case 66: GoAnim(playerid,"KISSING","Grlfrd_Kiss_02",4.1,1,0,0,0,0,0);
	case 67: GoAnim(playerid,"KISSING","Playa_Kiss_03",4.1,1,0,0,0,0,0);
	case 68: GoAnim(playerid,"ON_LOOKERS","shout_02",4.1,1,0,0,0,0,0);
	case 69: GoAnim(playerid,"ON_LOOKERS","wave_loop",4.1,1,0,0,0,0,0);
	}
	if(!params[0])
	{
		new stringiser[2000];
		new Animser[][] = {
			{"1 » Танец - 1\n2 » Танец - 2\n3 » Танец - 3\n4 » Танец - 4\n5 » Стойка дилера\n6 » Передал что-то\n7 » Съел что-то\n8 » Справить нужду\n9 » Медитация\n10 » Сидеть раненым\n11 » Спать на боку\n12 » Лечь на спину\n13 » Шлепнуть рукой\n14 » Наносить граффити 1\n15 » Наносить граффити 2\n16 » Курение\n17 » Ограбление\n18 » Одеть маску\n19 » Руки в верх\n20. Позвать кого-то\n21 » Поднять руки\n22 » Болельщик 1\n23 » Болельщик 2\n24 » Болельщик 3\n"},
			{"25 » Показать средний палец\n26 » Выпить что-то\n27 » Махать руками\n28 » Мужское курение\n29 » Прилечь 1\n30. Прилечь 2\n31 » Прилечь 3\n32 » Прилечь 4\n33 » Присесть на пол\n34 » Читать реп 1\n35 » Читать реп 2\n36 » Читать реп 3\n37 » Читать реп 4\n38 » Набивать мяч\n39 » Кинуть мяч\n40. Поднять мяч\n41 » Позвать\n42 » Чинить авто\n43 » Прислониться к авто\n44 » Сложить руки вместе\n"},
			{"45 » Держать биту 1\n46 » Держать биту 2\n47 » Гангстерский жест 1\n48 » Гангстерский жест 2\n49 » Гангстерский жест 3\n50. Гангстерский жест 4\n51 » Гангстерский жест 5\n52 » Гангстерский жест 6\n53 » Гангстерский жест 7\n54 » Гангстерский жест 8\n55 » Плакать\n56 » Присесть 1\n57 » Присесть 2\n58 » Присесть облокотившись\n59 » Женское курение\n60. Искусственное дыхание\n61 » Облокотится\n62 » Облокотится 2\n63 » Facepalm\n64 » Чесаться\n"},
			{"65 » Поднять руку верх\n66 » Поцеловать\n67 » Поцеловать - 2\n68 » Болеть за кого-то\n69 » Приветствовать кого-то"}
		};
		stringiser = "";
		format(stringiser, sizeof(stringiser), "%s%s%s%s", Animser[0], Animser[1], Animser[2], Animser[3]);
		ShowPlayerDialog(playerid,dAnimliber,DIALOG_STYLE_LIST, "Список анимаций", stringiser, "Выбрать", "Отмена");
	}
	SetPVarInt(playerid,"Animation", 1);
	return 1;
}

CMD:invite(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /invite [id игрока]");

	if(pTemp[playerid][pInviteInvite] >= 0) return SendClientMessage(playerid,CWHITE,"» Вы уже отправили предложение. Введите /cancel чтобы отменить.");
	//if(pTemp[playerid][pTempLeader]) return SendClientMessage(playerid, COLOR_GREY, "Вы временный лидер, вы не можете принимать");
	if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CWHITE,"» Вы не состоите в организации");
	if(!IsAbleToHire(playerid)) return SendClientMessage(playerid,CWHITE,"» В организацию может принимать только лидер");
	new fractionid = pData[playerid][pFraction]-1;
	if(pData[playerid][pFraction] == 11 && !pData[playerid][pSubfraction]) return SendClientMessage(playerid,CWHITE,"» Администрации президента не доступно");

	//if(pData[params[0]][pAdmin]) return SendClientMessage(playerid,CWHITE,"» Данного игрока нельзя пригласить в организацию");
	if(pData[params[0]][pLevel] < 2) return SendClientMessage(playerid,CWHITE,"» У игрока нет 2 уровня");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CWHITE,"» Неверный ID игрока");
	else if(pData[params[0]][pFraction]) return SendClientMessage(playerid,CWHITE,"» Игрок уже состоит в организации");
	if(pData[params[0]][pWarnc]) return SendClientMessage(playerid,CWHITE,"» У игрока есть варн");
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");

	mes = "";
	f(mes, "» Вы предложили {FFCD00}%s[%d] {33AAFF}вступить в вашу организацию",pData[params[0]][pNickname],params[0]);
	SendClientMessage(playerid,COLOR_GREEN,mes);

	new bool:dostupp = false;
	switch(pData[playerid][pFraction])
	{
		case 2: dostupp = true;
		case 8..11: dostupp = true;
		default: dostupp = false;
	}
	if(dostupp == true)
	{
		new frid = GetSubfractionID(fractionid);
		new subid = pData[playerid][pSubfraction] - 1;
		SendMes(params[0],COLOR_GREEN,"{FFCD00}%s {33AAFF}предлагает Вам вступить в организацию {FFCD00}\"%s\", {33AAFF}подразделение {FFCD00}\"%s\"",pData[playerid][pNickname],gFractionName[fractionid],gSubfractionName[frid][subid]);
	}
	else SendMes(params[0],COLOR_GREEN,"{FFCD00}%s {33AAFF}предлагает Вам вступить в организацию {FFCD00}\"%s\"",pData[playerid],gFractionName[fractionid]);

	SendClientMessage(params[0],COLOR_GREEN, "{33AAFF}Нажмите {f6ff00}[ Y ] {33AAFF}что-бы принять предложение или {c54d13}[ N ] {33AAFF}для отказа");

	pTemp[playerid][pInviteInvite] = params[0];

	pTemp[params[0]][pOfferFraction1] = params[0];
	pTemp[params[0]][pOfferFraction] = playerid;
	pTemp[params[0]][pOfferFractionid] = fractionid;
	SetPVarInt(playerid,"actinplayerid",params[0]);

	return 1;
}
CMD:rang(playerid, params[])
{
	//if(pTemp[playerid][pTempLeader]) return SendClientMessage(playerid, COLOR_GREY, "Вы временный лидер, Вы не можете выдавать ранг");
	if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CWHITE,"» Вы не состоите в {ff0000}организации.");
	new fractionid = pData[playerid][pFraction]-1;
	if(!IsAbleToGiveRank(playerid)) return SendClientMessage(playerid,CWHITE,"» Ваш ранг недостаточен");
	if(sscanf(params, "us[11]", params[0],params[1])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /rang [id игрока] [+/-]");
	if(pData[playerid][pFraction] == 11 && !pData[playerid][pSubfraction]) return SendClientMessage(playerid,CWHITE,"» Администрации президента не доступно");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid,CWHITE,"» Неверный ID игрока");
	if(pData[params[0]][pFraction] != pData[playerid][pFraction] || pData[params[0]][pSubfraction] != pData[playerid][pSubfraction]) return SendClientMessage(playerid,CWHITE,"» Игрок не состоит в вашей организации");
	if(pData[playerid][pSubfraction] > 0)
	{
		if(pData[params[0]][pSubfraction] != pData[playerid][pSubfraction]) return SendClientMessage(playerid,CWHITE,"» Игрок не состоит в вашей подфракции");
	}
	if(pData[params[0]][pRank] >= pData[playerid][pRank]) return SendClientMessage(playerid,CWHITE,"» Ваш ранг недостаточен");
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
	SetPVarInt(playerid,"actgrplayerid",params[0]);
	if(!strcmp(params[1], "+", true))
	{
	    if(IsAGang(params[0])
		|| IsAMafia(params[0]))
		{
		}
		else if(pData[params[0]][pRank] == 5 && pData[params[0]][pDiplom] != 1) return SendClientMessage(playerid, -1, "У человека нету высшего образования");
		//******************************
		if(IsAGang(playerid)
				|| pData[playerid][pFraction] == 12
				|| IsAMafia(playerid))
  		{
			if(pData[params[0]][pRank] >= gFractionRankCount[fractionid]-1) return 1;
		}
		else
		{
			if(pData[params[0]][pRank] >= gFractionRankCount[fractionid]-2) return 1;
		}
		//******************************
		if(pData[params[0]][pFraction] == 8 && pData[params[0]][pSubfraction] == 2)
		{
		    pData[params[0]][pRank]++;
			SendMes(playerid, COLOR_BLUE, "» Вы повысили %s в должности (%s)", pData[params[0]][pNickname], gFractionVMFRankName[pData[params[0]][pFraction]-1][pData[params[0]][pRank]-1]);
			SendMes(params[0], COLOR_BLUE,"» Ваш ранг в организации был повышен до %d (%s)",pData[params[0]][pRank],gFractionVMFRankName[pData[params[0]][pFraction]-1][pData[params[0]][pRank]-1]);
		}
		else
		{
			pData[params[0]][pRank]++;
			SendMes(playerid, COLOR_BLUE, "» Вы повысили %s в должности (%s)", pData[params[0]][pNickname], gFractionRankName[pData[params[0]][pFraction]-1][pData[params[0]][pRank]-1]);
			SendMes(params[0], COLOR_BLUE,"» Ваш ранг в организации был повышен до %d (%s)",pData[params[0]][pRank],gFractionRankName[pData[params[0]][pFraction]-1][pData[params[0]][pRank]-1]);
		}
	}
	if(!strcmp(params[1], "-", true))
	{
		if(pData[params[0]][pRank] <= 1) return 1;
		if(pData[params[0]][pFraction] == 8 && pData[params[0]][pSubfraction] == 2)
		{
		    pData[params[0]][pRank]--;
			SendMes(playerid, COLOR_BLUE, "» Вы понизили %s в должности (%s)", pData[params[0]][pNickname], gFractionVMFRankName[pData[params[0]][pFraction]-1][pData[params[0]][pRank]-1]);
			SendMes(params[0], COLOR_LIGHTRED,"» Ваш ранг в организации был понижен до %d (%s)",pData[params[0]][pRank], gFractionVMFRankName[pData[params[0]][pFraction]-1][pData[params[0]][pRank]-1]);
		}
		else
		{
			pData[params[0]][pRank]--;
			SendMes(playerid, COLOR_LIGHTRED, "» Вы понизили %s в должности (%s)", pData[params[0]][pNickname], gFractionRankName[pData[params[0]][pFraction]-1][pData[params[0]][pRank]-1]);
			SendMes(params[0], COLOR_LIGHTRED,"» Ваш ранг в организации был понижен до %d (%s)",pData[params[0]][pRank],gFractionRankName[pData[params[0]][pFraction]-1][pData[params[0]][pRank]-1]);
		}
	}
	UpdatePlayerData(params[0],"rank",pData[params[0]][pRank]);

	return 1;
}
CMD:unjail(playerid, params[])
{
    if(pData[playerid][pAdmin] < 3) return 1;
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /unjail [ID игрока]");
	new prison = pData[params[0]][pPrison];
	if(pData[params[0]][pFraction] != 0 ) SetPlayerSkin(params[0],pData[params[0]][pFractionSkin]);
	else SetPlayerSkin(params[0],pData[params[0]][pSkin]);
	SetPlayerInterior(params[0],0);
	SetPlayerVirtualWorld(params[0],0);
	SetPlayerPos(params[0],camExit[prison][0],camExit[prison][1],camExit[prison][2]);
	SetPlayerFacingAngle(params[0],camExit[prison][3]);
	pData[params[0]][pJail] = 0;
	pData[params[0]][pPrison] = 0;
	UpdatePlayerData(params[0],"prison",pData[params[0]][pPrison]);
	UpdatePlayerData(params[0],"jail",pData[params[0]][pJail]);
	UpdatePlayerData(params[0], "jail", 0);

	SendMes(params[0], -1, "» Вас освободил Администратор %s [id: %d]", pData[playerid][pNickname], playerid);
	SendMes(playerid, -1, "» Вы освободили %s [id: %d]", pData[params[0]][pNickname], params[0]);
	mes = "";
	format(mes, 127, "%s[%d] вытащил из тюрьмы игрока: %s[%d]",pData[playerid][pNickname], playerid, pData[params[0]][pNickname],params[0]);
	AdminChat(COLOR_FADE4, mes);
	return true;
}
CMD:jail(playerid, params[])
{
	if(pData[playerid][pAdmin] < 3) return 1;
	if(sscanf(params, "uds[32]", params[0],params[1],params[2])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /jail [ID игрока] [минуты] [Причина]");
	if(params[1] < 0 || params[1] > 60) return SendClientMessage(playerid, CGRAY, "Возможность посадить от 1 минуты до 60 минут");
	new string[128];
	format(string, sizeof(string), "Вы посадили %s в тюрьму ЛС", pData[params[0]][pNickname]);
	SendClientMessage(playerid, COLOR_LIGHTRED, string);
	ResetPlayerWeapons(params[0]);

	SetPlayerPos(params[0],jailLS[0][0],jailLS[0][1],jailLS[0][2]);
	SetPlayerFacingAngle(params[0],jailLS[0][3]);
	SetPlayerVirtualWorld(params[0], 1);
	SetPlayerInterior(params[0],6);
	pData[params[0]][pPrison] = 1;
	/*switch(random(4)+1)
	{
	case 1:
		{
			SetPlayerPos(params[0],jailLS[0][0],jailLS[0][1],jailLS[0][2]);
			SetPlayerFacingAngle(params[0],jailLS[0][3]);
			SetPlayerVirtualWorld(params[0], 1);
			SetPlayerInterior(params[0],6);
			pData[params[0]][pPrison] = 1;
		}
	case 2:
		{
			SetPlayerPos(params[0],jailSF[random(4)][0],jailSF[random(4)][1],jailSF[random(4)][2]);
			SetPlayerFacingAngle(params[0],jailSF[random(4)][3]);
			SetPlayerVirtualWorld(params[0], 2);
			SetPlayerInterior(params[0], 10);
			pData[params[0]][pPrison] = 2;
		}
	case 3:
		{
			SetPlayerPos(params[0],jailLV[random(3)][0],jailLV[random(3)][1],jailLV[random(3)][2]);
			SetPlayerFacingAngle(params[0],jailLV[random(3)][3]);
			SetPlayerVirtualWorld(params[0], 3);
			SetPlayerInterior(params[0],3);
			pData[params[0]][pPrison] = 3;
		}
	}
	*/

	pData[params[0]][pJail] = params[1]*60;
	format(string, sizeof(string), "Администратор %s посадил Вас в тюрьму на %d минут. Причина: %s", pData[playerid][pNickname], params[1], params[2]);
	SendClientMessage(params[0], -1, string);
	format(string,sizeof(string),"[A] Администратор %s посадил игрока %s в тюрьму на %d минут. Причина: %s",pData[playerid][pNickname],pData[params[0]][pNickname],params[1],params[2]);
 	AdminChat(COLOR_RED,string);
    SendClientMessage(params[0], COLOR_GREEN, "Чтобы просмотреть время до освобождения - {FFCD00}/jailtime");

	return 1;
}
CMD:changeskin(playerid, params[])
{
	if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CWHITE,"» Вы не состоите в {ff0000}организации");
	new fractionid = pData[playerid][pFraction] - 1;
	if(!IsAbleToGiveSkin(playerid)) return SendClientMessage(playerid,CWHITE,"» Ваш ранг недостаточен");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /changeskin [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CWHITE,"» Неверный ID игрока");
	if(pTemp[params[0]][pWork]) return SendClientMessage(playerid,CWHITE,"» Игрок на работе, скин нельзя менять");
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
	if(pData[params[0]][pFraction] != pData[playerid][pFraction]) return SendClientMessage(playerid,CWHITE,"» Игрок не состоит в вашей организации");
	if(pData[playerid][pSubfraction] > 0)
	{
		if(pData[params[0]][pSubfraction] != pData[playerid][pSubfraction]) return SendClientMessage(playerid,CWHITE,"» Игрок не состоит в вашей подфракции");
	}
	if(pData[params[0]][pRank] >= pData[playerid][pRank] && params[0] != playerid) return SendClientMessage(playerid,CWHITE,"» Ваш ранг недостаточен");

	/*if(!IsAGang(playerid)
	|| !IsAMafia(playerid)
	|| pData[playerid][pFraction] != 12)
	{
	    if((pData[playerid][pRank] == gFractionRankCount[fractionid]-1 && pData[playerid][pSubfraction] == 0)) return SendClientMessage(playerid,CWHITE,"» Вы министр скин поменять нельзя");
	}*/


	SetPVarInt(playerid,"actplayerid",params[0]);
	mes = "";
	for(new i;i<8;i++)
	{
		new skinid = gFractionSkin[fractionid][i];
		if(!skinid) break;
		if(skinid == pData[params[0]][pFractionSkin])
		{
			if(!i) f(mes, "{FFFFFF}» Скин %d (%d)",i+1,skinid);
			else f(mes, "%s\n » Скин %d (%d)",mes,i+1,skinid);
		}
		else
		{
			if(!i) f(mes, "» {FFFFFF}Скин %d (%d)",i+1,skinid);
			else f(mes, "%s\n» Скин %d (%d)",mes,i+1,skinid);
		}
	}
	ShowPlayerDialog(playerid,dFractionSkin,2,"{ffcf00}Выберите внешность для игрока:",mes,"OK","Отмена");
	return 1;
}
CMD:showall(playerid, params[])
{
	if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CWHITE,"» Вы не состоите в {ff0000}организации");
	mes = "";
	if(pData[playerid][pSubfraction]) {
		if(pData[playerid][pRank] < gFractionRankCount[pData[playerid][pFraction]-1]-1) return SendClientMessage(playerid,CWHITE,"» Команда доступна только лидеру организации.");
		f(mes,  "SELECT `nickname`,`rank`,`level` FROM `accounts` WHERE `fraction` = %d AND `subfraction` = %d ORDER BY `rank`", pData[playerid][pFraction], pData[playerid][pSubfraction]);
	}
	else {
		if(pData[playerid][pRank] < gFractionRankCount[pData[playerid][pFraction]-1]) return SendClientMessage(playerid,CWHITE,"» Команда доступна только лидеру организации.");
		f(mes,  "SELECT `nickname`,`rank`,`level` FROM `accounts` WHERE `fraction` = %d AND `subfraction` = 0 ORDER BY `rank`", pData[playerid][pFraction], pData[playerid][pSubfraction]);
	}
	new want;
	new string[100];
	new Result:r = sql_query(zConn, mes, QUERY_CACHED);
	if(sql_num_rows(r)) {
		f(mes,  "Уровень\tИмя игрока\tРанг\n\n");
		new nn[MAX_PLAYER_NAME], rank, lvl;
		for(new i; i<sql_num_rows(r); i++)
		{
			sql_get_field_ex(r, i, 0, nn);
			rank = sql_get_field_int_ex(r, i, 1);
			lvl = sql_get_field_int_ex(r, i, 2);
			f(mes,  "%s{FFFFFF}%d\t%s\t%d\n",mes, lvl, nn, rank);
			want++;
		}
		format(string, 100, "{00D600}Показаны %d игроков", want);
		ShowPlayerDialog(playerid, 0000, 0, string, mes,"Закрыть", "");
	}
	else SendClientMessage(playerid, CGRAY, "Игроков в базе данных не найдено");
	sql_free_result(r);
	return 1;
}
CMD:uninviteoff(playerid, params[])
{
	if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CWHITE,"» Вы не состоите в {ff0000}организации");
	if(sscanf(params, "s[32]", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /uninviteoff [id игрока]");
	mes = "";
	if(!strcmp(params[0], pData[playerid][pNickname], true)) return SendClientMessage(playerid, CGRAY, "Вы ввели свой ник");
	if(pData[playerid][pSubfraction])
	{
		if(pData[playerid][pRank] < gFractionRankCount[pData[playerid][pFraction]-1]-1) return SendClientMessage(playerid,CWHITE,"» Команда доступна только лидеру организации.");
		f(mes,  "UPDATE `accounts` SET `fraction` = '0' WHERE `nickname` = '%s' AND `fraction`='%d' AND `subfraction`='%d'", params[0], pData[playerid][pFraction], pData[playerid][pSubfraction]);
	}
	else
	{
		if(pData[playerid][pRank] < gFractionRankCount[pData[playerid][pFraction]-1]) return SendClientMessage(playerid,CWHITE,"» Команда доступна только лидеру организации.");
		f(mes,  "UPDATE `accounts` SET `fraction` = '0' WHERE `nickname` = '%s' AND `fraction`='%d'", params[0], pData[playerid][pFraction]);
	}
	new Result:r = sql_query(zConn, mes); mes = "";
	if(!sql_affected_rows(r)) return SendClientMessage(playerid,CWHITE,"» Игрок с введенным ником не найден в Вашей организации.");
	f(mes,  "Лидер организации %s уволил в оффлайне игрока %s",pData[playerid][pNickname], params[0]);
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(pData[i][pFraction] == pData[playerid][pFraction])
		{
			if(pData[playerid][pSubfraction] && pData[i][pSubfraction] == pData[playerid][pSubfraction]) {
				SendClientMessage(i,COLOR_ORANGE, mes);
				continue;
			}
			if(!pData[playerid][pSubfraction]) {
				SendClientMessage(i,COLOR_ORANGE, mes);
				continue;
			}
		}
	}
	return 1;
}

/*CMD:leave(playerid, params[])
{
	if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CWHITE,"» Вы не состоите во организации");
	if(IsAbleToUninvite(playerid)) return SendClientMessage(playerid,CWHITE,"» Вы не можете уволиться из организации");
	if(sscanf(params, "s[32]", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /leave [причина]");
	mes = "";
	f(mes, "UPDATE `accounts` SET `fraction` = '0', `rank` = '0', `fractionskin` = '0', `subfraction` = '0' WHERE `id` = '%d'",pData[playerid][pMysqlID]);
	sql_query(zConn, mes); mes = "";
	SetPlayerArmourEx(playerid, 0);
	ResetPlayerWeaponsEx(playerid);
	new fractionid = pData[playerid][pFraction]-1;
	new rank = pData[playerid][pRank];
	new subfraction = pData[playerid][pSubfraction];
	pData[playerid][pFraction] = 0;
	pData[playerid][pRank] = 0;
	pData[playerid][pFractionSkin] = 0;
	pData[playerid][pSubfraction] = 0;
	ResetPlayerWeaponsEx(playerid);
	SetPlayerColor(playerid,0xFFFFFF11);
	new houseid = pData[playerid][pHouse]-1;
	if(!(houseid+1) || ((houseid+1) > 0 && pData[playerid][pMysqlID] != gHouses[houseid][houseOwnerID])) SetPlayerSkin(playerid,pData[playerid][pSkin]);
	else if(!gHouses[houseid][houseImprove][3]) SetPlayerSkin(playerid,pData[playerid][pSkin]);
	else
	{
		for(new x; x < 3; x ++) {
			if(!gHouses[houseid][houseSkin]) continue;
			pData[playerid][pSkin] = gHouses[houseid][houseSkin];
			if(GetPlayerSkin(playerid) == gHouses[houseid][houseSkin][3]) SetPlayerSkin(playerid,pData[playerid][pSkin]);
		}
		gHouses[houseid][houseSkin][3] = 0;

		UpdateHouseDress(houseid);
	}
	SetPlayerSkin(playerid,pData[playerid][pSkin]);
	f(mes, "%s %s[%d] уволился из организации. Причина: %s",gFractionRankName[fractionid][rank-1],pData[playerid][pNickname],playerid,params[0]);
	if(fractionid+1 == 11 && !pData[playerid][pSubfraction] && rank <= 9)
	f(mes, "%s %s[%d] уволился из организации. Причина: %s",gPrezRankName[rank-1],pData[playerid][pNickname],playerid,params[0]);
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
		if(IsPlayerConnected(i) && pData[i][pFraction] == fractionid+1 &&
				pData[i][pSubfraction] == subfraction) SendClientMessage(i,CYELLOW,mes);
	}
	return 1;
}*/

CMD:uninvite(playerid, params[])
{

	if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CWHITE,"» Вы не состоите в {ff0000}организации");
	if(!IsAbleToUninvite(playerid)) return SendClientMessage(playerid,CWHITE,"» Ваш ранг недостаточен");

	if(sscanf(params, "us[32]", params[0],params[1])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /uninvite [id игрока] [причина]");


	//if(pTemp[playerid][pTempLeader]) return SendClientMessage(playerid, COLOR_GREY, "Вы временный лидер, вы не можете увольнять");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid,CWHITE,"» Неверный ID игрока");
	if(pData[params[0]][pFraction] != pData[playerid][pFraction]) return SendClientMessage(playerid,CWHITE,"» Игрок не состоит в вашей организации");
	if(pData[playerid][pSubfraction] > 0)
	{
		if(pData[params[0]][pSubfraction] != pData[playerid][pSubfraction]) return SendClientMessage(playerid,CWHITE,"» Игрок не состоит в вашей подфракции");
	}
	if(pData[params[0]][pRank] >= pData[playerid][pRank]) return SendClientMessage(playerid,CWHITE,"» Ваш ранг недостаточен");
	mes = "";
	f(mes, "UPDATE `accounts` SET `fraction` = '0', `rank` = '0', `fractionskin` = '0', `subfraction` = '0' WHERE `id` = '%d'",pData[params[0]][pMysqlID]);
	sql_query(zConn, mes); mes = "";
	SetPlayerArmourEx(params[0], 0);
	ResetPlayerWeaponsEx(params[0]);
	pData[params[0]][pFraction] = 0;
	pData[params[0]][pRank] = 0;
	pData[params[0]][pFractionSkin] = 0;
	pData[params[0]][pSubfraction] = 0;
	ResetPlayerWeaponsEx(params[0]);
	SetPlayerColor(params[0],0xFFFFFF11);

	SetPlayerSkin(params[0], pData[params[0]][pSkin]);

	pTemp[params[0]][pEther] = false;
	SetPlayerSkin(params[0],pData[params[0]][pSkin]);

	mes = "";
	f(mes, "» {FFFFFF}%s {FF5030}уволил Вас из организации. Причина: {FFFFFF}%s",pData[playerid][pNickname], params[1]);
	SendClientMessage(params[0],COLOR_LIGHTRED,mes);
	f(mes, "» %s был уволен из организации. Причина: %s",pData[params[0]][pNickname], params[1]);
	SendClientMessage(playerid,-1,mes);

	ResetPlayerWeapons(params[0]);

	return 1;
}

CMD:take(playerid, params[])
{
	new numbers = 0;
	if(!IsAGang(playerid)) return 1;
	for(new v; v < MAX_VEHICLES; v++)
		if(GetDistBetweenVehiclePlayer(v,playerid) <= 4)
   			if(GetPVarInt(playerid, "loadyash") == 0)
   			    {
   			        if(Patronboxv[v] < 1) return SendClientMessage(playerid, COLOR_GREY, "В машине нет ящиков.");
					SetPVarInt(playerid, "loadyash", 1);



					ApplyAnimation(playerid,"CARRY","liftup05",1.0,0,1,1,0,0,1);
					SetPlayerAttachedObject(playerid, 5 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
					Patronboxv[v] -= 1;

					numbers = VehicleEdenits[v] / 5;
					VehicleEdenits[v] -= numbers;
					SetPVarInt(playerid, "vehiclenum", numbers);

					mes = "";
					f(mes, "{F3FF02}Загружено ящиков: %i", Patronboxv[v]);
					Update3DTextLabelText(VehPT[v],0xffffffff,mes);
					SetPlayerSpecialAction(playerid, 25);
					if(Patronboxv[v] == 0)
					{
						Delete3DTextLabel(VehPT[v]);
					}
   			    }
	return 1;
}

CMD:put(playerid, params[])
{
    if(!IsAGang(playerid)) return 1;
    for(new v; v < MAX_VEHICLES; v++)
		if(GetDistBetweenVehiclePlayer(v,playerid) <= 4)
			if(GetVehicleModel(v) == 482)
			{
			    if(GetPVarInt(playerid, "loadyash") == 0) return 1;
			    if(Patronboxv[v] == 5) return SendClientMessage(playerid, COLOR_GREY, "Больше в машину невозможно положить.");
				SetPVarInt(playerid, "loadyash", 0);

				VehicleEdenits[v] += GetPVarInt(playerid, "materialsnn");
				SetPVarInt(playerid, "materialsnn", 0);
				ApplyAnimation(playerid,"CARRY","putdwn",4.1,0,1,1,0,0);
				ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 1);
				RemovePlayerAttachedObject(playerid, 5);
				SetPlayerSpecialAction(playerid, 0);
				Patronboxv[v] += 1;
                mes = "";
				if(Patronboxv[v] == 1)
				{
					f(mes, "{F3FF02}Загружено ящиков: %i", Patronboxv[v]);
					VehPT[v] = Create3DTextLabel(mes, -1, 0.0, 0.0, 0.0, 30.0, 0, 1);
					Attach3DTextLabelToVehicle(VehPT[v], v, 0, -1.0, 0.5);
				}
				f(mes, "{F3FF02}Загружено ящиков: %i", Patronboxv[v]);
				Update3DTextLabelText(VehPT[v], -1,mes);
			}
	return 1;
}

CMD:takelic(playerid, params[])
{
    if(sscanf(params, "us[32]", params[0],params[1])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /takelic [id игрока] [причина]");

	if(pData[playerid][pFraction] != 9 || pData[playerid][pFraction] != 12 || pData[playerid][pFraction] != 1) return SendClientMessage(playerid,CWHITE,"» Эта функция только для Лицензеров/Полиции");
	if(pData[playerid][pRank] < 8) return SendClientMessage(playerid,CWHITE,"» Эта функция только работников 8 ранга и больше");

	if(!IsPlayerConnected(params[0]) || params[0] == playerid || (IsACop(params[0]) && pData[params[0]][pRank] >= pData[playerid][pRank])
	|| (pData[params[0]][pFraction] == 1 && pData[params[0]][pRank] >= pData[playerid][pRank])) return SendClientMessage(playerid, CWHITE,"» Неверный ID игрока или нет полномочий");
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, CWHITE,"» Вы далеко друг от друга");
	if(!pData[params[0]][pLicenses][LIC_DRIVING]) return SendClientMessage(playerid, CWHITE,"» У игрока нет лицензии");

	mes = "";
	f(mes, "UPDATE `accounts` SET `licDrive` = '0' WHERE `id` = '%d'",pData[params[0]][pMysqlID]);
	sql_query(zConn, mes); mes = "";

	pData[params[0]][pLicenses][LIC_DRIVING] = 0;
	mes = "";
	f(mes, "» %s %s[%d] забрал у Вас лицензию на вождение. Причина: %s",gFractionRankName[pData[playerid][pFraction]-1][pData[playerid][pRank]-1],pData[playerid][pNickname], playerid, params[1]);
	SendClientMessage(params[0],COLOR_GREEN,mes);

	f(mes, "» %s[%d] был лишён лицензии на вождение. Причина: %s",pData[params[0]][pNickname],params[0], params[1]);
	SendClientMessage(playerid,COLOR_GREEN,mes);

	f(mes, "» [Полицейский Депортамент] %s %s[%d] лишение лицензии => %s. Причина: %s", gFractionRankName[pData[playerid][pFraction]-1][pData[playerid][pRank]-1], pData[playerid][pNickname], playerid, pData[params[0]][pNickname], params[1]);
	SendFMes(pData[playerid][pFraction], CBLUE, mes);
	return 1;
}

CMD:find(playerid, params[])
{
	new want_text[256],want1,sttr[2000];
	if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CWHITE,"» Вы не состоите в {ff0000}организации");
	format(want_text,sizeof(want_text),"Имя игрока\tТелефон\tРанг\tID\n\n");
	strcat(sttr, want_text);
	new fractionid = pData[playerid][pFraction] - 1;
	new subfraction = GetSubfractionID(fractionid);
	new subfractionid = pData[playerid][pSubfraction] - 1;
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(subfraction == -1)
		{
			if(pData[i][pFraction] != fractionid+1) continue;
			if(pData[i][pPhone] > 0)
			{
				format(want_text,sizeof(want_text), "{FFFFFF}%d. %s » %d » %d » %d\n", want1, pData[i][pNickname], pData[i][pPhone], pData[i][pRank], i);
			}
			else
			{
				format(want_text,sizeof(want_text), "{FFFFFF}%d. %s » нет » %d » %d\n", want1, pData[i][pNickname], pData[i][pRank], i);
			}
			strcat(sttr, want_text);
			want1++;
		}
		else
		{
			if(pData[i][pFraction] != fractionid+1 || pData[i][pSubfraction] != subfractionid + 1) continue;
			if(pData[i][pPhone] > 0) format(want_text,sizeof(want_text), "{FFFFFF}%d. %s » %d » %d » %d\n", want1, pData[i][pNickname], pData[i][pPhone], pData[i][pRank], i);//format(want_text,sizeof(want_text), "{FFFFFF}\t%d\t%i\t\t%d\t%s\n", pData[i][pLevel], pData[i][pPhone], pData[i][pRank], pData[i][pNickname]);
			else format(want_text,sizeof(want_text), "{FFFFFF}%d. %s » нет » %d » %d\n", want1, pData[i][pNickname], pData[i][pRank], i);//format(want_text,sizeof(want_text), "{FFFFFF}\t%d\tNone\t\t%d\t%s\n", pData[i][pLevel], pData[i][pRank], pData[i][pNickname]);
			strcat(sttr, want_text);
			want1++;
		}
	}
	if(want1 == 0) strcat(sttr, "{FFFFFF}Информация не найдена");
	ShowPlayerDialog(playerid, dMes, DIALOG_STYLE_MSGBOX, "{ffcf00}Члены организации онлайн", sttr, "Закрыть", "");
	return 1;
}

CMD:ticket(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid,CWHITE,"» Вы не полицейский ");
    if(sscanf(params, "uds[64]", params[0], params[1], params[2])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /ticket [id игрока] [сумма] [причина]");
	if(params[1] < 0 || params[1] > 5000) return SendClientMessage(playerid, CWHITE, "» Сумма не должна привышать 5000");
	mes = "";
	f(mes, "» Полицейский {FFCD00}%s {33AAFF}выписал Вам штраф Причина: {FFCD00}%s. | {33AAFF}Размером: {FFCD00}%d$",pData[playerid][pNickname], params[2], params[1]);
	SendClientMessage(params[0],COLOR_GREEN,mes);
	f(mes, "» Вы выписали штраф {FFCD00}%s {33AAFF}Причина: {FFCD00}%s | {33AAFF}Размер: {FFFFFF}%d$",pData[params[0]][pNickname],params[2], params[1]);
	SendClientMessage(playerid,COLOR_GREEN,mes);
	SendClientMessage(params[0],COLOR_GREEN, "» Нажмите {FFFFFF}[ Y ] {33AAFF}чтобы оплатить штраф");
	SetPVarInt(params[0], "sellexamlic1", 1);
	SetPVarInt(params[0], "changelic1", params[1]);
	SetPVarInt(params[0], "idselllic1", playerid);
	return 1;
}


CMD:exam(playerid, params[])
{
	if(pData[playerid][pFraction] == 1
			&& pData[playerid][pRank] > 4)
	{
		//if(pTemp[playerid][pInviteSell] >= 0) return SendClientMessage(playerid,CWHITE,"» Вы уже отправили предложение. Введите /cancel чтобы отменить.");
		if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /exam [id игрока] [id лицензии (1-возух,2-вода,3-оружие)]");
		if(params[1] < 0 || params[1] > 4) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /exam [id игрока] [id лицензии (1-возух,2-вода,3-оружие)]");
		new cena, bool:dostup = false;
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CWHITE,"» Игрок не найден ");
		if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы находитесь далеко от первого в очереди.");
        switch(params[1])
		{
        	case 1:	if(pData[params[0]][pLicenses][LIC_FLY]) dostup = true;
        	case 2: if(pData[params[0]][pLicenses][LIC_BOAT]) dostup = true;
        	case 3: if(pData[params[0]][pLicenses][LIC_WEAP]) dostup = true;
		}
		if(dostup == true) return SendClientMessage(playerid,CWHITE,"» У игрока есть данная лицензия");
		new type[24];
		switch(params[1])
		{
			case 1: type = "воздушный транспорт", cena = 1000;
			case 2: type = "водный транспорт", cena = 1000;
			case 3: type = "оружие", cena = 3000;
		}
		mes = "";
		f(mes, "» Инструктор {FFCD00}%s {33AAFF}предложил Вам, лицензию на {FFCD00}%s. | {33AAFF}Стоимость: %d$",pData[playerid][pNickname], type, cena);
		SendClientMessage(params[0],COLOR_GREEN,mes);
		f(mes, "» Вы предложили {FFCD00}%s {33AAFF}купить лицензию на {FFFFFF}%s, {33AAFF}за {FFCD00}%d$",pData[params[0]][pNickname],type,cena);
		SendClientMessage(playerid,COLOR_GREEN,mes);
		SendClientMessage(params[0],COLOR_GREEN, "{33AAFF}Нажмите {f6ff00}[ Y ] {33AAFF}что-бы принять предложение или {c54d13}[ N ] {33AAFF}для отказа");
		//pTemp[playerid][pInviteSell] = actplayerid;
		SetPVarInt(params[0], "sellexamlic", 1);
		SetPVarInt(params[0], "changelic", params[1]);
		SetPVarInt(params[0], "idselllic", playerid);
	}
	return 1;
}
CMD:heal(playerid, params[])
{
	new string[100];
	if(pData[playerid][pFraction] != 2) return SendClientMessage(playerid,CWHITE,"» Вам недоступна эта Команда");
	new vehicleid = GetVehicleModel(GetPlayerVehicleID(playerid));
	if(sscanf(params, "ud", params[0],params[1])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /heal [id игрока] [цена]");
	if(params[1] < 150 || params[1] > 500) return SendClientMessage(playerid,CWHITE,"» Цена должна быть от $150 до $500");
	if(vehicleid != 416 && !pTemp[params[0]][pInHospital]) return SendClientMessage(playerid,CWHITE,"» Игрок должен занять койку");
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
	SetPVarInt(params[0],"healprice",params[1]);
	SetPVarInt(params[0],"doctorid",playerid);
	format(string, 100, "Вы предложили %s игроку купить лекарство за %d$", pData[params[0]][pNickname], params[1]);
	SendClientMessage(playerid, COLOR_GREEN, string);
	SPFDD(params[0],dHeal,0,"Мед. обслуживание","Да","Нет","%s предлагает Вам купить лекарство за %d$",pData[playerid][pNickname],params[1]);

	return 1;
}
CMD:healme(playerid, params[])
{
    if(GetPVarInt(playerid,"HMEMME") > gettime()) return SendMes(playerid, CGRAY, "Нельзя так часто вводить эту команду! (%d сек.)",GetPVarInt(playerid,"HMEMME")-gettime());
	if(!pTemp[playerid][pHealing]) return SendClientMessage(playerid,CWHITE,"» У вас нет аптечки");
	SetPlayerHealth(playerid,100.0);
	pData[playerid][pHealth] = 100;
	pTemp[playerid][pHealing]--;
	SetPVarInt(playerid,"HMEMME",gettime() + 100);
	MeAction(playerid,"перебинтовал рану");
	ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
	return 1;
}

CMD:r(playerid, params[])
{
	new fractionid = pData[playerid][pFraction]-1;
	new rank = pData[playerid][pRank];
	if(pData[playerid][pFraction] != 12)
	{
		if(rank == gFractionRankCount[fractionid]) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка: {ffffff}Вам недоступна эта функция");
	}
	if(IsAGang(playerid)) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка:{ffffff} Вам недоступна эта функция");
	if(!pData[playerid][pFraction] || IsAMafia(playerid)) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка: {ffffff}Вам недоступна эта функция");
	if(pData[playerid][pMut]) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка:{ffffff} У Вас молчанка, ожидайте снятия.");
	if(!(pData[playerid][pSettings] & setFractionChat)) return SendClientMessage(playerid,CWHITE,"» Ошибка: Включите чат фракции в личных настройках");
	if(pData[playerid][pJail]) return SendClientMessage(playerid, CGRAY, "{fe0000}Ошибка:{ffffff} Вы в тюрьме.");
	if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /r [текст] ");
	new mesid[128];
	SetPlayerChatBubble(playerid,"Сообщение по рации",CPINK,30.0,10000);
	format(mesid,sizeof(mesid),"{%s}[R] %s %s[%d]: {FFFFFF}%s",GetColor(playerid),gFractionRankName[fractionid][rank-1],pData[playerid][pNickname],playerid,params[0]);
	if(fractionid+1 == 8 && pData[playerid][pSubfraction]  == 2)
	format(mesid,sizeof(mesid),"{%s}[R] %s %s[%d]: {FFFFFF}%s",GetColor(playerid),gFractionVMFRankName[rank-1],pData[playerid][pNickname],playerid,params[0]);
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(IsPlayerConnected(i) && pData[i][pFraction] == fractionid+1 &&
				pData[i][pSubfraction] == pData[playerid][pSubfraction]) SendClientMessage(i,COLOR_LIME,mesid);
	}

	return 1;
}

CMD:f(playerid, params[])
{
	if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка: {ffffff}Вам недоступна эта функция");
	//if(pData[playerid][pFraction] == 1) return SendClientMessage(playerid,CWHITE,"» Ошибка: Лицензерам не доступна эта функция");
	if(pData[playerid][pMut]) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка:{ffffff} У Вас молчанка, ожидайте снятия.");
	if(!(pData[playerid][pSettings] & setFractionChat)) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка:{ffffff} Включите чат фракции в личных настройках");
	if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /f [текст] ");
	new fractionid = pData[playerid][pFraction]-1;
	new rank = pData[playerid][pRank];
	new mesid[128];
	SetPlayerChatBubble(playerid,"Сообщение по рации",CPINK,30.0,10000);
	format(mesid,sizeof(mesid),"{%s}[F] %s %s[%d]{FFFFFF}: %s",GetColorF(playerid),gFractionRankName[fractionid][rank-1],pData[playerid][pNickname],playerid,params[0]);
	if(fractionid+1 == 8 && pData[playerid][pSubfraction] == 2)
		format(mesid,sizeof(mesid),"{%s}[F] %s %s[%d]{FFFFFF}: %s",GetColorF(playerid),gFractionVMFRankName[rank-1],pData[playerid][pNickname],playerid,params[0]);
	SendFMes(fractionid+1,-1, mesid);

	return 1;
}

CMD:wedding(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,2,-2030.4879,1117.5510,54.9929)) return SendMes(playerid,-1,"Вы не в церкви");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /wedding [id игрока]");
	if(!IsPlayerInRangeOfPoint(params[0],2,-2030.4879,1117.5510,54.9929)) return SendMes(playerid,0xff2400ff,"Дама, которой вы хотите сделать предложение не в церкви");
	if(pData[playerid][pMarried] > 0) return   SendClientMessage(playerid, 0xff2400ff, "Вы уже состоите в браке");
	if(pData[playerid][pSex] == 2) return SendClientMessage(playerid,0xff2400ff,"Вы женщина, с вашей стороны предложение вступить в брак запрещено!");
	if(!IsPlayerConnected(params[0]) || playerid == params[0]) return SendClientMessage(playerid,0xff2400ff,"Неверный ID игрока");
	if(pData[playerid][pSex] == pData[params[0]][pSex]) return SendClientMessage(playerid,0xff2400ff,"Однополые браки запрещены!");
	if(IsPlayerConnected(params[0]))
	{
		if(params[0] != INVALID_PLAYER_ID)
		{
			if(pData[params[0]][pMarried] > 0) return SendClientMessage(playerid, 0xff2400ff, "Данный человек состоит в браке");
			if(GetPlayerDistanceToPlayer(playerid,params[0]) > 20.0) return SendClientMessage(playerid, 0xff2400ff, "вы далеко друг от друга");
			SendMes(playerid,0xadff2fff,"Вы сделали предложение %s",pData[params[0]][pNickname]);
			SendMes(params[0],0xadff2fff,"%s приглашает вас вступить в брак",pData[playerid][pNickname]);
			SendClientMessage(params[0],COLOR_GREEN,"{33AAFF}Нажмите {f6ff00}[ Y ] {33AAFF}что-бы принять предложение или {c54d13}[ N ] {33AAFF}для отказа");
			WeddingTwo[params[0]] = playerid;
			WeddingTwo1[playerid] = playerid;
			predlojbrak = 1;
		}
	}
	return 1;
}
CMD:divorce(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,2,-2030.4879,1117.5510,54.9929)) return SendMes(playerid,0xff2400ff,"Вы не в церкви");
	new string[128];
	if(pData[playerid][pMarried] == 0) return SendClientMessage(playerid, 0xff2400ff, "Вы не состоите в браке.");
	format(string,sizeof(string),"{ffffff}Ваша вторая половина: {adff2f}%s\n\n{ffffff}Желаете расторгнуть брак?",pData[playerid][pDivorce]);
	ShowPlayerDialog(playerid,1217,DIALOG_STYLE_MSGBOX ,"{cc33ff}Семейное положение",string,"Развод","Отмена");

	return 1;
}

CMD:world(playerid, params[])
{
	new world;
	new string[32];
	world = GetPlayerVirtualWorld(playerid);
	format(string, sizeof(string), "Вирт. мир: %d",world);
	SendClientMessage(playerid,COLOR_WHITE,string);
	return 1;
}
CMD:lock(playerid, params[])
{
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /lock [1 - личный транспорт, 2 - рабочий транспорт]");
	if(params[0] < 1 || params[0] > 2) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /lock [1 - личный транспорт, 2 - рабочий транспорт]");
	switch(params[0])
	{
		case 1:
		{
			if(!pData[playerid][pCar]) return SendClientMessage(playerid,CWHITE,"» У Вас нет т/с");
			new slot = GetCarSlot(pData[playerid][pCar]);
			new Float:x, Float:y, Float:z;
			new vehicleid = gCars[slot][carVid];
			GetVehiclePos(vehicleid,x,y,z);
			new Float:x2,Float:y2,Float:z2;
			GetPlayerPos(playerid,x2,y2,z2);
			if(PointToPoint3D(x,y,z,x2,y2,z2) > 6.0) return SendClientMessage(playerid,CGRAY,"Вы далеко от своего т/с");
			if(!gVehicles[vehicleid-1][vLock])
			{
				for(new i;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && IsVehicleStreamedIn(vehicleid,i)) SetVehicleParamsForPlayer(vehicleid,i,0,1);
				gVehicles[vehicleid-1][vLock] = 1;
				GameTextForPlayer(playerid,"locked",2000,3);
				SendClientMessage(playerid, CRED, "Вы закрыли т/с");
			}
			else if(gVehicles[vehicleid-1][vLock])
			{
				for(new i;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && IsVehicleStreamedIn(vehicleid,i)) SetVehicleParamsForPlayer(vehicleid,i,0,0);
				gVehicles[vehicleid-1][vLock] = 0;
				GameTextForPlayer(playerid,"unlocked",2000,3);
				SendClientMessage(playerid, CGREEN, "Вы открыли т/с");
			}
            PlayerPlaySound(playerid, 25800, 0.0, 0.0, 0.0);
		}
		case 2:
		{
			new vehicleid;
			if(pData[playerid][pJob] == 1 && pTemp[playerid][pBusID] != INVALID_VEHICLE_ID)
			{
				vehicleid = pTemp[playerid][pBusID];
			}
			else if(pData[playerid][pJob] == 3 && pTemp[playerid][pTaxiID] != INVALID_PLAYER_ID)
			{
				vehicleid = pTemp[playerid][pTaxiID];
			}
			else if((pData[playerid][pJob] == 2 || pData[playerid][pJob] == 6) && pTemp[playerid][pTruckID] != INVALID_VEHICLE_ID)
			{
				vehicleid = pTemp[playerid][pTruckID];
			}
			else if(pData[playerid][pJob] == 4 && pTemp[playerid][pMechID] != INVALID_VEHICLE_ID )
			{
				vehicleid = pTemp[playerid][pMechID];
			}

			else if(pTemp[playerid][pWork] == 10 && pTemp[playerid][pPesokID] != INVALID_VEHICLE_ID )
			{
				vehicleid = pTemp[playerid][pPesokID];
			}
			else if(pTemp[playerid][pWork] == 7 && pTemp[playerid][pVinogradID] != INVALID_VEHICLE_ID )
			{
				vehicleid = pTemp[playerid][pVinogradID];
			}


			else return SendClientMessage(playerid,CWHITE,"» У вас нет рабочего транспорта");
			if(ToggleLock(vehicleid)) GameTextForPlayer(playerid,"~r~locked",3000,3), SendClientMessage(playerid, COLOR_LIGHTRED,"» Вы закрыли транспортное средство");
			else GameTextForPlayer(playerid,"~g~unlocked",3000,3), SendClientMessage(playerid, COLOR_GREEN, "» Вы открыли транспортное средство");
			PlayerPlaySound(playerid, 25800, 0.0, 0.0, 0.0);
		}
	}
	return 1;
}

CMD:n(playerid, params[])
{
	if(pData[playerid][pMut]) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка:{ffffff} У Вас молчанка, ожидайте снятия.");
	new string[256];
	if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: [/n][/b] [text]");
	format(string, sizeof(string), "(([N] %s[%d]: %s ))", pData[playerid][pNickname],playerid, params[0]);
	ProxDetector(20.0, playerid, string,0xF5F5DCAA,0xF5F5DCAA,0xF5F5DCAA,0xF5F5DCAA,0xF5F5DCAA);
	SetPlayerChatBubble(playerid, params[0], 0xCCCC99FF, 20.0, 7000);
	return 1;
}
ALT:n:b;

CMD:s(playerid, params[])
{
	if(pData[playerid][pMut]) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка:{ffffff} У Вас молчанка, ожидайте снятия.");
	if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /s [text]");
	new string[100];
	format(string, 100, "[S] %s[%d] крикнул: %s", pData[playerid][pNickname], playerid, params[0]);
	ProxDetector(20.0, playerid, string, -1, -1, -1, -1, -1);
	SetPlayerChatBubble(playerid,params[0],-1,60.0,10000);
	if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"ON_LOOKERS","shout_01",4.1,0,0,0,0,3000);
	return 1;
}


CMD:givelist(playerid, params[])
{
	if(pData[playerid][pJob] != 6) return SendClientMessage(playerid,CWHITE,"» Вы не работаете промоутером");
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /givelist [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CWHITE,"» Неверный ID игрока");
	if(!GetPVarInt(playerid, "listovok")) return SendClientMessage(playerid, -1, "» У вас не достаточно листовок");
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
	if(params[0] == playerid) return SendClientMessage(playerid,CWHITE,"» Неверный ID игрока");
	if(pTemp[playerid][AntiID] == params[0]) return SendClientMessage(playerid,CWHITE,"» Одному и тому же игроку листовку дать нельзя");
	if(GetPVarInt(playerid,"GIVELISTAZAZA") > gettime()) return SendClientMessage(playerid, CGRAY, "Нельзя так часто вводить эту команду!");
	mes = "";
	f(mes, "» Вы предложили %s листовку с объявлением",pData[params[0]][pNickname]);
	SendClientMessage(playerid,CINFO,mes);
	f(mes, "» %s хочет дать Вам листовку с объявлением",pData[playerid][pNickname]);
	SendClientMessage(params[0],CWHITE,mes);
	SendClientMessage(params[0],COLOR_GREEN,"{33AAFF}Нажмите {f6ff00}[ Y ] {33AAFF}что-бы принять предложение или {c54d13}[ N ] {33AAFF}для отказа");
	pTemp[params[0]][pShowPasspl1] = playerid;
	pTemp[params[0]][pShowPassact1] = params[0];
	SetPVarInt(playerid, "GIVELISTAZAZA", gettime() + 30);
	return 1;
}
CMD:pass(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /pass [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CWHITE,"» Неверный ID игрока");
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
	mes = "";
	if(GetPVarInt(playerid,"SHOWPASSPORT") > gettime()) return SendClientMessage(playerid, CGRAY, "Нельзя так часто вводить эту команду!");


	ShowPass(playerid, params[0]);

	mes = "";
	f(mes, "достал паспорт и показал его %s",pData[params[0]][pNickname]);
	MeAction(playerid, mes);
//	f(mes, "» Вы предложили %s показать паспорт",pData[params[0]][pNickname]);
//	SendClientMessage(playerid,CINFO,mes);
//	f(mes, "» %s хочет показать Вам паспорт",pData[playerid][pNickname]);
//	SendClientMessage(params[0],CWHITE,mes);
//	SendClientMessage(params[0],COLOR_GREEN,"» Нажмите {FFFFFF}[ Y ] {33AAFF}чтобы посмотреть паспорт или {FF5030}[ N ] {33AAFF}для отказа");
///	pTemp[params[0]][pShowPasspl] = playerid;
//	pTemp[params[0]][pShowPassact] = params[0];

    SetPVarInt(playerid, "SHOWPASSPORT", gettime() + 30);
	return 1;
}

CMD:pepass(playerid, params[])
{
    if(!IsACop(playerid)) return SendClientMessage(playerid,CWHITE,"» Эта функция только для Полиции/ФБР");
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /pepass [id игрока]");
    if(GetPVarInt(playerid,"SSHOWPASSPORT") > gettime()) return SendClientMessage(playerid, CGRAY, "Нельзя так часто вводить эту команду!");

	new jobname[64], jobstat[64];
	new fractionid = pData[playerid][pFraction]-1;
	new rank = pData[playerid][pRank]-1;
	strcat(jobname,gFractionName[fractionid]);
	if(fractionid+1 == 11 && !pData[playerid][pSubfraction] && rank <= 9)
	strcat(jobstat, gPrezRankName[rank]);
	else strcat(jobstat,gFractionRankName[fractionid][rank]);

	SendMes(params[0], COLOR_YELLOW, "Удостоверение %s", pData[playerid][pNickname]);
	SendMes(params[0], -1, "1. Имя(ник): %s", pData[playerid][pNickname]);
	SendMes(params[0], -1, "2. Подразделение: %s", jobname);
	SendMes(params[0], -1, "3. Должность: %s", jobstat);
    SetPVarInt(playerid, "SSHOWPASSPORT", gettime() + 30);
	return 1;
}

CMD:lic(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /lic [id игрока]");
	if(!IsPlayerConnected(params[0]) || IsKicked(params[0])) return SendClientMessage(playerid,CWHITE,"» Неверный ID");
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
	if(params[0] == playerid)
	{
	    SendMes(playerid, -1, "{e16a6a}Лицензии жителя штата {FFFFFF}%s", pData[playerid][pNickname]);
		SendMes(playerid, -1, "Водительские права: %s", (pData[playerid][pLicenses][LIC_DRIVING]) ? ("{c6ff00}Есть") : ("{db1d1d}Нет"));
		SendMes(playerid, -1, "Лицензия пилота: %s", (pData[playerid][pLicenses][LIC_FLY]) ? ("{c6ff00}Есть") : ("{db1d1d}Нет"));
		SendMes(playerid, -1, "Лицензия на водный транспорт: %s", (pData[playerid][pLicenses][LIC_BOAT]) ? ("{c6ff00}Есть") : ("{db1d1d}Нет"));
		SendMes(playerid, -1, "Лицензия на оружие: %s", (pData[playerid][pLicenses][LIC_WEAP]) ? ("{c6ff00}Есть") : ("{db1d1d}Нет"));
		SendMes(playerid, -1, "Лицензия на бизнес: %s", (pData[playerid][pLicenses][LIC_VISKA]) ? ("{c6ff00}Есть") : ("{db1d1d}Нет"));
	    return 1;
	}
	mes = "";
	f(mes, "» Вы предложили %s  показать лицензии",pData[params[0]][pNickname]);
	SendClientMessage(playerid,CINFO,mes);
	f(mes, "» %s хочет показать Вам лицензии.",pData[playerid][pNickname]);
	SendClientMessage(params[0],CWHITE,mes);
	SendClientMessage(params[0],COLOR_GREEN,"{33AAFF}Нажмите {f6ff00}[ Y ] {33AAFF}что-бы принять предложение или {c54d13}[ N ] {33AAFF}для отказа");
	pTemp[params[0]][pShowLicpl] = playerid;
	pTemp[params[0]][pShowLicact] = params[0];
	return 1;
}


CMD:fuellist(playerid, params[])
{
	if(pTemp[playerid][pWork] != 8) return SendClientMessage(playerid,CGRAY,"Вам недоступна эта команда");
	new data[2][50];
	new vehicleid = GetPlayerVehicleID(playerid);
	if(vehicleid >= aFuel[0] && vehicleid < aFuel[1] && IsTrailerAttachedToVehicle(vehicleid) && pTemp[playerid][pTruckID] == vehicleid)
	{
		if(!fuelOrders) return SendClientMessage(playerid,CGRAY,"Доступных заказов на бензин не найдено.");
		new result[150],
		zS[150],
		zID,
		zFind;
		new tempFuel[2];
		new Result:fuelorder = sql_query(zConn, "SELECT * FROM `fuelorders` ORDER BY `id`");
		for(new i;i < sql_num_rows(fuelorder);i++)
		{
			zFind = 0;
			sql_fetch_row(fuelorder,"|",result);
			sql_next_row(fuelorder);
			sscanf(result,"p<|>e<ii>",tempFuel);
			for(new idx=0, ii=0; idx<cvector_size(PLAYERS); idx++)
			{
		    	ii = cvector_get(PLAYERS, idx);
				if(pTemp[ii][pTruckLoadID] == tempFuel[0]) { zFind = 1; break; }
			}
			if(zFind) continue;
			zID++;
			format(data[0], 25, "%s%d|",data[0], tempFuel[0]);
			format(data[1], 25, "%s%d|",data[1], tempFuel[1]);
			format(zS, sizeof(zS), "{"#cWHITE"}%s%d. АЗС №%d | {"#cLIGHTGREEN"}%s{"#cWHITE"} | %d л.\n", zS, zID, tempFuel[0], gFillings[tempFuel[0]][fillOwner], tempFuel[1]);
		}
		sql_free_result(fuelorder);
		SetPVarString(playerid, "tempfill", data[0]);
		SetPVarString(playerid, "tempval", data[1]);
		ShowPlayerDialog(playerid,dFuelList,DIALOG_STYLE_LIST,"Заказы топлива:",zS, "Выбор","Отмена");
	}
	else SendClientMessage(playerid,CGRAY,"Вы должны быть за рулём арендованного бензовоза.");
	return 1;
}

CMD:jailtime(playerid, params[])
{
    if(pData[playerid][pJail])
	{
	    mes = "";
		format(mes,sizeof(mes),"» {FD1818}Время до выхода из тюрьмы: {FFFFFF}%s",Converts(pData[playerid][pJail]));
		SendClientMessage(playerid,-1,mes);
	}
	else SendClientMessage(playerid,-1,"Вы не находитесь в тюрме");
	return 1;
}


CMD:time(playerid, params[])
{
	if(pData[playerid][pMut])
	{
	    mes = "";
		format(mes,sizeof(mes),"» {33AAFF}Бан чата: {FFFFFF}%d {33AAFF}минут.",pData[playerid][pMut]);
		SendClientMessage(playerid,-1,mes);
	}
	else
	{

		new year, month,day;
		getdate(year, month, day);
		new hour,minuite,second;
		gettime(hour,minuite,second);
		new ss[150], string1[150];
		format(ss, 100, "Dallas Role Play | Alpha\n\n");
		strcat(string1,ss);
		format(ss, 100, "{FFFFFF}Сегоднящняя дата: {33AAFF}\t %d %s %d\n",day, MonthText(month), year);
		strcat(string1,ss);
		format(ss, 100, "{FFFFFF}Текущее время: {33AAFF}\t %02d:%02d\n", hour, minuite);
		strcat(string1,ss);
		ShowPlayerDialog(playerid,0000,DIALOG_STYLE_MSGBOX,"Время",string1,"Готово","");
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0,1);
	}
	return 1;
}
CMD:call(playerid, params[])
{
	if(pData[playerid][pPrison]) return SendClientMessage(playerid, CGRAY, "У вас отобрали телефон");
	if(!pData[playerid][pPhone]) return SendClientMessage(playerid,CWHITE,"» У Вас нет телефона. Купить Вы можете его в Магазине Телефонов");
	if(!pTemp[playerid][pTPhone]) return SendClientMessage(playerid,CWHITE,"» Сначала нужно включить телефон");
	if(pData[playerid][pPhoneMoney] < 5) return SendClientMessage(playerid, CGRAY, "{fe0000}Ошибка:{ffffff} На счету недостаточно средств");
	if(gCalls[playerid][g_caller] != INVALID_PLAYER_ID || gCalls[playerid][g_callee] != INVALID_PLAYER_ID) return SendClientMessage(playerid,CWHITE,"» Сначала завершите текущий разговор (/h)");
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /c [номер телефона] (555 - справочная служба) (911 - экстренные службы)");

	//if(params[0] < 3) return SendClientMessage(playerid,CWHITE,"» Ошибка: Номер введён неверно");
	if(params[0] == 555)
	{
		ShowPlayerDialog(playerid,dService,2,"{ffcf00}Сервисные службы штата","1 » Такси","ОК","Отмена");
		return 1;
	}
	else if(params[0] == 911)
	{
		ShowPlayerDialog(playerid,dEmergencyCall,2,"{ffcf00}Экстренные службы штата","1 » Полиция\n2 » Скорая помощь\n3 » Механик","ОК","Отмена");
		return 1;
	}
	else if(params[0] >= 9900 && params[0] <= 9902)
	{
		if(pData[playerid][pFraction] == 10) return SendClientMessage(playerid,CWHITE,"» Вы не можете звонить в свою организацию");
		new price;
		switch(params[0])
		{
		case 9900:
			{
				if(!gNewsDialing[0]) return SendClientMessage(playerid,CWHITE,"» Звонки не принимаются");
				if(gNewsDialee[0] != INVALID_PLAYER_ID) return SendClientMessage(playerid,CWHITE,"» Линия занята");
				if(GetPlayerMoneyEx(playerid) < gNewsDialPrice[0]) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег");
				price = gNewsDialPrice[0];
				SetPVarInt(playerid, "newsdial", 0);
			}
		case 9901:
			{
				if(!gNewsDialing[1]) return SendClientMessage(playerid,CWHITE,"» Звонки не принимаются");
				if(gNewsDialee[1] != INVALID_PLAYER_ID) return SendClientMessage(playerid,CWHITE,"» Линия занята");
				if(GetPlayerMoneyEx(playerid) < gNewsDialPrice[1]) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег");
				price = gNewsDialPrice[1];
				SetPVarInt(playerid, "newsdial", 1);
			}
		case 9902:
			{
				if(!gNewsDialing[1]) return SendClientMessage(playerid,CWHITE,"» Звонки не принимаются");
				if(gNewsDialee[2] != INVALID_PLAYER_ID) return SendClientMessage(playerid,CWHITE,"» Линия занята");
				if(GetPlayerMoneyEx(playerid) < gNewsDialPrice[2]) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег");
				price = gNewsDialPrice[2];
				SetPVarInt(playerid, "newsdial", 2);
			}
		}
		mes = "";
		f(mes, "» Цена звонка: %d$\n\n{"#cRED"}ВНИМАНИЕ! Есть вероятность, что вы не сможете дозвониться.\nДеньги буду сняты в любом случае.\n\n\t\t\t{"#cYELLOW"}Продолжить?",price);
		ShowPlayerDialog(playerid,dNewsDial,0,"Дозвон",mes,"Да","Нет");
	}
	else if(!params[0]) return SendClientMessage(playerid,CWHITE,"» Игрока с этим номером нет на сервере");
	new id = -1;
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(!IsPlayerConnected(i)) continue;
		if(pData[i][pPhone] == params[0]) {id = i; break;}
	}
	if(id == -1) return SendClientMessage(playerid,CWHITE,"» Игрока с этим номером нет на сервере");
	if(id == playerid) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка:{ffffff} Вы ввели свой номер");
	if(!pTemp[id][pTPhone]) return SendClientMessage(playerid,CWHITE,"» У игрока выключен телефон");
	if(gCalls[id][g_caller] != INVALID_PLAYER_ID || gCalls[id][g_callee] != INVALID_PLAYER_ID || id == playerid) return SendClientMessage(playerid,CWHITE,"» Занято...");
	gCalls[playerid][g_caller] = playerid;
	gCalls[playerid][g_callee] = id;
	gCalls[id][g_caller] = playerid;
	gCalls[id][g_callee] = id;

	if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
	else ApplyAnimation(playerid,"CAR_CHAT","carfone_in", 4.0,0,1,1,1,0);
	SetPlayerAttachedObject(playerid, 3, pData[playerid][pPhoneModel], 6, 0.08, 0.00, -0.01, -104.0, -13.0, -183.0, 1.00, 1.00, 1.00);
	//SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
	//SetPlayerAttachedObject(playerid,0,330,6);
	mes = "";
	f(mes, "» %s(тел. %d) звонит Вам на моб. телефон. {"#cGRAY"}(/p - ответить, /h - отклонить)",pData[playerid][pNickname],pData[playerid][pPhone]);
	SendClientMessage(id,CWHITE,mes);

	return 1;
}
ALT:call:c;

CMD:p(playerid, params[])
{
	if(gCalls[playerid][g_callee] != playerid) return SendClientMessage(playerid,CWHITE,"» Вам никто не звонит");
	if(pTemp[playerid][pEther]) return SendClientMessage(playerid,CWHITE,"» Нельзя во время эфира");
	new caller = gCalls[playerid][g_caller];
	if(caller == INVALID_PLAYER_ID || !IsPlayerConnected(caller)) return SendClientMessage(playerid,CWHITE,"» Собеседник вышел из игры");
	//SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
	//SetPlayerAttachedObject(playerid,0,330,6);
	if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
	else ApplyAnimation(playerid,"CAR_CHAT","carfone_in", 4.0,0,1,1,1,0);
	SetPlayerAttachedObject(playerid, 3, pData[playerid][pPhoneModel], 6, 0.08,0.00,-0.01,-104.0,-13.0,-183.0,1.00,1.00,1.00);
	SendClientMessage(caller,CYELLOW,"Собеседник поднял телефон");
	pTemp[playerid][pCall] = true;
	pTemp[caller][pCall] = true;
	return 1;
}

CMD:h(playerid, params[])
{
	for(new i; i<3; i++) {
		if(gNewsDialee[i] == playerid)
		{
			SendClientMessage(playerid,CWHITE,"Вы положили трубку");
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			SetTimerEx("ClearPhone",2000,false,"i",playerid);
			gNewsDialee[i] = INVALID_PLAYER_ID;
			SendClientMessage(gNewsDialer[i],CSYSTEM,"Игрок положил трубку");
			return 1;
		}
	}
	if(gCalls[playerid][g_caller] == INVALID_PLAYER_ID && gCalls[playerid][g_callee] == INVALID_PLAYER_ID) return SendClientMessage(playerid,CWHITE,"» Вы не используете телефон");
	new id;
	if(gCalls[playerid][g_caller] == playerid) id = gCalls[playerid][g_callee];
	else if(gCalls[playerid][g_callee] == playerid) id = gCalls[playerid][g_caller];
	else
	{
		gCalls[playerid][g_caller] = INVALID_PLAYER_ID;
		gCalls[playerid][g_callee] = INVALID_PLAYER_ID;
		return 1;
	}
	SendClientMessage(playerid,CYELLOW,"Вы повесили трубку");
	SendClientMessage(id,CYELLOW,"Собеседник повесил трубку");
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
	SetTimerEx("ClearPhone",2000,false,"i",playerid);
	SetPlayerSpecialAction(id,SPECIAL_ACTION_STOPUSECELLPHONE);
	SetTimerEx("ClearPhone",2000,false,"i",id);
	gCalls[playerid][g_caller] = INVALID_PLAYER_ID;
	gCalls[playerid][g_callee] = INVALID_PLAYER_ID;
	gCalls[id][g_caller] = INVALID_PLAYER_ID;
	gCalls[id][g_callee] = INVALID_PLAYER_ID;
	pTemp[playerid][pCall] = false;
	pTemp[id][pCall] = false;

	return 1;
}

CMD:blow(playerid, params[])
{
	if(num[playerid] < 1) return SendClientMessage(playerid, 0xFF8000AA, "У Вас нет пиротехнических изделий");
	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, 0xFF8000AA, "Запуск пиротехники в зданиях запрещен");
	if(starts[playerid] != 0) return SendClientMessage(playerid, 0xFF8000AA, "Подождите, пожалуйста...");
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
	new Float:x, Float:y, Float:z, Float:angle;
	GetPlayerPos(playerid, x, y, z);
	GetPlayerFacingAngle(playerid, angle);
	x += floatsin(-angle, degrees);
	y += floatcos(-angle, degrees);
	num[playerid] --; starts[playerid] = 1;
	switch(GetPVarInt(playerid, "pType"))
	{
	case 1:
		{
			object[playerid] = CreateObject(18717, x, y, z-2.6, 0, 0, 0);
			SetTimerEx("dimstart",6000,0,"d",playerid);
		}
	case 2:
		{
			object[playerid] = CreateObject(18717, x, y, z-2.6, 0, 0, 0);
			SetTimerEx("svetstart",6000,0,"d",playerid);
		}
	case 3:
		{
			object[playerid] = CreateObject(18728, x, y, z-2, 0, 0, 0);
			SetTimerEx("destroyFlare",10000,0,"d",playerid);
		}
	case 4:
		{
			switch(GetPVarInt(playerid, "PColor"))
			{
			case 1: object[playerid] = CreateObject(1215, x, y, z-0.5, 0, 0, 0);
			case 2: object[playerid] = CreateObject(19122, x, y, z-0.5, 0, 0, 0);
			case 3: object[playerid] = CreateObject(19123, x, y, z-0.5, 0, 0, 0);
			case 4: object[playerid] = CreateObject(19124, x, y, z-0.5, 0, 0, 0);
			case 5: object[playerid] = CreateObject(19125, x, y, z-0.5, 0, 0, 0);
			case 6: object[playerid] = CreateObject(19126, x, y, z-0.5, 0, 0, 0);
			case 7: object[playerid] = CreateObject(19127, x, y, z-0.5, 0, 0, 0);
			}
			SetTimerEx("startone",6000,0,"d",playerid);
		}
	case 5:
		{
			new Float:X,Float:Y,Float:Z,Float:A;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid, A);
			ShiftCords(0, X, Y, Z, A, 1.0);
			new box = CreateObject( 930, X, Y, Z-0.5, 0, 0, 0 ), endobject;
			for(new i; i < 10;i ++)
			{
				endobject = CreateObject( 19122 + random(6), X, Y, Z-0.5, 0, 0, 0 );
			}
			starts[playerid] = 0;
			SetTimerEx("FireWorkStart", 8000, 0, "iiii", box, box+1, endobject, 0);
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"Вы установили фейерверк");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"Рекомендуем отойти подальше от места установки фейерверка и поднять голову вверх!");
		}
	case 6:
		{
			new Float:X,Float:Y,Float:Z,Float:A;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid, A);
			ShiftCords(0, X, Y, Z, A, 1.0);
			new boxtwo = CreateObject( 930, X, Y, Z-0.5, 0, 0, 0 ), endobjecttwo;
			for(new i; i < 10;i ++)
			{
				endobjecttwo = CreateObject( 19122 + random(6), X, Y, Z-0.5, 0, 0, 0 );
			}
			starts[playerid] = 0;
			SetTimerEx("BigFireWorkStart", 	8000, 0, "iiii", boxtwo, boxtwo+1, endobjecttwo, 0);
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"Вы установили большой фейерверк");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"Рекомендуем отойти подальше от места установки фейерверка и поднять голову вверх!");
		}
	}
	return 1;
}

CMD:gotoper(playerid, params[])
{
	if(pData[playerid][pAdmin] < 5) return 1;
	SetPlayerPos(playerid,-2039.26, -197.56, 1505.07);

	return 1;
}
CMD:a(playerid, params[])
{
	if(!pData[playerid][pAdmin]) return 1;
	if(sscanf(params, "s[120]", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /a [text]");
	mes = "";
	f(mes, "» {99CC00}[A] %s[%d]: %s",pData[playerid][pNickname],playerid,params[0]);
	AdminChat(-1,mes);
	return 1;
}


CMD:sms(playerid, params[])
{
	if(!pData[playerid][pPhone]) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка:{ffffff} У Вас нет телефона. Вы можете купить его в 24/7");
	if(!pTemp[playerid][pTPhone]) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка:{ffffff} Сначала нужно включить телефон");
	if(pData[playerid][pMut]) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка:{ffffff} У Вас молчанка, ожидайте снятия.");
	if(pData[playerid][pJail]) return SendClientMessage(playerid, CGRAY, "{fe0000}Ошибка:{ffffff} Вы в тюрьме.");
	if(pData[playerid][pPhoneMoney] < 5) return SendClientMessage(playerid, CGRAY, "{fe0000}Ошибка:{ffffff} На счету недостаточно средств");

	if(sscanf(params, "ds[32]", params[0], params[1])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /sms [number] [text]");
	new id = -1;
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
		i = cvector_get(PLAYERS, idx);
		if(!IsPlayerConnected(i)) continue;
		if(pData[i][pPhone] == params[0]) {id = i; break;}
	}

	if(id == playerid) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка:{ffffff} вы ввели свой номер");
	if(id == -1) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка:{ffffff} Игрока с этим номером (ID) нет на сервере");
	if(!pData[id][pPhone]) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка:{ffffff} У игрока нет телефона");
	if(!pTemp[id][pTPhone]) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка:{ffffff} У игрока выключен телефон");
	if(pData[id][pJail]) return SendClientMessage(playerid, CGRAY, "{fe0000}Ошибка:{ffffff} Игрок в тюрьме.");

	mes = "";
	f(mes, "[ SMS ] » %s | Получатель: %s [Т: %i]",params[1],pData[id][pNickname],pData[id][pPhone]);
	SendClientMessage(playerid,0x90B58CAA,mes);

	f(mes, "[ SMS ] » %s | Отправитель: %s [Т: %i]",params[1],pData[playerid][pNickname],pData[playerid][pPhone]);
	SendClientMessage(id,0x90B58CAA,mes);

	if(SMSEARS == 1)
	{
		f(mes, "» [A] SMS = %s[%d] отправил %s[%d] Сообщение: %s",pData[playerid][pNickname],playerid,pData[id][pNickname],id,params[1]);
		AdminChat(CYELLOW, mes);
	}

	SetPlayerChatBubble(playerid, "{F3FF02}» SMS", -1, 20.0, 10000);
	SetPlayerChatBubble(id, "{F3FF02}« SMS", -1, 20.0, 10000);

	GameTextForPlayer(playerid, "SMS~n~~y~ -5$", 5000, 1);

	pData[playerid][pPhoneMoney] -= 1;
	UpdatePlayerData(playerid,"phonemoney",pData[playerid][pPhoneMoney]);
	PlayerPlaySound(playerid,1054,0.0,0.0,0.0);
	PlayerPlaySound(id,1054,0.0,0.0,0.0);

	return 1;
}
CMD:togphone(playerid, params[])
{
	if(!pData[playerid][pPhone]) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка:{ffffff} У Вас нет телефона. Вы можете купить его в 24/7");
	if(!pTemp[playerid][pTPhone])
	{
		pTemp[playerid][pTPhone] = true;
		SendClientMessage(playerid,0x7FC0E3FF,"Телефон включен");
	}
	else
	{
		pTemp[playerid][pTPhone] = false;
		SendClientMessage(playerid,0x7FC0E3FF,"Телефон выключен");
	}

	return 1;
}
CMD:makegun(playerid, params[])
{
	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, CWHITE,"{fe0000}Ошибка:{ffffff} Вы находитесь в интерьере");
	if(IsAMafia(playerid) || pData[playerid][pFraction] == 8) ShowMakeGunList(playerid);
	else SendClientMessage(playerid, CWHITE,"{fe0000}Ошибка:{ffffff} Вам не доступно");
	return 1;
}
CMD:unbanip(playerid, params[])
{
	if(pData[playerid][pAdmin] < 4) return true;
	if(sscanf(params, "s[32]", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /unbanip [ip]");
	new string[100];
	format(string,100,"unbanip %s",params[0]);
	OnRconCommand(string);
	OnRconCommand("reloadbans");
	format(string, 100, "[Внимание] %s[%d] разбанил IP: %s", pData[playerid][pNickname], playerid, params[0]);
	AdminChat(0xFF0000AA, string);
	return 1;
}
CMD:givegun(playerid, params[])
{
	if(!IsGang(pData[playerid][pFraction])) return SendClientMessage(playerid,CWHITE,"» Эта функция доступна только бандам");

	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /givegun [id игрока]");

	if(!IsPlayerConnected(params[0]) || playerid == params[0]) return SendClientMessage(playerid,CWHITE,"» Неверный ID игрока");
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
	new weaponid = GetPlayerWeapon(playerid);
	new ammo = GetPlayerAmmo(playerid);
	if(!weaponid) return SendClientMessage(playerid,CWHITE,"» Возьмите в руку то оружие, которое хотите передать");
	SetPlayerAmmoEx(playerid,weaponid,0);
	SetPlayerArmedWeapon(playerid,0);
	GivePlayerWeaponEx(params[0],weaponid,ammo);
	mes = "";
	f(mes, "» передал оружие %s",pData[params[0]][pNickname]);
	MeAction(playerid,mes);
	format(mes,128,"Вы передали свое оружие %s", pData[params[0]][pNickname]); SendClientMessage(playerid, CGRAY,mes);
	format(mes,128,"%s передал Вам свое оружие", pData[playerid][pNickname]); SendClientMessage(params[0], CGRAY, mes);
	return 1;
}
CMD:usedrugs(playerid, params[])
{
	if(!pData[playerid][pDrugs]) return SendClientMessage(playerid, CWHITE,"» У Вас нет наркотиков");
	if(pTemp[playerid][AntiCrack]>=1) return SendClientMessage(playerid, CWHITE,"» Вы должны подождать перед следующим приемом наркотиков.");
	pTemp[playerid][AntiCrack] +=2;
	pTemp[playerid][PlayerStoned] += 1;
	if(pTemp[playerid][PlayerStoned] >= 2) GameTextForPlayer(playerid, "~w~‹‘~n~~p~Њ’•м‘", 4000, 1);
	if(pData[playerid][pHealth]+20.0 > 100) SetPlayerHealth(playerid, 100.0);
	else SetPlayerHealth(playerid,pData[playerid][pHealth]+20.0);
	MeAction(playerid,"употребил наркотики");
	pData[playerid][pDrugs]--;
	UpdatePlayerData(playerid, "drugs", pData[playerid][pDrugs]);

	pData[playerid][pNarkZav]++;
	UpdatePlayerData(playerid,"narkzav",pData[playerid][pNarkZav]);
	return 1;
}
CMD:selldrugs(playerid, params[])
{
	//if(!IsAMafia(playerid)) return SendClientMessage(playerid, CWHITE,"» Эта команда доступна только мафиям");
	if(sscanf(params, "udd", params[0], params[1], params[2])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /selldrugs [id игрока] [кол-во] [Цена]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, CWHITE,"» Неверный ID игрока");
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, CWHITE,"» Вы далеко друг от друга");
	if(params[1] > 2000 || params[1] < 1) return SendClientMessage(playerid, CWHITE,"» Неверное количество наркотиков (1-2000)");
	if(params[1] > pData[playerid][pDrugs]) return SendClientMessage(playerid, CWHITE,"» У Вас нет столько наркотиков");
	if(params[2] > 50000 || params[2] < 1) return SendClientMessage(playerid, CWHITE,"» Цена должна быть от 1 до 50 тыс.$");
	SetPVarInt(playerid,"drugoffee",params[0]);
	SetPVarInt(params[0],"drugoffee",params[0]);
	SetPVarInt(params[0],"drugoffer",playerid);
	SetPVarInt(params[0],"drugprice",params[2]);
	SetPVarInt(params[0],"drugvalue",params[1]);
	new zStr[150];
	format(zStr, 150, "Вы предложили {"#cWHITE"}%s купить у вас {"#cWHITE"}%d грамм наркотиков за {"#cWHITE"}%d$",pData[params[0]][pNickname],params[1],params[2]);
	SendClientMessage(playerid, CINFO, zStr);
	format(zStr, 150, "{"#cWHITE"}%s предложил Вам купить {"#cWHITE"}%d грамм наркотиков за {"#cWHITE"}%d$",pData[playerid][pNickname],params[1],params[2]);
	SendClientMessage(params[0], CINFO, zStr);
	SendClientMessage(params[0],COLOR_GREEN,"{33AAFF}Нажмите {f6ff00}[ Y ] {33AAFF}что-бы принять предложение или {c54d13}[ N ] {33AAFF}для отказа");
	return 1;
}
CMD:sellgun(playerid, params[])
{
	if(IsAGang(playerid))
	{
		new full = 0;
		for(new i; i < MAX_GZONE;i++)
		{
			if(PlayerToKvadrat(playerid,GZMZ[i][gCoords][0], GZMZ[i][gCoords][1],GZMZ[i][gCoords][2],GZMZ[i][gCoords][3]) && ZoneOnBattle[i] == 0)
			{
					if(sscanf(params, "udd", params[0], params[1], params[2])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /sellgun [id игрока] [патроны] [Цена]");
					if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid,CWHITE,"» Неверный ID игрока");
					if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
					if(params[2] > 30000 || params[2] < 1) return SendClientMessage(playerid,CWHITE,"» Цена должна быть от 1 до 30000.");
					if(params[1] > 150 || params[1] < 1) return SendClientMessage(playerid,CWHITE,"» Неверное к-во патронов 1 до 150");
					new weaponid = GetPlayerWeapon(playerid);
					new ammo = GetPlayerAmmo(playerid);
					if(!weaponid) return SendClientMessage(playerid,CWHITE,"» Возьмите в руку то оружие, которое хотите продать");
					if(ammo < params[1]) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно патронов");
					SetPVarInt(playerid,"gunoffee",params[0]);
					SetPVarInt(params[0],"gunoffee",params[0]);
					SetPVarInt(params[0],"gunoffer",playerid);
					SetPVarInt(params[0],"gunprice",params[2]);
					SetPVarInt(params[0],"gunammo",params[1]);
					SetPVarInt(params[0],"gunid",weaponid);
					SetPVarInt(params[0],"pxa",ammo);
					new weapname[24];
					GetWeaponName(weaponid,weapname,24);
					SFCM(playerid,CINFO,"Вы предложили {"#cWHITE"}%s купить у вас {"#cWHITE"}%s за {"#cWHITE"}%d$. Патронов: {"#cWHITE"}%d",pData[params[0]][pNickname],weapname,params[2],params[1]);
					SFCM(params[0],CINFO,"%s предложил вам купить {"#cWHITE"}%s за {"#cWHITE"}%d$. Патронов: {"#cWHITE"}%d",pData[playerid][pNickname],weapname,params[2],params[1]);
					SendClientMessage(params[0],COLOR_GREEN,"{33AAFF}Нажмите {f6ff00}[ Y ] {33AAFF}что-бы принять предложение или {c54d13}[ N ] {33AAFF}для отказа");
					break;
			}
		}
		if(!full) return SendClientMessage(playerid, COLOR_GREY, "Нужно быть на своей территории");
	}
	return 1;
}



CMD:start(playerid, params[])
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		pTemp[playerid][pOff]++;
		new vehicleid = GetPlayerVehicleID(playerid);
		/*if(pTemp[playerid][pRaceIvite])
		{
			if(GZRace[playerid] != 1)
			{
				SendClientMessage(playerid,CWHITE,"» Двигатель не заводится. Причина: Гонка не началась.");
			}
		}*/
		if(ToggleEngine(vehicleid) == -1) SendClientMessage(playerid,CWHITE,"» Двигатель не заводится. Вызовите механика {"#cWHITE"}(( /call (/c) ))");
	}
	return 1;
}
CMD:fv(playerid, params[])
{
	if(pData[playerid][pAdmin] < 5) return 1;
	if(GetPlayerVehicleID(playerid) == INVALID_VEHICLE_ID) return SendClientMessage(playerid, CGRAY, "Вы должны быть в транспорте.");
	SetVehicleHealthEx(GetPlayerVehicleID(playerid), 1000.0);
	RepairVehicle(GetPlayerVehicleID(playerid));
	return 1;
}
CMD:cancel(playerid, params[])
{
	if(pTemp[playerid][pInviteLeader1] >= 0)
	{
		SendMes(playerid, COLOR_GREEN, "» Вы отменили у %s[%d] приглашение стать лидером", pData[pTemp[playerid][pInviteLeader1]][pNickname], pTemp[playerid][pInviteLeader1]);
		pTemp[pTemp[playerid][pInviteLeader1]][pOfferFraction] = -1;
		pTemp[pTemp[playerid][pInviteLeader1]][pOfferFractionid] = -1;
		pTemp[playerid][pInviteLeader1] = -1;
	}
	if(pTemp[playerid][pInviteInvite] >= 0)
	{
		SendMes(playerid, COLOR_GREEN, "» Вы отменили у %s[%d] приглашение в организацию", pData[pTemp[playerid][pInviteInvite]][pNickname], pTemp[playerid][pInviteInvite]);
		pTemp[pTemp[playerid][pInviteInvite]][pOfferFraction] = -1;
		pTemp[pTemp[playerid][pInviteInvite]][pOfferFractionid] = -1;
		pTemp[playerid][pInviteInvite] = -1;
	}
	return 1;
}
CMD:newleader(playerid, params[])
{
	if(pTemp[playerid][pInviteLeader1] >= 0) return SendClientMessage(playerid,CWHITE,"» Вы уже отправили предложение. Введите /cancel чтобы отменить.");
	if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CWHITE,"» Вы не состоите в {ff0000}организации");
	new fractionid = pData[playerid][pFraction] - 1;
	if(pData[playerid][pRank] < gFractionRankCount[fractionid]) return SendClientMessage(playerid,CWHITE,"» Функция доступна только лидеру");
	new frid = GetSubfractionID(fractionid);
	if(pData[playerid][pSubfraction] > 0) return SendClientMessage(playerid,CWHITE,"» Функция доступна только лидеру");
	if(pData[playerid][pFraction] == 12) return SendClientMessage(playerid,CWHITE,"» В вашей фракции нет {008ffe}подфракций");
	if(pData[playerid][pFraction] == 12) return SendClientMessage(playerid,CWHITE,"» В вашей фракции нет {008ffe}подфракций");
	if(frid == -1) return SendClientMessage(playerid,CWHITE,"» В вашей фракции нет {008ffe}подфракций");
	//if(pTemp[playerid][pTempLeader]) return SendClientMessage(playerid, COLOR_GREY, "Вы временный лидер, Вы не можете приглашать стать лидером");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /newleader [id игрока]");
	if(params[0] == playerid) return SendClientMessage(playerid,CWHITE,"» Нельзя указывать свой ID");
	if(!IsPlayerConnected(params[0]) || !pData[params[0]][pMysqlID]) return SendClientMessage(playerid,CWHITE,"» Неверный ID / игрок не зарегестрирован");
	if(pData[params[0]][pFraction] && pData[params[0]][pFraction] != pData[playerid][pFraction]) return SendClientMessage(playerid,CWHITE,"» Игрок уже состоит в организации");
	//if(pData[params[0]][pAdmin]) return SendClientMessage(playerid,CWHITE,"» Данного игрока нельзя пригласить в организацию");
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");

	SetPVarInt(playerid,"actsubleader",params[0]);
	new messs[150];
	strcat(messs,"Выберите подфракцию:");
	for(new i = 0;i < 3;i++)
	{
		if(strlen(gSubfractionName[frid][i]))
		{
			strcat(messs,"\n");
			strcat(messs,gSubfractionName[frid][i]);
		}
	}
	pTemp[params[0]][pOfferFraction] = playerid;
	pTemp[params[0]][pOfferFractionid] = fractionid;
 	pTemp[playerid][pInviteLeader1] = params[0];
	ShowPlayerDialog(playerid,dSubleader,2,"{ffcf00}Выберите подфракцию:",messs,"Назначить","Отмена");
	return 1;
}

CMD:gnews(playerid, params[])
{
	//if(pTemp[playerid][pTempLeader]) return 1;
	if(pData[playerid][pMut]) return SendClientMessage(playerid,CWHITE,"» У Вас молчанка, ожидайте снятия.");
	if(!pData[playerid][pFraction]) return SendClientMessage(playerid,CWHITE,"» Вы не состоите в {ff0000}организации");
	new fraction = pData[playerid][pFraction];
	if(fraction != 12 && fraction != 2 && (fraction < 8 || fraction > 9) && fraction != 11 && fraction != 10 && fraction != 1) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка: {ffffff}Вам не доступна эта функция");
	if(!IsALeader(playerid)) return SendClientMessage(playerid, CBLUE,"Вам не доступна эта функция");
	/*new fraction = pData[playerid][pFraction];
	if(fraction != 12 && fraction != 2 && (fraction < 8 || fraction > 9) && fraction != 11 && fraction != 10 && fraction != 1) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка: {ffffff}Вам не доступна эта функция");
	if(!IsALeader(playerid)) return SendClientMessage(playerid, CBLUE,"Вам не доступна эта функция");
	if(sscanf(params, "s[120]", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /gnews [текст]");
	mes = "";
    if(pData[playerid][pFraction] && IsALeader(playerid))
	{

		new fractionid = pData[playerid][pFraction] - 1;
		new frid = GetSubfractionID(fractionid);
		new subid = pData[playerid][pSubfraction] - 1;
		if(pData[playerid][pFraction] && pData[playerid][pSubfraction] >= 1)
		format(mes, sizeof(mes), "%s", gSubfractionName[frid][subid]);
		else if(pData[playerid][pFraction] && pData[playerid][pSubfraction] == 0)
		format(mes, sizeof(mes), "%s", gFractionName[fractionid]);
	}
	//mes = "";
	//f(mes, "# Объявление от \"%s\"", mes);
	//SendClientMessageToAll(GetPlayerColor(playerid),mes);
	f(mes, "%s %s: {FFFFFF}%s",gFractionRankName[pData[playerid][pFraction]-1][pData[playerid][pRank]-1], pData[playerid][pNickname], params[0]);
	SendClientMessageToAll(GetPlayerColor(playerid),mes);
	*/

	mes = "";
    PlayerGoverments[playerid][0] = "---";
	PlayerGoverments[playerid][1] = "---";
	PlayerGoverments[playerid][2] = "---";
	pTemp[playerid][PlayerGovermentList] = 0;
	strcat(mes, "{FFFFFF}Государственная новость:\n\n");
	strcat(mes, "1. ---\n");
	strcat(mes, "2. ---\n");
	strcat(mes, "3. ---\n\n");
	strcat(mes, "{FAE54B}- Введи первую строку новости:");
	ShowPlayerDialog(playerid, dGovNews, DIALOG_STYLE_INPUT, "Издание новости", mes, "Дальше", "Отмена");
	return 1;
}
ALT:gnews:g;
ALT:gnews:gov;

CMD:leaders(playerid, params[])
{
	new zStr[3000],
		zVal;
	new atext[150];
	atext = "";
	zStr = "";
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(pData[i][pFraction] && IsALeader(i) && pTemp[i][pTempLeader] == 0)
		{
			new fractionid = pData[i][pFraction] - 1;
			new frid = GetSubfractionID(fractionid);
			new subid = pData[i][pSubfraction] - 1;
			if(pData[i][pFraction] && pData[i][pSubfraction] >= 1)
			format(atext, sizeof(atext), "%s", gSubfractionName[frid][subid]);
			else if(pData[i][pFraction] && pData[i][pSubfraction] == 0)
			format(atext, sizeof(atext), "%s", gFractionName[fractionid]);
			zVal++;
		}
		if(pData[i][pFraction] && IsALeader(i) && pTemp[i][pTempLeader] == 0)
		{
	        if(GetPVarInt(i, "AFK_Time") >= 20)
	        {
				format(zStr, sizeof(zStr), "%s{FFFFFF}» %s %s[%d] %d {AA3333}[AFK]\n", zStr, atext, pData[i][pNickname], i, pData[i][pPhone]);
			}
			else format(zStr, sizeof(zStr), "%s{FFFFFF}» %s %s[%d] %d \n", zStr, atext, pData[i][pNickname], i, pData[i][pPhone]);
		}
	}
	if(!zVal) format(zStr, sizeof(zStr), "Лидер в онлайн нет");
	ShowPlayerDialog(playerid, dMes, DIALOG_STYLE_MSGBOX, "{ffcf00}Список лидеров онлайн", zStr, "Закрыть", "");
	return 1;
}

CMD:tow(playerid, params[])
{
	if(pData[playerid][pJob] != 4) return SendClientMessage(playerid,CWHITE,"» Вы не работаете механиком");
	if(pTemp[playerid][pMechID] == INVALID_VEHICLE_ID || GetPlayerVehicleID(playerid) != pTemp[playerid][pMechID]) return SendClientMessage(playerid,CWHITE,"» Вы должны быть в буксире");

	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /tow [id игрока]");

	if(!IsPlayerConnected(params[0]) || !pData[params[0]][pMysqlID] || params[0] == playerid) return SendClientMessage(playerid,CWHITE,"» Неверный ID / игрок не зарегистрирован");
	if(GetPlayerState(params[0]) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,CWHITE,"» Игрок должен быть за рулем т.с.");
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 10.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
	SetPVarInt(playerid,"towoffer",playerid);
	SetPVarInt(playerid,"towoffee",params[0]);
	SetPVarInt(params[0],"towoffer",playerid);
	SetPVarInt(params[0],"towoffee",params[0]);
	new towcode = RandomEx(10000,99999);
	SetPVarInt(params[0],"towcode",towcode);
	SFCM(playerid,CINFO,"Вы предложили {"#cWHITE"}%s отбуксировать его т.с.",pData[params[0]][pNickname]);
	SPFDD(params[0],dTow,1,"{ffcf00}Буксир","ОК","Отмена","{"#cWHITE"}%s предлагает отбуксировать ваше т.с.\nЕсли вы согласны введите \"{"#cLIGHTGREEN"}%d{"#cWHITE"}\" (без кавычек) и нажмите ОК",pData[playerid][pNickname],towcode);
	return 1;
}
CMD:untow(playerid, params[])
{
	if(GetPVarInt(playerid,"towvid"))
	{
		new vehicleid = GetPVarInt(playerid,"towvid");
		new trailer = GetPVarInt(playerid,"towactvid");
		SetPVarInt(playerid,"towvid",0);
		SetPVarInt(playerid,"towactvid",0);
		if(GetVehicleTrailer(vehicleid) == trailer)
		{
			DetachTrailerFromVehicle(vehicleid);
			SendClientMessage(playerid,CWHITE,"» Ваша машины была отцеплена от авто механика");
			return 1;
		}
	}
	if(pData[playerid][pJob] != 4) return SendClientMessage(playerid,CWHITE,"» Вы не работаете механиком");
	if(pTemp[playerid][pMechID] == INVALID_VEHICLE_ID || GetPlayerVehicleID(playerid) != pTemp[playerid][pMechID]) return SendClientMessage(playerid,CWHITE,"» Вы должны быть в буксире");
	new vehicleid = GetPlayerVehicleID(playerid);
	new trailer = GetVehicleTrailer(vehicleid);
	if(!trailer) return SendClientMessage(playerid,CWHITE,"» Вы не буксируете авто");
	DetachTrailerFromVehicle(vehicleid);
	SendClientMessage(playerid,CWHITE,"» Вы отсоединили авто");

	return 1;
}
/*CMD:unfill(playerid, params[])
{
	if(pData[playerid][pJob] != 4) return SendClientMessage(playerid,CWHITE,"» Вы не работаете механиком");
	if(pTemp[playerid][pMechID] == INVALID_VEHICLE_ID || GetPlayerVehicleID(playerid) != pTemp[playerid][pMechID]) return SendClientMessage(playerid,CWHITE,"» Вы должны быть в буксире");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /unfill [id игрока]");

	if(!IsPlayerConnected(params[0]) || !pData[params[0]][pMysqlID] || params[0] == playerid) return SendClientMessage(playerid,CWHITE,"» Неверный ID / игрок не зарегистрирован");
	if(GetPlayerState(params[0]) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,CWHITE,"» Игрок должен быть за рулем т.с.");
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 10.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
	SetPVarInt(playerid,"towoffer",playerid);
	SetPVarInt(playerid,"towoffee",params[0]);
	SetPVarInt(params[0],"towoffer",playerid);
	SetPVarInt(params[0],"towoffee",params[0]);
	new towcode = RandomEx(10000,99999);
	SetPVarInt(params[0],"towcode",towcode);
	SFCM(playerid,CINFO,"Вы предложили {"#cWHITE"}%s слить все топливо с его т.с.",pData[params[0]][pNickname]);
	SPFDD(params[0],dUnfill,1,"{ffcf00}Механик","ОК","Отмена","{"#cWHITE"}%s предлагает слить все топливо с вашего т.с.\nЕсли вы согласны введите \"{"#cLIGHTGREEN"}%d{"#cWHITE"}\" (без кавычек) и нажмите ОК",pData[playerid][pNickname],towcode);
	return 1;
} */
CMD:repair(playerid, params[])
{
	if(pData[playerid][pJob] != 4) return SendClientMessage(playerid,CWHITE,"» Вы не работаете механиком");
	if(pTemp[playerid][pMechID] == INVALID_VEHICLE_ID || GetPlayerVehicleID(playerid) != pTemp[playerid][pMechID]) return SendClientMessage(playerid,CWHITE,"» Вы должны быть в буксире");
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /repair [id игрока] [Цена]");
	if(params[1] < 100 || params[1] > 3000) return SendClientMessage(playerid,CWHITE,"» Цена не должна быть ниже 100 и выше 3000");
	if(!IsPlayerConnected(params[0]) || !pData[params[0]][pMysqlID] || params[0] == playerid) return SendClientMessage(playerid,CWHITE,"» Неверный ID / игрок не зарегистрирован");
	if(GetPlayerState(params[0]) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,CWHITE,"» Игрок должен быть за рулем т.с.");
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 10.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
	SetPVarInt(playerid,"repairoffee",params[0]);
	SetPVarInt(params[0],"repairoffer",playerid);
	SetPVarInt(params[0],"repairoffee",params[0]);
	SetPVarInt(params[0],"repairprice",params[1]);
	SFCM(params[0],CBLUE,"%s предложил отремонтировать ваше т.с. за %d$. ({ffcf00}Y - согласиться, {"#cRED"}N - отказаться{"#cBLUE"})",pData[playerid][pNickname],params[1]);
	SFCM(playerid,CBLUE,"Вы предложили %s отремонтировать его т.с. за %d$",pData[params[0]][pNickname],params[1]);
	return 1;
}

CMD:su(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid,CWHITE,"» Эта функция только для Полиции/ФБР");
	if(sscanf(params, "us[32]", params[0], params[1])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /su [id игрока] [причина]");
	if(pData[params[0]][pJail]) return SendClientMessage(playerid,CWHITE,"» Игрок уже находится в КПЗ");
	if(pData[params[0]][pWanted] >= 6) return SendClientMessage(playerid,CWHITE,"» У игрока уже имеется максимальный уровень розыска");
	if(IsACop(params[0])) return SendClientMessage(playerid,CWHITE,"» Нельзя выдать розыск сотруднику МВД");
	pData[params[0]][pWanted] ++;
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 33.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
	if(pData[params[0]][pWanted] > 6) pData[params[0]][pWanted] = 6;
	UpdatePlayerData(params[0],"wanted",pData[params[0]][pWanted]);
	SetPlayerWantedLevel(params[0], pData[params[0]][pWanted]);
	mes = "";
	f(mes, "» %s %s объявил Вас в розыск. Причина: %s.",gFractionRankName[pData[playerid][pFraction]-1][pData[playerid][pRank]-1],pData[playerid][pNickname],params[1]);
	SendClientMessage(params[0],-1,mes);
	f(mes, "» » %s %s объявил игрока %s в розыск. Причина: %s",gFractionRankName[pData[playerid][pFraction]-1][pData[playerid][pRank]-1],pData[playerid][pNickname],pData[params[0]][pNickname],params[1]);
	CopMes(0xFFA640FF,mes);
	f(mes, "» {3399FF}Вы объявили %s в розыск. Причина: %s.",pData[params[0]][pNickname],params[1]);
	SendClientMessage(playerid,COLOR_GREEN,mes);
	return 1;
}

CMD:tazer(playerid, params[])
{
	if(pData[playerid][pFraction] == 9 || pData[playerid][pFraction] == 12 || (pData[playerid][pFraction] == 11 && pData[playerid][pRank] >= 2))
	{
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, CGRAY, "Невозможно использовать в машине!");
		new Float:distance;
		new id = GetClosestPlayer(playerid,distance);
		if(distance < 3 && id >= 0)
		{
			if(IsPlayerInAnyVehicle(id)) return SendClientMessage(playerid, CGRAY, "Человек в машине!");
			if(pTemp[id][pTazer] || pTemp[id][pCuffee] == id) return SendClientMessage(playerid,CWHITE,"» Игрок уже оглушен / в наручниках");
			if(!pData[id][pWanted]) return SendClientMessage(playerid,CWHITE,"» Игрок не преступник");
			SendMes(id, COLOR_GREEN, "» {FFCD00}%s %s[%d] {33AAFF}оглушил Вас на {FFCD00}10 {33AAFF}секунд", gFractionRankName[pData[playerid][pFraction]-1][pData[playerid][pRank]-1], pData[playerid][pNickname], playerid);
			SendMes(playerid, COLOR_GREEN, "» Вы оглушили {FFCD00}%s[%d] {33AAFF}на {FFCD00}10 {33AAFF}секунд", pData[id][pNickname], id);
			TogglePlayerControllable(id, 0);
			SetPlayerSpecialAction(id,SPECIAL_ACTION_HANDSUP);
			pTemp[id][pTazer] = 10;
		}
		else
		{
			SendClientMessage(playerid, CGRAY, "Рядом с вами никого нет");
			return 1;
		}
	}
	return 1;
}
CMD:cuff(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid,CWHITE,"» Эта функция только для Полиции/ФБР");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /cuff [id игрока]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid,CWHITE,"» Неверный ID игрока");
	if(pData[params[0]][pFraction] == 9) return SendClientMessage(playerid,CWHITE,"» Нельзя одеть наручники на законника");
	if(pTemp[params[0]][pCuffee] == params[0]) return SendClientMessage(playerid,CWHITE,"» Игрок уже в наручниках");
	if(!pData[params[0]][pWanted]) return SendClientMessage(playerid,CWHITE,"» Игрок не преступник");
	if(!pTemp[params[0]][pTazer]) return SendClientMessage(playerid,CWHITE,"» Игрок не оглушен");
	if(pTemp[playerid][pCuffer] == playerid) return SendClientMessage(playerid,CWHITE,"» У Вас с собой только одни наручники");
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
	if(pTemp[params[0]][pTazer])
	{
		pTemp[params[0]][pTazer] = 0;
		TogglePlayerControllable(params[0],1);
		SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE);
	}
	SetPlayerSpecialAction(params[0], SPECIAL_ACTION_CUFFED);
	SetPlayerAttachedObject(params[0], 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
	pTemp[params[0]][pCuffee] = params[0];
	pTemp[params[0]][pCuffer] = playerid;
	pTemp[playerid][pCuffer] = playerid;
	pTemp[playerid][pCuffee] = params[0];
	MeAction(playerid,"надел наручники на преступника");
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) TogglePlayerControllable(params[0],0);
	return 1;
}
CMD:respv(playerid,params[])
{
	if(pData[playerid][pAdmin] < 3) return 1;
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(IsPlayerInAnyVehicle(i)) unoccupied[GetPlayerVehicleID(i)] = true;
	}
	for(new v;v<MAX_VEHICLES;v++)
    {
		if(unoccupied[v] == true) unoccupied[v] = false;
		else SetVehicleToRespawn(v);
	}
	SendClientMessage(playerid,COLOR_WHITE,"Вы заспавнили весь не используемый транспорт");
	new string[127];
	format(string, 127, "%s[%d] заспавнил весь не используемый транспорт",pData[playerid][pNickname], playerid, params[0]);
	AdminChat(COLOR_FADE4, string);
	return 1;
}
/*CMD:respv(playerid, params[])
{
	if(pData[playerid][pAdmin] >= 3)
	{
		if(sscanf(params, "f", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /respv [радиус]");

		new Float:car_x,Float:car_y,Float:car_z;
		for(new cars;cars<MAX_VEHICLES;cars++)
		{
			if(GetVehicleModel(cars) > 399)
			{
			    for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
			    {
			        i = cvector_get(PLAYERS, idx);
					if(IsPlayerInAnyVehicle(i)) unoccupied[GetPlayerVehicleID(i)] = true;
 					GetVehiclePos(cars,car_x,car_y,car_z);
					if(IsPlayerInRangeOfPoint(playerid, params[0], car_x, car_y, car_z))
						if(unoccupied[cars] == true) unoccupied[cars] = false;
							else SetVehicleToRespawnEx(cars);
				}
			}
		}
		new string[127];
		format(string, 127, "%s[%d] зареспавнил машину с радиусом [ %f ] | Не занятый ТС",pData[playerid][pNickname], playerid, params[0]);
		AdminChat(COLOR_FADE4, string);
	}
	return true;
}*/
/*if(!strcmp(cmd, "/okay"))
	{
		if(pData[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_WHITE, "Не достаточно прав");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "/okay [id]");
		new i = strval(tmp);
		if(!IsPlayerConnected(i)) return SendClientMessage(playerid, COLOR_WHITE, "Игрок не найден");
		new nickname[24]; GetPVarString(i,"nnick",nickname,24);
		DeletePVar(i,"nnick");
		new oldname[24]; GetPlayerName(i, oldname, 24);
		if(SetPlayerName(i,nickname) == -1)
		{
			SendClientMessage(playerid, CGRAY, "Смена ника не удалась, найдены запрещенные символы");
			return SendClientMessage(i,CWHITE,"» У вас присутствуют запрещенные символы в никнейме");
		}
		mes = "";
		if(pData[i][pHouse])
		{
			new houseid = pData[i][pHouse] - 1;
			if(gHouses[houseid][houseOwnerID] == pData[i][pMysqlID])
			{
				format(gHouses[houseid][houseOwner],MAX_PLAYER_NAME,"%s",nickname);
				f(mes, "UPDATE `houses` SET `owner` = '%s' WHERE `id` = '%d'",nickname,houseid+1);
				sql_query(zConn, mes); mes = "";
			}
			else
			{
				new slot = -1;
				if(gHouses[houseid][houseHabitID][0] == pData[i][pMysqlID]) slot = 0;
				else if(gHouses[houseid][houseHabitID][1] == pData[i][pMysqlID]) slot = 1;
				else if(gHouses[houseid][houseHabitID][2] == pData[i][pMysqlID]) slot = 2;
				else return SendClientMessage(i,CWHITE,"» Ошибка (#122)");
				format(gHouseHabits[houseid][slot],MAX_PLAYER_NAME,"%s",nickname);
				f(mes, "UPDATE `houses` SET `inhabit%d`='%s' WHERE `id`='%d'",slot+2,nickname,houseid+1);
				sql_query(zConn, mes); mes = "";
			}
		}
		f(mes, "UPDATE `accounts` SET `nickname` = '%s' WHERE `id` = '%d'",nickname,pData[i][pMysqlID]);
		sql_query(zConn, query, QUERY_THREADED);
		format(pData[i][pNickname], 24, "%s", nickname);
		f(mes, "%s изменил нонРП имя на %s", oldname, nickname);
		SendClientMessageToAll(COLOR_YELLOW, query);
		return 1;
	}*/
CMD:uncuff(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid,CWHITE,"» Эта функция только для Полиции/ФБР");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /uncuff [id игрока]");

	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CWHITE,"» Неверный ID игрока");
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
	if(pTemp[params[0]][pCuffer] == INVALID_PLAYER_ID) return SendClientMessage(playerid,CWHITE,"» Игрок не в наручниках");
	if(pTemp[playerid][pCuffee] != params[0]) return SendClientMessage(playerid,CWHITE,"» У вас нет ключа от этих наручников");
	SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE);
	RemovePlayerAttachedObject(params[0],0);
	pTemp[params[0]][pCuffer] = INVALID_PLAYER_ID;
	pTemp[params[0]][pCuffee] = INVALID_PLAYER_ID;
	pTemp[playerid][pCuffee] = INVALID_PLAYER_ID;
	pTemp[playerid][pCuffer] = INVALID_PLAYER_ID;
	TogglePlayerControllable(params[0],1);
	MeAction(playerid,"снял наручники с преступника");

	return 1;
}
CMD:location(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, CWHITE,"» Эта функция только для Полиции/ФБР");
	if(pTemp[playerid][pGPS]) return SendClientMessage(playerid, CWHITE,"» У Вас уже есть метка на радаре");
	if(pTemp[playerid][Marked]) return SendClientMessage(playerid, CWHITE,"» Вы уже запустили систему поиска преступника. Дождитесь её окончания.");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /location [id игрока]");
	if(pData[params[0]][pWanted] < 2) return SendClientMessage(playerid, CWHITE,"» Данный игрок не в розыске или уровень розыска меньше 2");
	SendClientMessage(playerid, CWHITE,"» Система спутникового поиска преступника активирована. Ожидайте ответа от спутника.");
	pTemp[playerid][Marked] = true;
	SetTimerEx("SetMark", 1000*random(10)+1000,0,"dd",playerid,params[0]);
	return 1;
}
CMD:check(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, CWHITE,"» Эта функция только для Полиции/ФБР");
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /check [id игрока]");
    if(pData[params[0]][pWanted])
        SendMes(playerid, -1, "{CC0404}» Гражданин(-ка) %s находиться в розыске [%d]", pData[params[0]][pNickname], pData[params[0]][pWanted]);
    else
        SendMes(playerid, -1, "{CC0404}» Гражданин(-ка) %s не находиться в розыске", pData[params[0]][pNickname]);
	return 1;
}
CMD:changegz(playerid, params[])
{
	if(!strcmp(pData[playerid][pNickname], "Sem_Nicholson", true))
	{
		if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /changegz [id зоны]");
		for(new i = 0; i < sizeof(GZMZ); i++)
		{
			if(PlayerToKvadrat(playerid,GZMZ[i][gCoords][0], GZMZ[i][gCoords][1],GZMZ[i][gCoords][2],GZMZ[i][gCoords][3]))
			{
				GZMZ[i][gFrak] = params[0];
				GangZoneStopFlashForAll(GZMZ[i][idm]);
				GangZoneHideForAll(GZMZ[i][idm]);
				GangZoneShowForAll(GZMZ[i][idm],GetGangZoneColor(i));
				SaveGZ();
				return true;
			}
		}
	}
	return 1;
}
CMD:arrest(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, CWHITE,"» Эта функция только для Полиции/ФБР");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /arrest [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, CWHITE,"» Неверный ID игрока");
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 10.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, CWHITE,"» Вы далеко друг от друга");
	if(!pData[params[0]][pWanted]) return SendClientMessage(playerid, CWHITE,"» Этот игрок не совершал преступление");
	if(pData[params[0]][pJail]) return SendClientMessage(playerid, CWHITE,"» Этот игрок уже находится в КПЗ");
	if(pTemp[params[0]][pCuffer] == INVALID_PLAYER_ID) return SendClientMessage(playerid,CWHITE,"» Игрок не в наручниках");
	new time = pData[params[0]][pWanted] * JAIL_QUATE/2;
	if(!IsPlayerInDynamicArea(playerid,gAreas[arArrest][0]) &&
			!IsPlayerInDynamicArea(playerid,gAreas[arArrest][1]) &&
			!IsPlayerInDynamicArea(playerid,gAreas[arArrest][2])) return SendClientMessage(playerid, CWHITE,"» Вы должны быть в гараже департамента");
	if(pTemp[params[0]][pCuffer] != INVALID_PLAYER_ID)
	{
		new cuffer = pTemp[params[0]][pCuffer];
		SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(params[0],0);
		pTemp[params[0]][pCuffer] = INVALID_PLAYER_ID;
		pTemp[params[0]][pCuffee] = INVALID_PLAYER_ID;
		pTemp[cuffer][pCuffee] = INVALID_PLAYER_ID;
		pTemp[cuffer][pCuffer] = INVALID_PLAYER_ID;
	}
	pData[params[0]][pJail] = time;
	pData[params[0]][pWanted] = 0;
	SetPlayerWantedLevel(params[0],0);
	ResetPlayerWeapons(params[0]);
	PlayerPlaySound(params[0], 17004, 0.0, 0.0, 0.0);
	switch(pData[playerid][pSubfraction])
	{
	case 0:
		{
			SetPlayerPos(params[0],jailLS[0][0],jailLS[0][1],jailLS[0][2]);
			SetPlayerFacingAngle(params[0],jailLS[0][3]);
			SetPlayerVirtualWorld(params[0], 1);
			SetPlayerInterior(params[0],6);
			pData[params[0]][pPrison] = 1;
		}
	case 1:
		{
			SetPlayerPos(params[0],jailLS[0][0],jailLS[0][1],jailLS[0][2]);
			SetPlayerFacingAngle(params[0],jailLS[0][3]);
			SetPlayerVirtualWorld(params[0], 1);
			SetPlayerInterior(params[0],6);
			pData[params[0]][pPrison] = 1;
		}
	case 2:
		{
			SetPlayerPos(params[0],jailSF[random(4)][0],jailSF[random(4)][1],jailSF[random(4)][2]);
			SetPlayerFacingAngle(params[0],jailSF[random(4)][3]);
			SetPlayerVirtualWorld(params[0], 2);
			SetPlayerInterior(params[0], 10);
			pData[params[0]][pPrison] = 2;
		}
	case 3:
		{
			SetPlayerPos(params[0],jailLV[random(3)][0],jailLV[random(3)][1],jailLV[random(3)][2]);
			SetPlayerFacingAngle(params[0],jailLV[random(3)][3]);
			SetPlayerVirtualWorld(params[0], 3);
			SetPlayerInterior(params[0],3);
			pData[params[0]][pPrison] = 3;
		}
	}



	GameTextForPlayer(playerid, "~r~ARRESTED~n~~g~ +50$", 5000, 1);
	TransferMoney(-1,playerid,5,"arrested");

	new fractionid = pData[playerid][pFraction]-1;
	new fridd = GetSubfractionID(fractionid);
	new subidd = pData[playerid][pSubfraction] - 1;


	mes = "";
	f(mes, "UPDATE `accounts` SET `jail` = '%d', prison = '%d', wanted = '0' WHERE `id` = '%d'",pData[params[0]][pJail],pData[params[0]][pPrison],pData[params[0]][pMysqlID]);
	sql_query(zConn, mes); mes = "";
	mes = "";
	f(mes, "» Вы были посажены в участок '%s' | %s[%d] на %d минут",gSubfractionName[fridd][subidd],pData[playerid][pNickname],playerid,floatround(time/60));
	SendClientMessage(params[0],-1,mes);
	f(mes, "» Вы поместили %s в КПЗ на %d минут",pData[params[0]][pNickname],floatround(time/60));
	SendClientMessage(playerid,CINFO,mes);

	SendClientMessage(params[0], COLOR_GREEN, "Чтобы просмотреть время до освобождения - {FFCD00}/jailtime");
	return 1;
}

CMD:push(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid,CWHITE,"» Эта функция только для Полиции/ФБР");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /push [id игрока]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid,CWHITE,"» Неверный ID игрока");
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
	new Float:x, Float:y, Float:z;
	GetPlayerPos(params[0],x,y,z);
	for(new i=1;i<=MAX_VEHICLES;i++)
	{
		if(!IsVehicleStreamedIn(i,playerid)) continue;
		new model = GetVehicleModel(i);
		if(model == 497 || model == 596 || model == 597 || model == 598 || model == 599 || model == 528 || model == 490 || model == 427)
		{
			new Float:vx, Float:vy, Float:vz;
			GetVehiclePos(i,vx,vy,vz);
			if(PointToPoint3D(x,y,z,vx,vy,vz) <= 8.0)
			{
				new seat = GetFreeSeat(i);
				if(seat == -1) continue;
				PutPlayerInVehicle(params[0],i,seat);
				MeAction(playerid,"посадил преступника в транспорт");
				if(pTemp[params[0]][pCuffee] == params[0]) TogglePlayerControllable(params[0],0);
				break;
			}
		}
	}
	return 1;
}
CMD:frisk(playerid, params[])
{
	if(pData[playerid][pFraction] != 12 || pData[playerid][pRank] < 4) return SendClientMessage(playerid, CWHITE,"» Вы не можете использовать данную команду");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /frisk [id игрока]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, CWHITE,"» Неверный ID игрока");
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");

	new str[64];
	if(!pData[params[0]][pDrugs]) format(str, sizeof(str), "Наркотиков не обнаружено");
	else format(str, sizeof(str), "Обнаружено %d грамм наркотиков", pData[params[0]][pDrugs]);
	SendClientMessage(playerid, COLOR_YELLOW, str);

	if(!pData[params[0]][pAmmo]) format(str, sizeof(str), "Патрон не обнаружено");
	else format(str, sizeof(str), "Обнаружено %d патрон", pData[params[0]][pAmmo]);

	SendClientMessage(playerid, COLOR_YELLOW, str);
	format(str, sizeof(str), "произвёл обыск у %s", pData[params[0]][pNickname]);
	MeAction(playerid,str);
	return 1;
}

CMD:skip(playerid, params[])
{
	if(pData[playerid][pFraction] == 12 && pData[playerid][pRank] >= 5)
	{
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /skip [id игрока]");
		if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, CWHITE,"» Неверный ID игрока");
		if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
		pTemp[params[0]][FBISkip] = 1;
		new str[64]; format(str, 64, "%s выдал Вам пропуск в здание ФБР",pData[playerid][pNickname]);
		SendClientMessage(params[0], CGRAY, str);
		format(str, 64, "Вы выдали пропуск в здание ФБР %s",pData[params[0]][pNickname]);
		SendClientMessage(playerid, CGRAY,str);
	}
	else if(pData[playerid][pFraction] == 9 && pData[playerid][pRank] >= 5)
	{
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /skip [id игрока]");
		if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid, CWHITE,"» Неверный ID игрока");
		if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
		pTemp[params[0]][PDSkip] = 1;
		new str[64]; format(str, 64, "%s выдал Вам пропуск в здание ПД",pData[playerid][pNickname]);
		SendClientMessage(params[0], COLOR_GREY,str);
		format(str, 64, "Вы выдали пропуск в здание ПД %s",pData[params[0]][pNickname]);
		SendClientMessage(playerid, COLOR_GREY,str);
	}
	else SendClientMessage(playerid, CWHITE,"» Вы не можете использовать данную команду (доступна с 5 ранга)");
	return 1;
}
CMD:wanted(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid);
	new model = GetVehicleModel(vehicleid);
	if(model == 497 || model == 596 || model == 523 || model == 415 || model == 597 || model == 598 || model == 599 || model == 528 || model == 490 || model == 427 || vehicleid >= aFBI[0] && vehicleid <= aFBI[1]){}
	else return SendClientMessage(playerid,CWHITE,"» Вы должны быть в служебном т/с");

	if(!IsACop(playerid)) return SendClientMessage(playerid,CWHITE,"» Эта функция только для Полиции/ФБР");
	new zStr[1024];
	format(zStr, sizeof(zStr), "\tДело\tИмя преступника\tУровень розыска\n\n");
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(pData[i][pWanted] <= 0) continue;
		format(zStr, sizeof(zStr), "%s\t\t%d\t%s\t\t%d\n",zStr,i,pData[i][pNickname],pData[i][pWanted]);
	}
	ShowPlayerDialog(playerid,0000,0,"Список преступников",zStr,"Закрыть","");
	return 1;
}
CMD:mg(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid,CWHITE,"» Эта функция только для Полиции/ФБР");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,CWHITE,"» Вы должны быть в служебном т/с");
	new vehicleid = GetPlayerVehicleID(playerid);
	new model = GetVehicleModel(vehicleid);
	if(model == 497 || model == 596 || model == 523 || model == 597 || model == 598 || model == 599 || model == 528 || model == 490 || model == 427
	|| model == 415 || vehicleid >= aFBI[0] && vehicleid <= aFBI[1]){}
	else return SendClientMessage(playerid,CWHITE,"» Вы должны быть в служебном т/с");
	if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /mg [text]");
	mes = "";
	f(mes, ">> %s %s[%d]: %s <<",gFractionRankName[pData[playerid][pFraction]-1][pData[playerid][pRank]-1],pData[playerid][pNickname],playerid,params[0]);
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(!IsPlayerConnected(i) || !pTemp[i][pLogined] || !pData[i][pMysqlID] || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(i)) continue;
		new Float:rdist;
		rdist = GetPlayerDistanceToPlayer(playerid,i);
		if(rdist > 45.0) continue;
		SendClientMessage(i,CYELLOW,mes);
	}
	return 1;
}
CMD:bullpen(playerid, params[])
{
	if(!pData[playerid][pJail]) return SendClientMessage(playerid,CWHITE,"» Вы не находитесь в КПЗ");
	new jailname[12];
	switch(pData[playerid][pPrison])
	{
	case 1: jailname = "LSPD";
	case 2: jailname = "SFPD";
	case 3: jailname = "LVPD";
	}
	mes = "";
	f(mes, "» ~g~%s~n~~w~REMAIN: ~g~%d ~w~SEC",jailname,pData[playerid][pJail]);
	GameTextForPlayer(playerid,mes,1,1);
	return 1;
}
CMD:play(playerid, params[])
{
	if(pTemp[playerid][pRadioOnline])
	{
		StopAudioStreamForPlayer(playerid);
		SendClientMessage(playerid,0x7FC0E3FF,"Радио выключено");
		pTemp[playerid][pRadioOnline] = 0;
		return 1;
	}
	else ShowPlayerDialog(playerid, dRadio, DIALOG_STYLE_LIST, "{FFCD00}Онлайн радио", "1 » Радио Dallas-RP\n2 » Радио Шансон\n3 » Радио Рекорд\n4 » Sky Radio\n5 » DFM Radio\n6 » Европа +", "Принять", "Отмена");
	return 1;
}
CMD:eject(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,CWHITE,"Вы должны быть в т.с.");
	if(GetPlayerVehicleSeat(playerid) != 0) return SendClientMessage(playerid,CWHITE,"» Вы должны быть за рулем");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /eject [id игрока]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendClientMessage(playerid,CWHITE,"» Неверный ID игрока");
	new vehicleid = GetPlayerVehicleID(playerid);
	if(vehicleid == GetPlayerVehicleID(params[0]) && GetPlayerVehicleSeat(params[0]) != 0)
	{
		SFCM(params[0],CWHITE,"» %s вытолкнул вас из т.с.",pData[playerid][pNickname]);
		if(pTemp[params[0]][pCuffee] == params[0]) TogglePlayerControllable(params[0],1);
		RemovePlayerFromVehicle(params[0]);
	}
	return 1;
}
CMD:limit(playerid, params[])
{
    SendClientMessage(playerid, -1, "{CECFCE}» Использование: /limit [скорость от 10 до 150]");
    sscanf(params, "d", params[0]);
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,CWHITE,"» Вы должны быть за рулем");
	if(!params[0])
	{
		if(pTemp[playerid][pSLimit])
		{
			pTemp[playerid][pSLimit] = 0;
			SendClientMessage(playerid,0x7FC0E3FF,"Ограничение скорости снято");
		}
		else SendClientMessage(playerid,CWHITE,"» /limit [скорость]");
		return 1;
	}
	if(params[0] < 10 || params[0] > 150) return SendClientMessage(playerid,CWHITE,"» Ограничение должно быть от 10 до 150");
	pTemp[playerid][pSLimit] = params[0];
	SendClientMessage(playerid,0x7FC0E3FF,"Установлено ограничение скорости");
	return 1;
}
CMD:pc(playerid, params[])
{
	new fractionid = pData[playerid][pFraction] - 1;
	new subfraction = pData[playerid][pSubfraction];
	if(!IsACop(playerid)) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка: {ffffff}Вам не доступна эта функция");
	new caller = gEmCall[0];
	if(caller == INVALID_PLAYER_ID) return SendClientMessage(playerid,CWHITE,"» Вызовов не поступало");
	gEmCall[0] = INVALID_PLAYER_ID;
	if(!IsPlayerConnected(caller) || !pData[caller][pMysqlID]) return SendClientMessage(playerid,CWHITE,"» Игрок вышел");
	new Float:x, Float:y, Float:z;
	GetPlayerPos(caller,x,y,z);
	EnableGPSForPlayer(playerid,x,y,z,4.0,56);
	pTemp[playerid][pGPS] = true;
	mes = "";
	if(!subfraction) f(mes, "» %s %s принял вызов", gFractionRankName[fractionid][pData[playerid][pRank]-1], pData[playerid][pNickname]);
	else f(mes, "» %s %s (%s) принял вызов",gFractionRankName[fractionid][pData[playerid][pRank]-1], pData[playerid][pNickname],gSubfractionName[2][subfraction-1]);
	SendClientMessage(caller,CINFO,mes);
	DepartmentChat(CDEPARTMENT,mes,0,0,1,1,0);
	SendClientMessage(playerid,COLOR_YELLOW, "Метка установлена у Вас на GPS");
	return 1;
}
CMD:mc(playerid, params[])
{
	new fractionid = pData[playerid][pFraction] - 1;
	new subfraction = pData[playerid][pSubfraction];
	if(fractionid != 1 || !subfraction) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка: {ffffff}Вам не доступна эта функция");
	new caller = gEmCall[1];
	if(caller == INVALID_PLAYER_ID) return SendClientMessage(playerid,CWHITE,"» Вызовов не поступало");
	gEmCall[0] = INVALID_PLAYER_ID;
	if(!IsPlayerConnected(caller) || !pData[caller][pMysqlID]) return SendClientMessage(playerid,CWHITE,"» Игрок вышел");
	new Float:x, Float:y, Float:z;
	GetPlayerPos(caller,x,y,z);
	EnableGPSForPlayer(playerid,x,y,z,4.0,56);
	pTemp[playerid][pGPS] = true;
	mes = "";
	f(mes, "» %s (%s) принял вызов",pData[playerid][pNickname],gSubfractionName[0][subfraction-1]);
	SendClientMessage(caller,CINFO,mes);
	DepartmentChat(CDEPARTMENT,mes,1,0,0,0,0);
	SendClientMessage(playerid,COLOR_YELLOW, "Метка установлена у Вас на GPS");
	return 1;
}
CMD:rc(playerid, params[])
{
	if(pData[playerid][pJob] != 4) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка: {ffffff}Вам не доступна эта функция");
	if(pTemp[playerid][pMechID] == INVALID_VEHICLE_ID) return SendClientMessage(playerid,CWHITE,"» Вы должны сначала арендовать буксир");
	if(pTemp[playerid][pGPS]) return SendClientMessage(playerid,CWHITE,"» У вас уже установлена метка");
	new caller = gEmCall[2];
	if(caller == INVALID_PLAYER_ID) return SendClientMessage(playerid,CWHITE,"» Вызовов не поступало");
	gEmCall[2] = INVALID_PLAYER_ID;
	if(!IsPlayerConnected(caller) || !pData[caller][pMysqlID]) return SendClientMessage(playerid,CWHITE,"» Игрок вышел");
	new Float:x, Float:y, Float:z;
	GetPlayerPos(caller,x,y,z);
	EnableGPSForPlayer(playerid,x,y,z,4.0,56);
	pTemp[playerid][pGPS] = true;
	mes = "";
	f(mes, "» %s принял вызов",pData[playerid][pNickname]);
	SendClientMessage(caller,CINFO,mes);
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(pData[i][pJob] != 4 || pTemp[i][pMechID] == INVALID_VEHICLE_ID) continue;
		SendClientMessage(i,CDEPARTMENT,mes);
	}
	SendClientMessage(playerid,COLOR_YELLOW, "Метка установлена у Вас на GPS");
	return 1;
}
CMD:setspawn(playerid, params[])
{
	//if(!pData[playerid][pFraction]) return SendClientMessage(playerid, CWHITE,"» Вы не состоите в организации");

	ShowPlayerDialog(playerid, dSetSpawn, DIALOG_STYLE_LIST, "Место появления", "Дом\nБаза организации", "Выбор", "Отмена");
	return 1;
}
CMD:ad(playerid, params[])
{
	if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid,CWHITE,"» К сожалению, очередь на объявления занята, попробуйте позже");
	if(!pData[playerid][pPhone]) return SendClientMessage(playerid,CWHITE,"» Вам нужен телефон, чтобы отправить объявление");
	if(pTemp[playerid][pAdvertTime]) return SendClientMessage(playerid,CWHITE,"» Нельзя посылать чаще одного объявления в минуту");
	if(sscanf(params, "s[100]", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /ad [text]");
	new len = strlen(params[0]);
	SetPVarString(playerid,"advert",params[0]);
	new price = len * gAdvertPrice;
	mes = "";
	f(mes, "» {FFFFFF}\t\tЦена объявления: %d$.\nВы действительно хотите отправить объявление?",price);
	ShowPlayerDialog(playerid,dAdvertSend,0,"Подача объявления",mes,"Да","Нет");
	return 1;
}
CMD:edit(playerid, params[])
{
	if(pData[playerid][pFraction] != 10 && pData[playerid][pSubfraction] != 1
			|| pData[playerid][pFraction] != 10 && pData[playerid][pSubfraction] != 2
			|| pData[playerid][pFraction] != 10 && pData[playerid][pSubfraction] != 3) return SendClientMessage(playerid,CWHITE,"» Эта функция доступна только {ff5b01}сотрудникам {FFFFFF}новостной сети");
	ShowAdvertList(playerid);
	return 1;
}
CMD:ether(playerid, params[])
{
	if(pData[playerid][pFraction] != 10 && pData[playerid][pSubfraction] != 1
	) return SendClientMessage(playerid,CWHITE,"» Вы не состоите в SAN-FM");

	if(!pTemp[playerid][pEther])
	{
	    if(IsPlayerInRangeOfPoint(playerid, 10.0, -1767.0011,2612.2839,62.6469))
		{
	//-1767.0011,2612.2839,62.6469
		/*new vehicleid = GetPlayerVehicleID(playerid);
		if(vehicleid >= aRadio[0] && vehicleid <= aRadio[1]
				|| vehicleid >= aRadio1[0] && vehicleid <= aRadio1[1])
		{*/
			pTemp[playerid][pEther] = true;
			SendClientMessage(playerid,0x7FC0E3FF,"Вы в эфире");
		}
		else return SendClientMessage(playerid,CWHITE,"» Вы не находитесь в студии");
	}
	else
	{
		pTemp[playerid][pEther] = false;
		SendClientMessage(playerid,0x7FC0E3FF,"Вы вышли из эфира");
	}
	return 1;
}
CMD:dial(playerid, params[])
{
	if(pData[playerid][pFraction] != 10 && pData[playerid][pSubfraction] != 1
			|| pData[playerid][pFraction] != 10 && pData[playerid][pSubfraction] != 2
			|| pData[playerid][pFraction] != 10 && pData[playerid][pSubfraction] != 3) return SendClientMessage(playerid,CWHITE,"» Эта функция доступна только сотрудникам новостной сети");
	if(!pTemp[playerid][pEther]) return SendClientMessage(playerid,CWHITE,"» Вы должны быть в эфире, чтобы начать принимать звонки");
	if(pData[playerid][pRank] < 5) return SendClientMessage(playerid,CWHITE,"» Принимать звонки можно с пятого ранга");
	if(gNewsDialing[pData[playerid][pSubfraction]-1])
	{
		mes = "";
		f(mes, "» %s уже принимает звонки",pData[gNewsDialer[pData[playerid][pSubfraction]-1]][pNickname]);
		SendClientMessage(playerid,CGRAY,mes);
		return 1;
	}
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /dial [cost]");
	if(params[0] < 0) return SendClientMessage(playerid,CWHITE,"» Неверная цена");
	if(params[0] > 150) return SendClientMessage(playerid,CWHITE,"» Цена за 1 звонок не может быть больше $150");
	mes = "";
	f(mes, "» [R] %s начал принимать звонки. Цена звонка: %d$.",pData[playerid][pNickname],params[0]);
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(pData[i][pFraction] == 10) {
			SendClientMessage(i,CBLUE,mes);
			switch(pData[playerid][pSubfraction]-1) {
			case 0: SendClientMessage(i, CBLUE, "[R] Телефон студии: 9900 [LS]");
			case 1: SendClientMessage(i, CBLUE, "[R] Телефон студии: 9901 [LV]");
			case 2: SendClientMessage(i, CBLUE, "[R] Телефон студии: 9902 [SF]");
			}
		}
	}
	gNewsDialing[pData[playerid][pSubfraction]-1] = true;
	gNewsDialer[pData[playerid][pSubfraction]-1] = playerid;
	gNewsDialee[pData[playerid][pSubfraction]-1] = INVALID_PLAYER_ID;
	gNewsDialPrice[pData[playerid][pSubfraction]-1] = params[0];
	return 1;
}
CMD:hdial(playerid, params[])
{
	if(pData[playerid][pFraction] != 10 && pData[playerid][pSubfraction] != 1
			|| pData[playerid][pFraction] != 10 && pData[playerid][pSubfraction] != 2
			|| pData[playerid][pFraction] != 10 && pData[playerid][pSubfraction] != 3) return SendClientMessage(playerid,CWHITE,"» Эта функция доступна только сотрудникам новостной сети");
	if(gNewsDialee[pData[playerid][pSubfraction]-1] == INVALID_PLAYER_ID) return SendClientMessage(playerid,CWHITE,"» Никого на линии нет");
	SendClientMessage(gNewsDialee[pData[playerid][pSubfraction]-1],CWHITE,"Вы были отсоединены ведущим");
	SetPlayerSpecialAction(gNewsDialee[pData[playerid][pSubfraction]-1],SPECIAL_ACTION_STOPUSECELLPHONE);
	SetTimerEx("ClearPhone",2000,false,"i",gNewsDialee[pData[playerid][pSubfraction]-1]);
	gNewsDialee[pData[playerid][pSubfraction]-1] = INVALID_PLAYER_ID;
	SendClientMessage(playerid,CSYSTEM,"Игрок отсоединен");
	return 1;
}
CMD:stopdial(playerid, params[])
{
	if(pData[playerid][pFraction] != 10 && pData[playerid][pSubfraction] != 1
			|| pData[playerid][pFraction] != 10 && pData[playerid][pSubfraction] != 2
			|| pData[playerid][pFraction] != 10 && pData[playerid][pSubfraction] != 3) return SendClientMessage(playerid,CWHITE,"» Эта функция доступна только сотрудникам новостной сети");
	if(pData[playerid][pRank] < 5) return SendClientMessage(playerid,CWHITE,"» Принимать звонки можно с пятого ранга");
	if(gNewsDialer[pData[playerid][pSubfraction]-1] != playerid) return SendClientMessage(playerid,CWHITE,"» Невозможно");
	_hdial(playerid, "");//Call::(playerid, "/hdial");//OnPlayerCommandText(playerid,"/hdial");
	gNewsDialing[pData[playerid][pSubfraction]-1] = false;
	gNewsDialer[pData[playerid][pSubfraction]-1] = INVALID_PLAYER_ID;
	gNewsDialee[pData[playerid][pSubfraction]-1] = INVALID_PLAYER_ID;
	gNewsDialPrice[pData[playerid][pSubfraction]-1] = 0;
	mes = "";
	f(mes, "» [R] %s закончил принимать звонки. Доход: %d$",pData[playerid][pNickname],gNewsDialMoney[pData[playerid][pSubfraction]-1]);
	gNewsMoney[pData[playerid][pSubfraction]-1] += gNewsDialMoney[pData[playerid][pSubfraction]-1];
	gNewsDialMoney[pData[playerid][pSubfraction]-1] = 0;
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(pData[i][pFraction] == 10) SendClientMessage(i,CBLUE,mes);
	}
	return 1;
}
/*CMD:radio(playerid, params[])
{
	if(pData[playerid][pRadio])
	{
		pData[playerid][pRadio] = 0;
		UpdatePlayerData(playerid, "radio", 0);
		SendClientMessage(playerid,CDARKGREEN,"Радиоприемник выключен");

	}
	else
	{
		ShowPlayerDialog(playerid,dSetRadio,DIALOG_STYLE_LIST,"Выбор радиостанции:","SAN-FM\nSAN-TV","Выбор","Отмена");
	}
	return 1;
}*/
CMD:audience(playerid, params[])
{
	if(pData[playerid][pFraction] != 10 || !pData[playerid][pSubfraction]) return 1;
	new z[2], zStr[120];
	foreach(new i: Player) {
		if(pData[i][pRadio]) z[pData[i][pRadio]-1]++;
	}
	format(zStr, 120, "{FFFFFF}SAN-FM: {33AAFF}%d\n\
						{FFFFFF}SAN-TV: {33AAFF}%d\n", z[0], z[1]);
	ShowPlayerDialog(playerid, dMes, 0, "{ffcf00}Количество слушателей:", zStr, "Ок", "");
	return 1;
}
/*CMD:donate(playerid, params[])
{
	ShowPlayerDialog(playerid,dDonate,2,"{ffcf00}Услуги доната","1.Игровая валюта (1р - 1200$)\n2.Смена ника (10р)\n3.Снятие варна (75р)\n4.Проверить баланс","Далее","Отмена");
	return 1;
}*/
/*CMD:givevkey(playerid, params[])
{
	if(!pData[playerid][pCar]) return SendClientMessage(playerid,CWHITE,"» Команда доступна только владельцам т/с");

	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /givevkey [id игрока]");

	if(!IsPlayerConnected(params[0]) || !pData[params[0]][pMysqlID] || params[0] == playerid) return SendClientMessage(playerid,CWHITE,"» Неверный ID / игрок не зарегистрирован");
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
	if(pData[params[0]][pVehicleKey] != 0) return SendClientMessage(playerid,CWHITE,"» У игрока уже есть ключи от т.с.");
	pData[params[0]][pVehicleKey] = pData[playerid][pCar];
	UpdatePlayerData(params[0],"vehiclekey",pData[params[0]][pVehicleKey]);
	mes = "";
	f(mes, "» Вы получили ключи от т/с от {"#cWHITE"}%s",pData[playerid][pNickname]);
	SendClientMessage(params[0],CINFO,mes);
	f(mes, "» Вы выдали {"#cWHITE"}%s ключи от вашего т/с",pData[params[0]][pNickname]);
	SendClientMessage(playerid,CINFO,mes);
	return 1;
}
CMD:takevkey(playerid, params[])
{
	if(!pData[playerid][pCar]) return SendClientMessage(playerid,CWHITE,"» Команда доступна только владельцам т/с");

	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /takevkey [id игрока]");

	if(!IsPlayerConnected(params[0]) || !pData[params[0]][pMysqlID] || params[0] == playerid) return SendClientMessage(playerid,CWHITE,"» Неверный ID / игрок не зарегистрирован");
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
	if(pData[params[0]][pVehicleKey] != pData[playerid][pCar]) return SendClientMessage(playerid,CWHITE,"» У игрока нет ключей от вашего т/с");
	pData[params[0]][pVehicleKey] = 0;
	UpdatePlayerData(params[0],"vehiclekey",0);
	mes = "";
	f(mes, "» %s забрал у вас ключи от т/с",pData[playerid][pNickname]);
	SendClientMessage(params[0],CWHITE,mes);
	f(mes, "» Вы забрали у {"#cWHITE"}%s  ключи от вашего т/с",pData[params[0]][pNickname]);
	SendClientMessage(playerid,CINFO,mes);

	return 1;
}
CMD:dropvkey(playerid, params[])
{
	if(!pData[playerid][pVehicleKey]) return SendClientMessage(playerid,CWHITE,"» У вас нет дубликатов ключей от т/с");
	pData[playerid][pVehicleKey] = 0;
	UpdatePlayerData(playerid,"vehiclekey",0);
	SendClientMessage(playerid,CINFO,"Вы выбросили ключи от т/с");

	return 1;
}*/

CMD:carid(playerid, params[])
{
	if(pData[playerid][pAdmin] < 3) return 1;
	new str[144], uid;
	if(sscanf(params, "{s[6]}u", uid)) return SendClientMessage(playerid, -1, "{fe0000}Ошибка:{ffffff} Такой игрок не подключен.");
	new slot = -1;
	slot = GetCarSlot(pData[uid][pCar]);
	if(slot < sizeof(gCars) && slot != -1) {
		new vehicleid = gCars[slot][carVid];
		format(str, sizeof(str), "{"#cGRAY"}* ID машины: %i.", vehicleid);
		SendClientMessage(playerid, -1, str);
	}
	else SendClientMessage(playerid, -1, "{"#cGRAY"}Ошибка!");
	return 1;
}
CMD:shieldoff(playerid, params[])
{
	RemovePlayerAttachedObject(playerid, 1);
	SendClientMessage(playerid, CGRAY, "Вы сняли Щит.");
	return 1;
}
CMD:sellzone(playerid, params[])
{
	if(!IsALeader(playerid)) return SendClientMessage(playerid, CWHITE,"» Вам недоступна данная функция");
	ShowPlayerDialog(playerid, dSellZone, DIALOG_STYLE_LIST, "Продажа территории", "The Ballas\nGrove Street\nVarios Los Aztecas\nLos Santos Vagos\nThe Rifa","Выбор","Отмена");
	return 1;
}

CMD:dragzone(playerid, params[])
{
    if(!IsAMafia(playerid)) return SendClientMessage(playerid, CGRAY, "Команда доступна только для Мафии");
    if(MAFIA_STARTZAXVAT2) return SendClientMessage(playerid, CGRAY, "Уже идет захват точки");
    for(new i; i < sizeof(gMafiaCoord); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, gMafiaCoord[i][0], gMafiaCoord[i][1], gMafiaCoord[i][2]))
		{

		    new faction = pData[playerid][pFraction];
		    if(faction == gNark[i][nOwner]) return SendMes(playerid,COLOR_GREY, "Вы не можете нападать сами на себя");
		    if(IsPlayerInBandOnline(faction) < D_SELOVER_MAFIA) return SendMes(playerid,COLOR_GREY, "В вашей мафии мало игроков онлайн! (Требуется: %d)", D_SELOVER_MAFIA);
			if(IsPlayerInBandOnline(gNark[i][nOwner]) < D_SELOVER_MAFIA) return SendMes(playerid,COLOR_GREY, "У мафии %s мало игроков! (Требуется: %d)",GetMafiaName(gNark[i][nOwner]), D_SELOVER_MAFIA);
			MAFIA_NAPAD = faction;
			MAFIA_STARTZAXVAT2 = 1;
			MAFIA_SCORE[1] = faction;
			MAFIA_SCORE2[1] = gNark[i][nOwner];
			MAFIA_ZONE = i;
			MAFIA_A = "";
			MAFIA_B = "";
			MAFIA_SCORE[0] = 0;
			MAFIA_SCORE2[0] = 0;
			format(MAFIA_A, sizeof(MAFIA_A), "%s", GetMafiaName(faction));
   			format(MAFIA_B, sizeof(MAFIA_B), "%s", GetMafiaName(gNark[i][nOwner]));
   			MAFIA_LOSTTIME = 100;
   			format(mes, sizeof(mes), "Мафия %s начала захватывать наркоточку %s, в районе %s {FFFFFF}(Начало через 5 минут)", GetMafiaName(faction), GetMafiaName(gNark[i][nOwner]), GetPlayerZone(playerid, 0));
			for(new d = 13; d < 16; d++)
			{
				SendFMes(d, COLOR_LIME, mes);
			}
			GangZoneFlashForAll(gNark[i][nID], GangZoneMafiasColor(faction));
		    for(new idx=0, s=0; idx<cvector_size(PLAYERS); idx++)
			{
	    		s = cvector_get(PLAYERS, idx);
				if(IsAMafia(s))
				{
				    MafiaCapture = CreatePlayerTextDraw(s, 557.000061, 137.303771, "Time: %d~n~------------------~n~~r~Russian Mafia~w~~n~~g~--------------~w~~n~__%d___vs___%d~n~~g~--------------~w~~n~Yakuza");
					PlayerTextDrawLetterSize(s,MafiaCapture, 0.488333, 1.736888);
					PlayerTextDrawTextSize(s,MafiaCapture, 72.000015, 141.866683);
					PlayerTextDrawAlignment(s,MafiaCapture, 2);
					PlayerTextDrawColor(s,MafiaCapture, -1);
					PlayerTextDrawUseBox(s,MafiaCapture, true);
					PlayerTextDrawBoxColor(s,MafiaCapture, -208);
					PlayerTextDrawSetShadow(s,MafiaCapture, 0);
					PlayerTextDrawSetOutline(s,MafiaCapture, 1);
					PlayerTextDrawBackgroundColor(s,MafiaCapture, 51);
					PlayerTextDrawFont(s,MafiaCapture, 2);
					PlayerTextDrawSetProportional(s,MafiaCapture, 1);
					pTemp[s][pTextDrawMafia] = true;
					PlayerTextDrawShow(s, MafiaCapture);
				    mes = "";
				    format(mes, sizeof(mes), "Losttime: %d~n~------------------~n~~r~%s~w~~n~~g~--------------~w~~n~__%d___vs___%d~n~~g~--------------~w~~n~%s", MAFIA_LOSTTIME,MAFIA_A, MAFIA_SCORE[0], MAFIA_SCORE2[0], MAFIA_B);
				    PlayerTextDrawSetString(s, MafiaCapture, mes);
					if(gNark[i][nOwner] == pData[s][pFraction])
					{
					    EnableGPSForPlayer(s,gMafiaCoord[i][0], gMafiaCoord[i][1], gMafiaCoord[i][2],4.0,6);
						pTemp[s][pGPS] = true;
						SendClientMessage(s,COLOR_GREEN,"На GPS навигаторе показано место встречи, выключить: {FFCD00}/gps");
					}
				}
			}
		    break;
		}
	}
	return 1;
}



CMD:capture(playerid, params[])
{
	if(IsAGang(playerid))
	{
		new h; gettime(h);
		if(h < 14 || h > 20 ) return SendClientMessage(playerid, CGRAY, "Использовать команду можно только с 14:00 до 20:00");
		if(pData[playerid][pRank] < 6) return SendClientMessage(playerid,COLOR_LIGHTRED,"Функция доступная с 7 ранга и выше!");
		new faction = pData[playerid][pFraction];
		if(!IsInAllowed(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Ваша банда уже учавствует в захвате зон!");
		if(IsCapture == 1 || PustZone == 1) return SendClientMessage(playerid, COLOR_GREY, "Уже происходит захват одной из зон. Дождитесь окончания!");
		if(CaptureTimes[pData[playerid][pFraction]-3] >= 3) return SendClientMessage(playerid, COLOR_GREY, "Вы уже 3 раза захватывали зону");
		if(!CaptureBegin) return SendClientMessage(playerid, COLOR_GREY, "В данный момент нельзя каптить подождите!");
		//    if(zGangTime[faction] <= 0) return SendClientMessage(playerid, -1, "Сегодня ваша банда больше не может учавствовать в захвате");
		new bool: dostup = false;
		for(new i; i < MAX_GZONE;i++)
		{
			if(PlayerToKvadrat(playerid,GZMZ[i][gCoords][0], GZMZ[i][gCoords][1],GZMZ[i][gCoords][2],GZMZ[i][gCoords][3]) && ZoneOnBattle[i] == 0)
			{
				switch(i)
				{
					case 2, 7, 21, 33, 70: dostup = true;
				}
				if(dostup == true) return SendClientMessage(playerid, COLOR_GREY, "Эта основная территория банды её нельзя захватить");
				if(GZMZ[i][gFrak] > 0)
				{
					if(GZMZ[i][gFrak] == faction) return SendClientMessage(playerid, COLOR_GREY, "Эта територия принадлежит вашей банде!");

					if(IsPlayerInBandOnline(faction) < D_SELOVER) return SendMes(playerid,COLOR_GREY, "В вашей банде мало игроков онлайн! (Требуется: %d)", D_SELOVER);
					if(IsPlayerInBandOnline(GZMZ[i][gFrak]) < D_SELOVER) return SendMes(playerid,COLOR_GREY, "У банды %s мало игроков! (Требуется: %d)",GetGangName(GZMZ[i][gFrak]), D_SELOVER);

					f(mes, "{FFFFFF}Эта территория принадлежит %s\nВы уверены что хотите её захватить?",GetGangName(GZMZ[i][gFrak]));
					ShowPlayerDialog(playerid,dZaxvat,DIALOG_STYLE_MSGBOX,"{F3FF02}Захват территории",mes,"Да","Нет");
				}
				else
				{
					if(IsPlayerInBandOnline(faction) < D_SELOVER) return SendMes(playerid,COLOR_GREY, "В вашей банде мало игроков онлайн! (Требуется: %d)", D_SELOVER);
                    mes = "";
					format(mes, sizeof(mes), "%s начали захват нейтральной территорий, в районе %s",GetGangName(faction), GetPlayerZone(playerid, 0));
					for(new d = 3; d < 8; d++)
					{
						SendFMes(d, COLOR_LIME, mes);
					}
					format(mes, sizeof(mes), "%s %s инициировал захват ",gFractionRankName[pData[playerid][pFraction]-1][pData[playerid][pRank]-1],pData[playerid][pNickname]);
					SendFMes(faction, COLOR_LIME, mes);

					GangZoneFlashForAll(GZMZ[i][idm],GetGZColorF(faction));
					GZSafeTime = 420;
					GZMZ[i][gNapad] = faction;
					ZoneOnBattle[i] = 1;
					GangInfo[faction][capture] = 1;
					GangInfo[GZMZ[i][gFrak]][capture] = 1;
					GangInfo[GZMZ[i][gFrak]][captureid] = 0;
					GangInfo[faction][captureid] = 1;
					GangInfo[faction][gangnumber] = 1;
					GangInfo[GZMZ[i][gFrak]][gangnumber] = 0;
					PustZone = 1;
					ZoneOnBattle[i] = 1;
					CaptureTimes[pData[playerid][pFraction]-3]++;
					mes = "";
					f(mes, "UPDATE `capturegang` SET `gang%d` = '%d'", pData[playerid][pFraction], CaptureTimes[pData[playerid][pFraction]-3]);
					sql_query(zConn, mes); mes = "";
					CaptureStart(faction, 0);
					CaptureBegin = false;
                    SetTimer("CaptureOnStart",1200000,false);
				}
				break;
			}
		}
	}
	return 1;
}
forward CaptureOnStart();
public CaptureOnStart()
{
    CaptureBegin = true;
    mes = "";
    format(mes, sizeof(mes), "[F] Захватывать территорию можно снова!");
	for(new d = 3; d < 8; d++)
	{
		SendFMes(d, -1, mes);
	}
}
CMD:settime(playerid, params[])
{
	if(pData[playerid][pAdmin] < 4) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /settime [время]");
	if(params[0] < 0 || params[0] > 23) return SendClientMessage(playerid, COLOR_GREY, "Время от 0 до 23!");
	SendMes(playerid, -1, "Время установлено: %i", params[0]);
	SetWorldTime(params[0]);
	return 1;
}
CMD:weather(playerid, params[])
{
	if(pData[playerid][pAdmin] < 4) return 1;
	new string2[2000];
	format(string2,sizeof(string2),"1) Разные версии синих небес/облаков \
		\n2) Разные версии синих небес/облаков  \
		\n3) Разные версии синих небес/облаков \
		\n4) Разные версии синих небес/облаков \
		\n5) Разные версии синих небес/облаков \
		\n6) Разные версии синих небес/облаков \
		\n7) Разные версии синих небес/облаков \
		\n8) Гроза \
		\n9) Пасмурно и туман \
		\n10) Ясное синее небо ");
	format(string2,sizeof(string2),"%s\n11) Обжигающая жаркая \
		\n12) Очень тусклый, бесцветный, смутные \
		\n13) Очень тусклый, бесцветный, смутные \
		\n14) Очень тусклый, бесцветный, смутные \
		\n15) Очень тусклый, бесцветный, смутные \
		\n16) Тусклый, неясный, дождливые \
		\n17) Опаливая горячие \
		\n18) Опаливая горячие \
		\n19) Песчаная буря",string2);
	format(string2,sizeof(string2),"%s\n20) Туманный/зеленоватые \
		\n21) Очень темное, gradiented очертание, пурпурные \
		\n22) Очень темное, gradiented очертание, зеленые \
			\n23) Изменения бледного апельсина \
		\n26) Изменения бледного апельсина \
		\n27) Изменения свежий синие \
		\n29) Изменения свежий синие \
		\n30) Изменения темного, неясного, чирка",string2);
	format(string2,sizeof(string2),"%s\n32) Изменения темного, неясного, чирка \
		\n33) Темный, неясный, коричневый \
		\n34) Синий/пурпурный, регулярный \
		\n35) Тусклые коричневые \
		\n36) Яркий, туманный, апельсин \
		\n38) Яркий, туманный, апельсин \
		\n39) Чрезвычайно яркие",string2);
	format(string2,sizeof(string2),"%s\n40) Ярезвычайно яркие \
		\n42) Синий/пурпурные неясные \
		\n43) Темные токсичные облака \
		\n44) Черное/белое небо \
		\n45) Черное/пурпурное небо \
		\n81) Небо темнеет независимо от времени суток \
		\n91) Небо становится черным как ночью \
		\n200) Приближается шторм",string2);
	ShowPlayerDialog(playerid, dWeather, 2,"Погода",string2,"Принять","Отмена");
	return 1;
}
CMD:templeader(playerid, params[])
{
	//if(pData[playerid][pAdmin] < 4) return 1; ЗБТ
	if(pTemp[playerid][pTempLeader] == 1)
	{
		SetPlayerArmourEx(playerid, 0);
		ResetPlayerWeaponsEx(playerid);
		pData[playerid][pFraction] = 0;
		pData[playerid][pRank] = 0;
		pData[playerid][pFractionSkin] = 0;
		pData[playerid][pSubfraction] = 0;
		ResetPlayerWeaponsEx(playerid);
		SetPlayerColor(playerid,0xFFFFFF11);
		SetPlayerSkin(playerid,pData[playerid][pSkin]);
		pTemp[playerid][pTempLeader] = 0;
		return 1;
	}
	new fractionid, subleader;
	if(sscanf(params, "dd", fractionid,subleader)) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /templeader ([id] фракции, [id] = подразделения)");
	if(fractionid == 0)
	{
	    auninviteplayer(playerid);
	}
	if(fractionid < 1 || fractionid > FRACTION_COUNT+1) return SendClientMessage(playerid,CWHITE,"» /templeader ([id] фракции, [id] = подразделения)");
	//if(fractionid == 1) return SendClientMessage(playerid,CWHITE,"» /templeader ([id] фракции, [id] = подразделения)");
	new bool:dostup = false;
	switch(fractionid)
	{
	case 2: dostup = true;
	case 8..11: dostup = true;
	}
	if(dostup == true)
	{
		if(subleader < 0 || subleader > 3) return SendClientMessage(playerid,CWHITE,"» /templeader ([id] фракции, [id] = подразделения)");
	}
	else subleader = 0;
	new rank;
	if(subleader != 0)
	{
		rank = gFractionRankCount[fractionid-1]-1;
	}
	else rank = gFractionRankCount[fractionid-1];
	pData[playerid][pFraction] = fractionid;
	pData[playerid][pRank] = rank;
	pData[playerid][pSubfraction] = subleader;
	pData[playerid][pJob] = 0;
	UpdatePlayerData(playerid, "job", pData[playerid][pJob]);
	pData[playerid][pFractionSkin] = GetPlayerSkin(playerid);
	SetPlayerColor(playerid,gFractionColor[fractionid-1]);
	pTemp[playerid][pTempLeader] = 1;
//	mes = "";
	f(mes, "%s[%d] назначил(а) себя врем. лидером \"%s\" (подразделение = %d, L=%d)",pData[playerid][pNickname],playerid,gFractionName[fractionid-1],subleader,fractionid);
//	AdminChat(CGRAY,mes);
	SendClientMessage(playerid, -1, mes);
	SendClientMessage(playerid, -1, "Чтобы быстро тепешнутся на спавн введите команду /spawnz");
	return 1;
}
CMD:makeleader(playerid, params[])
{
	if(pData[playerid][pFraction] - 1 != 10) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /makeleader [id игрока]");
	if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Неверный ID");
	if(pData[params[0]][pAdmin]) return SendClientMessage(playerid,CWHITE,"» Данного игрока нельзя назначить министром");
	if(pData[params[0]][pWarnc]) return SendClientMessage(playerid,CWHITE,"» У игрока есть варн");
	SetPVarInt(playerid,"actplayerid",params[0]);
	new messs[150];
	f(messs,"%s%s\n",mes,gFractionName[1]);
	f(messs,"%s%s\n",mes,gFractionName[11]);
	for(new i = 7; i < 10;i++)
	{
		f(messs,"%s%s\n",messs,gFractionName[i]);
	}
	ShowPlayerDialog(playerid,dLeaderskinAdm,2,pData[params[0]][pNickname],messs,"Далее","Отмена");
	return 1;
}
CMD:banlist(playerid, params[])
{
	if(pData[playerid][pAdmin] < 5) return 1;
	new want_text[256],want, sttr[2000];
	new level[32],namep[32];new string[100];
	mes = "";//new var[25];
	f(mes,  "SELECT `name`,`ip` FROM `rangeban` WHERE `id` > '0'");
	new Result: tt = sql_query(zConn, mes, QUERY_CACHED);
	format(want_text,sizeof(want_text),"IP\tИМЯ\n\n");
	strcat(sttr, want_text);
	for(new i;i<sql_num_rows(tt);i++)
	{
		if(sql_num_rows(tt))
		{
			sql_get_field_ex(tt, i, 0, namep);
			sql_get_field_ex(tt, i, 1, level);
		}
		format(want_text,sizeof(want_text), "{FFFFFF}%s\t%s\n", level, namep);
		strcat(sttr, want_text);
		want++;
	}
	if(want == 0) strcat(sttr, "Информация не найдена");
	format(string, 100, "{00D600}Показаны %i админов", want);
	ShowPlayerDialog(playerid, dMes, DIALOG_STYLE_MSGBOX, string, sttr, "Закрыть", "");
	return 1;
}

CMD:showadmin(playerid, params[])
{
	if(pData[playerid][pAdmin] < 5) return 1;
	new want_text[256],want, sttr[2000];
	new level,namep[32];new string[100];
	new online;
	mes = "";//new var[25];
	f(mes,  "SELECT `nickname`,`admin`,`adminonline` FROM `accounts` WHERE `admin` > '0'");
	new Result: tt = sql_query(zConn, mes, QUERY_CACHED);
	format(want_text,sizeof(want_text),"Уровень\tИмя\tЧасов играл\n\n");
	strcat(sttr, want_text);
	for(new i;i<sql_num_rows(tt);i++)
	{
		if(sql_num_rows(tt))
		{
			sql_get_field_ex(tt, i, 0, namep);
			level = sql_get_field_int_ex(tt, i, 1);
		 	online = sql_get_field_int_ex(tt, i, 2);
		}
		format(want_text,sizeof(want_text), "{FFFFFF}%d\t%s\t%s\n", level, namep, ConvertsAdmin(online));
		strcat(sttr, want_text);
		want++;
	}
	if(want == 0) strcat(sttr, "Информация не найдена");
	format(string, 100, "{00D600}Показаны %i админов", want);
	ShowPlayerDialog(playerid, dMes, DIALOG_STYLE_MSGBOX, string, sttr, "Закрыть", "");
	sql_free_result(tt);
	return 1;
}
CMD:showleader(playerid, params[])
{
	if(pData[playerid][pAdmin] < 5) return 1;
	mes = "";
	new want;
	new string[100];
	f(mes,  "SELECT `nickname`,`fraction`,`rank`,`subfraction` FROM `accounts` WHERE `fraction` > 0");
	new Result:r = sql_query(zConn, mes, QUERY_CACHED);
	if(sql_num_rows(r))
	{
		f(mes,  "Имя\tФракция\tID подразделения\n\n");
		new nn[MAX_PLAYER_NAME], rank, subfraction, fraction;
		for(new i; i<sql_num_rows(r); i++)
		{
			sql_get_field_ex(r, i, 0, nn);
			fraction = sql_get_field_int_ex(r, i, 1);
			rank = sql_get_field_int_ex(r, i, 2);
			subfraction = sql_get_field_int_ex(r, i, 3);
			if(rank == gFractionRankCount[fraction-1])
			{
				f(mes,  "%s{FFFFFF}%s\t\t%s\t%d\n",mes, nn, gFractionName[fraction-1], subfraction);
				want++;
			}
		}
		format(string, 100, "{00D600}Показаны %i игроков", want);
		ShowPlayerDialog(playerid, 0000, 0, string, mes,"Закрыть", "");
	}
	else SendClientMessage(playerid, CGRAY, "Произошла ошибка базы данных");
	sql_free_result(r);
	return 1;
}

//CMD:aunfjihaosj(playerid, params[]) return _auninvite(playerid, params);
CMD:auninvite(playerid, params[])
{
	if(pData[playerid][pAdmin] < 5) return 1;
	new actplayerid;
	if(sscanf(params, "u", actplayerid)) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /auninvite ([id] = игрока)");
	if(!IsPlayerConnected(actplayerid)) return SendClientMessage(playerid,CWHITE,"» Неверный ID игрока");
	if(!pData[actplayerid][pFraction]) return SendClientMessage(playerid,CWHITE,"» Игрок не состоит во фракции");
	mes = "";
	f(mes, "UPDATE `accounts` SET `fraction` = '0', `rank` = '0', `fractionskin` = '0', `subfraction` = '0' WHERE `id` = '%d'",pData[actplayerid][pMysqlID]);
	sql_query(zConn, mes, QUERY_THREADED);
	pData[actplayerid][pFraction] = 0;
	pData[actplayerid][pRank] = 0;
	pData[actplayerid][pFractionSkin] = 0;
	pData[actplayerid][pSubfraction] = 0;
	SetPlayerColor(actplayerid,0xFFFFFF11);
	mes = "";
	f(mes, "» Администратор %s уволил Вас из организации",pData[playerid][pNickname]);
	SendClientMessage(actplayerid,CBADINFO,mes);
	f(mes, "» %s был уволен из организации",pData[actplayerid][pNickname]);
	SendClientMessage(playerid,CINFO,mes);
	SetPlayerSkin(actplayerid, pData[actplayerid][pSkin]);
	return 1;
}
ALT:auninvite:aunfjihaosj;
CMD:setleader(playerid, params[])
{
	if(pData[playerid][pAdmin] < 4) return 1;
	new actplayerid, skin, fractionid;
	if(sscanf(params, "udd", actplayerid, fractionid, skin)) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /setleader ([id] = игрока) ([id] = фракции) ([id] = скина)");

	if(fractionid == 0)
	{
		auninviteplayer(playerid);
	}
	if(skin > 299 || skin < 1) return SendClientMessage(playerid, COLOR_GREY, "ID скина от 1 до 299!");
	if(pData[actplayerid][pWarnc]) return SendClientMessage(playerid,CWHITE,"» У игрока есть варн");
	new
	tmpleader = -1,
	ids,
	nn[MAX_PLAYER_NAME];
	mes = "";
	f(mes,  "SELECT `nickname`,`id` FROM `accounts` WHERE `rank` = %d AND `fraction` = %d", gFractionRankCount[fractionid-1], fractionid);
	new Result:r = sql_query(zConn, mes, QUERY_CACHED);
	if(sql_num_rows(r))
	{
		for(new i; i<sql_num_rows(r); i++)
		{
			sql_get_field_ex(r, i, 0, nn);
			ids = sql_get_field_int_ex(r, i, 1);
		}
		if(GetPlayerID(nn) != -1)
		{
			auninviteplayer(GetPlayerID(nn));
		}
		else
		{
			f(mes, "UPDATE `accounts` SET `fraction` = '0', rank = '0', `fractionskin` = '0', `subfraction` = '0' WHERE `id` = '%s'", ids);
			sql_query(zConn, mes); mes = "";
			tmpleader = ids;
		}
	}
	new rank = gFractionRankCount[fractionid-1];
	mes = "";
	f(mes, "UPDATE `accounts` SET `fraction` = '%d', rank = '%d', `fractionskin` = '%d', `subfraction` = '0' WHERE `id` = '%d'",fractionid,rank,skin,pData[actplayerid][pMysqlID]);
	sql_query(zConn, mes); mes = "";
	pData[actplayerid][pSpawn] = 2;
	UpdatePlayerData(actplayerid, "spawn", 2);
	pData[actplayerid][pFraction] = fractionid;
	pData[actplayerid][pRank] = rank;
	pData[actplayerid][pFractionSkin] = skin;
	pData[actplayerid][pSubfraction] = 0;
	pData[actplayerid][pJob] = 0;
	UpdatePlayerData(actplayerid, "job", pData[playerid][pJob]);
	SetPlayerSkin(actplayerid, skin);
	SetPlayerColor(actplayerid,gFractionColor[fractionid-1]);
	if(tmpleader != -1)
	{
	    mes = "";
		f(mes, "» Обнаружена установленая лидерка на аккаунте №%d",tmpleader);
		SendClientMessage(playerid,COLOR_LIME,mes);
		SendClientMessage(playerid,-1," ((Игрок оффлайн: Лидерка снята ))");
	}
	mes = "";
	SendClientMessage(playerid,CWHITE,"ПРИМИЧАНИЕ: Внешность игрока сохранена и будет возвращена ему после увольнения");
	f(mes, "» Вы назначили %s[%d] лидером организации \"%s\"",pData[actplayerid][pNickname],actplayerid,gFractionName[fractionid-1]);
	SendClientMessage(playerid,CYELLOW,mes);
	f(mes, "» %s[%d] назначил Вас лидером организации \"%s\"",pData[playerid][pNickname],playerid,gFractionName[fractionid-1]);
	SendClientMessage(actplayerid,COLOR_YELLOW,mes);
	f(mes, "» [Внимание] Администратор %s[%d] назначил %s[%d] лидером организации \"%s\"",pData[playerid][pNickname],playerid,pData[actplayerid][pNickname],actplayerid,gFractionName[fractionid-1]);
	AdminChat(0xff0000ff,mes);
	return 1;
}

CMD:guitar(playerid, params[])
{
	if(pData[playerid][pAdmin] < 5) return 1;
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /guitar [id игрока] [1/0]");
	switch(params[1])
	{
	case 0:
		{
			RemovePlayerAttachedObject(params[0], 0);
			RemovePlayerAttachedObject(params[0], 1);
		}
	case 1:
		{
			SetPlayerAttachedObject(params[0],0,19319,1,-0.164000,0.251000,0.042999,-6.099999,0.000000,158.800048,0.749999,0.786000,0.727999);
			SetPlayerAttachedObject(params[0],1,19352,2,0.084000,0.008000,0.004000,-42.000000,86.699958,49.000000,1.000000,1.294000,1.162999);
		}
	}
	return 1;
}
CMD:closeconsert(playerid, params[])
{
	MoveObject(wallzal1,93.55663, 87.07695, 988.04486,2);
	MoveObject(wallzal2,116.16508, 86.86851, 988.04486,2);
	MoveObject(wallzal3,138.71852, 86.68595, 988.04486,2);
	return 1;
}
CMD:openconsert(playerid, params[])
{
	MoveObject(wallzal1,93.55663, 87.07695, 1014.14111,2);
	MoveObject(wallzal2,116.16508, 86.86851, 1014.14111,2);
	MoveObject(wallzal3,138.71852, 86.68595, 1014.14111,2);
	return 1;
}
/*CMD:rentcar(playerid, params[])
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,CWHITE,"» Вы должны быть в т/с");
	new arid = GetArendCarID(GetPlayerVehicleID(playerid));
	if( arid != -1 )
	{
		if(GetPVarInt(playerid, "ArendKey") == -1)
		{
			if(ArendInfo[arid][aPlayerID] == INVALID_PLAYER_ID || !IsPlayerConnected(ArendInfo[arid][aPlayerID]))
			{
				if(GetPlayerMoney(playerid) >= ArendInfo[arid][aCost])
				{
					SetPVarInt(playerid, "ArendKey", arid);
					TransferMoney(playerid,-1,ArendInfo[arid][aCost],"arendaveh");
					ArendInfo[arid][aPlayerID] = playerid;
					SendClientMessage(playerid, 0xFFFFFFFF, "Вы успешно арендовали это ТС");
					ShowPlayerDialog(playerid, 0, 0, "Вы успешно арендовали транспртное средство", "{FFFFFF}Список доступных комманд:\n\n{9ACD32}/lock 3{FFFFFF} - Закрыть/Открыть арендованный транспорт\n{9ACD32}/unrent{FFFFFF} - Отказаться от аренды.\n\n{AFAFAF}При отдалении от ТС на 2км контракт автоматически расторгается.", "Закрыть", "");
				}
				else
				{
					SendClientMessage(playerid, 0xAFAFAFFF, "У вас не хватает денег");
					RemovePlayerFromVehicle(playerid);
				}
			}
			else
			{
				SendClientMessage(playerid, 0xAFAFAFFF, "Этот транспорт уже арендуют");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else
		{
			SendClientMessage(playerid,0xAFAFAFFF,"Вы уже арендуете транспорт");
			RemovePlayerFromVehicle(playerid);
		}
	}
	return 1;
}*/
CMD:consert(playerid, params[])
{
	if(pData[playerid][pAdmin] < 5) return 1;
	new id;
	if(sscanf(params, "d", id)) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /consert [1 - 5(отключить)]");
	switch(id)
	{
	case 0: ConsertSuper[14] = -1;
	case 1: ConsertSuper[14] = 18643;
	case 2: ConsertSuper[14] = 18691;
	case 3: ConsertSuper[14] = 18728;
	case 4: ConsertSuper[14] = 18717;
	case 5: ConsertSuper[14] = 1;
	}
	if(ConsertSuper[14] != -1)
	{
		for(new i; i<13; i++)
		{
			if(ConsertSuper[i] != -1) DestroyObject(ConsertSuper[i]);
			if(ConsertSuper[14] == 1) CreateExplosion(gEffectConsert[i][0], gEffectConsert[i][1] , gEffectConsert[i][2], 2, 10.0);
			if(ConsertSuper[14] == 18643) ConsertSuper[i] = CreateObject(ConsertSuper[14], gEffectConsert[i][0], gEffectConsert[i][1], gEffectConsert[i][2], gEffectConsert[i][3], gEffectConsert[i][4], gEffectConsert[i][5]);
			else ConsertSuper[i] = CreateObject(ConsertSuper[14], gEffectConsert[i][0], gEffectConsert[i][1], gEffectConsert[i][2], gEffectConsert[i][3], gEffectConsert[i][4], gEffectConsert[i][5]);
		}
	}
	else
	{
		for(new i; i<13; i++)
		{
			if(ConsertSuper[i] >= 0) DestroyObject(ConsertSuper[i]);
		}
	}
	return 1;
}
CMD:music(playerid, params[])
{
	if(pData[playerid][pAdmin] < 5) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /consert [1 - 5(отключить)]");
	mes = "";
	switch(params[0])
	{
	case 0: f(mes, "» http://forum.rp-gamelive.ru/myzuka.ru_03_last_christmas.mp3");
	case 1: f(mes, "» http://forum.rp-gamelive.ru/diskotavaria.mp3");
	case 2: f(mes, "» http://forum.rp-gamelive.ru/MerryChristmas.mp3");
	case 3: f(mes, "» http://forum.rp-gamelive.ru/letssnow.mp3");
	case 4: f(mes, "» http://forum.rp-gamelive.ru/ABBA-Happy_New_Year.mp3");
	}
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(IsPlayerInRangeOfPoint(i, 55.0, 106.7575,67.4891,986.4297))
		{
			PlayAudioStreamForPlayer(i, mes);
		}
	}
	return 1;
}
/*CMD:race(playerid, params[])
{
	if(pData[playerid][pAdmin] < 5) return 1;
	new id;
	if(sscanf(params, "d", id)) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /race [0 - 1]");
//	RaceStart = 1;
//	GZRaceTime = 180;

	RaceStartT[0] = 0;
	RaceStartT[1] = 0;

	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(pTemp[i][pRaceIvite]) pTemp[i][pRaceIvite] = 0;
	}
	RaceCar1 = 0;

	RaceStartT[id] = 1;
	switch(id)
	{
		case 0:
		{
			SendClientMessageToAll(-1, "{00CB9C}[Гонка по LV] {669999}Администратор досрочно начал проведение гонок!");
			RaceCar1 = RaceCar[random(5)];
		}
		case 1:
		{
			SendClientMessageToAll(-1, "{00CB9C}[Гонка по Горе Чиллиад] {669999}Администратор досрочно начал проведение гонок!");
			RaceCar1 = RaceCar2[random(5)];
		}
	}
	RaceStart1 = 0;
	BRace = 0;
//	RaceAll = 0;
	TotalRace = 0;
	for(new j; j < 10; j++)
	{
		ResultFirst[j] = -1;
		Result[j] = -1;
		gRacePlaceCar[j] = 0;
	}
	return 1;
}*/
CMD:getrace(playerid, params[])
{
	new ss[MAX_RACE],
	sss[250],
	zValv;
	mes = "";
	for(new i; i < MAX_RACE; i++)
	{
		if(Result[i] != -1)
		{
			ss[i] = Result[i];
			sss[i] = ResultTime[i];
			f(mes, "» {FFFFFF}%s %d. %s | Время: %s\n", mes, i+1, pData[ss[i]][pNickname], Converts(sss[i]));
			zValv++;
		}
	}
	if(!zValv) f(mes, "» {FFFFFF}Список победителей пуст\n");
	ShowPlayerDialog(playerid,dMes,DIALOG_STYLE_MSGBOX,"{ffcf00}Список победителей",mes,"Закрыть","");
	return 1;
}
CMD:ears(playerid, params[])
{
	if(pData[playerid][pAdmin] < 4) return 1;
	new string[127];
	if(SMSEARS == 0)
	{
		format(string, 127, "[A] %s[%d] включил прослушку SMS сообщений ",pData[playerid][pNickname], playerid);
		AdminChat(COLOR_GREY, string);
		SMSEARS = 1;
	}
	else
	{
		format(string, 127, "[A] %s[%d] выключил прослушку SMS сообщений",pData[playerid][pNickname], playerid);
		AdminChat(COLOR_GREY, string);
		SMSEARS = 0;
	}
	return 1;
}
CMD:kick(playerid, params[])
{
	if(pData[playerid][pAdmin] < 2) return 1;
	if(sscanf(params, "uS(none)[36]", params[0], params[1])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /kick [id игрока] [причина]");
	if(!strcmp(pData[params[0]][pNickname], "Sem_Nicholson", true)) return 1;
	if(!strcmp(pData[params[0]][pNickname], "Tim_Starker", true)) return 1;
	if(!IsPlayerConnected(params[0]) || IsKicked(params[0])) return SendClientMessage(playerid,CWHITE,"» Неверный ID");
	if(IsPlayerNPC(params[0])) return SendClientMessage(playerid, -1, "Бота кикнуть нельзя");
	mes = "";
	if(strcmp(params[2], "none", false) == 0)
		f(mes, "» Администратор %s кикнул игрока %s. Причина: %s",pData[playerid][pNickname],pData[params[0]][pNickname],params[1]);
	else
	    f(mes, "» Администратор %s кикнул игрока %s.",pData[playerid][pNickname],pData[params[0]][pNickname]);


	SendAdminMessage(COLOR_LIGHTRED,mes,params[0]);
	NewKick(params[0]);
	return 1;
}


CMD:viskastatus(playerid, params[])
{
    if(!pData[playerid][pSkillGun]) return SendClientMessage(playerid, -1, "» Вы не приобретали вышку");
	mes = "";
	f(mes, "Количество денег: %d\nКоличество бензина: %d", gViska[pData[playerid][pSkillGun]][vvMoney], gViska[pData[playerid][pSkillGun]][vvFuel]);
	ShowPlayerDialog(playerid, dMes, DIALOG_STYLE_MSGBOX, "{ffcf00}Статус вышки", mes, "Закрыть", "");
	return 1;
}





CMD:viskaget(playerid, params[])
{
    if(!pData[playerid][pSkillGun]) return SendClientMessage(playerid, -1, "» Вы не приобретали вышку");
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /viskaget [денег]");
	if(gViska[pData[playerid][pSkillGun]][vvMoney] < params[0]) return SendMes(playerid, -1, "» Сейчас у Вас %d$", gViska[pData[playerid][pSkillGun]][vvMoney]);
	gViska[pData[playerid][pSkillGun]][vvMoney] -= params[0];
	TransferMoney(playerid,-1,params[0],"getviska");
	SendMes(playerid, COLOR_GREEN, "Операция успешна! Вы сняли %d$ осталось %d$", params[0], gViska[pData[playerid][pSkillGun]][vvMoney]);
	return 1;
}

CMD:buy(playerid, params[])
{
	if(GetPlayerInterior(playerid) == 0) return 1;
    new id = pTemp[playerid][pSelectedBusinessID];
	if(id < 0) return 1;
	new products = gBusiness[id][busiProduct];
	if(gBusiness[id][busiOwnerID])
	{
		if(!products) return SendClientMessage(playerid,CWHITE,"» К сожалению, товара не осталось");
	}
	new type = gBusiness[id][busiType];
	switch(type)
	{
		case 1: // Прод. магазин
			{
				if(!pData[playerid][pHouse]) return SendClientMessage(playerid,CWHITE,"» У Вас нет дома");
//				new houseid = pData[playerid][pHouse]-1;
				if(pTemp[playerid][pCarryProducts]) return SendClientMessage(playerid,CWHITE,"» Вы уже купили продукты");
				ShowPlayerDialog(playerid,dGrocer,1,"{ffcf00}Магазин продуктов","{"#cWHITE"}Здесь Вы можете купить продукты которые будут храниться в вашем холодильнике\nУкажите количество продуктов которое Вы хотите купить:","ОК","Отмена");
			}
		case 2: //Закусочная
			{
				//if(pData[playerid][pHealth] > 95.0) return SendClientMessage(playerid,CWHITE,"» Ошибка: У Вас достаточный уровень сытости.");
				ShowPlayerEateryTD(playerid);
			}
		case 3: //24/7
			{
				mes = "";
				for(new i;i<SHOP_OBJECTS;i++)
				{
				    if(i == 6) f(mes, "%s » {33AAFF}%s\n",mes, gShopObject[i]);
					else f(mes, "%s » {33AAFF}%s {FFFFFF}%d$\n",mes,gShopObject[i],gShopPrice[i]);
				}
				ShowPlayerDialog(playerid,dShop,2,"{009AFF}Магазин 24/7",mes,"Купить","Выход");
			}
		case 4..5: //Бар, клуб
			{
				ShowPlayerBarTD(playerid);
			}
		case 7:
			{
			    if(GetPVarInt(playerid, "OfferInviteSubLeader") == 1
				|| GetPVarInt(playerid, "OfferInviteLeader") == 1) return 1;

				if(pData[playerid][pFraction]) return SendClientMessage(playerid, CGRAY, "Вы состоите во фракции скин купить нельзя");
				if(pTemp[playerid][pJustTP])
				{
					pTemp[playerid][pJustTP] = false;
				}
				else
				{
					if(!pTemp[playerid][pChangingSkin])
					{
						pTemp[playerid][pChangingSkin] = true;
						new Float: pos[4];
						GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
						GetPlayerFacingAngle(playerid, pos[3]);
						SetPVarFloat(playerid, "posx", pos[0]);
						SetPVarFloat(playerid, "posy", pos[1]);
						SetPVarFloat(playerid, "posz", pos[2]);
						SetPVarFloat(playerid, "posa", pos[3]);
						SetPVarInt(playerid, "interior", GetPlayerInterior(playerid));
						SetPVarInt(playerid, "vw", GetPlayerVirtualWorld(playerid));
						TogglePlayerControllable(playerid, 0);
						SetPlayerInterior(playerid, 14);
						SetPlayerVirtualWorld(playerid, playerid + 1);
						SetPlayerPos(playerid, 258.7497, -41.3828, 1002.0234);
						SetPlayerFacingAngle(playerid, 70.0);
						SetPlayerCameraPos(playerid, 258.7498 + (2.5 * floatsin(-70.0, degrees)), -41.3828 + (2.5 * floatcos(-70.0, degrees)), 1002.5);
						SetPlayerCameraLookAt(playerid, 258.7497, -41.3828, 1002.0234);
						SetPVarInt(playerid, "clothes_class", 1);
						SetPVarInt(playerid, "clothes_sel", 0);
						SetPVarInt(playerid, "curskin", GetPlayerSkin(playerid));
						ShowPlayerClothesTD(playerid);
					}
				}
			}
		case 8: //Автомастерская
			{
				ShowPlayerDialog(playerid,dMes,0,"Автомастерская","{"#cWHITE"}Чтобы использовать функции СТО, заедьте на эстакаду и введите /rvs","OK","");
			}
		case 9:
			{
				if(!(pData[playerid][pLicenses][LIC_WEAP])) return SendClientMessage(playerid,CWHITE,"» У Вас нет лицензии на оружие!");
				ShowMenuAmmo(playerid);
			}
		case 10:
			{
				if(num[playerid] == 0) ShowPlayerDialog(playerid, 1216, DIALOG_STYLE_LIST, "Магазин пиротехники", "{ffffff}1 » Шумовые петарды (4 шт.)\t\t{9c65ff}1400$\n{ffffff}2 » Световые петарды (4 шт.)\t\t{9c65ff}2500$\n{ffffff}3 » Дымовая шашка (3 шт.)\t\t{9c65ff}3000$\n{ffffff}4 » Одиночная ракета (3 шт.)\t\t{9c65ff}4500$\n5 » Салют\t\t\t\t{9c65ff}11000$\n5 » Большой салют\t\t\t{9c65ff}15000$", "Выбрать", "Отмена");
				else ShowPlayerDialog(playerid, 1916, DIALOG_STYLE_MSGBOX, "Магазин пиротехники", "У Вас с собой уже есть пиротехнические изделия, покупка новых заменит их\nВы уверены что хотите продолжить?", "Да", "Нет");
			}
		case 11:
			{
				ShowPlayerDialog(playerid,dRestoran,2,"{ffcf00}Меню ресторана","1 » Напитки\n2 » Салаты\n3 » Горячие блюда\n4 » Десерты","Выбрать","Выход");
			}
		case 12:
			{
				if(!(pData[playerid][pLicenses][LIC_WEAP])) return SendClientMessage(playerid,CWHITE,"» У Вас нет лицензии на оружие!");
				ShowPlayerDialog(playerid, dDutyGun, 2, "Пейнтбольное снаряжение", "{FFFFFF}Бронежилет\nDesert Eagle\nM4", "Принять", "Отмена");
			}
		case 13:
		    {
		        ShowPlayerDialog(playerid,dBuyPhoneSot,2,"{ffcf00}Магазин Телефонов","1 » {33AAFF}Сотовый телефон {FFFFFF}350$\n2 » {33AAFF}Сим-Карта {FFFFFF}100$\n3 » {33AAFF} Модель телефона","Выбрать","Выход");

		    }
		case 14:
		    {
		        ShowPlayerDialog(playerid,dBuyObjectPlayer,2,"{ffcf00}Магазин Аксессуаров","1 » Очки\n2 » Шляпы","Выбрать","Выход");
		    }
		case 15:
		    {
		        _guperbuy(playerid, "");
			}
		case 16:
		    {
		        _guperbuyy(playerid, "");
		    }
	}
	return 1;
}

CMD:buyviska(playerid, params[])
{
    if(!(pData[playerid][pLicenses][LIC_VISKA])) return SendClientMessage(playerid,CWHITE,"» У Вас нет лицензии на бизнес!");
	for(new i; i < 10; i++)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 13.0, gViska[i][vvX],gViska[i][vvY],gViska[i][vvZ]))
	    {
	        if(GetPlayerMoneyEx(playerid) < 1000000) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег");
	        mes = "";
			f(mes, "UPDATE `viska` SET `owner` = '%s', `status` = '1', `money` = '0' WHERE id = '%d'",pData[playerid][pNickname],gViska[i][vvID]);
			sql_query(zConn, mes); mes = "";
			pData[playerid][pSkillGun] = i;
			TransferMoney(playerid,-1,1000000,"viskabuy");
			UpdatePlayerData(playerid, "skillgun", pData[playerid][pSkillGun]);
			strmid(gViska[i][vvOwner], pData[playerid][pNickname], 0, MAX_PLAYER_NAME, 999);
			mes = "";
		    f(mes, "{FFCD00}ID: {FFFFFF}%d\n{FFCD00}Владелец: {FFFFFF}%s", gViska[i][vvID], gViska[i][vvOwner]);
            UpdateDynamic3DTextLabelText(Viska3D[i],-1,mes);
	        break;
		}
	}
	return 1;
}
CMD:load(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid);
	if(vehicleid >= aRazvoz[0] && vehicleid <= aRazvoz[1])
	{
 		if(IsPlayerInVehicle(playerid, vehicleid))
		{
            if(IsPlayerInRangeOfPoint(playerid, 13.0, -27.2075,40.4039,3.1172))
            {
				if(pTemp[playerid][LoadCar]) return SendClientMessage(playerid,CWHITE,"» Подождите, уже идет загрузка {8f68ff}винограда");
                if(gVehicleDrugs[vehicleid][DrugsKG] >= 100) return SendClientMessage(playerid,CWHITE,"» У Вас уже загружен {8f68ff}виноград");
                if(ZavodInfo[4] < 100) return SendClientMessage(playerid,CWHITE,"» На ферме очень мало {8f68ff}вингорада");
				pTemp[playerid][LoadCar] = true;
				TogglePlayerControllable(playerid,0);
                SetTimerEx("LoadJob",5000,false,"dddd",playerid,100,0,vehicleid);
                SendClientMessage(playerid, COLOR_LIME, "Пожалуйста, подождите пока идет загрузка...");
            }
		}
	}//FuelInfo[1]
	if(vehicleid >= aPesok[0] && vehicleid <= aPesok[1])
	{
 		if(IsPlayerInVehicle(playerid, vehicleid))
		{
            if(IsPlayerInRangeOfPoint(playerid, 13.0, 365.3618,868.3433,20.4063))
            {
                if(pTemp[playerid][LoadCar]) return SendClientMessage(playerid,CWHITE,"» Подождите, уже идет загрузка {ffae00}песка");
                if(gVehicleDrugs[vehicleid][DrugsKG] >= 1000) return SendClientMessage(playerid,CWHITE,"» У Вас уже загружен {ffae00}песок");
                if(FuelInfo[1] < 1000) return SendClientMessage(playerid,CWHITE,"» Состояние песка не позволяеться Вам загрузиться");
                SendClientMessage(playerid, COLOR_LIME, "Пожалуйста, подождите пока идет загрузка...");
                pTemp[playerid][LoadCar] = true;
                TogglePlayerControllable(playerid,0);
                SetTimerEx("LoadJob",5000,false,"dddd",playerid,1000,1,vehicleid);
            }
		}
	}
	return 1;
}
forward LoadJob(playerid, value, job, vehicleid);
public LoadJob(playerid, value, job, vehicleid)
{
	switch(job)
	{
	    case 0:
	    {
		    SendClientMessage(playerid, COLOR_GREEN, "» Вы загрузили 100 кг винограда");
			if(IsValid3DTextLabel(pTemp[playerid][pVodka3DText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pVodka3DText]);
			if(!IsValid3DTextLabel(pTemp[playerid][pVodka3DText])) pTemp[playerid][pVodka3DText] = CreateDynamic3DTextLabel("Грузовик\n {FFCD00}Загруженно: 100 кг",COLOR_GREEN,0.0,0.0,1.5,20.0,INVALID_PLAYER_ID,vehicleid);
			ZavodInfo[4] -= value;
			pTemp[playerid][LoadCar] = false;
			gVehicleDrugs[vehicleid][DrugsKG] = value;
			gVehicleDrugs[vehicleid][DrugsStatus] = true;
			TogglePlayerControllable(playerid,1);
		}
		case 1:
		{
		    SendClientMessage(playerid, COLOR_GREEN, "» Вы загрузили 1000 кг песка");
			if(IsValid3DTextLabel(pTemp[playerid][pPesok3DText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pPesok3DText]);
			if(!IsValid3DTextLabel(pTemp[playerid][pPesok3DText])) pTemp[playerid][pPesok3DText] = CreateDynamic3DTextLabel("Песок\n {FFCD00}Загруженно: 1000 кг",COLOR_GREEN,0.0,0.0,1.5,20.0,INVALID_PLAYER_ID,vehicleid);
			FuelInfo[1] -= value;
			pTemp[playerid][LoadCar] = false;
			gVehicleDrugs[vehicleid][DrugsKG] = value;
			gVehicleDrugs[vehicleid][DrugsStatus] = true;
		    TogglePlayerControllable(playerid,1);
		}
	}
}
forward UnLoadJob(playerid, value, job, vehicleid);
public UnLoadJob(playerid, value, job, vehicleid)
{
	switch(job)
	{
	    case 0:
	    {
	        ZavodInfo[2] += value;
         	gVehicleDrugs[vehicleid][DrugsKG] = 0;
          	if(IsValid3DTextLabel(pTemp[playerid][pVodka3DText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pVodka3DText]);
           	SendClientMessage(playerid, COLOR_GREEN, "» Вы разгрузили 100 кг винограда");
            pTemp[playerid][pWorkSalary] += 220;
            pTemp[playerid][LoadCar] = false;
            TogglePlayerControllable(playerid,1);
	    }
		case 1:
		{
		    ZavodInfo[0] += value;
      		gVehicleDrugs[vehicleid][DrugsKG] = 0;
        	if(IsValid3DTextLabel(pTemp[playerid][pPesok3DText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pPesok3DText]);
         	SendClientMessage(playerid, COLOR_GREEN, "» Вы разгрузили 1000 кг песка");
          	pTemp[playerid][pWorkSalary] += 250;
          	pTemp[playerid][LoadCar] = false;
          	TogglePlayerControllable(playerid,1);
		}
	}
}

CMD:unload(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid);
	if(vehicleid >= aRazvoz[0] && vehicleid <= aRazvoz[1])
	{
 		if(IsPlayerInVehicle(playerid, vehicleid))
		{
            if(IsPlayerInRangeOfPoint(playerid, 13.0, -23.0520,-271.0973,5.4297))
			{
			    if(pTemp[playerid][LoadCar]) return SendClientMessage(playerid,CWHITE,"» Подождите, уже идет разгрузка {8f68ff}винограда");
			    if(ZavodInfo[2]+100 > 10000) return SendClientMessage(playerid,CWHITE,"» На заводе достаточно {8f68ff}винограда");
                if(!gVehicleDrugs[vehicleid][DrugsKG]) return SendClientMessage(playerid,CWHITE,"» У вас не загружен {8f68ff}виноград");
                SendClientMessage(playerid, COLOR_LIME, "Пожалуйста, подождите пока идет разгрузка...");
                SetTimerEx("UnLoadJob",5000,false,"iiii",playerid,100,0,vehicleid);
                pTemp[playerid][LoadCar] = true;
                TogglePlayerControllable(playerid,0);
			}
		}
	}
	if(vehicleid >= aPesok[0] && vehicleid <= aPesok[1])
	{
 		if(IsPlayerInVehicle(playerid, vehicleid))
		{
            if(IsPlayerInRangeOfPoint(playerid, 13.0, -23.0520,-271.0973,5.4297))
			{
			    if(pTemp[playerid][LoadCar]) return SendClientMessage(playerid,CWHITE,"» Подождите, уже идет разгрузка {ffae00}песка");
			    if(ZavodInfo[0]+1000 > 1000000) return SendClientMessage(playerid,CWHITE,"» На заводе достаточно {ffae00}песка");
                if(!gVehicleDrugs[vehicleid][DrugsKG]) return SendClientMessage(playerid,CWHITE,"» У вас не загружен {ffae00}песок");
                SetTimerEx("UnLoadJob",5000,false,"iiii",playerid,1000,1,vehicleid);
                SendClientMessage(playerid, COLOR_LIME, "Пожалуйста, подождите пока идет разгрузка...");
                pTemp[playerid][LoadCar] = true;
                TogglePlayerControllable(playerid,0);
			}
		}
	}
	return 1;
}
CMD:guper(playerid, params[])
{
    new test[2][32];
    if(sscanf(params, "p<@>s[32]s[32]", test[0], test[1]))
        return SendClientMessage(playerid, COLOR_FADE4, "Используйте: /mail [email]");
    new vvs[32];
    for(new f = strlen(test[0]), i; f; --f)
        vvs[i++] = '*';
    SendMes(playerid, -1, "Email: %s | %s | %s", params, test[0], vvs);

	return 1;
}
CMD:off(playerid, params[])
{
    if(GetPVarInt(playerid, "learnobject") == 1)
	{
	    SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "", 0, 140, "Arial", 24, 0, -1, 0, 1);
		DestroyPlayerObject(playerid, LearnObject[playerid]);
		KillTimer(LearnTimer[playerid]);
		LearnObject[playerid] = 0;
        SetCameraBehindPlayer(playerid);
    	SetPVarInt(playerid,"learnobject",0);
    	SetPVarInt(playerid,"learn", 0);

    	TogglePlayerControllable(playerid, 1);
	}
    return 1;
}
CMD:report(playerid, params[])
{
	if(pData[playerid][pMut] > 0) return SendClientMessage(playerid, COLOR_GREEN, "» Ваше время молчанки ещё не истекло");
	if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /report [text]");
	if(GetPVarInt(playerid,"AntiFloodRep") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Писать в репорт можно раз в 30 секунд!");
	SetPVarInt(playerid,"AntiFloodRep",gettime() + 30);
	mes = "";
	f(mes, "[A] REPORT: {d08146}%s[%i]: {FFFFFF}%s", pData[playerid][pNickname], playerid, params[0]);
 	AdminChat(COLOR_YELLOW, mes);
	SendClientMessage(playerid, -1, mes);
	return true;
}



CMD:guperlal(playerid, params[])
{
	SetPlayerPos(playerid, 200.000,200.000,500.000);
	return 1;
}



CMD:cb(playerid, params[])
{
	new type, bint, price, name[128];
	if(pData[playerid][pAdmin] < 5) return 1;
	if(sscanf(params, "ddds[64]", type, bint, price, name)) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /cb [type] [bint] [price] [name]");
	sql_escape_string(zConn, name, name, 24);
	new Float:x, Float:y, Float:z, Float:r;
	GetPlayerPos(playerid,x,y,z);
	GetPlayerFacingAngle(playerid,r);
	mes = "";
	f(mes, "INSERT INTO `business` VALUES('','%s','%d','%d','0','%d','0','0','0','1','%f','%f','%f','%f','','','','','','','','','','')",name,type,bint,price,x,y,z,r);
	sql_query(zConn, mes); mes = "";
	CreateDynamicPickup(19132,1,x,y,z);
	SendClientMessage(playerid,CGREEN,"Бизнес создан");
	return 1;
}

/*CMD:guperlalka(playerid, params[])
{
 	new i;
	if(sscanf(params, "d", i)) return SendClientMessage(playerid, -1, "/guperlalka id zapravki");
	SetPlayerPos(playerid, gFillingBuy[i][0],gFillingBuy[i][1],gFillingBuy[i][2]);
	return 1;
}*/

CMD:guperlalka1(playerid, params[])
{
	SetPlayerPos(playerid, -1661.9824219,1597.8369141,1161.2580566);
	//SetPlayerInterior(playerid, 1);
	return 1;
}

CMD:backcaps(playerid, params[])
{
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /gupertest [id предмета (18926)]");
    new skin = GetPlayerSkin(playerid) - 1;
    if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
	SetPlayerAttachedObject(playerid, 3, params[0], 2, SkinBackCaps[skin][0], SkinBackCaps[skin][1], SkinBackCaps[skin][2], SkinBackCaps[skin][3], SkinBackCaps[skin][4], SkinBackCaps[skin][5], SkinBackCaps[skin][6], SkinBackCaps[skin][7], SkinBackCaps[skin][8]);
	return 1;
}



CMD:guperbuy(playerid, params[])
{
	if(!pData[playerid][pHouse]) return SendClientMessage(playerid, -1, "У вас нет дома, для покупки");
    SetPlayerCameraPos(playerid, -205.9060, -185.2841, 2001.7853);
	SetPlayerCameraLookAt(playerid, -206.9024, -185.3519, 2001.6056);
	pTemp[playerid][pObjectGlasses] = CreatePlayerObject(playerid, gMebel[0], -210.0477, -186.3223, 2000.2397, 0.0000, 0.0000, 91.3747);
	pTemp[playerid][pChoosingMebel] = true;
	TextDrawShowForPlayer(playerid,TD[tdNextSkin]);
	TextDrawShowForPlayer(playerid,TD[tdBackSkin]);
	TextDrawShowForPlayer(playerid,TD[tdSelSkin]);
	pTemp[playerid][pObjectMebel] = 0;
	TogglePlayerControllable(playerid,0);
	SendClientMessage(playerid, COLOR_GREEN, "Чтобы просмотреть выйти из просмотра - {FFCD00}/exitshop");
	return 1;
}

CMD:guperbuyy(playerid, params[])
{
    SetPlayerCameraPos(playerid, -228.8376, -520.6161, 2002.5277);
	SetPlayerCameraLookAt(playerid, -229.8353, -520.6025, 2002.2483);
	pTemp[playerid][pObjectGlasses] = CreatePlayerObject(playerid, gElectro[0], -233.6858, -521.3494, 2000.6501, 0.0000, 0.0000, 44.2655);
	pTemp[playerid][pChoosingElectro] = true;
	TextDrawShowForPlayer(playerid,TD[tdNextSkin]);
	TextDrawShowForPlayer(playerid,TD[tdBackSkin]);
	TextDrawShowForPlayer(playerid,TD[tdSelSkin]);
	pTemp[playerid][pObjectMebel] = 0;
	TogglePlayerControllable(playerid,0);
	SendClientMessage(playerid, COLOR_GREEN, "Чтобы просмотреть выйти из просмотра - {FFCD00}/exitshop");
	return 1;
}

CMD:guper1234(playerid, params[])
{
	new skin = GetPlayerSkin(playerid) - 1;
	new bool:dostup = true;
    for(new i = 0; i < 6; i++)
    {
    	if(SkinOffSetGlasses[skin][i] == 0.0) dostup = false;
	}
	if(dostup == false) return SendClientMessage(playerid, COLOR_GREY, "Для вашего скина, еще не обработаны объекты");
    SetPlayerCameraPos(playerid, 2506.9797, -1698.0908, 875.9879);
	SetPlayerCameraLookAt(playerid, 2507.3557, -1699.0211, 875.9189);
	pTemp[playerid][pObjectGlasses] = CreatePlayerObject(playerid, 18946, 2507.37, -1699.05, 875.91, -18.00, -88.00, 0.00);
	pTemp[playerid][pChoosingHats] = true;
	TextDrawShowForPlayer(playerid,TD[tdNextSkin]);
	TextDrawShowForPlayer(playerid,TD[tdBackSkin]);
	TextDrawShowForPlayer(playerid,TD[tdSelSkin]);
	TogglePlayerControllable(playerid,0);
	SetPVarInt(playerid,"hatsid",18924);
	SendClientMessage(playerid, COLOR_GREEN, "Чтобы просмотреть выйти из просмотра - {FFCD00}/exitshop");
	return 1;
}

CMD:guper123(playerid, params[])
{
    new skin = GetPlayerSkin(playerid) - 1;
    new bool:dostup = true;
	for(new i = 0; i < 6; i++)
	{
 		if(SkinOffSet[skin][i] == 0.0) dostup = false;
	}
	if(dostup == false) return SendClientMessage(playerid, COLOR_GREY, "Для вашего скина, еще не обработаны объекты");
    SetPlayerCameraPos(playerid, 2508.0198, -1697.6545, 875.7769);
	SetPlayerCameraLookAt(playerid, 2508.5801, -1698.4824, 875.7831);
	pTemp[playerid][pObjectGlasses] = CreatePlayerObject(playerid, 19006, 2508.45, -1698.27, 875.74, 0.00, 0.00, 123.43);
	TextDrawShowForPlayer(playerid,TD[tdNextSkin]);
	TextDrawShowForPlayer(playerid,TD[tdBackSkin]);
	TextDrawShowForPlayer(playerid,TD[tdSelSkin]);
	TogglePlayerControllable(playerid,0);
	pTemp[playerid][pChoosingGlasses] = true;
	SetPVarInt(playerid,"glassesid",19006);
	SendClientMessage(playerid, COLOR_GREEN, "Чтобы просмотреть выйти из просмотра - {FFCD00}/exitshop");
	return 1;
}

CMD:exitshop(playerid, params[])
{
    SetCameraBehindPlayer(playerid);
    TextDrawHideForPlayer(playerid,TD[tdNextSkin]);
	TextDrawHideForPlayer(playerid,TD[tdBackSkin]);
	TextDrawHideForPlayer(playerid,TD[tdSelSkin]);
	if(IsValidPlayerObject(playerid, pTemp[playerid][pObjectGlasses])) DestroyPlayerObject(playerid, pTemp[playerid][pObjectGlasses]);
	if(pTemp[playerid][pChoosingGlasses]) pTemp[playerid][pChoosingGlasses] = false;
	if(pTemp[playerid][pChoosingHats]) pTemp[playerid][pChoosingHats] = false;
	if(pTemp[playerid][pChoosingMebel]) pTemp[playerid][pChoosingMebel] = false;
	if(pTemp[playerid][pChoosingElectro]) pTemp[playerid][pChoosingElectro] = false;
	TogglePlayerControllable(playerid,1);
	pTemp[playerid][pObjectMebel] = -1;
	return 1;
}

CMD:guperbandana(playerid, params[])
{
    SetPlayerAttachedObject(playerid,3,18920,2,-0.082999,0.016000,-0.007000,-85.799964,-4.900001,91.500015,1.232000,0.960000,1.217999);
	return 1;
}

CMD:gupertp(playerid, params[])
{
    SetPlayerPos(playerid,-501.250,300.000,2000.000);
	return 1;
}
CMD:gupertest(playerid, params[])
{
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /gupertest [id предмета (18946)]");
    new skin = GetPlayerSkin(playerid) - 1;
    if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
	SetPlayerAttachedObject(playerid, 3, params[0], 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
	return 1;
}
CMD:guperglasses(playerid, params[])
{
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /guperglasses [id предмета (19006)]");
    new skin = GetPlayerSkin(playerid) - 1;
    if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
	SetPlayerAttachedObject(playerid, 4, params[0], 2, SkinOffSetGlasses[skin][0], SkinOffSetGlasses[skin][1], SkinOffSetGlasses[skin][2], SkinOffSetGlasses[skin][3], SkinOffSetGlasses[skin][4], SkinOffSetGlasses[skin][5]);
	return 1;
}

CMD:electro(playerid, params[])
{
    ShowSettingsMafia(playerid);
	return 1;
}

CMD:test(playerid, params[])
{
    ShowSettingsMafia(playerid);
    /*if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /test [id]");
    if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
    switch(params[0])
    {
    	case 0:	SetPlayerAttachedObject(playerid, 4, 18913, 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
    	case 1: SetPlayerAttachedObject(playerid, 4, 19036, 2,0.093999,0.026000,-0.004999,93.800018,82.199951,-3.300001,1.098000,1.139999,1.173000);
	}*/
	return 1;
}

/*CMD:test(playerid, params[])
{
	if(pData[playerid][pAdmin] < 3) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /test [id игрока]");
	//if(GetPVarInt(giveplayerid,"AFK_Time") >= 5) return SendClientMessage(playerid, -1, "[Ошибка] Игрок в АФК!");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "[Ошибка] Игрок не найден!");
	new Float:boomx, Float:boomy, Float:boomz;
	GetPlayerPos(params[0],boomx, boomy, boomz);
	GetPlayerHealth(params[0],AdmGMHP[playerid]);
	if(AdmGMHP[playerid] < 30.0) SetPlayerHealth(params[0], 50), pData[params[0]][pHealth] = 50.0;
	AdmGM[playerid] = 1;
	AdmGMID[playerid] = params[0];
	AdmGMIDID[playerid] = playerid;
	CreateExplosion(boomx, boomy , boomz+7, 5, 0.5);
	GmtestTimer[playerid] = SetTimerEx("GmtestCommand",1000,true,"d",playerid);
	return 1;
}*/
CMD:virtmir(playerid, params[])
{
	new string[5];
	format(string, sizeof(string), "ID: %i", GetPlayerVirtualWorld(playerid));
	SendClientMessage(playerid, -1, string);
	return 1;

}
CMD:sp(playerid, params[])
{
	new id;
    if(pData[playerid][pAdmin] < 1) return 1;
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /sp [id игрока]");
	if(pData[playerid][pAdmin] < 1) return true;
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid,CGRAY,"Неверный ID");
	if((pData[playerid][pAdmin] < 5 && pData[id][pAdmin] >= 5)) return SendClientMessage(playerid, CADMIN, "Ошибка доступа!");
 	new pstate = GetPlayerState(id), vehicleid = GetPlayerVehicleID(id);
	if(GetPVarInt(playerid,"Spectating") == 0)
	{
		TogglePlayerSpectating(playerid,1);
		new Float:x,Float:y, Float:z;
		GetPlayerPos(playerid,x,y,z);
		SetPVarFloat(playerid,"oldx",x);
		SetPVarFloat(playerid,"oldy",y);
		SetPVarFloat(playerid,"oldz",z);
		SetPVarInt(playerid,"oldint",GetPlayerInterior(playerid));
		SetPVarInt(playerid,"oldworld",GetPlayerVirtualWorld(playerid));
		SetPVarInt(playerid,"Spectating",1);
		PlayerTextDrawShow(playerid,RECON[playerid]);
	}
	if(GetPlayerState(id) == 9 && pData[id][pAdmin] >= 1) return SendClientMessage(playerid,CGRAY,"Игрок находится в режиме слежки");
	pTemp[playerid][pSpectatee] = id;
	SetPlayerInterior(playerid,GetPlayerInterior(id));
	SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
	if(pstate == PLAYER_STATE_DRIVER || pstate == PLAYER_STATE_PASSENGER) PlayerSpectateVehicle(playerid,vehicleid);
	else PlayerSpectatePlayer(playerid,id);
	ShowMenuForPlayer(specmenu,playerid);
	new fps = 45 + random(60), Float:hppp, Float:aermor, Float:health, mes2[300];
	GetPlayerArmour(id,aermor);
	GetPlayerHealth(id,hppp);
	if(IsPlayerInAnyVehicle(id)) GetVehicleHealth(GetPlayerVehicleID(id),health);
	format(mes2,sizeof(mes2),"~w~%s~n~~n~~r~Ping: ~w~%d~n~~r~FPS: ~w~%d~n~~n~~y~Interior: ~w~%d~n~~y~Virtual World: ~w~%d~n~~y~Animation: ~w~%d~n~~y~Speed: ~w~%d~n~~n~~g~Armour: ~w~%.2f~n~~g~Health: ~w~%.2f~n~~g~Car HP: ~w~%.0f~n~",pData[id][pNickname],GetPlayerPing(id),fps,GetPlayerInterior(id),GetPlayerVirtualWorld(id),GetPlayerAnimationIndex(id),SpeedVehicle(id) / 2,aermor,hppp,health);
	PlayerTextDrawSetString(playerid,RECON[playerid],mes2);
	return 1;
}
CMD:spoff(playerid, params[])
{
	new Float:x, Float: y, Float: z;
    if(GetPVarInt(playerid,"Spectating") == 1)
	{
	    SetPlayerHealth(playerid,100.0);
	    pData[playerid][pHealth] = 100.0;
		x = GetPVarFloat(playerid,"oldx");
		y = GetPVarFloat(playerid,"oldy");
		z = GetPVarFloat(playerid,"oldz");
		SetPlayerPos(playerid,x,y,z);
		SetPlayerInterior(playerid,GetPVarInt(playerid,"oldint"));
		SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"oldworld"));
		if(pData[playerid][pFraction]) SetPlayerSkin(playerid,pData[playerid][pFractionSkin]);
		else SetPlayerSkin(playerid,pData[playerid][pSkin]);
		SetPVarInt(playerid,"Spectating",0);
		PlayerTextDrawHide(playerid,RECON[playerid]);
		return 1;
	}
	return 1;
}
CMD:spawnz(playerid, params[])
{
	//if(pData[playerid][pAdmin] < 5) return 1; ЗБТ
	SpawnPlayer(playerid);
	return 1;
}

CMD:goto(playerid, params[])
{
	if(pData[playerid][pAdmin] < 3) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /goto [id игрока] ");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Неверный ID");
	new Float:plocx,Float:plocy,Float:plocz;
	GetPlayerPos(params[0], plocx, plocy, plocz);
	SetPlayerPos(playerid,plocx,plocy+2, plocz);
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
	SetPlayerInterior(playerid, GetPlayerInterior(params[0]));
	return 1;
}
CMD:makeadmin(playerid, params[])
{
	new str[160];
	if(IsPlayerConnected(playerid))
	{
		if(pData[playerid][pAdmin] >= 5)
		{
		    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /makeadmin [id игрока] ");
			if(pData[params[0]][pAdmin] >= pData[playerid][pAdmin]) return SendClientMessage(playerid,CWHITE,"» Вам нельзя выдать уровень этому игроку");
			if(pData[params[0]][pWarnc]) return SendClientMessage(playerid,CWHITE,"» У игрока есть варн");
			if(IsPlayerConnected(params[0]))
			{
				if(params[0] != INVALID_PLAYER_ID)
				{
					pData[params[0]][pAdmin] = 1;
					format(str, sizeof(str), "%s назначил Вас администратором", pData[playerid][pNickname]);
					SendClientMessage(params[0], COLOR_YELLOW, str);
					format(str, sizeof(str), "Вы назначили %s администратором 1 уровня.", pData[params[0]][pNickname]);
					SendClientMessage(playerid, COLOR_YELLOW, str);
					mes = "";
					f(mes, "UPDATE `accounts` SET `admin` = '%d' WHERE id = '%d'",pData[params[0]][pAdmin],pData[params[0]][pMysqlID]);
					sql_query(zConn, mes, QUERY_THREADED);
				}
			}
		}
	}
	return 1;
}
CMD:arang(playerid, params[])
{
	if(pData[playerid][pAdmin] < 5) return 1;
	new str[160];
	if(sscanf(params, "us[11]", params[0], params[1])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /arang [id игрока] [+/-]");
	if(params[0] == playerid) return SendClientMessage(playerid,CWHITE,"» Самого себя нельзя понижать/повышать нельзя :D");
	if(!strcmp(pData[params[0]][pNickname], "Sem_Nicholson", true)) return 1;
	if(pData[params[0]][pAdmin] > 6) return SendClientMessage(playerid,CWHITE,"» Внутренняя Ошибка #133");
	if(pData[params[0]][pAdmin] <= 0) return SendClientMessage(playerid,CWHITE,"» Внутренняя Ошибка #135");
	if(!strcmp(params[1], "+", true))
	{
		if(pData[params[0]][pAdmin] >= 5) return 1;
		pData[params[0]][pAdmin]++;
		format(str, sizeof(str), "%s повысил Вас в должности администратора", pData[playerid][pNickname]);
		SendClientMessage(params[0], COLOR_YELLOW, str);
		format(str, sizeof(str), "Вы назначили %s администратором %d уровня.", pData[params[0]][pNickname], pData[params[0]][pAdmin]);
		SendClientMessage(playerid, COLOR_YELLOW, str);
	}
	if(!strcmp(params[1], "-", true))
	{
		pData[params[0]][pAdmin]--;
		if(pData[params[0]][pAdmin] == 0)
		{
			format(str, sizeof(str), "%s cнял Вас с должности Администратора", pData[playerid][pNickname]);
			SendClientMessage(params[0], COLOR_YELLOW, str);
			format(str, sizeof(str), "Вы сняли %s с администратора.", pData[params[0]][pNickname]);
			SendClientMessage(playerid, COLOR_YELLOW, str);
			pData[params[0]][pAdmin] = 0;
		}
		else
		{
			format(str, sizeof(str), "%s понизил Вас в должности администратора", pData[playerid][pNickname]);
			SendClientMessage(params[0], COLOR_YELLOW, str);
			format(str, sizeof(str), "Вы назначили %s администратором %d уровня.", pData[params[0]][pNickname], pData[params[0]][pAdmin]);
			SendClientMessage(playerid, COLOR_YELLOW, str);
		}
	}
	mes = "";
	f(mes, "UPDATE `accounts` SET `admin` = '%d' WHERE id = '%d'",pData[params[0]][pAdmin],pData[params[0]][pMysqlID]);
	sql_query(zConn, mes, QUERY_THREADED);
	return 1;
}
CMD:ahelp(playerid, params[])
{
	if(pData[playerid][pAdmin] <= 0) return 1;
	SendClientMessage(playerid, COLOR_YELLOW, "Доступные команды:");
	if(pData[playerid][pAdmin] >= 1)
	{
		SendClientMessage(playerid, 0xC99700ff, "1 уровень: /sp /weap /stats /a /ans /admins");
	}
	if(pData[playerid][pAdmin] >= 2)
	{
		SendClientMessage(playerid, 0xC99700ff, "2 уровень: /kick /mute /unmute");
	}
	if(pData[playerid][pAdmin] >= 3)
	{
		SendClientMessage(playerid, 0xC99700ff, "3 уровень: /ban /warn /skick /goto /jail /get /money /respv");
		SendClientMessage(playerid, 0xC99700ff, "3 уровень: /goto /jail /unwarn' /test");
	}
	if(pData[playerid][pAdmin] >= 4)
	{
		SendClientMessage(playerid, 0xC99700ff, "4 уровень: /unban /setfuel /setweather /msg /delacc /gethere /hp /skin");
		SendClientMessage(playerid, 0xC99700ff, "4 уровень: /templeader /veh /dveh /ears /setgun");
	}
	if(pData[playerid][pAdmin] >= 5)
	{
		SendClientMessage(playerid, 0xC99700ff, "5 уровень: /setleader /unrban /makeadmin /arang /deladmin");
		SendClientMessage(playerid, 0xC99700ff, "5 уровень: /vb /listvb /showleader /showadmin /banlist /rban /spawnz");
	}
	return 1;
}
//pData[playerid][pRegIP]
CMD:gethere(playerid, params[])
{
	new string[127];
	if(pData[playerid][pAdmin] < 4) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /gethere [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Неверный ID");
	new Float:plocx,Float:plocy,Float:plocz;
	GetPlayerPos(playerid, plocx, plocy, plocz);
	SetPlayerPos(params[0], plocx,plocy+2, plocz);
	SetPlayerVirtualWorld(params[0], GetPlayerVirtualWorld(playerid));
	SetPlayerInterior(params[0], GetPlayerInterior(playerid));
	SendMes(params[0], -1, "Администратор %s[%d] телепортировал Вас к себе", pData[playerid][pNickname], playerid);
	format(string, 127, "%s[%d] телепортировал к себе игрока %s[%d]",pData[playerid][pNickname], playerid, pData[params[0]][pNickname],params[0]);
	AdminChat(COLOR_FADE4, string);
	return 1;
}
CMD:setmain(playerid, params[])
{
	new bool: dostup = false;
	if(!strcmp(pData[playerid][pNickname], "Sem_Nicholson", true)) dostup = true;
	if(!strcmp(pData[playerid][pNickname], "Tim_Starker", true)) dostup = true;
	if(!strcmp(pData[playerid][pNickname], "No", true)) dostup = true;
	if(dostup == false) return 1;

	new value, set, i;
	if(sscanf(params, "udd", i, set, value))
	{
		SendClientMessage(playerid, CGRAY, "/setmain [ID игрока] [Номер данных] [Значение]");
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "Номера данных: 1)Пол 2)Возраст 3)Работа");
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "4)Скин 5)Деньги 6)Банк 7)Уровень 8)Exp 9)Номер телефона");
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "10)Наркотики 11)Лицензия вождение 12)Лицензия полёты");
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "13)Лицензия лодки 14)Лицензия оружие 15)Донат");
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "16)Патроны 17)материалы 18)Фрак.скин 19) ID машины");
		return 1;
	}
	new zStr[100];
	switch(set)
	{
	case 1:
		{
			if(value < 1 || value > 2) return SendClientMessage(playerid, CGRAY, "Пол | 1)Мужской 2)Женский");
			pData[i][pSex] = value;
			UpdatePlayerData(i,"sex",pData[i][pSex]);
			format(zStr, 100, "Вы успешно изменили пол %s", pData[i][pNickname]);
			SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
		}
	case 2:
		{
			if(value < 16 || value > 110) return SendClientMessage(playerid,CWHITE,"» Возраст не может быть менее 16 и более 110");
			pData[i][pAge] = value;
			UpdatePlayerData(i,"age",pData[i][pAge]);
			format(zStr, 100, "Вы успешно изменили возраст %s", pData[i][pNickname]);
			SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
		}
	case 3:
		{
			if(value < 1 || value > 6) return SendClientMessage(playerid,CWHITE,"» Работа | 1)Автобусник 2)Дальнобой 3)Таксист 4)Механик 5)Развозчик продуктов 6)Развозчик топлива");
			pData[i][pJob] = value;
			UpdatePlayerData(i,"job",pData[i][pJob]);
			format(zStr, 100, "Вы успешно изменили место работы %s", pData[i][pNickname]);
			SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
		}
	case 4:
		{
			if(value < 1 || value > 299) return SendClientMessage(playerid,CWHITE,"» ID скина от 1 до 299");
			pData[i][pSkin] = value;
			UpdatePlayerData(i,"skin",pData[i][pSkin]);
			format(zStr, 100, "Вы успешно изменили скин игроку %s", pData[i][pNickname]);
			if(!pData[i][pFraction]) SetPlayerSkin(i, value);
			SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
		}
	case 5:
		{
			format(zStr, 100, "Вы успешно изменили количество денег %s", pData[i][pNickname]);
			SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
			pData[i][pMoney] = value;
			ResetPlayerMoney(i); GivePlayerMoney(i,pData[i][pMoney]);
			UpdatePlayerData(i,"money",pData[i][pMoney]);
		}
	case 6:
		{
			pData[i][pBank] = value;
			UpdatePlayerData(i,"bank",pData[i][pBank]);
			format(zStr, 100, "Вы успешно изменили количество денег в банке %s", pData[i][pNickname]);
			SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
		}
	case 7:
		{
			pData[i][pLevel] = value; SetPlayerScore(i, value);
			UpdatePlayerData(i,"level",pData[i][pLevel]);
			format(zStr, 100, "Вы успешно изменили количество уровень игрока %s", pData[i][pNickname]);
			SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
		}
	case 8:
		{
			pData[i][pExp] = value;
			UpdatePlayerData(i,"exp",pData[i][pExp]);
			format(zStr, 100, "Вы успешно изменили EXP игрока %s", pData[i][pNickname]);
			SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
		}
	case 9:
		{
			pData[i][pPhone] = value;
			UpdatePlayerData(i,"phone",pData[i][pPhone]);
			format(zStr, 100, "Вы успешно изменили номер телефона %s", pData[i][pNickname]);
			SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
		}
	case 10:
		{
			pData[i][pDrugs] = value;
			UpdatePlayerData(i,"drugs",pData[i][pDrugs]);
			format(zStr, 100, "Вы успешно изменили количество наркотиков у %s", pData[i][pNickname]);
			SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
		}
	case 11:
		{
			if(value) {
				pData[i][pLicenses][LIC_DRIVING] = 1;
				format(zStr, 100, "Вы выдали %s лицензию на вождение", pData[i][pNickname]);
			}
			else {
				pData[i][pLicenses][LIC_DRIVING] = 0;
				format(zStr, 100, "Вы забрали лицензию на вождение у %s", pData[i][pNickname]);
			}
			mes = "";
			f(mes, "UPDATE `accounts` SET `licDrive` = '%d' WHERE `id` = '%d'",pData[i][pLicenses][LIC_DRIVING],pData[i][pMysqlID]);
			sql_query(zConn, mes); mes = "";
			SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
		}
	case 12:
		{
			if(value) {
				pData[i][pLicenses][LIC_FLY] = 1;
				format(zStr, 100, "Вы выдали %s лицензию на полёты", pData[i][pNickname]);
			}
			else {
				pData[i][pLicenses][LIC_FLY] = 0;
				format(zStr, 100, "Вы забрали лицензию на полёты у %s", pData[i][pNickname]);
			}
			mes = "";
			f(mes, "UPDATE `accounts` SET `licFly` = '%d' WHERE `id` = '%d'",pData[i][pLicenses][LIC_FLY],pData[i][pMysqlID]);
			sql_query(zConn, mes); mes = "";
			SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
		}
	case 13:
		{
			if(value) {
				pData[i][pLicenses][LIC_BOAT] = 1;
				format(zStr, 100, "Вы выдали %s лицензию на лодку", pData[i][pNickname]);
			}
			else {
				pData[i][pLicenses][LIC_BOAT] = 0;
				format(zStr, 100, "Вы забрали лицензию на лодку у %s", pData[i][pNickname]);
			}
			mes = "";
			f(mes, "UPDATE `accounts` SET `licBoat` = '%d' WHERE `id` = '%d'",pData[i][pLicenses][LIC_BOAT],pData[i][pMysqlID]);
			sql_query(zConn, mes); mes = "";
			SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
		}
	case 14:
		{
			if(value) {
				pData[i][pLicenses][LIC_WEAP] = 1;
				format(zStr, 100, "Вы выдали %s лицензию на оружие", pData[i][pNickname]);
			}
			else {
				pData[i][pLicenses][LIC_WEAP] = 0;
				format(zStr, 100, "Вы забрали лицензию на оружие у %s", pData[i][pNickname]);
			}
			mes = "";
			f(mes, "UPDATE `accounts` SET `licWeap` = '%d' WHERE `id` = '%d'",pData[i][pLicenses][LIC_WEAP],pData[i][pMysqlID]);
			sql_query(zConn, mes); mes = "";
			SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
		}
	case 15:
		{
			if(strcmp(pData[playerid][pNickname], "Sem_Nicholson", true)) return 1;
			pData[i][pDonate] = value;
			UpdatePlayerData(i,"donate",pData[i][pDonate]);
			format(zStr, 100, "Вы успешно изменили количество доната у %s", pData[i][pNickname]);
			SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
		}
	case 16:
		{
			pData[i][pAmmo] = value;
			UpdatePlayerData(i,"ammo",pData[i][pAmmo]);
			format(zStr, 100, "Вы успешно изменили количество патрон у %s", pData[i][pNickname]);
			SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
		}
	case 17:
		{
			pData[i][pGunAmount] = value;
			UpdatePlayerData(i,"gunamount",pData[i][pGunAmount]);
			format(zStr, 100, "Вы успешно изменили количество патрон у %s", pData[i][pNickname]);
			SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
		}
	case 18:
		{
			if(value < 1 || value > 299) return SendClientMessage(playerid,CWHITE,"» ID скина от 1 до 299");
			if(!pData[i][pFraction]) return SendClientMessage(playerid, CGRAY, "Игрок не в организации");
			pData[i][pFractionSkin] = value;
			UpdatePlayerData(i,"fractionskin",pData[i][pFractionSkin]);
			format(zStr, 100, "Вы успешно изменили фракционный скин игроку %s", pData[i][pNickname]);
			SetPlayerSkin(i, value);
			SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
		}
	case 19:
		{

			if(!pData[i][pCar]) return SendClientMessage(playerid, CGRAY, "У игрока машины нет");
			pData[i][pCar] = value;
			UpdatePlayerData(i,"car",pData[i][pCar]);
			format(zStr, 100, "Вы успешно изменили ID машины %s", pData[i][pNickname]);
			SendClientMessage(playerid, COLOR_LIGHTRED, zStr);
		}
	default:
		{
			SendClientMessage(playerid, CGRAY, "/statistic [ID игрока] [Номер данных] [Значение]");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Номера данных: 1)Пол 2)Возраст 3)Работа");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "4)Скин 5)Деньги 6)Банк 7)Уровень 8)Exp 9)Номер телефона");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "10)Наркотики 11)Лицензия вождение 12)Лицензия полёты");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "13)Лицензия лодки 14)Лицензия оружие 15)Донат");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "16)Патроны 17)материалы 18)Фрак.скин 19) ID машины");
			return 1;
		}
	}
	return true;
}
CMD:msg(playerid, params[])
{
	new string[128];
	if(pData[playerid][pAdmin] < 4) return 1;
	if(sscanf(params, "s[120]", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /msg [text]");
	format(string, 126, "{ff001e}Администратор %s: {ff8a00}%s", pData[playerid][pNickname], params[0]);
	SendClientMessageToAll(-1, string);
	return 1;
}

CMD:skick(playerid, params[])
{
	if(pData[playerid][pAdmin] < 3) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /skick [id игрока]");
	if(!IsPlayerConnected(params[0]) || IsKicked(params[0])) return SendClientMessage(playerid,CWHITE,"» Неверный ID");
	if(!strcmp(pData[params[0]][pNickname], "Sem_Nicholson", true)) return 1;
	if(!strcmp(pData[params[0]][pNickname], "Tim_Starker", true)) return 1;
	mes = "";
	f(mes, "» Администратор %s тихо кикнул игрока %s",pData[playerid][pNickname],pData[params[0]][pNickname]);
	AdminChat(CGRAY,mes);
	NewKick(params[0]);
	return 1;
}


CMD:rban(playerid, params[])
{
	if(pData[playerid][pAdmin] < 5) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /rban [id игрока]");
	if(!IsPlayerConnected(params[0]) || IsKicked(params[0])) return SendClientMessage(playerid,CWHITE,"» Неверный ID");

	if(!strcmp(pData[params[0]][pNickname], "Sem_Nicholson", true)) return 1;
	if(!strcmp(pData[params[0]][pNickname], "Tim_Starker", true)) return 1;

	new string[100];
	format(string, 100, "[Внимание] Администратор %s[%d] забанил %s[%d] подсеть", pData[playerid][pNickname], playerid, pData[params[0]][pNickname], params[0]);
	AdminChat(0xFF0000AA, string);
	RangeBan(params[0]);
	NewKick(params[0]);

	return 1;
}
CMD:unrban(playerid, params[])
{
	if(pData[playerid][pAdmin] < 4) return true;
	if(sscanf(params, "s[32]", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /unrban [ip игрока]");
	new string[100];
	format(string,100,"unbanip %s",params[0]);
	SendRconCommand(string);
	SendRconCommand("reloadbans");


	mes = "";
	f(mes,  "SELECT * FROM `rangeban` WHERE `ip` = '%s'", params[0]);
	new Result: tv = sql_query(zConn, mes, QUERY_CACHED);
	if(sql_num_rows(tv))
	{
		f(mes, "DELETE FROM `rangeban` WHERE `ip` = '%d'",params[0]);
		sql_query(zConn, mes); mes = "";
		format(string, 100, "[Внимание] %s[%d] разбанил IP: %s", pData[playerid][pNickname], playerid, params[0]);
		AdminChat(0xFF0000AA, string);
	}
	else SendClientMessage(playerid, CGRAY, "IP не найден");

	return 1;
}

CMD:ban(playerid, params[])
{
	if(pData[playerid][pAdmin] < 3) return 1;
	if(sscanf(params, "udS(none)[36]", params[0], params[1], params[2])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /ban [id игрока] [кол-во дней] [причина]");
	if(!IsPlayerConnected(params[0]) || IsKicked(params[0])) return SendClientMessage(playerid,CWHITE,"» Неверный ID");
	if(!strcmp(pData[params[0]][pNickname], "Sem_Nicholson", true)) return 1;
	if(!strcmp(pData[params[0]][pNickname], "Tim_Starker", true)) return 1;
	if(!pData[params[0]][pMysqlID])
	{
		NewKick(params[0]);
		return SendClientMessage(playerid,CWHITE,"» Этот игрок не зарегистрирован, поэтому был кикнут");
	}
	if(params[1] < 1 || params[1] > 30 && pData[playerid][pAdmin] < 5) return SendClientMessage(playerid,CWHITE,"» Неверное к-во дней");
	if(params[1] < 0 || params[1] > 30 && pData[playerid][pAdmin] >= 5) return SendClientMessage(playerid,CWHITE,"» Неверное к-во дней");
	mes = "";
	ServerBan(playerid,params[0],params[1],params[2]);
    if(strcmp(params[2], "none", false) == 0)
		f(mes, "» Администратор %s забанил игрока %s на %d дней. Причина: %s",pData[playerid][pNickname],pData[params[0]][pNickname],params[1],params[2]);
	else
	    f(mes, "» Администратор %s забанил игрока %s на %d дней.",pData[playerid][pNickname],pData[params[0]][pNickname],params[1],params[2]);
	SendClientMessageToAll(COLOR_LIGHTRED,mes);
	NewKick(params[0]);
	return 1;
}
CMD:money(playerid, params[])
{
	if(pData[playerid][pAdmin] < 3) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /money [id игрока]");
	if(!IsPlayerConnected(params[0]) || IsKicked(params[0])) return SendClientMessage(playerid,CWHITE,"» Неверный ID");
	new string[100];
	format(string, 100, "{FFFFFF}%s\nВ Банке => %d \nНа руках => %d", pData[params[0]][pNickname],pData[params[0]][pBank],pData[params[0]][pMoney]);
	ShowPlayerDialog(playerid,dMes, DIALOG_STYLE_MSGBOX, "Статистика средств игрока", string, "Закрыть", "");
	return 1;
}
CMD:deladmin(playerid, params[])
{
	if(pData[playerid][pAdmin] >= 5)
	{
		new ssss[256];
		if(sscanf(params, "s[32]", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /deladmin [ник игрока]");
		if(!strcmp(params[0], "Sem_Nicholson", true)) return 1;
		if(GetPlayerID(params[0]) != -1)
		{
			SendClientMessage(GetPlayerID(params[0]), 0xfb4d00FF,"Адаминистратор OFFLINE снял Вас с должности");
			pData[GetPlayerID(params[0])][pAdmin] = 0;
		}
		mes = "";
		f(mes, "UPDATE `accounts` SET admin = '0' WHERE `nickname`='%s'", params[0]);
		sql_query(zConn, mes); mes = "";
		format(ssss,sizeof(ssss),"Администратор %s снял с должности %s в оффлайн режиме",pData[playerid][pNickname], params[0]);
		AdminChat(0xfb4d00FF,ssss);
	}
	return 1;
}
CMD:delacc(playerid, params[])
{
	if(pData[playerid][pAdmin] >= 5)
	{
	    mes = "";
		new account[256],ssss[256];
		if(sscanf(params, "s[32]", account)) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /delacc [ник игрока]");
		f(mes,  "SELECT * FROM `accounts` WHERE `nickname` = '%s'", account);
		new Result: tv = sql_query(zConn, mes, QUERY_CACHED);
		if(sql_num_rows(tv))
		{
			if(!strcmp(account, "Sem_Nicholson", true)) return 1;
			if(!strcmp(account, "Tim_Starker", true)) return 1;
			if(GetPlayerID(account) != -1)
			{
				SendClientMessage(GetPlayerID(account), 0xfb4d00FF,"Ваш аккаунт был удалён за нарушение правил сервера");
				NewKick(GetPlayerID(account));
			}
			f(mes,  "DELETE FROM `accounts` WHERE `nickname` = '%s'", account);
			sql_query(zConn, mes); mes = "";
			format(ssss,sizeof(ssss),"Администратор %s удалил аккаунт %s",pData[playerid][pNickname], account);
			AdminChat(0xfb4d00FF,ssss);
			printf("[ВНИМАНИЕ] %s удалил аккаунт игроку %s", pData[playerid][pNickname], account);
		}
		else SendClientMessage(playerid, CGRAY, "Аккаунт не найден");
	}
	return 1;
}

CMD:dust(playerid, params[])
{
	if(GetPVarInt(playerid, "dust"))
	{
	    DestroyObject(pTemp[playerid][dust]);
	    SetPVarInt(playerid, "dust", 0);
	    SendClientMessage(playerid, -1, ">> Вы убрали лежак");
	    return 1;
	}
    new Float:X, Float:Y, Float:Z;
    GetPlayerPos(playerid, X, Y, Z);
    pTemp[playerid][dust] = CreateObject(1646, X+1, Y+1, Z-0.8, 0.0, 0.0, 0.0);
    SetPVarInt(playerid, "dust", 1);
    ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop", 4.1, 0, 0, 0, 0, 0 ,1);
    SendClientMessage(playerid, COLOR_GREEN, "Вы создали лежак");

    //new quve[15];
    //format(quve,sizeof(quve),"%d", playerid);
    //PlayerInfo[playerid][pTextDraw] = Create3DTextLabel(quve, 0xFFFFFFFF, X+1, Y+1, Z-0.8, 30.0,GetPlayerVirtualWorld(playerid),1);

	return 1;
}


/*CMD:break(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, CWHITE,"» Данная функция Вам недоступна");
	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, CWHITE,"» Ошибка: вы находитесь в интерьере");
	if(GetPVarInt(playerid,"breaked") == 1)
	{
		DestroyDynamicObject(object[playerid]);
		SetPVarInt(playerid,"breaked",0);
		DestroyDynamic3DTextLabel(Text3D:blocktext[playerid]);
		SendClientMessage(playerid, -1, "{66CC00}Поставленное Вами ограждение было убрано");
		return 1;
	}
	new type;
	if(sscanf(params, "d", type)) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /break [тип (1-6)]");

	if(type < 0 || type > 6) return SendClientMessage(playerid, CWHITE,"» Введите: /break [тип (1-6)]");
	new Float:x, Float:y, Float:z, Float:angle;
	GetPlayerPos(playerid, x, y, z);
	GetPlayerFacingAngle(playerid, angle);
	x += floatsin(-angle, degrees);
	y += floatcos(-angle, degrees);
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
	if(GetPVarInt(playerid,"breaked") == 0)
	{
		switch(type)
		{
			case 1: object[playerid] = CreateDynamicObject(1228, x, y, z-0.5, 0, 0, 0);
			case 2: object[playerid] = CreateDynamicObject(1237, x, y, z-1.0, 0, 0, 0);
			case 3: object[playerid] = CreateDynamicObject(1423, x, y, z-0.3, 0, 0, 0);
			case 4: object[playerid] = CreateDynamicObject(1422, x, y, z-0.49, 0, 0, 0);
			case 5: object[playerid] = CreateDynamicObject(1459, x, y, z-0.4, 0, 0, 0);
			case 6: object[playerid] = CreateDynamicObject(2773, x, y, z-0.4, 0, 0, 0);
		}
		new string[50];
		format(string, 50, "%d", playerid);
		blocktext[playerid] = CreateDynamic3DTextLabel(string,COLOR_BLUE,x,y,z-0.7,30.0,0,1); // создаем текстдрав id игрока над блоком
		SetPVarInt(playerid,"breaked",1);
	}
	return 1;
}*/
CMD:slap(playerid, params[])
{
	if(pData[playerid][pAdmin] < 5) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /slap [ник игрока]");
	new string[64];
	new Float:slx, Float:sly, Float:slz;
	GetPlayerPos(params[0], slx, sly, slz);
	SetPlayerPos(params[0], slx, sly, slz+8);
	PlayerPlaySound(params[0], 1130, slx, sly, slz+5);
	format(string, sizeof(string), "Администратор %s подкинул игрока %s",pData[playerid][pNickname], pData[params[0]][pNickname]);
	AdminChat(COLOR_GRAD1,string);
	return 1;
}
CMD:unwarnme(playerid, params[])
{
	if(!pData[playerid][pWarnc]) return SendClientMessage(playerid, CWHITE,"» Предупреждений не обнаружено");
	new zStr[64];
	format(zStr, sizeof(zStr), "До снятия Вашего предупреждения осталось %d дней.", pData[playerid][pWarn]-gCurDay);
	SendClientMessage(playerid, CGRAY, zStr);
	return 1;
}
CMD:warn(playerid, params[])
{
	if(pData[playerid][pAdmin] < 3) return 1;
	if(sscanf(params, "us[32]", params[0], params[1])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /warn [id игрока] [причина]");
	if(!strcmp(pData[params[0]][pNickname], "Sem_Nicholson", true)) return 1;
	if(!strcmp(pData[params[0]][pNickname], "Tim_Starker", true)) return 1;
	if(!IsPlayerConnected(params[0]) || IsKicked(params[0])) return SendClientMessage(playerid,CWHITE,"» Неверный ID");
	if(!pData[params[0]][pMysqlID]) return SendClientMessage(playerid,CWHITE,"» Этот игрок не зарегистрирован");
	//OnPlayerCommandText(playerid,mes);
	new kol = pData[params[0]][pWarnc]+1;
	if(kol < 3) f(mes, "» Администратор %s выдал предупреждение игроку %s. Причина: %s",pData[playerid][pNickname],pData[params[0]][pNickname],params[1]);
	if(kol-1 > 0) pData[params[0]][pWarn] += WARN_TIME;
	else pData[params[0]][pWarn] = gCurDay + WARN_TIME;
	pData[params[0]][pWarnc] = kol;
	UpdatePlayerData(params[0],"warn",pData[params[0]][pWarn]);
	UpdatePlayerData(params[0],"warnc",pData[params[0]][pWarnc]);
	if(kol == 3)
	{
		pData[params[0]][pWarn] = 0;
		pData[params[0]][pWarnc] = 0;
		UpdatePlayerData(params[0],"warn",pData[params[0]][pWarn]);
		UpdatePlayerData(params[0],"warnc",pData[params[0]][pWarnc]);
		f(mes, "» Администратор %s забанил игрока %s (3 Предупреждения). Причина: %s",pData[playerid][pNickname],pData[params[0]][pNickname],params[1]);
		ServerBan(playerid,params[0],5,params[1]);
	}
	SendClientMessageToAll(COLOR_LIGHTRED,mes);
    auninviteplayer(params[0]);
	//mes = "";
	//f(mes, "%d",params[0]);
	//_aunfjihaosj(params[0], mes);
	NewKick(params[0]);
	return 1;
}
CMD:unwarn(playerid, params[])
{
	if(pData[playerid][pAdmin] < 3) return 1;
	new id;
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /unwarn [id игрока]");
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid,CWHITE,"» Неверный ID");
	if(!pData[id][pMysqlID]) return SendClientMessage(playerid,CWHITE,"» Этот игрок не зарегистрирован");
	if(!pData[id][pWarnc]) return SendClientMessage(playerid,CWHITE,"» У этого игрока нет варнов");
	pData[id][pWarn] -= WARN_TIME;
	pData[id][pWarnc] -= 1;
	UpdatePlayerData(id,"warn",pData[id][pWarn]);
	UpdatePlayerData(id,"warnc",pData[id][pWarnc]);
	mes = "";
	f(mes, "» Администратор %s снял предупреждение игроку %s",pData[playerid][pNickname],pData[id][pNickname]);
	AdminChat(0xAFAFAFff,mes);
	f(mes, "» Администратор %s снял Вам предупреждение",pData[playerid][pNickname]);
	SendClientMessage(id,COLOR_LIGHTRED,mes);
	return 1;
}
CMD:unmute(playerid, params[])
{
	if(pData[playerid][pAdmin] < 2) return 1;
	new id;
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /unmute [id игрока]");
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid,CWHITE,"» Неверный ID");
	if(!pData[id][pMysqlID]) return SendClientMessage(playerid,CWHITE,"» Этот игрок не зарегистрирован");
	if(pData[id][pMut] == 0) return SendClientMessage(playerid,-1,"Данный игрок не наказан бан чатом!");
	pData[id][pMut] = 0;
	UpdatePlayerData(id,"mut",0);
	mes = "";
	f(mes, "» Администратор %s снял затычку с игрока %s",pData[playerid][pNickname],pData[id][pNickname]);
	SendClientMessageToAll(COLOR_LIGHTRED,mes);
	f(mes, "» Администратор %s снял Вам затычку",pData[playerid][pNickname]);
	SendClientMessage(id,COLOR_LIGHTRED,mes);

	return 1;
}
CMD:unban(playerid, params[])
{
	if(pData[playerid][pAdmin] < 4) return 1;
	new tmp[36];
	if(sscanf(params, "s[32]", tmp)) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /unban [ник игрока]");
	sql_escape_string(zConn, tmp, tmp, 24);
	mes = "";
	f(mes, "SELECT `id` FROM `accounts` WHERE `nickname` = '%s'",tmp);
	new Result:zID = sql_query(zConn, mes, QUERY_CACHED);
	if(!sql_num_rows(zID)) return SendClientMessage(playerid,CWHITE,"» Неверный никнейм");
	new id = sql_get_field_int(zID, 0);
	sql_free_result(zID);
	f(mes, "DELETE FROM `ban` WHERE `takeid` = '%d'",id);
	new Result:zUnBan = sql_query(zConn, mes); mes = "";
	if(!sql_affected_rows(zUnBan)) return SendClientMessage(playerid,CWHITE,"» Игрок не забанен");
	else
	{
		f(mes, "Администратор %s разбанил игрока %s",pData[playerid][pNickname],tmp);
		AdminChat(0xAFAFAFAA,mes);
		printf("%s unbanned %s",pData[playerid][pNickname],tmp);
	}
	return 1;
}
CMD:weap(playerid, params[])
{
	if(pData[playerid][pAdmin] < 1) return 1;
	new weap;
	if(sscanf(params, "u", weap)) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /weap [id игрока]");
	if(!IsPlayerConnected(weap)) return SendClientMessage(playerid,CWHITE,"» Неверный ID");
	if((pData[playerid][pAdmin] < 1 && pData[weap][pAdmin] >= 1) || pData[weap][pMysqlID] == 39854) return SendClientMessage(playerid, COLOR_LIGHTRED, "Ошибка доступа!");
	new strings[1000],strin[100],strs[100],gunname[32];
	new weapons[13][2];
	new stringss[50];
	format(strs, 100, "%s", pData[weap][pNickname]);
	strcat(stringss, strs);
	for (new i = 0; i < 13; i++)
	{
		GetPlayerWeaponData(weap, i, weapons[i][0], weapons[i][1]);
		GetWeaponName(weapons[i][0],gunname,32);
		format(strin,70,"{FFFFFF}Slot: %d\tWeaponid: %d\tAmmo: %d\n",i,weapons[i][0],weapons[i][1]);
		strcat(strings,strin);
	}
	ShowPlayerDialog(playerid,0000,0,stringss,strings,"Закрыть","");
	return 1;
}
CMD:skin(playerid, params[])
{
	if(pData[playerid][pAdmin] < 4) return 1;
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /skin [id игрока] [id скина]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CWHITE,"» Неверный ID");
	if(params[1] > 299 || params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "ID скина от 1 до 299!");
	SetPlayerSkin(params[0], params[1]);
	PlayerPlaySound(params[0], 1132, 0.0, 0.0, 0.0);
	SendMes(params[0], COLOR_WHITE, "Администратор %s поставил Вам динамический скин",pData[playerid][pNickname]);
	return 1;
}
CMD:payday(playerid, params[])
{
	if(strcmp(pData[playerid][pNickname], "Sem_Nicholson", true)) return 1;
	PayDay();
	return 1;
}
CMD:ans(playerid, params[])
{
	if(pData[playerid][pAdmin] < 1) return 1;
	if(sscanf(params, "us[120]", params[0], params[1])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /ans [id игрока] [ответ]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CWHITE,"» Неверный ID");
	mes = "";
	f(mes, "» Администратор - %s | Ответил: %s[%d]: %s", pData[playerid][pNickname],pData[params[0]][pNickname], params[0], params[1]);
	AdminChat(0xFFEF40FF, mes);
	f(mes, "» Ответ на ваш вопрос: {ffffff}%s", params[1]);
	SendClientMessage(params[0], 0xFFEF40FF, mes);
	f(mes, "» Ответил на Ваш вопрос Администратор{FFCD00} %s{33AAFF}. С Ув. Администрация Dallas RP", pData[playerid][pNickname]);
	SendClientMessage(params[0], COLOR_GREEN, mes);
	PlayerPlaySound(params[0], 17001, 0.0, 0.0, 0.0);
	return 1;
}
CMD:admins(playerid, params[])
{
	if(pData[playerid][pAdmin] < 1) return 1;
	SendClientMessage(playerid,COLOR_GREEN,"Администраторы онлайн:");
	mes = "";
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(!IsPlayerConnected(i) || !pData[i][pAdmin]) continue;
	 	f(mes, "» {FFFFFF}%s[%d] (%d)",pData[i][pNickname],i,pData[i][pAdmin]);
		SendClientMessage(playerid,COLOR_YELLOW,mes);
	}
	return 1;
}
CMD:hp(playerid, params[])
{
	if(pData[playerid][pAdmin] < 4) return 1;
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /hp [id игрока] [кол-во хп НАПРИМЕР 15.2]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CWHITE,"» Неверный ID");
	if(params[1] < 1 || params[1] > 100) return SendClientMessage(playerid,CWHITE,"» Лимит здоровья от 1 до 100");
	SetPlayerHealth(params[0],params[1]+0.0);
	pData[playerid][pHealth] = params[1];
	//pData[params[0]][pHealth] = params[1];
	SendMes(playerid, -1, "Вы изменили здоровье игроку: %s", pData[params[0]][pNickname]);
	SendMes(params[0], -1, "%s изменил Вам здоровье", pData[playerid][pNickname]);
	return 1;
}
CMD:mute(playerid, params[])
{
	if(pData[playerid][pAdmin] < 2) return 1;
	if(sscanf(params, "uds[32]", params[0], params[1], params[2])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /mute [id игрока] [время] [причина]");
	if(!strcmp(pData[params[0]][pNickname], "Sem_Nicholson", true)) return 1;
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CWHITE,"» Неверный ID");
	if(!pData[params[0]][pMysqlID]) return SendClientMessage(playerid,CWHITE,"» Этот игрок не зарегистрирован");
	if(params[1] < 10 || params[1] > 180) return SendClientMessage(playerid,CWHITE,"» Введите время от 10 до 180 минут");
	if(pData[params[0]][pMut] > 0) return SendClientMessage(playerid, -1, "Данному игроку уже выдан бан чата!");

	pData[params[0]][pMut] = params[1];
	UpdatePlayerData(params[0],"mut", params[1]);

	mes = "";
	f(mes, "» Администратор %s [ id: %d ] выдал затычку игроку %s [ id: %d ] на %d минут. Причина: %s",pData[playerid][pNickname],playerid,pData[params[0]][pNickname],params[0],params[1],params[2]);
	SendAdminMessage(COLOR_LIGHTRED, mes, params[0]);
	return 1;
}
CMD:givemoney(playerid, params[])
{
	new bool: dostup = false;
	if(!strcmp(pData[playerid][pNickname], "Sem_Nicholson", true)) dostup = true;
	if(dostup == false) return 1;

	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /givemoney [id игрока] [денег]");
	if(params[1] < 1 || params[1] > 5000000) return SendClientMessage(playerid,CWHITE,"» Неверная сумма");
	TransferMoney(-1,params[0],params[1],"admingive");
	return 1;
}
CMD:setfuel(playerid, params[])
{
	if(pData[playerid][pAdmin] < 4) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /setfuel [id машины]");
	new model = GetVehicleModel(params[0]);
	if(!model) return SendClientMessage(playerid,CWHITE,"» Неверный ID авто");
	gVehicles[params[0]-1][vFuel] = 100;
	return 1;
}
CMD:gtv(playerid, params[])
{
	if(pData[playerid][pAdmin] < 3) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /gtv [id игрок]");
	new Float:x, Float:y, Float:z;
	GetVehiclePos(params[0],x,y,z);
	x += 2.0;
	SetPlayerPos(playerid,x,y,z);
	return 1;
}

CMD:id(playerid, params[])
{
	new tmp[64];
	if(sscanf(params, "s[64]", tmp)) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /id [имя игрока]");
	SendClientMessage(playerid,CYELLOW,"Игроки онлайн:");
	new id=-1,name[30];
	if(!isNumeric(tmp))
	{
		for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
		{
		    i = cvector_get(PLAYERS, idx);
			if(!IsPlayerConnected(i)) continue;
			GetPlayerName(i,name,30);
			if(strfind(name,tmp,true) != -1)
			{
				if(id >= 4) {
					id++;
					continue;
				}
				format(name,sizeof(name),"%s [%d]",name,i);
				SendClientMessage(playerid,CWHITE,name);
				id++;
			}
		}
		if(id == -1) return SendClientMessage(playerid,CWHITE,"» Не найдено");
		else if(id >= 4) {
			format(name,sizeof(name),"Показано 5 найденных из %d", id-2);
			SendClientMessage(playerid, CGRAY, name);
		}
	}
	else
	{
		id = strval(tmp);
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,CWHITE,"» Не верный ID");
		GetPlayerName(id,name,24);
		format(name,sizeof(name),"%s [%d]",name,id);
		SendClientMessage(playerid,CWHITE,name);
	}
	return 1;
}

CMD:stats(playerid, params[])
{
	if(pData[playerid][pAdmin] < 1) return SendClientMessage(playerid, CWHITE,"» Вы не можете использовать данную команду");
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /stats [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CWHITE,"» Неверный ID");
    ShowStats(params[0], playerid);
	return 1;
}
CMD:remove(playerid, params[])
{
	if(!IsACop(playerid) || pData[playerid][pRank] < 4) return SendClientMessage(playerid, CWHITE,"» Вы не можете использовать данную команду");
	new iddd;
	if(sscanf(params, "u", iddd)) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /remove [id игрока]");
	if(!IsPlayerConnected(iddd)) return SendClientMessage(playerid,CWHITE,"» Неверный ID");
	if(!pData[iddd][pWanted]) return SendClientMessage(playerid,CWHITE,"» У игрока нет розыска");
	pData[iddd][pWanted] = 0;
	UpdatePlayerData(iddd,"wanted",0);
	SetPlayerWantedLevel(iddd,0);
	mes = "";
	f(mes, "» » %s %s[%d] снял розыск у %s[%d]",gFractionRankName[pData[playerid][pFraction]-1][pData[playerid][pRank]-1], pData[playerid][pNickname],playerid,pData[iddd][pNickname],iddd);
	CopMes(0xFFA640FF,mes);
	f(mes, "» {3399FF}%s %s[%d] снял Вам розыск",gFractionRankName[pData[playerid][pFraction]-1][pData[playerid][pRank]-1],pData[playerid][pNickname],playerid);
	SendClientMessage(iddd,-1,mes);
	return 1;
}

CMD:get(playerid, params[])
{
	if(pData[playerid][pAdmin] < 3) return 1;
	new tmp[32];
	if(sscanf(params, "s[32]", tmp)) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /get [имя игрока]");

	new id,
	level,
	cash,
	bank,
	datareg[50],
	ipigr[50],
	ipigrr[50],
	donat,
	var[50],
	strv[26],
	strvv[26],
	splitt[4][4],
	spli[4][4],
	query[150],
	iptext[33];
	//
	split(ipigrr,splitt,'.');
	format(strv,sizeof(strv),"%s.%s",splitt[0],splitt[1]);
	split(ipigr,spli,'.');
	format(strvv,sizeof(strvv),"%s.%s",spli[0],spli[1]);
	if(strcmp(strv,strvv, true)) iptext = "{ff6500}Подсеть несовпадает";
	else iptext = "{63cb00}Подсеть совпадает";
	//
	f(mes,  "SELECT * FROM `accounts` WHERE `nickname` = '%s'", tmp);
	new Result: tt = sql_query(zConn, mes, QUERY_CACHED);
	if(sql_num_rows(tt))
	{
		sql_get_field_assoc_ex(tt, 0, "id", var); id = strval(var);
		sql_get_field_assoc_ex(tt, 0, "ip", ipigr);
		sql_get_field_assoc_ex(tt, 0, "level", var); level = strval(var);
		sql_get_field_assoc_ex(tt, 0, "money", var); cash = strval(var);
		sql_get_field_assoc_ex(tt, 0, "bank", var); bank = strval(var);
		sql_get_field_assoc_ex(tt, 0, "getip", ipigrr);
		sql_get_field_assoc_ex(tt, 0, "last", datareg);
		sql_get_field_assoc_ex(tt, 0, "donate", var); donat = strval(var);



		new ssss[20];
		format(ssss, 100, "%s", tmp);

		new string1[1024], strl[1024];
		format(strl, 100, "Номер аккаунта:\t%d\n", id);
		strcat(string1,strl);
		format(strl, 100, "Наличные:\t\t%d\n", cash);
		strcat(string1,strl);
		format(strl, 100, "Осн. банк счёт:\t%d\n", bank);
		strcat(string1,strl);
		format(strl, 100, "Уровень:\t\t%d\n", level);
		strcat(string1,strl);
		format(strl, 100, "IP адрес(регис.):\t%s\n", ipigr);
		strcat(string1,strl);
		format(strl, 100, "IP адрес(послед.):\t%s\n", ipigrr);
		strcat(string1,strl);
		format(strl, 100, "Дата регистрации:\t%s\n", datareg);
		strcat(string1,strl);
		format(strl, 100, "Донат:\t\t\t%d\n", donat);
		strcat(string1,strl);
		format(strl, 100, "%s\n", iptext);
		strcat(string1,strl);

		ShowPlayerDialog(playerid, dMes, DIALOG_STYLE_MSGBOX, ssss, string1, "Закрыть", "");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Данный аккаунт не найден");
	sql_free_result(tt);
	return true;
}



/*public OnPlayerCommandText(playerid, cmdtext[])
{
	if(pTemp[playerid][pOff] > 2)
	{
		SendClientMessage(playerid,CWHITE,"Использовать команды можно раз в 2 секунды");
		return true;
	}
	if(pTemp[playerid][pDialog]) return SendClientMessage(playerid,CWHITE,"» Нельзя использовать команды, пока открыт диалог");
	pTemp[playerid][pOff]++;
	if(!pTemp[playerid][pLogined]) return 1;
	if(!IsPlayerConnected(playerid)) return 1;
	new cmd[128], idx, tmp[128];
	cmd = strtok(cmdtext, idx);
	if(pData[playerid][pAdmin] > 0 && admloged[playerid] != 1)
	{
		ShowPlayerDialog(playerid, dLoginAdmins, DIALOG_STYLE_INPUT, "{33AAFF}Авторизация", "{ffffff}Введите пароль от администраторской панели\nЕсли вы не знаете пароля, обратитесь к Sem_Nicholson:", "Вход", "Отмена");
		return 1;
	}
	if(!strcmp(cmd,"/mygame",true))
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /mygame [id]");
		new id = strval(tmp);
		switch(id)
		{
			case 0: SetPlayerAttachedObject(playerid,5,19472,2,0.017000,0.128999,0.009999,-0.200000,92.100013,88.999984,0.795000,1.073000,1.066000);
			case 1:
			{
				SetPlayerSkin(playerid, 282);
				SetPlayerAttachedObject(playerid,4,18642,7,0.000000,0.101999,-0.088000,5.999999,-90.799972,-114.599990,1.000000,1.000000,1.000000);
				SetPlayerAttachedObject(playerid,5,19138,2,0.084999,0.028999,0.000000,1.900000,90.999938,87.700050,1.000000,1.000000,1.000000);
				SetPlayerAttachedObject(playerid,6,18636,2,0.132999,0.047999,0.000000,-0.399999,90.100028,90.300010,0.990000,1.060000,1.058000);
				SetPlayerAttachedObject(playerid,7,19142,1,0.069999,0.043999,0.010000,0.000000,0.000000,0.000000,1.038000,1.219001,1.077000);
			}
			case 2:
			{
				SetPlayerAttachedObject(playerid, 3, 3026, 1, -0.130000, -0.103000, 0.000200, 0.000000, 0.000000, 0.000000);
			}
			case 3:
			{
				SetPlayerAttachedObject(playerid, 3, 1010, 1, 0.022222, -0.099900, 0.000000, 90.000000, 0.000000, 180.000000);
			}
			case 4: SetPlayerAttachedObject(playerid, 3, 19065, 2, 0.120000, 0.040000, -0.003500, 0, 100, 100, 1.4, 1.4, 1.4);
			case 5: SetPlayerAttachedObject(playerid,4,19348,5,0.069999,-0.069000,-0.189999,-30.299997,0.000000,0.000000,1.000000,1.000000,1.000000);
			case 6: SetPlayerAttachedObject(playerid,3,19468,2,0.145000,0.000000,-0.007999,0.000000,-95.000030,0.000000,0.978999,1.000000,0.867000);
			case 7: SetPlayerAttachedObject(playerid,3,19472,2,-0.002999,0.121999,-0.004000,4.200000,86.299980,86.000000,1.129000,1.117999,1.139999);
			case 8: SetPlayerAttachedObject(playerid,4,19086,6,0.062999,0.021000,0.110000,0.000000,-45.500007,-9.800000,1.000000,1.000000,1.000000);
			case 9: SetPlayerAttachedObject(playerid,1,18975,2,-0.059999,0.051999,0.000000,0.000000,0.000000,140.100051,1.373999,0.786000,0.837000);
			case 10: SetPlayerAttachedObject(playerid,4,19104,2,0.147999,0.000999,0.000000,0.000000,0.000000,0.000000,1.112999,1.025000,1.091000);
			case 11: SetPlayerAttachedObject(playerid,4,19317,6,0.050999,-0.010999,0.145000,15.999998,179.199951,0.000000,0.875000,1.000000,0.940999);
			case 12: SetPlayerAttachedObject(playerid,3,18698,1,0.388000,0.000000,-1.475000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
			case 13: SetPlayerAttachedObject(playerid,0,3026,1,-0.141999,-0.090000,0.000000,0.000000,0.000000,0.000000,1.000000,1.222000,1.000000);
			case 14: SetPlayerAttachedObject(playerid,2,19081,2,0.070000,0.076999,-0.026000,0.000000,0.000000,85.799964,0.212000,1.460999,1.891999);
			case 15: SetPlayerAttachedObject(playerid,2,19080,2,0.070000,0.076999,-0.026000,0.000000,0.000000,85.799964,0.212000,1.460999,1.891999);
			case 16: SetPlayerAttachedObject(playerid,7,19088,5,-0.031999,0.052999,-0.054000,-125.900001,39.500003,51.399990,0.288000,0.359999,0.020000);
			case 17: SetPlayerAttachedObject(playerid,3,1361,1,0.338381,0.021249,0.017920,82.399101,46.096515,237.863952,1.200000,1.200000,1.200000);
			case 18: SetPlayerAttachedObject(playerid,0,19421,2,0.045000,-0.005999,-0.000999,-89.399993,4.000029,-89.399948,0.963000,1.032000,1.131999);
			case 19: SetPlayerAttachedObject(playerid,6,2226,6,0.396999,-0.002999,0.020000,0.899999,-96.499954,-13.699996,1.000000,1.000000,1.000000);
			case 20:
			{
				SetPlayerSkin(playerid, 50);
				SetPlayerAttachedObject(playerid,8,18638,2,0.156000,-0.001999,-0.006000,0.000000,0.000000,0.000000,1.000000,1.039999,1.048000);
				SetPlayerAttachedObject(playerid,9,3785,2,0.144000,0.090000,0.000000,0.000000,0.000000,83.500007,0.133000,0.103000,0.097999);
			}
		}
	}
	if(!strcmp(cmd,"/loggang1",true))
	{
		if(pData[playerid][pAdmin] < 3) return 1;
		logGang = true;
	}
	if(!strcmp(cmd,"/loggang0",true))
	{
		if(pData[playerid][pAdmin] < 3) return 1;
		logGang = false;
	}
	if(!strcmp(cmd,"/showeconomic",true))
	{
		if(pData[playerid][pAdmin] < 3) return 1;
		if(!pTemp[playerid][pEconomicLog])
		{
			pTemp[playerid][pEconomicLog] = true;
			SendClientMessage(playerid,CSYSTEM,"Лог включен");
		}
		else
		{
			pTemp[playerid][pEconomicLog] = false;
			SendClientMessage(playerid,CSYSTEM,"Лог выключен");
		}
	}
	if(!strcmp(cmd,"/cb",true))
	{
		if(pData[playerid][pAdmin] < 8 || !IsPlayerAdmin(playerid)) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CWHITE,"» /cb [type] [bint] [price] [name]");
		new type = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CWHITE,"» /cb [type] [bint] [price] [name]");
		new bint = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) || !isNumeric(tmp)) return SendClientMessage(playerid,CWHITE,"» /cb [type] [bint] [price] [name]");
		new price = strval(tmp);
		new name[128];
		name = strrest(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,CWHITE,"» /cb [type] [bint] [price] [name]");
		sql_escape_string(zConn, name, name, 24);
		new Float:x, Float:y, Float:z, Float:r;
		GetPlayerPos(playerid,x,y,z);
		GetPlayerFacingAngle(playerid,r);
		mes = "";
		f(mes, "INSERT INTO `business` VALUES('','%s','%d','%d','0','%d','0','0','0','1','%f','%f','%f','%f','','')",name,type,bint,price,x,y,z,r);
		sql_query(zConn, mes); mes = "";
		CreateDynamicPickup(19132,1,x,y,z);
		SendClientMessage(playerid,0x7FC0E3FF,"Бизнес создан");
	}
	if(!strcmp(cmd,"/bints",true))
	{
		if(pData[playerid][pAdmin] < 8 || !IsPlayerAdmin(playerid)) return 1;
		if(!GetPVarFloat(playerid,"oldx"))
		{
			new mes[1024];
			for(new i;i<BINT_COUNT;i++)
			{
				f(mes, "» %s[%d] %s\n",mes,i+1,gBints[i][bintName]);
			}
			ShowPlayerDialog(playerid,dBints,2,"{ffcf00}Бинты",mes,"OK","Отмена");
		}
		else
		{
			new Float:x, Float:y, Float:z;
			x = GetPVarFloat(playerid,"oldx");
			y = GetPVarFloat(playerid,"oldy");
			z = GetPVarFloat(playerid,"oldz");
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerPos(playerid,x,y,z);
			DeletePVar(playerid,"oldx");
			DeletePVar(playerid,"oldy");
			DeletePVar(playerid,"oldz");
		}
	}
	return 1;
}*/


public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	pTemp[playerid][NewWVehicle]=vehicleid;
	pTemp[playerid][pAbletoGun] = 2;
	if(pTemp[playerid][pCuffee] == playerid)
	{
		SendClientMessage(playerid,CWHITE,"» Вы не можете сесть в т/с в наручниках");
		RemovePlayerFromVehicle(playerid);
		ClearAnimations(playerid);
		return 1;
	}
	if(!ispassenger) pTemp[playerid][pEnterVehicle] = vehicleid;
	if(vehicleid >= aBus[0] && vehicleid <= aBus[1])
	{
		new driver = gVehicleDriver[vehicleid-1];
		if(IsPlayerConnected(driver))
		{
			if(pTemp[driver][pBusID] == vehicleid)
			{
				if(ispassenger) SetVehicleParamsForPlayer(vehicleid,playerid,0,0);
				else if(playerid != driver) SetVehicleParamsForPlayer(vehicleid,playerid,0,1);
				else if(playerid == driver) SetVehicleParamsForPlayer(vehicleid,playerid,0,0);
			}
		}
	}
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{

	/*if(pTemp[playerid][pRaceIvite])
	{
	//	TextDrawHideForPlayer(playerid,RacerS[playerid][TD1]);
	//	TextDrawHideForPlayer(playerid,RacerS[playerid][TD2]);
	//	TextDrawHideForPlayer(playerid,RacerS[playerid][TD3]);
	//	TextDrawHideForPlayer(playerid,RacerS[playerid][TD4]);
	//	TextDrawHideForPlayer(playerid,RacerS[playerid][TD5]);
		for(new i;i<10; i++)
		{
			if(i == PlaceNumber[playerid])
			{
				gRacePlaceCar[i] = 0;
				break;
			}
		}
		PlaceNumber[playerid] = -1;
		TotalRace --;
//		if(TotalRace == STRS) RaceAll = 1;
		GZRace[playerid] = 0;
		//TextDrawHideForPlayer(playerid, RaceTime[playerid]);
		DestroyVehicle(pTemp[playerid][pRaceID]);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		switch(GetPVarInt(playerid,"Race"))
		{
		case 0: SetPlayerPos(playerid, 781.2703,1864.3761,4.8064);
		case 1: SetPlayerPos(playerid, -2405.5994,-2184.0781,33.2891);
		}
		SetVehicleToRespawn(GetVehicleModel(playerid));
		pTemp[playerid][pRaceIvite] = 0;
		pTemp[playerid][pRaceID] = 0;
		DisablePlayerRaceCheckpoint(playerid);
		SendClientMessage(playerid,-1,"Вы вышли из транспорта, гонка закончена");
	}*/
	if(gVehicleDrugs[vehicleid][DrugsStatus] == true)
	{
		gVehicleDrugs[vehicleid][DrugsStatus] = false;
		if(IsValid3DTextLabel(pTemp[playerid][pVodka3DText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pVodka3DText]);
		gVehicleDrugs[vehicleid][DrugsKG] = 0;
		ZavodInfo[4] += 100;
		SetVehicleToRespawn(GetVehicleModel(playerid));
	}
	SetPVarInt(playerid,"AFK_Time",0);
	pTemp[playerid][pAbletoGun] = 2;
	new id = GetPVarInt(playerid, "vehid");
	if(id > 0) {
		GetVehiclePos(id, gVehicles[id - 1][vX], gVehicles[id - 1][vY], gVehicles[id - 1][vZ]);
		GetVehicleZAngle(id, gVehicles[id - 1][vA]);
	}
	if(pTemp[playerid][pEther]) return SendClientMessage(playerid, COLOR_GREY, "Эфир автоматически завершен"), pTemp[playerid][pEther] = false;

	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
//    new oldvehid = gLastCar[playerid];
	if(newstate == PLAYER_STATE_PASSENGER) SetTimerEx("AntiCarShoter",3500,false,"i",playerid);
	if(newstate == PLAYER_STATE_ONFOOT)
	{
	   //HideSpeedometer(playerid);
	    /*new Float:posx, Float:posy, Float:posz;
	    new engine,light,alarm,doors,bonnet,boot,objective;
		if(Bl::Info[playerid][Bl::Finder] != INVALID_PLAYER_ID) {
			GetPlayerPos(playerid, posx, posy, posz);
			Bl::Info[Bl::Info[playerid][Bl::Finder]][Bl::Marker] = CreateDynamicCP(posx, posy, posz, 1.6, -1, -1, Bl::Info[playerid][Bl::Finder], 200.0);
   			for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
			{
	    		i = cvector_get(PLAYERS, idx);
				if(Bl::Info[i][Bl::Observe] == playerid){
					Bl::Info[i][Bl::Marker] = CreateDynamicCP(posx, posy, posz, 1.6, -1, -1, i, 200.0);
				}
			}
		}
		GetVehicleParamsEx(oldvehid, engine, light, alarm, doors, bonnet, boot, objective);
		if(objective > 0)
  		{
			SetVehicleParamsEx(oldvehid, engine, light, alarm, doors, bonnet, boot, false);
		}
  		*/
		KillTimer(pTemp[playerid][STimer]);
		pTemp[playerid][checkcs] = 0;

	}
	if(oldstate == PLAYER_STATE_DRIVER)
	{
		if(BanCar[GetPVarInt(playerid,"VehID")]) KillTimer(pTemp[playerid][TimeUpdate]);
		pTemp[playerid][TimeUpdate] = SetTimerEx("UpdateVehiclePos", 10000, false, "ii", GetPVarInt(playerid,"VehID"), 1);
		BanCar[GetPVarInt(playerid,"VehID")] = true;
		HideSpeedometr(playerid);

	}
	pTemp[playerid][pAbletoGun] = 2;
	if(newstate == PLAYER_STATE_DRIVER)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
		if(IsNotDriving(vehicleid) == 1)
		{
			SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,false,false,false,false,false);
			return 1;
		}
		SetPVarInt(playerid,"VehID",GetPlayerVehicleID(playerid)),SetPVarInt(playerid,"exitedtrans",0);
		if(pData[playerid][pJob] == 1 && pTemp[playerid][pBusID] == vehicleid)
		{
			KillTimer(pTemp[playerid][pBusSpawnTimer]);
			SetPVarInt(playerid,"exitedtrans",0);
		}
		if(pData[playerid][pJob] == 3 && pTemp[playerid][pTaxiID] == vehicleid)
		{
			KillTimer(pTemp[playerid][pTaxiSpawnTimer]);
			SetPVarInt(playerid,"exitedtrans",0);
		}
		if(pTemp[playerid][pWork] == 10 && pTemp[playerid][pPesokID] == vehicleid)
		{
			KillTimer(pTemp[playerid][pPesokSpawnTimer]);
			SetPVarInt(playerid,"exitedtrans",0);
		}
		if(pTemp[playerid][pWork] == 7 && pTemp[playerid][pVinogradID] == vehicleid)
		{
			KillTimer(pTemp[playerid][pVinogradSpawnTimer]);
			SetPVarInt(playerid,"exitedtrans",0);
		}


		if(pTemp[playerid][pWork] == 8 && pTemp[playerid][pTruckID] == vehicleid)
		{
			KillTimer(pTemp[playerid][pTruckSpawnTimer]);
			SetPVarInt(playerid,"exitedtrans",0);
		}


		//======================================================================
		SpdObj[playerid][0] = CreateDynamicObject(19327,0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,playerid,200.0);//19482
		SpdObj[playerid][1] = CreateDynamicObject(19327,0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,playerid,200.0);
		SpdObj[playerid][2] = CreateDynamicObject(19327,0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,playerid,200.0); //0xFF00FFFF берюзовый
		SpdObj[playerid][3] = CreateDynamicObject(19327,0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,playerid,200.0);
		new Float:x,Float:y,Float:z; GetVehicleModelInfo(GetVehicleModel(vehicleid),VEHICLE_MODEL_INFO_SIZE,x,y,z);//0xFFC0CBFF aaeue
		//----------------------------------------------------------------------
		if(IsNotDriving(vehicleid) == 0) AttachDynamicObjectToVehicle(SpdObj[playerid][0], vehicleid, -x-0.55, -1.1, z/2-0.35, 0.0, 0.0, 10.0);//270
		else AttachDynamicObjectToVehicle(SpdObj[playerid][0], vehicleid, -x+0.55, -1.1, z/2-0.70, 0.0, 0.0, 10.0);//270
		//----------------------------------------------------------------------
		if(IsNotDriving(vehicleid) == 0) AttachDynamicObjectToVehicle(SpdObj[playerid][1], vehicleid, -x-0.55, -1.1, z/2-0.65, 0.0, 0.0, 10.0);
		else AttachDynamicObjectToVehicle(SpdObj[playerid][1], vehicleid, -x+0.55, -1.1, z/2-1.0, 0.0, 0.0, 10.0);
		//----------------------------------------------------------------------
		new tCarModel[MAX_PLAYERS];
		tCarModel[playerid] = GetVehicleModel(vehicleid);//Ociaao ID iiaaee aaiiiai o?ainii?oiiai n?aanoaa. 0xC0C0C0FF
		SetDynamicObjectMaterialText(SpdObj[playerid][2],0,GetVehicleName(tCarModel[playerid]),OBJECT_MATERIAL_SIZE_512x256,"Arial",64,false,0xffffffff,0,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);//Верхняя вторая
		if(IsNotDriving(vehicleid) == 0) AttachDynamicObjectToVehicle(SpdObj[playerid][2], vehicleid, x+0.55, -1.1, z/2-0.35, 0.0, 0.0, -10.0);//270
		else AttachDynamicObjectToVehicle(SpdObj[playerid][2], vehicleid, x-0.55, -1.1, z/2-0.70, 0.0, 0.0, -10.0);//270
		//----------------------------------------------------------------------
		if(IsNotDriving(vehicleid) == 0) AttachDynamicObjectToVehicle(SpdObj[playerid][3], vehicleid, x+0.55, -1.1, z/2-0.65, 0.0, 0.0, -10.0);
		else AttachDynamicObjectToVehicle(SpdObj[playerid][3], vehicleid, x-0.55, -1.1, z/2-1.0, 0.0, 0.0, -10.0);
		//----------------------------------------------------------------------
		Streamer_Update(playerid);
		UpdateSpeed[playerid] = true;
		//======================================================================


		if(IsPlayerNPC(playerid)) return 1;

		SetPlayerArmedWeapon(playerid,0);
		new model = GetPlayerVehicleSeat(playerid);
		if(model != 128)
		{
			if(!model)
			{
				model = GetVehicleModel(GetPlayerVehicleID(playerid));
				if(!(400 <= model <= 611) || MaxPassengers[model - 400 >>> 3] >>> ((model - 400 & 7) << 2) & 0xF == 15) return NewKick(playerid);
			}
			else return NewKick(playerid);
		}
		if(pTemp[playerid][pEnterVehicle] != vehicleid && !IsKicked(playerid) && !IsPlayerNPC(playerid))
		{
            SendClientMessage(playerid,COLOR_LIGHTRED,"» Вы кикнуты по подозрению в читерстве (#101)");
            NewKick(playerid);
			//AddCheaterID(playerid,1);
			return 1;
		}
		else pTemp[playerid][pEnterVehicle] = INVALID_VEHICLE_ID;
		new id = GetVehicleModel(vehicleid)-400;
		if(id<0)
		{
			RemovePlayerFromVehicle(playerid);
			SendClientMessage(playerid,CWHITE,"» Ошибка");
			return 1;
		}
		gVehicles[vehicleid - 1][vOccupied] = true;
		SetPVarInt(playerid, "vehid", vehicleid);
		if(vehicleid) gVehicleDriver[vehicleid-1] = playerid;
		if(GetVehicleType(id) == VEHICLE_TYPE_CAR)
		{
			if(pData[playerid][pLicenses][LIC_DRIVING] || pTemp[playerid][pOnExam] == true || IsNotDriving(vehicleid) == 1){}
			else
			{
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid,CWHITE,"» У Вас нет водительских прав");
				return 1;
			}
		}
		if(GetVehicleType(id) == VEHICLE_TYPE_PLANE)
		{
			if(pData[playerid][pLicenses][LIC_FLY]  || pTemp[playerid][pOnExam]){}
			else
			{
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid,CWHITE,"» У Вас нет лицензии пилота");
				return 1;
			}
		}
		if(GetVehicleType(id) == VEHICLE_TYPE_BOAT)
		{
			if(pData[playerid][pLicenses][LIC_BOAT] || pTemp[playerid][pOnExam]){}
			else
			{
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid,CWHITE,"» У Вас нет лицензии на управление водным транспортом");
				return 1;
			}
		}
		if( IsNotDriving(GetPlayerVehicleID(playerid)) == 0 )
		{
			if(gTransport[id][trFuelable] != 0)
			{
				UpdateCarInfo(playerid,vehicleid,0);
				//PlayerTextDrawSetPreviewModel(playerid,privcar[playerid],GetVehicleModel(GetPlayerVehicleID(playerid)));
				//PlayerTextDrawShow(playerid,privcar[playerid]);
				//PlayerTextDrawShow(playerid,gVehInfo[playerid]);
				//PlayerTextDrawShow(playerid,gTreeV[playerid]);
				//PlayerTextDrawShow(playerid,gFuel[playerid]);
				pTemp[playerid][pCarInfoTimer] = SetTimerEx("UpdateCarInfo",200,true,"iii",playerid,vehicleid,0);
			}
			else
			{
				ToggleEngine(vehicleid);
			}
			pTemp[playerid][pOldVehicleid] = vehicleid;
		}
		if(vehicleid >= aRazvoz[0] && vehicleid <= aRazvoz[1])
		{

		    if(pTemp[playerid][pWork] != 7)
			{
				SendClientMessage(playerid,CWHITE,"» Вы не развозчик винограда");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			else
			{
			    if(pTemp[playerid][pVinogradID] != INVALID_VEHICLE_ID) return SendClientMessage(playerid,CWHITE,"» Вы уже взяли машину");
				SendClientMessage(playerid,COLOR_GREEN,"» Чтобы работать вводите {FFCD00}\" - /load или /unload \"");
				SendClientMessage(playerid,COLOR_YELLOW, "» В /gps - Работы - Места загрузки, Вы сможете найти где Вам загружать материал.");
				pTemp[playerid][pVinogradID] = vehicleid;

			}
		}
		if(vehicleid >= aPesok[0] && vehicleid <= aPesok[1])
		{

		    if(pTemp[playerid][pWork] != 10)
			{

				SendClientMessage(playerid,CWHITE,"» Вы не развозчик песка");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			else
			{
			    if(pTemp[playerid][pPesokID] != INVALID_VEHICLE_ID) return SendClientMessage(playerid,CWHITE,"» Вы уже взяли машину");
				SendClientMessage(playerid,COLOR_GREEN,"» Чтобы работать вводите {FFCD00}\" - /load и /unload \"");
				SendClientMessage(playerid,COLOR_YELLOW, "» В /gps - Работы - Места загрузки, Вы сможете найти где Вам загружать материал.");
            	pTemp[playerid][pPesokID] = vehicleid;
			}
		}
	    if(vehicleid >= aMaterial[0] && vehicleid <= aMaterial[1])
		{
		    if(pData[playerid][pFraction] != 8)
			{
				SendClientMessage(playerid,CWHITE,"» Вы не состоите в армии");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			SendClientMessage(playerid,COLOR_GREEN,"» Чтобы начать работу введите {FFCD00}\" /pcc \"");
		}
		if(vehicleid >= aBus[0] && vehicleid <= aBus[1])
		{
			if(pData[playerid][pJob] != 1)
			{
				SendClientMessage(playerid,CWHITE,"» Вы не водитель автобуса");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			if(pTemp[playerid][pBusID] == vehicleid)
			{
				if(pTemp[playerid][pBusSpawnTimer]) KillTimer(pTemp[playerid][pBusSpawnTimer]);
				new route = pTemp[playerid][pBusRoute];
				new p = pTemp[playerid][pBusPos];
				if(route == 0) SetPlayerRaceCheckpoint(playerid,0,LS_001[p][0],LS_001[p][1],LS_001[p][2],LS_001[p][3],LS_001[p][4],LS_001[p][5],5.0);
				if(route == 1) SetPlayerRaceCheckpoint(playerid,0,LS_002[p][0],LS_002[p][1],LS_002[p][2],LS_002[p][3],LS_002[p][4],LS_002[p][5],5.0);
                if(route == 2) SetPlayerRaceCheckpoint(playerid,0,UNI_001[p][0],UNI_001[p][1],UNI_001[p][2],UNI_001[p][3],UNI_001[p][4],UNI_001[p][5],5.0);
				//SetNextBusCP(playerid,pTemp[playerid][pBusPos]);
				return 1;
			}
			for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
			{
				i = cvector_get(PLAYERS, idx);
				if(!IsPlayerConnected(i)) continue;
				if(i == playerid) continue;
				if(pTemp[i][pBusID] == vehicleid)
				{
					SendClientMessage(playerid,CWHITE,"» Этот автобус уже арендуют");
					RemovePlayerFromVehicle(playerid);
				}
			}
			if(pTemp[playerid][pBusID] != INVALID_VEHICLE_ID && pTemp[playerid][pBusID] != vehicleid) return SendClientMessage(playerid,CWHITE,"» Вы уже арендуете автобус");
			if(GetPlayerMoneyEx(playerid) < 500)
			{
				SendClientMessage(playerid,CWHITE,"» Вам нужно 500$ для аренды автобуса");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			ShowPlayerDialog(playerid,dBusRent,0,"Аренда автобуса","{ffffff}Вы хотите арендовать данный автобус?\n\nСтоимость: {33CCFF}500{ffffff}$","Да","Нет");
		}
		else if(vehicleid >= aFuel[0] && vehicleid < aFuel[1])
		{
		    if(pTemp[playerid][pWork] == 8) { }
		    else
		    {
		        SendClientMessage(playerid,CWHITE,"» Вы не развозчик топлива");
				RemovePlayerFromVehicle(playerid);
				return 1;
		    }
		    SendClientMessage(playerid,COLOR_GREEN,"» Чтобы начать работу введите {FFCD00}\" /pcc \"");
		    pTemp[playerid][pTruckID] = vehicleid;
		}

		else if(vehicleid >= aTaxi[0] && vehicleid <= aTaxi[1])
		{
			if(pData[playerid][pJob] != 3)
			{
				SendClientMessage(playerid,CWHITE,"» Вы не работаете таксистом.");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			if(pTemp[playerid][pTaxiID] == vehicleid) return 1;
			for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
			{
			    i = cvector_get(PLAYERS, idx);
				if(!IsPlayerConnected(i) || i == playerid) continue;
				if(pTemp[i][pTaxiID] == vehicleid)
				{
					SendClientMessage(playerid,CWHITE,"» Это такси уже арендуют.");
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
			}
			if(pTemp[playerid][pTaxiID] != INVALID_VEHICLE_ID)
			{
				SendClientMessage(playerid,CWHITE,"» Вы уже арендуете такси.");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			if(GetPlayerMoneyEx(playerid) < 1000)
			{
				SendClientMessage(playerid,CWHITE,"» Вам нужно 1000$ чтобы арендовать это такси.");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			SPFDD(playerid,dTaxiRent,0,"Аренда такси","Да","Нет","{"#cWHITE"}Вы хотите арендовать это такси за {"#cRED"}$1000{"#cWHITE"}, чтобы возить на нем пассажиров?");
		}
		else if(vehicleid >= aMech[0] && vehicleid <= aMech[1])
		{
			if(pData[playerid][pJob] != 4)
			{
				SendClientMessage(playerid,CWHITE,"» Вы не работаете механиком");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			if(pTemp[playerid][pMechID] == vehicleid) return 1;
			for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
			{
			    i = cvector_get(PLAYERS, idx);
				if(!IsPlayerConnected(i) || i == playerid) continue;
				if(pTemp[i][pMechID] == vehicleid)
				{
					SendClientMessage(playerid,CWHITE,"» Это транспортное средство уже арендуют.");
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
			}
			if(GetPlayerMoneyEx(playerid) < 70)
			{
				SendClientMessage(playerid,CWHITE,"» Вам нужно $70 чтобы арендовать рабочий транспорт.");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			ShowPlayerDialog(playerid,dMechRent,0,"Аренда автомобиля механика","{"#cWHITE"}Вы хотите арендовать рабочий транспорт за {"#cRED"}$70{"#cWHITE"}?","Да","Нет");
		}
		else if(vehicleid >= aProduct[0] && vehicleid <= aProduct[1])
		{
			if(pData[playerid][pJob] != 5)
			{
				SendClientMessage(playerid,CWHITE,"» Вы не работаете развозчиком товаров.");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			if(pTemp[playerid][pDFTID] == vehicleid) return 1;
			for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
			{
			    i = cvector_get(PLAYERS, idx);
				if(!IsPlayerConnected(i) || i == playerid) continue;
				if(pTemp[playerid][pDFTID] == vehicleid)
				{
					SendClientMessage(playerid,CWHITE,"» Этот транспорт уже арендуют.");
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
			}
			if(GetPlayerMoneyEx(playerid) < 200)
			{
				SendClientMessage(playerid,CWHITE,"» Вам нужно $200 чтобы арендовать это транспортное средство.");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			ShowPlayerDialog(playerid,dDFTRent,0,"Аренда транспорта для развозки товаров.","{"#cWHITE"}Вы хотите арендовать рабочий транспорт за {"#cRED"}$200{"#cWHITE"}?","Да","Нет");
		}
		else if(vehicleid >= aInstructor[0] && vehicleid <= aInstructor[1])
		{
		    if(pData[playerid][pFraction] == 1) { }
			else if(pTemp[playerid][pOnExam] == true)
			{
				SendClientMessage(playerid, COLOR_GREEN, "» Следуйте по чекпоинтам, соблюдая правила дорожного движения");
				ShowPlayerDialog(playerid, dMes, 0, "{33AAFF}Права", "{ffffff}Ваша задача следовать по чекпоинтам. Вперед", "Закрыть", "");
				new i = pPressed[playerid];
				pTemp[playerid][lictest_Time] = 180000;
				SetPlayerRaceCheckpoint(playerid,0,LicTest[i][0],LicTest[i][1],LicTest[i][2],LicTest[i][3],LicTest[i][4],LicTest[i][5],5.0);
			}
			else
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен только {e68c8c}экзаменуемым {ffffff}или {e24848}лицензерам");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aHospital[0][0] && vehicleid <= aHospital[0][1])
		{
			if(pData[playerid][pFraction] == 2 && pData[playerid][pRank] == 12) return 1;
			if(!(pData[playerid][pFraction] == 2 && pData[playerid][pSubfraction] == 1))
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен только {ff00d8}мед. работникам LS");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
		}
		else if(vehicleid >= aHospital[1][0] && vehicleid <= aHospital[1][1])
		{
			if(pData[playerid][pFraction] == 2 && pData[playerid][pRank] == 12) return 1;
			if(!(pData[playerid][pFraction] == 2 && pData[playerid][pSubfraction] == 2))
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен только {ff00d8}мед. работникам SF");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
		}
		else if(vehicleid >= aHospital[2][0] && vehicleid <= aHospital[2][1])
		{
			if(pData[playerid][pFraction] == 2 && pData[playerid][pRank] == 12) return 1;
			if(!(pData[playerid][pFraction] == 2 && pData[playerid][pSubfraction] == 3))
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен только {ff00d8}мед. работникам LV");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
		}
		else if(vehicleid >= aArmy3[0] && vehicleid <= aArmy3[1])
		{
			if(pData[playerid][pFraction] == 8 && pData[playerid][pRank] == 13) return 1;
			if(!(pData[playerid][pFraction] == 8 && pData[playerid][pSubfraction] == 2))
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен только {75727b}Военно-Морскому Флоту");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			else if(GetVehicleModel(vehicleid) == 520 && pData[playerid][pRank] < 8)
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен только с 8 ранга");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			else if(GetVehicleModel(vehicleid) == 425 && pData[playerid][pRank] < 5)
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен только с 5 ранга");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
		}

		else if(vehicleid >= aArmy1[0] && vehicleid <= aArmy1[1])
		{
			if(pData[playerid][pFraction] == 8 && pData[playerid][pRank] == 13) return 1;
			if(!(pData[playerid][pFraction] == 8 && pData[playerid][pSubfraction] == 1))
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен только {75727b}Сухопутным Войскам");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			else if(GetVehicleModel(vehicleid) == 520 && pData[playerid][pRank] < 8)
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен только с 8 ранга");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			else if(GetVehicleModel(vehicleid) == 425 && pData[playerid][pRank] < 5)
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен только с 5 ранга");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
		}
		else if(vehicleid >= aMeria1[0] && vehicleid <= aMeria1[1])
		{
			if(pData[playerid][pFraction] == 11 && pData[playerid][pRank] == 11) return 1;
			if(!(pData[playerid][pFraction] == 11 && pData[playerid][pSubfraction] == 3))
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен только сорудникам {ffea00}Мэрии ЛВ");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aMeriaLS[0] && vehicleid <= aMeriaLS[1])
		{
			if(pData[playerid][pFraction] == 11 && pData[playerid][pRank] == 11) return 1;
			if(!(pData[playerid][pFraction] == 11 && pData[playerid][pSubfraction] == 1))
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен только сорудникам {ffea00}Мэрии ЛС");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aMeria[0] && vehicleid <= aMeria[1])
		{
			if(pData[playerid][pFraction] == 11 && pData[playerid][pRank] == 11) return 1;
			if(!(pData[playerid][pFraction] == 11 && pData[playerid][pSubfraction] == 2))
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен только сорудникам {ffea00}Мэрии СФ");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aLSPD[0] && vehicleid <= aLSPD[1])
		{
			if(pData[playerid][pFraction] == 9 && pData[playerid][pRank] == 13) return 1;
			if(!(pData[playerid][pFraction] == 9 && pData[playerid][pSubfraction] == 1))
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен только сорудникам {0054ff}LSPD");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aYakuza[0] && vehicleid <= aYakuza[1])
		{
			if(pData[playerid][pFraction] != 13)
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен для {8a1818}Yakuza");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aMexico[0] && vehicleid <= aMexico[1])
		{
			if(pData[playerid][pFraction] != 14)
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен для {650c0e}La Cosa Nostra");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aColomb[0] && vehicleid <= aColomb[1])
		{
			if(pData[playerid][pFraction] != 15)
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен для {137d79}Русской Мафии");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aFBI[0] && vehicleid <= aFBI[1])
		{
			if( pData[playerid][pFraction] == 12
			||  (pData[playerid][pFraction] == 9 && pData[playerid][pSubfraction] == 0)
			)
			{

			}
			else
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен только сорудникам ФБР");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aRadio[0] && vehicleid <= aRadio[1])
		{
			if(pData[playerid][pFraction] == 10 && pData[playerid][pRank] == 11) return 1;
			if(!(pData[playerid][pFraction] == 10 && pData[playerid][pSubfraction] == 1))
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен только сорудникам {ff5501}SAN-FM");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aRadio1[0] && vehicleid <= aRadio1[1])
		{
			if(pData[playerid][pFraction] == 10 && pData[playerid][pRank] == 11) return 1;
			if(!(pData[playerid][pFraction] == 10 && pData[playerid][pSubfraction] == 2))
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен только сорудникам {ff5501}SAN-TV");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= MinStr[0] && vehicleid <= MinStr[1])
		{
			if(
				(pData[playerid][pFraction] == 10 && pData[playerid][pSubfraction] == 0)
			||  (pData[playerid][pFraction] == 9 && pData[playerid][pSubfraction] == 0)
			||  (pData[playerid][pFraction] == 8 && pData[playerid][pSubfraction] == 0)
			||  (pData[playerid][pFraction] == 2 && pData[playerid][pSubfraction] == 0)
			)
			{

			}
			else
			{
			    SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен только {ffea00}Министрам");
				RemovePlayerFromVehicle(playerid);
			}
		}

		else if(vehicleid >= aPrez[0] && vehicleid <= aPrez[1])
		{
			if(pData[playerid][pFraction] != 11)
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен только сорудникам {ffea00}Белого дома");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else if(vehicleid >= aSFPD[0] && vehicleid <= aSFPD[1])
		{
			if(pData[playerid][pFraction] == 9 && pData[playerid][pRank] == 13) return 1;
			if(!(pData[playerid][pFraction] == 9 && pData[playerid][pSubfraction] == 2))
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен только сорудникам {0054ff}SFPD");
				RemovePlayerFromVehicle(playerid);
			}
		}
		gLastCar[playerid] = vehicleid;
		/*if(Bl::Info[playerid][Bl::Finder] != INVALID_PLAYER_ID)
		{
		    new engine,light,alarm,doors,bonnet,boot,objective;
			DestroyDynamicCP(Bl::Info[Bl::Info[playerid][Bl::Finder]][Bl::Marker]);
			for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
			{
	    		i = cvector_get(PLAYERS, idx);
				if(Bl::Info[i][Bl::Observe] == playerid){
					DestroyDynamicCP(Bl::Info[i][Bl::Marker]);
				}
			}
			GetVehicleParamsEx(vehicleid, engine, light, alarm, doors, bonnet, boot, objective);
			if(objective < 1) {
					SetVehicleParamsEx(vehicleid, engine, light, alarm, doors, bonnet, boot, true);
			}
		}*/
	 	if(vehicleid >= aLVPD[0] && vehicleid <= aLVPD[1])
		{
			if(pData[playerid][pFraction] == 9 && pData[playerid][pRank] == 13) return 1;
			if(!(pData[playerid][pFraction] == 9 && pData[playerid][pSubfraction] == 3))
			{
				SendClientMessage(playerid,CWHITE,"» {CECFCE}Этот транспорт доступен только сотрудникам {0054ff}LVPD");
				RemovePlayerFromVehicle(playerid);
			}
		}
		else //Цикл на проверку т.с. бандитов
		{
			for(new i;i<5;i++)
			{
				for(new j;j<7;j++)
				{
					if(vehicleid == aGang[i][j] && pData[playerid][pFraction] != i+3)
					{
						mes = "";
						f(mes, "» {CECFCE}Транспорт принадлежит банде %s",gFractionName[i+2]);
						SendClientMessage(playerid,-1,mes);
						RemovePlayerFromVehicle(playerid);
					}
				}
			}
		}
		SetPVarInt(playerid, "vehid", GetPlayerVehicleID(playerid));
		if(vehicleid) gVehicleDriver[vehicleid-1] = playerid;
		gVehicles[GetPlayerVehicleID(playerid) - 1][vOccupied] = true;
	}

	if(newstate == PLAYER_STATE_ONFOOT)
	{
		if(pData[playerid][pJob] == 1 && pTemp[playerid][pBusID] != INVALID_VEHICLE_ID)
		{
			DisablePlayerRaceCheckpoint(playerid);
			SendClientMessage(playerid,CRED,"У Вас есть 15 секунд, чтобы вернуться в автобус");
			pTemp[playerid][pBusSpawnTimer] = SetTimerEx("BusSpawn",15000,false,"i",playerid);
			SetPVarInt(playerid,"exitedtrans",1);
		}
		if(pData[playerid][pJob] == 3 && pTemp[playerid][pTaxiID] != INVALID_VEHICLE_ID)
		{
			DisablePlayerRaceCheckpoint(playerid);
			SendClientMessage(playerid,CRED,"У Вас есть 15 секунд, чтобы вернуться в такси");
			pTemp[playerid][pTaxiSpawnTimer] = SetTimerEx("TaxiSpawn",15000,false,"i",playerid);
			SetPVarInt(playerid,"exitedtrans",1);
		}
		if(pTemp[playerid][pWork] == 10 && pTemp[playerid][pPesokID] != INVALID_VEHICLE_ID)
		{
			DisablePlayerRaceCheckpoint(playerid);
			SendClientMessage(playerid,CRED,"У Вас есть 15 секунд, чтобы вернуться в машину");
			pTemp[playerid][pPesokSpawnTimer] = SetTimerEx("PesokSpawn",15000,false,"i",playerid);
			SetPVarInt(playerid,"exitedtrans",1);
		}
		if(pTemp[playerid][pWork] == 7 && pTemp[playerid][pVinogradID] != INVALID_VEHICLE_ID)
		{
			DisablePlayerRaceCheckpoint(playerid);
			SendClientMessage(playerid,CRED,"У Вас есть 15 секунд, чтобы вернуться в машину");
			pTemp[playerid][pVinogradSpawnTimer] = SetTimerEx("VingoSpawn",15000,false,"i",playerid);
			SetPVarInt(playerid,"exitedtrans",1);
		}
		if(pTemp[playerid][pWork] == 8 && pTemp[playerid][pTruckID] != INVALID_VEHICLE_ID)
		{

			SendClientMessage(playerid,CRED,"У Вас есть 15 секунд, чтобы вернуться в грузовик");
			pTemp[playerid][pTruckSpawnTimer] = SetTimerEx("TruckerSpawn",15000,false,"i",playerid);
			SetPVarInt(playerid,"exitedtrans",1);
		}
	}
	if(newstate == PLAYER_STATE_PASSENGER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		gLastCar[playerid] = vehicleid;
	    /*new engine,light,alarm,doors,bonnet,boot,objective;
		if(Bl::Info[playerid][Bl::Finder] != INVALID_PLAYER_ID) {
			DestroyDynamicCP(Bl::Info[Bl::Info[playerid][Bl::Finder]][Bl::Marker]);
			for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
			{
			    i = cvector_get(PLAYERS, idx);
				if(Bl::Info[i][Bl::Observe] == playerid){
						DestroyDynamicCP(Bl::Info[i][Bl::Marker]);
				}
			}
			GetVehicleParamsEx(vehicleid, engine, light, alarm, doors, bonnet, boot, objective);
			if(objective < 1) {
				SetVehicleParamsEx(vehicleid, engine, light, alarm, doors, bonnet, boot, true);
			}
		}*/

		pTemp[playerid][pOldVehicleid] = vehicleid;
		SetPlayerArmedWeapon(playerid,29);
		if(vehicleid >= aBus[0] && vehicleid <= aBus[1] && gVehicleDriver[vehicleid-1] != INVALID_PLAYER_ID) //Пассажир сел в автобус
		{
			new driverid = gVehicleDriver[vehicleid-1];
			new price = pTemp[driverid][pBusPrice];
			if(GetPlayerMoneyEx(playerid) < price)
			{
				MeAction(playerid,"показал проездной водителю");
				return 1;
			}
			mes = "";
			f(mes, "» ~g~+%d$",price);
			GameTextForPlayer(driverid,mes,1000,1);
			f(mes, "» ~r~-%d$",price);
			GameTextForPlayer(playerid,mes,1000,1);
			TransferMoney(playerid,driverid,price,"taxipay");
		}
		if(vehicleid >= aTaxi[0] && vehicleid <= aTaxi[1] && gVehicleDriver[vehicleid-1] != INVALID_PLAYER_ID) //Пассажир сел в такси
		{
			new driverid = gVehicleDriver[vehicleid-1];
			if(pTemp[driverid][pTaxiID] != vehicleid || !pTemp[driverid][pTaxiPrice]) return 1;
			if(pTemp[driverid][pTaxiPass] == INVALID_PLAYER_ID)
			{
				if(GetPlayerMoneyEx(playerid) < pTemp[driverid][pTaxiPrice])
				{
					SendClientMessage(playerid,CRED,"Недостаточно денег");
					return RemovePlayerFromVehicle(playerid);
				}
				pTemp[driverid][pTaxiStart] = gVehicles[vehicleid-1][vDrived];
				pTemp[driverid][pTaxiPass] = playerid;
				pTemp[driverid][pTaxiGoing] = true;
			}
			else
			{
				if(pTemp[driverid][pTaxiTurn][0] == INVALID_PLAYER_ID) pTemp[driverid][pTaxiTurn][0] = playerid;
				else if(pTemp[driverid][pTaxiTurn][1] == INVALID_PLAYER_ID) pTemp[driverid][pTaxiTurn][1] = playerid;
				else
				{
					if(!IsPlayerConnected(pTemp[driverid][pTaxiTurn][0]) || GetPlayerVehicleID(pTemp[driverid][pTaxiTurn][0]) != vehicleid)
					{
						if(pTemp[driverid][pTaxiTurn][1] != INVALID_PLAYER_ID)
						{
							pTemp[driverid][pTaxiTurn][0] = pTemp[driverid][pTaxiTurn][1];
							pTemp[driverid][pTaxiTurn][1] = playerid;
						}
						else pTemp[driverid][pTaxiTurn][0] = playerid;
					}
					else if(!IsPlayerConnected(pTemp[driverid][pTaxiTurn][1]) || GetPlayerVehicleID(pTemp[driverid][pTaxiTurn][1]) != vehicleid)
					{
						pTemp[driverid][pTaxiTurn][1] = playerid;
					}
					else
					{
						SendClientMessage(playerid,CWHITE,"» Ошибка. Зайдите в такси еще раз");
						RemovePlayerFromVehicle(playerid);
					}
				}
			}
		}
	}
	if(oldstate == PLAYER_STATE_DRIVER)
	{
		if(pTemp[playerid][pCarInfoTimer] != 0)
		{
			KillTimer(pTemp[playerid][pCarInfoTimer]);
			pTemp[playerid][pCarInfoTimer] = 0;
		}
		new id = GetPVarInt(playerid, "vehid");
		if(id)
		{
			gVehicles[id - 1][vCheckDelay] = true;
			gVehicles[id - 1][vOccupied] = false;
			GetVehiclePos(id, gVehicles[id - 1][vX], gVehicles[id - 1][vY], gVehicles[id - 1][vZ]);
			GetVehicleZAngle(id, gVehicles[id - 1][vA]);
			gVehicles[id - 1][vCheckDelay] = true;
			gVehicleDriver[id-1] = INVALID_VEHICLE_ID;
			SetPVarInt(playerid, "lastveh", id);
		}
	}
	return 1;
}



public OnPlayerEnterCheckpoint(playerid)
{
	if(pTemp[playerid][pDebtor] == true)
	{
		DisablePlayerCheckpoint(playerid);
		pTemp[playerid][pDebtor] = false;
	}
	if(PlayerToPoint(2.0, playerid,2230.8132324219,-2285.7043457031,13.531787872314))
	{
		SetPVarInt(playerid,"perenos",1);
		ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
		SetTimerEx("AnimationDelay",700,false,"ii",playerid,1);
		new objectr = random(5);// Выдаём в руки объект
		switch(objectr)
		{
		case 0:
			{
				SetPlayerAttachedObject(playerid,2,1221,1,0.135011,0.463495,-0.024351,357.460632,87.350753,88.068374,0.434164,0.491270,0.368655);
				DisablePlayerCheckpoint(playerid);

			}
		case 1:
			{
				SetPlayerAttachedObject(playerid,2,2226,1,0.000708,0.356461,0.000000,186.670364,87.529838,0.000000,1.000000,1.000000,1.000000);
				DisablePlayerCheckpoint(playerid);

			}//2060
		case 2:
			{
				SetPlayerAttachedObject(playerid,2,1750,1,0.013829,0.131155,0.145773,185.651550,86.201354,345.922180,0.693442,0.873942,0.577291);
				DisablePlayerCheckpoint(playerid);

			}
		case 3:
			{
				SetPlayerAttachedObject(playerid,2,2332,1,0.293000,0.445999,0.000000,1.399999,-89.999992,-172.800003,0.516999,0.607999,0.812999);
				//SetPlayerAttachedObject(playerid,2,2060,5,0.01,0.1,0.2,100,10,85);
				DisablePlayerCheckpoint(playerid);
			}
		case 4:
			{
				SetPlayerAttachedObject(playerid,2,2708,1,-0.004000,0.435999,-0.219999,3.700013,90.400024,179.500000,0.340000,0.601999,0.497999);
				DisablePlayerCheckpoint(playerid);
			}
		}
		SetPlayerCheckpoint(playerid,2172.1313476563,-2255.2292480469,12.454199790955,2.0);

		return true;
	}
	if(PlayerToPoint(2.0, playerid,2172.1313476563,-2255.2292480469,12.454199790955))
	{
		SetPVarInt(playerid,"perenos",0);
		ApplyAnimation(playerid,"CARRY","putdwn",2.05,1,0,0,0,900);
		pTemp[playerid][pWorkGruzObject] ++;
		if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
		new string[120];
		format(string, sizeof(string), "Перетащено вещей из вагона: {FFCD00}%d шт.", pTemp[playerid][pWorkGruzObject]);
		SendClientMessage(playerid, COLOR_GREEN, string);
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,2230.8132324219,-2285.7043457031,13.531787872314,2.0);
	}
	/*if(GetPVarInt(playerid, "FactoryPlace") > 0 && IsPlayerInRangeOfPoint(playerid, 3.0, 141.8937,1865.5713,1001.0322))
	{
        ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
		SetTimerEx("CarryDelay",1000,false,"i",playerid);
		SetPlayerAttachedObject(playerid,3,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
    	new i = GetPVarInt(playerid, "FactoryPlace")-1;
    	SetPlayerCheckpoint(playerid, InFactory[i][0],InFactory[i][1],InFactory[i][2], 1.4);
    	SendClientMessage(playerid, COLOR_LIGHTGREEN, "Следуйте к вашему рабочему столу. {ffffff}Используйте: \"левую кнопку мыши (огонь)\"");
    	SendClientMessage(playerid, COLOR_BLUE, "Чтобы разобрать оружие и вытащить патроны");
	}
	if(GetPVarInt(playerid, "FactoryPlace") > 0 && IsPlayerInRangeOfPoint(playerid, 3.0, InFactory[GetPVarInt(playerid, "FactoryPlace")-1][0],InFactory[GetPVarInt(playerid, "FactoryPlace")-1][1],InFactory[GetPVarInt(playerid, "FactoryPlace")-1][2]))
	{
		SetTimerEx("WeaponAnim", 500, false, "i", playerid);
		SetPVarInt(playerid,"MinerCount",1);
	}*/
	new pstate = GetPlayerState(playerid);
	if(pTemp[playerid][pWork] == 3
	&& IsPlayerInRangeOfPoint(playerid, 3.0, gWoodCPs[GetPVarInt(playerid, "loadid")][0],gWoodCPs[GetPVarInt(playerid, "loadid")][1],gWoodCPs[GetPVarInt(playerid, "loadid")][2])
	&& pstate == PLAYER_STATE_ONFOOT)

	{
        SendClientMessage(playerid, -1, "» Вы начали собирать {8f68ff}вингорад {ffffff}с кустов");
  		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 1, 3000);
  		SetTimerEx("Posadka", 3000, 0, "d", playerid);
	}
	if(pTemp[playerid][pWork] == 5 && IsPlayerInRangeOfPoint(playerid, 3.0, 1059.5696,-345.3574,73.9922))
	{
	    if(!pTemp[playerid][pGraffityStop]) return SendClientMessage(playerid, COLOR_GREY, "Ваша корзинка пуста");
	    DisablePlayerCheckpoint(playerid);
	    RemovePlayerAttachedObject(playerid,0);
	    RemovePlayerAttachedObject(playerid,1);
	    RemovePlayerAttachedObject(playerid,2);
	    RemovePlayerAttachedObject(playerid,3);
	    RemovePlayerAttachedObject(playerid,4);
	    RemovePlayerAttachedObject(playerid,5);
	    ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
		//SetTimerEx("AnimationDelay",700,false,"ii",playerid,1);
	    pTemp[playerid][pGraffityID] += 55;
	    SendMes(playerid, COLOR_LIGHTGREEN, "Вы собрали 7 яблок с дерева.");
	    SetPVarInt(playerid,"MinerCount", 0);
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	    SetPlayerAttachedObject(playerid,0,1356,6,0.166000,-0.045999,0.073999,89.099990,-9.800000,105.999992,0.550999,0.520999,0.517999);
	    pTemp[playerid][pGraffityStop] = 0;
     	ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
	}
	return 1;
}

forward WeaponAnim(playerid);
public WeaponAnim(playerid)
{
	if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid,3);
	ClearAnimations(playerid);
	ApplyAnimation( playerid, "BUDDY", "buddy_reload", 4.1, 0, 1, 1, 1, 0 );
  	SetPlayerAttachedObject( playerid, 3, 355, 14, 0.301943, 0.011442, 0.010348, 106.050292, 330.509094, 3.293162, 1.000000, 1.000000, 1.000000 );
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterDynamicCP(playerid,checkpointid)
{
	if(checkpointid == gMafiaPickup[0])
	{
		if(IsAGang(playerid))
		{
			if(gMafiaAcces[0][pData[playerid][pFraction]-3])
			{

			    ShowPlayerDialog(playerid, dMafiaGang2, 2, "{ffcf00}Склад Мафии", "{33AAFF}Продать заготовки\n{33AAFF}Купить оружие", "Принять", "Отмена");
			    SetPVarInt(playerid, "MafiaCPNumber", 0);
			}
		}
        if(IsAMafia(playerid))
		{
		    SetPVarInt(playerid, "MafiaCPNumber", 0);
            ShowPlayerDialog(playerid, dMafiaMenu, 2, "{ffcf00}Склад Мафии", "{33AAFF}Взять заготовки\n{33AAFF}Положить оружие", "Принять", "Отмена");
		}
	}
	if(checkpointid == gMafiaPickup[1])
	{
		if(IsAGang(playerid))
		{
			if(gMafiaAcces[1][pData[playerid][pFraction]-3])
			{

			    ShowPlayerDialog(playerid, dMafiaGang2, 2, "{ffcf00}Склад Мафии", "{33AAFF}Продать заготовки\n{33AAFF}Купить оружие", "Принять", "Отмена");
			    SetPVarInt(playerid, "MafiaCPNumber", 1);
			}
		}
		if(IsAMafia(playerid))
		{
		    SetPVarInt(playerid, "MafiaCPNumber", 1);
            ShowPlayerDialog(playerid, dMafiaMenu, 2, "{ffcf00}Склад Мафии", "{33AAFF}Взять заготовки\n{33AAFF}Положить оружие", "Принять", "Отмена");
		}
	}
	if(checkpointid == gMafiaPickup[2])
	{
		if(IsAGang(playerid))
		{
			if(gMafiaAcces[2][pData[playerid][pFraction]-3])
			{

			    ShowPlayerDialog(playerid, dMafiaGang2, 2, "{ffcf00}Склад Мафии", "{33AAFF}Продать заготовки\n{33AAFF}Купить оружие", "Принять", "Отмена");
			    SetPVarInt(playerid, "MafiaCPNumber", 2);
			}
		}
        if(IsAMafia(playerid))
		{
		    SetPVarInt(playerid, "MafiaCPNumber", 2);
            ShowPlayerDialog(playerid, dMafiaMenu, 2, "{ffcf00}Склад Мафии", "{33AAFF}Взять заготовки\n{33AAFF}Положить оружие", "Принять", "Отмена");
		}
	}
    if(checkpointid == CheckGang[5]	&& pData[playerid][pFraction] == F_YAK
	|| checkpointid == CheckGang[6] && pData[playerid][pFraction] == F_LCN
	|| checkpointid == CheckGang[7] && pData[playerid][pFraction] == F_RM)
	{
		if(IsAMafia(playerid))
		{
			ShowPlayerDialog(playerid, dMafia, 2, "{ffcf00}Склад Мафии", "{33AAFF}Положить деньги\n{33AAFF}Положить наркотики\n{FFFFFF}Взять наркотики\n{FFFFFF}Взять деньги", "Принять", "Отмена");
		}
		else SendClientMessage(playerid, CGRAY, "Вы не можете пользоваться этим складом");
	}
	if(checkpointid == gAreas[arInfo][11])
	{
		mes = "";
		new str[553];
		f(mes, "\
		Добро пожаловать на сервер.\n\
		В кратце расскажем о сервере,чтобы Вам было понятнее.\n\
		Чтобы открыть так называемое \"меню\" навведите команду - /m или /menu.\n\
		Заработать первые деньги Вы сможете на таких работах как:\n\
		- Виноградная ферма.\n\
		- Винный завод.\n\
		- Развозчик песка,винограда,бензина.");
		strcat(str, mes);

		f(mes, "\
		Другие работы Вы можете найти в Бюро занятости(/gps - Полезные места).\n\
		Также Вам пригодится \"высшее образование\",которое Вам дает диплом.\n\
		А с дипломом Вы уже можете занять высокопоставленный пост в гос.структурах.\n\
		Желаем дальнейшего благополучного развития на сервере!");
		strcat(str, mes);
		ShowPlayerDialog(playerid, dMes, DIALOG_STYLE_MSGBOX, "{ffcf00}Информация", str, "Закрыть", "");
	}
	if(checkpointid == pTemp[playerid][GPS_CP])
	{
		DisableGPSForPlayer(playerid);
		SendClientMessage(playerid, COLOR_LIME, "Вы прибыли в пункт назначения.");
		return true;
	}
	if(checkpointid == gOtmiv[0])
	{
	    if(!GetPVarInt(playerid, "vzorval")) return SendClientMessage(playerid, -1, "» Вы не грабили банк");
	    SetPVarInt(playerid, "vzorval", 0);
	    if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
	    new good = random(2001)+500;
    	SendMes(playerid, COLOR_GREEN, "» Вы получили {FFCD00}%d$ {33AAFF}за ограбление банка. Удачи Вам!", good);
	    TransferMoney(-1,playerid,good,"arrested");
	}
	if(checkpointid == gOtmiv[3])
	{
	    if(pData[playerid][pJob] != 6) return SendClientMessage(playerid, -1, "» Вы не работаете промоутером");
	    if(GetPVarInt(playerid, "listovok")) return SendClientMessage(playerid, -1, "» Вы уже взяли листовки");
	    SetPVarInt(playerid, "listovok", 100);

	    pTemp[playerid][AntiID] = -1;
    	SendClientMessage(playerid, COLOR_GREEN, "» Вам выдали {FFCD00}100 {33AAFF}листовок. Удачной работы");
	}
	if(checkpointid == gOtmiv[4])
	{
  		_fbibase(playerid, "");
	}
	if(checkpointid == CPForID[playerid][0]
		|| checkpointid == CPForID[playerid][1]
		|| checkpointid == CPForID[playerid][2]
		|| checkpointid == CPForID[playerid][3])
	{
	    if(gOtmiv[1] > 3) return SendClientMessage(playerid, -1, "» Денег в банке не осталось");
		if(GetPVarInt(playerid, "vzorval")) return SendClientMessage(playerid, -1, "» Вы уже брали мешок с деньгами");
	    SetPVarInt(playerid, "vzorval", 1);
	    gOtmiv[1]++;
	    SetPlayerAttachedObject(playerid,0,1550,1,0.095999,-0.263000,-0.028999,137.299957,90.400024,-10.900006,0.981000,0.888000,0.920000);
	}
	if(checkpointid == CheckGang[0]	&& pData[playerid][pFraction] == F_GROVE
			|| checkpointid == CheckGang[1] && pData[playerid][pFraction] == F_BALLAS
			|| checkpointid == CheckGang[2] && pData[playerid][pFraction] == F_RIFA
			|| checkpointid == CheckGang[3] && pData[playerid][pFraction] == F_AZTEC
			|| checkpointid == CheckGang[4] && pData[playerid][pFraction] == F_VAGOS)
	{
		if(IsAGang(playerid))
		{
		    if(GetPVarInt(playerid, "loadyash") == 1)
		    {
		        new gangid = pData[playerid][pFraction] - 3;
		        gGangDorm[gangid][1] += GetPVarInt(playerid, "vehiclenum");
		        mes = "";
		        SendMes(playerid, 0x6495EDFF, "Вы положили на склад банды единицы оружия (+%i)", GetPVarInt(playerid, "vehiclenum"));
				f(mes, "{6BCF00}%s [id %d] положил единицы оружия на склад банды {66CC00}(%d$)", pData[playerid][pNickname], playerid, GetPVarInt(playerid, "vehiclenum"));
				SendFMes(pData[playerid][pFraction], -1, mes);
				DeletePVar(playerid, "vehiclenum");
				SetPVarInt(playerid, "loadyash", 0);
		        return 1;
		    }
			else ShowPlayerDialog(playerid,dObshak,2,"{ffcf00}Общак","Материалы\nДеньги\nНаркотики","Далее","Отмена");
		}
		else SendClientMessage(playerid, CGRAY, "Вы не можете пользоваться этим складом");
	}

	if(checkpointid == TyritPT[0])
	{
		StealMats(playerid,0,0);
	}
	if(checkpointid == TyritPT[1])
	{
		StealMats(playerid,1,0);
	}
	if(checkpointid >= gCasinoCP[0] && checkpointid <= gCasinoCP[6-1])
	{
		if(GetPVarInt(playerid, "StartCasino") == 1) return 1;
	    GangShowForTextDraw(playerid);
	    SetPVarInt(playerid, "StartCasino", 1);
	    GangUpdateBalanceTextDraw(playerid, Balance[playerid]);
	}
	if(checkpointid >= gGraffityCP[0] && checkpointid <= gGraffityCP[50-1] && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    if(GetPlayerWeapon(playerid) != 41) return SendClientMessage(playerid, -1, "Нужен балончик с краской.");
	    if(!IsAGang(playerid)) return SendClientMessage(playerid, -1, "Вы не состоите не в какой банде.");
		if(pTemp[playerid][pGraffity1] != 1)
		{
		    //if(PustZone == 1) return SendClientMessage(playerid, -1, "Закраска граффити уже идет в другом районе");
		    //if(IsPlayerInBandOnline(pData[playerid][pFraction]) < 5) return SendMes(playerid,COLOR_GREY, "В вашей банде мало игроков онлайн! (Нужно 5 человек)");
		    for(new i; i < 50; i++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 1.5, gGraffityPos[i][0], gGraffityPos[i][1], gGraffityPos[i][2]))
		    	{
		    	    new faction = pData[playerid][pFraction];
		    	    new gang = gGraffityGang[i];
		    	    if(faction == gang) return SendClientMessage(playerid, -1, "Вам уже принадлежит данное граффити");
		        	pTemp[playerid][pGraffityID1] = i;
		        	pTemp[playerid][pGraffityStop1] = 1;
		        	pTemp[playerid][pGraffity1] = 1;
		        	SetPVarInt(playerid, "GFI", i);
		        	SetPVarInt(playerid, "TimeGraffity", 1);
	    			GoAnim(playerid,"GRAFFITI","spraycan_fire",4.1,1,0,0,0,0,0);
	    			pTemp[playerid][pGraffity1Timer] = SetTimerEx("GraffityStarting",1000,false,"i",playerid);
                    Graffity[playerid] = CreateProgressBar(239.00, 382.00, 170.50, 14.19, -86, 600.0);
                    SetProgressBarValue(Graffity[playerid], 10);
                    ShowProgressBarForPlayer(playerid, Graffity[playerid]);
                    mes = "";


				    f(mes, "%s начали закрашивать граффити %s, в районе %s",GetGangName(faction), GetGangName(gang), GetPlayerZone(playerid, 0));
					for(new d = 3; d < 8; d++)
					{
						SendFMes(d, COLOR_LIME, mes);
					}

					f(mes, "Вы начали зарисовывать граффити, в районе %s",
					GetPlayerZone(playerid, 0));

					SendClientMessage(playerid,COLOR_LIME, mes);
		        	break;
		    	}
			}
		}
	}
	return 1;
}
forward GraffityStarting(playerid);
public GraffityStarting(playerid)
{
    SetPVarInt(playerid, "TimeGraffity", GetPVarInt(playerid, "TimeGraffity") + 1);
    if(GetPVarInt(playerid, "TimeGraffity") <= 60 && pTemp[playerid][pGraffityStop1] != 0)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 1.5, gGraffityPos[GetPVarInt(playerid, "GFI")][0], gGraffityPos[GetPVarInt(playerid, "GFI")][1], gGraffityPos[GetPVarInt(playerid, "GFI")][2]))
    	{
	    	pTemp[playerid][pGraffity1Timer] = SetTimerEx("GraffityStarting",1000,false,"i",playerid);
	    	SetProgressBarValue(Graffity[playerid], GetPVarInt(playerid, "TimeGraffity")*10);
            UpdateProgressBar(Graffity[playerid], playerid);
		}
		else
		{
		    DestroyProgressBar(Graffity[playerid]);
		    pTemp[playerid][pGraffityID1] = 0;
		    pTemp[playerid][pGraffityStop1] = 0;
		    pTemp[playerid][pGraffity1] = 0;
		    KillTimer(pTemp[playerid][pGraffity1Timer]);
	  	 	return SendClientMessage(playerid, -1, "Вы отошли от места зарисовки");
		}
	}
	else
	{
	    ClearAnimations(playerid);
	    SendClientMessage(playerid, -1, "Вы успешно закрасили граффити");
	    DestroyProgressBar(Graffity[playerid]);
	    pTemp[playerid][pGraffityID1] = 0;
	    pTemp[playerid][pGraffityStop1] = 0;
	    pTemp[playerid][pGraffity1] = 0;
	    SetPVarInt(playerid, "TimeGraffity", 0);

	    new Float:player_pos[ 4 ],
		tag;
		GetPlayerPos( playerid, player_pos[ 0 ], player_pos[ 1 ], player_pos [ 2 ] );
		GetPlayerFacingAngle( playerid, player_pos[ 3 ] );
		player_pos[ 0 ] += 0.8 * floatsin( -player_pos[ 3 ], degrees );
		player_pos[ 1 ] += 0.8 * floatcos( -player_pos[ 3 ], degrees );
		player_pos[ 3 ] += 90.0;



		switch(pData[playerid][pFraction])
		{
			case F_BALLAS: tag = 18662;
			case F_GROVE: tag = 18659;
			case F_AZTEC: tag = 18661;
			case F_VAGOS: tag = 18665;
			case F_RIFA: tag = 18663;
		}
		new i = GetPVarInt(playerid, "GFI");

  		if(IsValidDynamicObject(gGraffityObject[i])) DestroyDynamicObject(gGraffityObject[i]);

 		if( GetPlayerSpecialAction( playerid ) == SPECIAL_ACTION_DUCK )
  			gGraffityObject[i] = CreateDynamicObject( tag, player_pos[ 0 ], player_pos[ 1 ], player_pos[ 2 ] - 0.3, 0.0, 0.0, player_pos[ 3 ] );
		else
			gGraffityObject[i] = CreateDynamicObject( tag, player_pos[ 0 ], player_pos[ 1 ], player_pos[ 2 ], 0.0, 0.0, player_pos[ 3 ] );

		gGraffityGang[i] = pData[playerid][pFraction];
	    mes = "";



	    f(mes, "SELECT * FROM `graffityy` WHERE id = '%d'", GetPVarInt(playerid, "GFI") + 1);
	    new Result:graffity = sql_query(zConn, mes, QUERY_CACHED);
		if(sql_num_rows(graffity))
		{
		    mes = "";
    		f(mes,"UPDATE `graffityy` SET `x` = '%f', `y` = '%f', `z` = '%f', `rx` = '%f', `ry` = '%f', `rz` = '%f', `gang` = '%d'  WHERE `id`= '%d'", player_pos[ 0 ], player_pos[ 1 ], player_pos[ 2 ], 0.0, 0.0, player_pos[ 3 ], pData[playerid][pFraction], GetPVarInt(playerid, "GFI") + 1);
			sql_query(zConn, mes); mes = "";
		}
		else
		{
		    mes = "";
			f(mes,"INSERT INTO `graffityy` VALUES('%d', '%f', '%f', '%f', '%f', '%f', '%f', '%d')", GetPVarInt(playerid, "GFI") + 1, player_pos[ 0 ], player_pos[ 1 ], player_pos[ 2 ], 0.0, 0.0, player_pos[ 3 ], pData[playerid][pFraction]);
			sql_query(zConn, mes); mes = "";
		}

	}
	return 1;
}


public OnPlayerEnterRaceCheckpoint(playerid)
{
	if(pTemp[playerid][pOnExam] == true)
	{
		if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем!");
		if(pPressed[playerid] == 32)
		{
			if(GetPVarInt(playerid, "LicTestError") > 2)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Вы провалили экзамен по вождению");
				ShowPlayerDialog(playerid, dMes, 0, "{ffffff}Права", "{FF6347}К сожалению вы не сдали экзамен по вождению", "Закрыть", "");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREEN, "Поздравляем! Вы сдали экзамен по вождению");
				ShowPlayerDialog(playerid, dMes, 0, "{33AAFF}Права", "{ffffff}Поздравляем, вы сдали экзамен по вождению", "Закрыть", "");

				mes = "";
				f(mes, "UPDATE `accounts` SET `licDrive` = '1' WHERE `id` = '%d'",pData[playerid][pMysqlID]);
				sql_query(zConn, mes); mes = "";
				pData[playerid][pLicenses][LIC_DRIVING] = 1;
				//PlayerInfo[playerid][pLic][0] = 1;
			}
			pTemp[playerid][pOnExam] = false;
			DeletePVar(playerid, "LicTestHealth");
			DeletePVar(playerid, "LicTestError");
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			DisablePlayerRaceCheckpoint(playerid);
		}
		else
		{
			pPressed[playerid]++;
			new Float:healthd, i = pPressed[playerid];
			GetVehicleHealth(GetPlayerVehicleID(playerid), healthd);
			if(healthd < GetPVarFloat(playerid, "LicTestHealth"))
			{
				SendMes(playerid, COLOR_LIGHTRED, "Вы повредили транспорт. Ошибок: {ffffff}%i", GetPVarInt(playerid, "LicTestError") + 1);
				SetPVarInt(playerid, "LicTestError", GetPVarInt(playerid, "LicTestError") + 1);
			}
			if(SpeedVehicle(playerid) / 2 > 60)
			{
				SendMes(playerid, COLOR_LIGHTRED, "Вы привысили скорость. Ошибок: {ffffff}%i", GetPVarInt(playerid, "LicTestError") + 1);
				SetPVarInt(playerid, "LicTestError", GetPVarInt(playerid, "LicTestError") + 1);
			}
			if(pPressed[playerid] < 32) SetPlayerRaceCheckpoint(playerid, 0, LicTest[i][0],LicTest[i][1],LicTest[i][2],LicTest[i][3],LicTest[i][4],LicTest[i][5], 5.0);
			else SetPlayerRaceCheckpoint(playerid,1, LicTest[i][0],LicTest[i][1],LicTest[i][2],LicTest[i][3],LicTest[i][4],LicTest[i][5], 5.0);
			SetPVarFloat(playerid, "LicTestHealth", healthd);
		}
	}


	if(pTemp[playerid][pWork] == 8 && pTemp[playerid][pTruckID] != INVALID_VEHICLE_ID && pTemp[playerid][pTruckWagonID] != INVALID_VEHICLE_ID)
	{
		new weight = pTemp[playerid][pTruckWeight],
		fillid = pTemp[playerid][pTruckLoadID]-1,
		vehicleid = GetPlayerVehicleID(playerid),
		vagon = pTemp[playerid][pTruckWagonID];
		pTemp[playerid][pTruckWagonID] = INVALID_VEHICLE_ID;
		SetVehicleToRespawn(pTemp[playerid][pTruckWagonID]);
		pTemp[playerid][pTruckLoadID] = 0;
		pTemp[playerid][pTruckWeight] = 0;
		if(IsValid3DTextLabel(pTemp[playerid][pTruckWagonText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pTruckWagonText]);
		if(!IsPlayerInDynamicArea(playerid,gAreas[arFill][fillid]))
		{
			fuelOrders++;
			SendClientMessage(playerid, COLOR_LIGHTRED, "Вы не отвезли бензин в нужное место и не получаете прибыли.");
			return 1;
		}
		if(!IsTrailerAttachedToVehicle(vehicleid) || vehicleid != pTemp[playerid][pTruckID] || GetVehicleTrailer(vehicleid) != vagon)
		{
			fuelOrders++;
			SendClientMessage(playerid,CRED,"Вы потеряли прицеп и не получаете прибыли.");
			return 1;
		}
		SendClientMessage(playerid,CRED,"Вы доставили бензин на заправку.");
		pData[playerid][pSalary] += weight*0.3;
		UpdatePlayerData(playerid, "salary", pData[playerid][pSalary]);
		mes = "";
		f(mes, "%d$ было добавлено к вашей зарплате.",weight*0.3);
		SendClientMessage(playerid,COLOR_GREEN,mes);
		gFillings[fillid][fillFuel] += weight;
		UpdateFillingFuel(fillid);
	}

	if(pData[playerid][pJob] == 1 && pTemp[playerid][pBusID] != INVALID_VEHICLE_ID)
	{
		DisablePlayerRaceCheckpoint(playerid);
		//new pos = pTemp[playerid][pBusPos];
		new route = pTemp[playerid][pBusRoute];
		new bool:dostup = false;
		if(route == 0)
		{
			switch(pTemp[playerid][pBusPos])
			{
				case 0,5,10,18,30,37,47,65,74,87,123: dostup = true;
			}
		}
		if(route == 1)
		{
		    switch(pTemp[playerid][pBusPos])
			{
				case 9,16,20,27,36,57: dostup = true;
			}
		}
		if(route == 2)
		{
		    switch(pTemp[playerid][pBusPos])
			{
				case 3,7,12,17,26,50: dostup = true;
			}
		}
		if(dostup) //Остановка
		{
			new routename[56], string[256];
			switch(route)
			{
				case 0: routename = "Метро Лос-Сантос » Винный Завод";
				case 1: routename = "Метро Лос-Сантос » Яблочная Ферма";
				//case 2: routename = "Метро Лос-Сантос » Университет";
			}
			GameTextForPlayer(playerid, "STOP STOP STOP", 2000, 6);
			format(string,sizeof(string),"{737373}Автобус по маршруту {ffffff}%s{737373} отправляется через {ffffff}10 {737373}секунд",routename);
			ProxDetector(30.0, playerid, string,0x669999AA,0x669999AA,0x669999AA,0x669999AA,0x669999AA);
			SetTimerEx("BusStop",1000,false,"i",playerid);
			SetPVarInt(playerid, "TimeBus", 10);
			return 1;
		}
		if(  pTemp[playerid][pBusPos] == sizeof(LS_001)-1 &&  route == 0
		||   pTemp[playerid][pBusPos] == sizeof(LS_002)-1 &&  route == 1
		||   pTemp[playerid][pBusPos] == sizeof(UNI_001)-1 && route == 2  )
		{
			pTemp[playerid][pBusPos] = 0;
			//pData[playerid][pSalary] += gBusSalary[route];
			pData[playerid][pSalary] += gBusAward;
			mes = "";
			f(mes, "UPDATE `accounts` SET `salary` = '%d' WHERE `id` = '%d'",pData[playerid][pSalary],pData[playerid][pMysqlID]);
			sql_query(zConn, mes); mes = "";
			f(mes, "%d$ было добавлено к вашей зарплате.",gBusSalary[route]);
			SendClientMessage(playerid,COLOR_GREEN,mes);
			if(route == 0) SetPlayerRaceCheckpoint(playerid,0,LS_001[0][0],LS_001[0][1],LS_001[0][2],LS_001[0][3],LS_001[0][4],LS_001[0][5],5.0);
			if(route == 1) SetPlayerRaceCheckpoint(playerid,0,LS_002[0][0],LS_002[0][1],LS_002[0][2],LS_002[0][3],LS_002[0][4],LS_002[0][5],5.0);
			if(route == 2) SetPlayerRaceCheckpoint(playerid,0,UNI_001[0][0],UNI_001[0][1],UNI_001[0][2],UNI_001[0][3],UNI_001[0][4],UNI_001[0][5],5.0);
			return 1;
		}
		pData[playerid][pSalary]+=20;
		pTemp[playerid][pBusPos]++;
		new p = pTemp[playerid][pBusPos];
		if(route == 0) SetPlayerRaceCheckpoint(playerid,0,LS_001[p][0],LS_001[p][1],LS_001[p][2],LS_001[p][3],LS_001[p][4],LS_001[p][5],5.0);
		if(route == 1) SetPlayerRaceCheckpoint(playerid,0,LS_002[p][0],LS_002[p][1],LS_002[p][2],LS_002[p][3],LS_002[p][4],LS_002[p][5],5.0);
		if(route == 2) SetPlayerRaceCheckpoint(playerid,0,UNI_001[p][0],UNI_001[p][1],UNI_001[p][2],UNI_001[p][3],UNI_001[p][4],UNI_001[p][5],5.0);
	}
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterDynamicArea(playerid, areaid)
{
	new pstate = GetPlayerState(playerid);
 	if(areaid >= gAreas[arGunFraction][0] && areaid <= gAreas[arGunFraction][1])
	{
		if(pData[playerid][pFraction] == 11 && pData[playerid][pRank] >= 2 && pData[playerid][pRank] <= 3)
		ShowPlayerDialog(playerid, dDutyGun, 2, "Снаряжение", "{FFFFFF}Дубинка\nDesert Eagle\nSD Pistol\nБронежелет\nMP5\nЩит", "Принять", "Отмена");
		else return SendClientMessage(playerid,CWHITE,"» У Вас нет доступа к служебному инвентарю");
	}
	if(areaid >= gAreas[arGunPolice][0] && areaid <= gAreas[arGunPolice][2])
	{
		if(pData[playerid][pFraction] == 9)
		ShowPlayerDialog(playerid, dDutyGun, 2, "{ffcf00}Снаряжение", "{FFFFFF}Дубинка\nDesert Eagle\nSD Pistol\nБронежелет\nMP5\nЩит", "Принять", "Отмена");
	}
	if(areaid == gAreas[arGunFraction][3])
	{
		if(pData[playerid][pFraction] != 12) return SendClientMessage(playerid,CWHITE,"» У Вас нет доступа к служебному инвентарю");
		ShowPlayerDialog(playerid, dDutyGunFbi, 2, "{ffcf00}Снаряжение", "{FFFFFF}Дубинка\nDesert Eagle\nSD Pistol\nБронежелет\nMP5\nM4\nДымовые шашки (3 шт.)\nЩит", "Принять", "Отмена");
	}
	if(areaid == gAreas[arBankMenu][0])
	{
		ShowPlayerDialog(playerid, dBankMenu, 2, "{ffcf00}Банк", "Информация о счете\nСнять деньги\nПоложить деньги", "Принять", "Отмена");
	}
	if(areaid == gAreas[arMaskirovka])
	{
		_maskirovka(playerid, "");
	}
	if(areaid >= gAreas[arBronArmy][0] && areaid <= gAreas[arBronArmy][1])
	{
		if(pData[playerid][pFraction] != 8) return SendClientMessage(playerid,CWHITE,"» Недоступно");
		SetPlayerArmourEx(playerid, 100);
		SendClientMessage(playerid,0x7FC0E3FF,"Вы надели Бронежилет");
	}
	if(areaid >= gAreas[arInfo][8] && areaid <= gAreas[arInfo][10])
	{
	    mes = "";
		f(mes, "\
		Мафии.\n\
		Добро пожаловать в мафию,Вам предстоит не легкий криминальный путь.\n\
		Вашей мафии нужно захватывать наркоточки,чтобы обеспечивать штат наркотиками.\n\
		Для этого Вам нужно подъехать на любой из точек и навести /dragzone.\n\
		Желаем дальшего развития на нашем сервере!");
		ShowPlayerDialog(playerid, dMes, DIALOG_STYLE_MSGBOX, "{ffcf00}Мафии", mes, "Закрыть", "");
	}

	if(areaid == gAreas[arInfo][0])
	{
		mes = "";
		f(mes, "\
		{FFCD00}Работа развозчика топлива:\n\n\
		{FFCD00}На данной работате Вам предстоит развозить топливо на завод и АЗС.\n\
		{FFCD00}Чтобы начать работать:\n\
  		{FFCD00}1)Устройтесь на работу.\n\
		{FFCD00}2)Сядьте в грузовик,и прицепите прицеп.\n\
		{FFCD00}3)Загрузитесь,и едьте на завод или АЗС.\n\
		{FFCD00}Желаем дальнейшего благополучного развития на сервере.");
		ShowPlayerDialog(playerid, dMes, DIALOG_STYLE_MSGBOX, "{ffff00}Развозчик топлива", mes, "Закрыть", "");
	}
	/*if(areaid == gAreas[arInfo][1])
	{
		mes = "";
		f(mes,"\
		Добро пожаловать в университет.\n\n\
		Без высшего образования,или по другому диплома,\n\
		Вы не сможете быть высокопоставленным лицом в государсвенных\n\
		Организациях,для этого есть университет.Чтобы получить диплом,\n\
		Вам нужно выучить все предметы на 100.\n\
		После того как вы выучите все предметы,в PayDay с\n\
		Вас будет взято 500$,и Вам будет выдан диплом.");
	    ShowPlayerDialog(playerid, dMes, DIALOG_STYLE_MSGBOX, "{ffcf00}Институт", mes, "Закрыть", "");
	}*/
	if(areaid == gAreas[arInfo][2])
	{
		mes = "";
		f(mes,"\
		Добро пожаловать на винный завод.\n\
		Чтобы пойти работать, нужно сначала переодеться, \n\
		так-что висящяя голубенькая рубашка Вам в помощь.\n\
		Вы уже переоделись? Тогда идите на желтые стрелочку,\n\
		чтобы взять бутылку,и разлить в него вино.\n\
		Вы сделали все выше перечисленное? Тогда идите и отнисите свою бутылку на склад.\n\
		Желаем удачи в работе!");
	    ShowPlayerDialog(playerid, dMes, DIALOG_STYLE_MSGBOX, "{ffcf00}Винный Завод", mes, "Закрыть", "");
	}
	if(areaid == gAreas[arInfo][3])
	{
		ShowPlayerDialog(playerid,dInfoProject,2,"{ffcf00}Информация","1 » О проекте\n2 » Безопасность\n3 » RolePlay и основы сервера\n4 » Общение\n5 » Первые шаги\n6 » Транспорт\n7 » Гос. Устройство\n8 » Жилье\n9 » Бизнесы и банки\n10 » Организации","Выбрать","Выход");
	}

	if(areaid == gAreas[arInfo][4])
	{
	    mes = "";
		f(mes,"\
	    Добро пожаловать в больницу.\n\
		Для начала,займите койку,для того чтобы это сделать,\n\
		подойдите к ней,и навидите команду /hospital.\n\
		Позже подойдите к врачу и попросите лечения,если врача нет,\n\
		то ждите пока HP станет как минимум 70%.\n\
		Для справки - Вы появляетесь в больнице того города,в котором умерли.\n\
		Желаем удачи в дальнейшем развитии на нашем сервере!");
	    ShowPlayerDialog(playerid, dMes, DIALOG_STYLE_MSGBOX, "{ffcf00}Больница ЛС", mes, "Закрыть", "");
	}
    if(areaid == gAreas[arInfo][5])
	{
    	mes = "";
		f(mes,"\
	    Добро пожаловать в больницу.\n\
		Для начала,займите койку,для того чтобы это сделать,\n\
		подойдите к ней,и навидите команду /hospital.\n\
		Позже подойдите к врачу и попросите лечения,если врача нет,\n\
		то ждите пока HP станет как минимум 70%.\n\
		Для справки - Вы появляетесь в больнице того города,в котором умерли.\n\
		Желаем удачи в дальнейшем развитии на нашем сервере!");
	    ShowPlayerDialog(playerid, dMes, DIALOG_STYLE_MSGBOX, "{ffcf00}Больница СФ", mes, "Закрыть", "");
	}
	if(areaid == gAreas[arInfo][6])
	{
        mes = "";
		f(mes,"\
	    Добро пожаловать в больницу.\n\
		Для начала,займите койку,для того чтобы это сделать,\n\
		подойдите к ней,и навидите команду /hospital.\n\
		Позже подойдите к врачу и попросите лечения,если врача нет,\n\
		то ждите пока HP станет как минимум 70%.\n\
		Для справки - Вы появляетесь в больнице того города,в котором умерли.\n\
		Желаем удачи в дальнейшем развитии на нашем сервере!");
	    ShowPlayerDialog(playerid, dMes, DIALOG_STYLE_MSGBOX, "{ffcf00}Больница ЛВ", mes, "Закрыть", "");
	}


	/*if(areaid == gAreas[arRace][0])
	{
		if(RaceStartT[0] == 0) return SendClientMessage(playerid,CWHITE,"» Гонка не начата");
		if(pTemp[playerid][pRaceIvite]) return SendClientMessage(playerid,CWHITE,"» Вы уже на гонке");
		SetPVarInt(playerid,"Race", 0);
		ShowPlayerDialog(playerid,dRace1,2,"{9CCF00}Гонка","{FFFFFF}1 » Зарегистрироваться на гонку\n2 » Таблица рекордов\n3 » Информация","Выбрать","Уйти");
	}
	if(areaid == gAreas[arRace][1])
	{
		if(RaceStartT[1] == 0) return SendClientMessage(playerid,CWHITE,"» Гонка не начата");
		if(pTemp[playerid][pRaceIvite]) return SendClientMessage(playerid,CWHITE,"» Вы уже на гонке");
		SetPVarInt(playerid,"Race", 1);
		ShowPlayerDialog(playerid,dRace1,2,"{9CCF00}Гонка","{FFFFFF}1 » Зарегистрироваться на гонку\n2 » Таблица рекордов\n3 » Информация","Выбрать","Уйти");
	}*/

	if(areaid == gAreas[arCoalman] && pstate == PLAYER_STATE_ONFOOT)
        ShowPlayerDialog(playerid, dMes, DIALOG_STYLE_MSGBOX, "{ffcf00}Яхт Клуб", "{FFFFFF}Это будет система резиденции яхт клуба, скоро мы закончим работу над ней.", "Закрыть", "");
	if(areaid == gAreas[arWood] && pstate == PLAYER_STATE_ONFOOT)
	{
		if(!pTemp[playerid][pWork]) ShowPlayerDialog(playerid,dWoodwork,0,"Добро пожаловать","\n  {"#cWHITE"}Мы предлагаем Вам работу {8d19fa}собиральщика винограда.\n  {"#cWHITE"}Ваша задача состоит в том, чтобы собрать {8d19fa}виноград{ffffff} \n  и принести их на склад.\n\n\t\t\t\t{cdf00c}Вы согласны?","Да","Нет");
		else if(pTemp[playerid][pWork] == 3) ShowPlayerDialog(playerid,dWoodwork,0,"Завершение работы.","Вы хотите закончить работу и забрать деньги?","Да","Нет");
	}
	if(areaid == gAreas[arWood1] && pstate == PLAYER_STATE_ONFOOT)
	{
		if(!pTemp[playerid][pWork]) ShowPlayerDialog(playerid,dVodkaWork,0,"Добро пожаловать","\n  {"#cWHITE"}Мы предлагаем Вам работу {"#cLIGHTBLUE"}Вино-Водочного завода.\n  {"#cWHITE"}Ваша задача состоит в том, чтобы заполнить пустую бутылку вином \n и отнести ее на склад.\n\n\t\t\t\t{cdf00c}Вы согласны?","Да","Нет");
		else if(pTemp[playerid][pWork] == 6) ShowPlayerDialog(playerid,dVodkaWork,0,"Завершение работы.","Вы хотите закончить работу и забрать деньги?","Да","Нет");
	}
	if(areaid == gAreas[arWood2] && pstate == PLAYER_STATE_ONFOOT)
	{
		if(!pTemp[playerid][pWork]) ShowPlayerDialog(playerid,dGruzWork,0,"Добро пожаловать","\n  {"#cWHITE"}Мы предлагаем Вам работу {"#cLIGHTBLUE"}Развозчика.\n  {"#cWHITE"}Ваша задача состоит в том, чтобы привезти виноград на машине\n и разгрузить на складе.\n\n\t\t\t\t{cdf00c}Вы согласны?","Да","Нет");
		else if(pTemp[playerid][pWork] == 7) ShowPlayerDialog(playerid,dGruzWork,0,"Завершение работы.","Вы хотите закончить работу и забрать деньги?","Да","Нет");
	}
	if(areaid == gAreas[arWood3] && pstate == PLAYER_STATE_ONFOOT)
	{
		if(!pTemp[playerid][pWork]) ShowPlayerDialog(playerid,dBenzWork,0,"Добро пожаловать","\n  {"#cWHITE"}Мы предлагаем Вам работу {"#cLIGHTBLUE"}Бензо-развозчика.\n  {"#cWHITE"}Ваша задача состоит в том, чтобы привезти бензин\n и разгрузить на складе/азс.\n\n\t\t\t\t{cdf00c}Вы согласны?","Да","Нет");
		else if(pTemp[playerid][pWork] == 8) ShowPlayerDialog(playerid,dBenzWork,0,"Завершение работы.","Вы хотите закончить работу и забрать деньги?","Да","Нет");
	}
	if(areaid == gAreas[arBuyCars] && pstate == PLAYER_STATE_ONFOOT)
	{
	    _buycarguper(playerid, "");

	}
	if(areaid == gAreas[arWood4] && pstate == PLAYER_STATE_ONFOOT)
	{
		if(!pTemp[playerid][pWork]) ShowPlayerDialog(playerid,dPesokWork,0,"Добро пожаловать","\n  {"#cWHITE"}Мы предлагаем Вам работу {fae219}Развозчика песка.\n  {"#cWHITE"}Ваша задача состоит в том, чтобы привезти {fae219}песок{FFFFFF}\n и разгрузить на складе.\n\n\t\t\t\t{cdf00c}Вы согласны?","Да","Нет");
		else if(pTemp[playerid][pWork] == 10) ShowPlayerDialog(playerid,dPesokWork,0,"Завершение работы.","Вы хотите закончить работу и забрать деньги?","Да","Нет");
	}
	/*if(areaid == gAreas[arGruz] && pstate == PLAYER_STATE_ONFOOT)
	{
		if(!pTemp[playerid][pWork]) ShowPlayerDialog(playerid,dGruzWork,0,"Добро пожаловать","\n  {"#cWHITE"}Мы предлагаем Вам работу {"#cLIGHTBLUE"}грузчика.\n  {"#cWHITE"}Ваша задача состоит в том, чтобы брать Железо из куч\n  и нести его на переработку.\n\n\t\t{"#cYELLOW"}Вы согласны?","Да","Нет");
		else if(pTemp[playerid][pWork] == 4) ShowPlayerDialog(playerid,dGruzWork,0,"Завершение работы.","Вы хотите закончить работу и забрать деньги?","Да","Нет");
	}*/
	if(areaid == gAreas[arGruz1] && pstate == PLAYER_STATE_ONFOOT)
	{
		if(!pTemp[playerid][pWork]) ShowPlayerDialog(playerid,dJob123,0,"Добро пожаловать","\n  {"#cWHITE"}Мы предлагаем Вам работу {"#cLIGHTBLUE"}Фермера.\n\n\t\t{"#cYELLOW"}Вы согласны?","Да","Нет");
		else if(pTemp[playerid][pWork] == 5) ShowPlayerDialog(playerid,dJob123,0,"Завершение работы.","Вы хотите закончить работу и забрать деньги?","Да","Нет");
	}
	if(areaid == gAreas[arGruz2] && pstate == PLAYER_STATE_ONFOOT)
	{
		if(!pTemp[playerid][pWork]) ShowPlayerDialog(playerid,dJob1234,0,"Добро пожаловать","Вы хотите переодеться ?","Да","Нет");
		else if(pTemp[playerid][pWork] == 11) ShowPlayerDialog(playerid,dJob1234,0,"Завершение работы.","Вы хотите снять одежу ?","Да","Нет");
	}
	if(areaid == gAreas[OplataHoBiz])
	{
		if(pData[playerid][pHouse] == 0 && pData[playerid][pBusiness] == 0) return SendClientMessage(playerid,-1,"У вас нет имущества");
		ShowPlayerDialog(playerid, dOBankMenu, 2, "{ffcf00}Меню банка", "Оплата дома\nОплата бизнеса\nОплата АЗС", "Перейти", "Отмена");
	}
	if(areaid == gAreas[arCoalLoad1])
	{
		if(pTemp[playerid][pWork] == 1 && !GetPVarInt(playerid,"coalamount") && GetVehicleModel(GetPlayerVehicleID(playerid)) == 486)
		{
			TogglePlayerControllable(playerid,0);
			DisablePlayerCheckpoint(playerid);
			SendClientMessage(playerid,CWHITE,"Ждите. Идет загрузка железа");
			SetTimerEx("CoalLoaded",5000,false,"i",playerid);
		}
	}
	if(areaid == gAreas[arCoalUnload1] || areaid == gAreas[arCoalUnload2])
	{
		if(pTemp[playerid][pWork] == 1 && GetPVarInt(playerid,"coalamount") && GetVehicleModel(GetPlayerVehicleID(playerid)) == 486)
		{
			TogglePlayerControllable(playerid,0);
			DisablePlayerCheckpoint(playerid);
			SendClientMessage(playerid,CWHITE,"Ждите. Идет разгрузка железа");
			SetTimerEx("CoalUnloaded",3000,false,"i",playerid);
		}
	}
	if((areaid == gAreas[arCoalmanLoad1] && GetPVarInt(playerid,"loadid") == 0) || (areaid == gAreas[arCoalmanLoad2] && GetPVarInt(playerid,"loadid") == 1) || (areaid == gAreas[arCoalmanLoad3] && GetPVarInt(playerid,"loadid") == 2) && pstate == PLAYER_STATE_ONFOOT)
	{
		if(pTemp[playerid][pWork] == 2 && !GetPVarInt(playerid,"coalamount"))
		{
			if(IsPlayerInAnyVehicle(playerid)) return 1;
			if(GetPlayerVirtualWorld(playerid) != 0) return NewKick(playerid);
			ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
			SetTimerEx("AnimationDelay",700,false,"ii",playerid,1);
			new amount = RandomEx(40,60);
			SetPVarInt(playerid,"coalamount",amount);
			mes = "";
			f(mes, "» Вы взяли %d кг железа. Отнесите мешок на переработку",amount);
			pTemp[playerid][pShaxTime] = 5;
			SetPVarInt(playerid,"perenos",1);
			SendClientMessage(playerid,CWHITE,mes);
			new id = RandomEx(3,4);
			SetPlayerCheckpoint(playerid,gCoalManCPs[id][0],gCoalManCPs[id][1],gCoalManCPs[id][2],3.0);
			SetPlayerAttachedObject(playerid,0,2060,5,0.2,0.12,0.12,-84.0,0.0,105.0);
			SetPVarInt(playerid,"loadid",id);
		}
	}
	/*if((areaid == gAreas[arCoalmanUnload1] && GetPVarInt(playerid,"loadid") == 3) || (areaid == gAreas[arCoalmanUnload2] && GetPVarInt(playerid,"loadid") == 4) && pstate == PLAYER_STATE_ONFOOT)
	{
		if(pTemp[playerid][pWork] == 2 && GetPVarInt(playerid,"coalamount"))
		{
			if(pTemp[playerid][pShaxTime] > 0)
			{
				SendClientMessage(playerid,-1,"Вы были забанены по подозрению в читерстве [Карьер]");
				//ServerBan(-1,playerid,1,"ShaxtaCheat");
				pData[playerid][pWarnc]++;
				mes = "";
				f(mes, "» [АнтиЧит][Карьер] %s получил предупреждение",pData[playerid][pNickname]);
				SendClientMessageToAll(COLOR_LIGHTRED,mes);
			}
			if(IsPlayerInAnyVehicle(playerid)) return 1;
			if(GetPlayerVirtualWorld(playerid) != 0) return NewKick(playerid);
			RemovePlayerAttachedObject(playerid,0);
//			new amount = GetPVarInt(playerid,"coalamount")*2;
			gCoalWH += GetPVarInt(playerid,"coalamount");
			SetPVarInt(playerid,"coalamount",0);
			new salary = 1;
			GivePVarInt(playerid,"fullam",salary);
			SetPVarInt(playerid,"perenos",0);
			mes = "";
			f(mes, "» Вы перенесли Железо.{ffffff} %d$ добавлено к вашей зарплате. Заработано:{"#cRED"}%d$",salary,GetPVarInt(playerid,"fullam"));
			SendClientMessage(playerid,CWHITE,mes);
			f(mes, "» {"#cYELLOW"}Состояние склада: {"#cYELLOW"}%d кг",gCoalWH);
			UpdateDynamic3DTextLabelText(gCoalWHText,CWHITE,mes);
			UpdateDynamic3DTextLabelText(gCoalWHText2,CWHITE,mes);
			new id = RandomEx(0,2);
			SetPlayerCheckpoint(playerid,gCoalManCPs[id][0],gCoalManCPs[id][1],gCoalManCPs[id][2],3.0);
			SetPVarInt(playerid,"loadid",id);
			ApplyAnimation(playerid,"CARRY","putdwn",2.05,1,0,0,0,900);
			pTemp[playerid][pShaxTime] = 0;
		}
	}*/
	if(areaid == gAreas[arWoodUnload1] && GetPVarInt(playerid,"woodamount1"))
	{
		if(IsPlayerInAnyVehicle(playerid)) return 1;
		new amount = 30;
		DeletePVar(playerid,"woodamount1");
		new salary = amount;
		pTemp[playerid][pWorkSalary] += salary;
		gWoodWH += amount;
		mes = "";
		f(mes, "» Вы принесли бутылку вина.{"#cYELLOW"} +%d$ {ffffff}к вашей зарплате. Заработано:{"#cRED"} %d$",salary,pTemp[playerid][pWorkSalary]);
		SendClientMessage(playerid,CWHITE,mes);
		RemovePlayerAttachedObject(playerid,0);
		ApplyAnimation(playerid,"CARRY","putdwn105",5.0,0,0,0,0,1);
		SetPVarInt(playerid, "loadid", 0);
		DisablePlayerCheckpoint(playerid);
	}
	if(areaid == gAreas[arWoodUnload] && GetPVarInt(playerid,"woodamount"))
	{
		if(IsPlayerInAnyVehicle(playerid)) return 1;
		if(GetPVarInt(playerid,"pOff9") > gettime()) SendClientMessage(playerid, 0xB85A1CFF, "Вы были кикнуты, в подозрении использования чит-программ. (#0040)"), NewKick(playerid);
		new amount = 70;
		DeletePVar(playerid,"woodamount");
		new salary = amount;
		pTemp[playerid][pWorkSalary] += salary;
		ZavodInfo[4] += amount;
		mes = "";
		f(mes, "{8f68ff}Виноград принесен.{f8da12} +%d$ {ffffff}к вашей зарплате. Заработано:{00ff1e} %d$",salary,pTemp[playerid][pWorkSalary]);
		SendClientMessage(playerid,CWHITE,mes);
		SetPVarInt(playerid,"pOff9",gettime()+30);

		SetPlayerSpecialAction(playerid, 0);

  		RemovePlayerAttachedObject(playerid,0);
	    RemovePlayerAttachedObject(playerid,1);
	    RemovePlayerAttachedObject(playerid,2);
	    RemovePlayerAttachedObject(playerid,3);
	    RemovePlayerAttachedObject(playerid,4);
	    RemovePlayerAttachedObject(playerid,5);
	    RemovePlayerAttachedObject(playerid,6);
	    RemovePlayerAttachedObject(playerid,7);
	    RemovePlayerAttachedObject(playerid,8);
	    RemovePlayerAttachedObject(playerid,9);
	    RemovePlayerAttachedObject(playerid,10);
	    RemovePlayerAttachedObject(playerid,11);
	    RemovePlayerAttachedObject(playerid,12);
	    RemovePlayerAttachedObject(playerid,13);
	    RemovePlayerAttachedObject(playerid,14);
	    RemovePlayerAttachedObject(playerid,15);
	    RemovePlayerAttachedObject(playerid,16);
	    RemovePlayerAttachedObject(playerid,17);
	    RemovePlayerAttachedObject(playerid,18);
	    RemovePlayerAttachedObject(playerid,19);
	    RemovePlayerAttachedObject(playerid,20);
		ApplyAnimation(playerid,"CARRY","putdwn105",5.0,0,0,0,0,1);
		new id = RandomEx(0,27);
		SetPlayerCheckpoint(playerid,gWoodCPs[id][0],gWoodCPs[id][1],gWoodCPs[id][2],1.0);
		SetPVarInt(playerid,"loadid",id);

	}
	if(areaid == gAreas[arAntiCleoWood])
	{
		pTemp[playerid][pAntiCleoWood] = 2;
	}
	if(areaid == gAreas[arGunWork] && pstate == PLAYER_STATE_ONFOOT)
	{
		if(!pTemp[playerid][pWork]) ShowPlayerDialog(playerid,dGunWork,0,"Добро пожаловать","\n  {"#cWHITE"}Мы предлагаем Вам работу {"#cLIGHTBLUE"}слесаря-сборщика оружия.\n  {"#cWHITE"}Ваша задача состоит в том, чтобы брать необходимые материалы\n  и изготавливать из них оружие.\n\n\t\t{"#cYELLOW"}Вы согласны?","Да","Нет");
		else if(pTemp[playerid][pWork] == 4) ShowPlayerDialog(playerid,dGunWork,0,"Завершение работы.","Вы хотите закончить работу и забрать деньги?","Да","Нет");
	}

	if((areaid == gAreas[arTruckLoadCoal] || areaid == gAreas[arTruckLoadWood]) && pData[playerid][pJob] == 2 && pTemp[playerid][pTruckID] != INVALID_VEHICLE_ID)
	{
		SendClientMessage(playerid,CWHITE,"Чтобы подписать контракт нажмите {ffcf00}~k~~VEHICLE_HORN~");
	}

	if(areaid == gAreas[arAutoExam])
	{
		if(pTemp[playerid][pOnExam]) return SendClientMessage(playerid,CWHITE,"Вы уже прошли тестирование");
		//\nВоздушный транспорт\nМорской транспорт [20000$]\nЛицензия на оружие [30000$]
		//ShowPlayerDialog(playerid,dExamType,2,"{ffcf00}Экзамен","Выберите вид транспорта, на который хотите получить лицензию:\nНаземный транспорт","OK","Отмена");
 		if(pData[playerid][pLicenses][LIC_DRIVING]) return SendClientMessage(playerid,CWHITE,"» У вас уже есть {ffe50b}права");
		ShowPlayerDialog(playerid,dAutoExam1,0,"Автошкола","\t\t\t\t\t\tШкола вождения\n\n{"#cWHITE"}Добро пожаловать в автошколу. Чтобы сдать на права Вам нужно выполнить следующие действия\n1 » Прочитайте и запомните ПДД\n2 » Сдайте тест на знание ПДД\n3 » Сдайте практический экзамен иструктору","Далее","Выход");
	}

	if(areaid == gAreas[arDorm])
	{
		new gangid = GetPlayerVirtualWorld(playerid);
		new gunamount = GetPVarInt(playerid,"carrygun");
		new ammo = GetPVarInt(playerid,"carryammo");
		if(gunamount || ammo)
		{
			SetPVarInt(playerid,"carrygun",0);
			SetPVarInt(playerid,"carryammo",0);
			RemovePlayerAttachedObject(playerid,0);
			ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
			new limit1 = gGangDormLevel[gGangDormLimit[gangid]][0];
			new limit2 = gGangDormLevel[gGangDormLimit[gangid]][1];
			if(gGangDorm[gangid][0] + gunamount <= limit1) gGangDorm[gangid][0] += gunamount;
			if(gGangDorm[gangid][1] + ammo <= limit2) gGangDorm[gangid][1] += ammo;
		}
	}
	/*	if(areaid == gAreas[arGangBuyCar])
	{
		if(pData[playerid][pFraction] >= 3 && pData[playerid][pFraction] <= 7)
		{
			new mes[512];
			for(new i;i<15;i++)
			{
				new model = gGangCarModelID[i];
				new modelid = model - 400;
				if(!i) f(mes, "» %s [{"#cRED"}%d${"#cWHITE"}]",gTransport[modelid][trName],gTransport[modelid][trPrice]);
				else f(mes, "» %s\n%s [{"#cRED"}%d${"#cWHITE"}]",mes,gTransport[modelid][trName],gTransport[modelid][trPrice]);
			}
			ShowPlayerDialog(playerid,dBuyGangCar,2,"Купить авто для банды",mes,"Купить","Отмена");
		}
		else SendClientMessage(playerid,CWHITE,"[Чей-то голос]: Вали от сюда, пока жив!");
	}*/

	if(areaid == gAreas[arHire])
	{
		if(pData[playerid][pFraction]) return SendClientMessage(playerid,CWHITE,"» Чтобы устроиться на работу Вам необходимо уволиться из организации.");
		ShowPlayerDialog(playerid,dHire,2,"{ffcf00}Работа","1 » Таксист\n\
													2 » Водитель автобуса\n\
													3 » Механик\n\
													4 » Промоутер","ОК","Отмена");
	}

	if(areaid >= gRepairArea[0] && areaid <= gRepairArea[2])
	{
		SetPVarInt(playerid,"selectedrepair",areaid - gRepairArea[0] + 1);
	}


	else //Циклы проверок
	{
		for(new i;i<1;i++)
		{
			if(areaid == gDetonateArea[i][0])
			{
				if(pTemp[playerid][pJustTP])
				{
					pTemp[playerid][pJustTP] = false;
					return 1;
				}
				new Float:x, Float:y, Float:z;
				Streamer_GetFloatData(STREAMER_TYPE_AREA,gDetonateArea[i][1],E_STREAMER_X,x);
				Streamer_GetFloatData(STREAMER_TYPE_AREA,gDetonateArea[i][1],E_STREAMER_Y,y);
				Streamer_GetFloatData(STREAMER_TYPE_AREA,gDetonateArea[i][1],E_STREAMER_Z,z);
				pTemp[playerid][pJustTP] = true;
				SetPlayerPos(playerid,x,y,z+1.0);
				return 1;
			}
			else if(areaid == gDetonateArea[i][1])
			{
				if(pTemp[playerid][pJustTP])
				{
					pTemp[playerid][pJustTP] = false;
					return 1;
				}
				new Float:x, Float:y, Float:z;
				Streamer_GetFloatData(STREAMER_TYPE_AREA,gDetonateArea[i][0],E_STREAMER_X,x);
				Streamer_GetFloatData(STREAMER_TYPE_AREA,gDetonateArea[i][0],E_STREAMER_Y,y);
				Streamer_GetFloatData(STREAMER_TYPE_AREA,gDetonateArea[i][0],E_STREAMER_Z,z);
				pTemp[playerid][pJustTP] = true;
				SetPlayerPos(playerid,x,y,z+1.0);
				return 1;
			}
		}
	}
	return 1;
}

public OnPlayerLeaveDynamicArea(playerid, areaid)
{
	/*if(areaid >= gHouseArea[0] && areaid <= gHouseArea[gHouseCount])
	{
		pTemp[playerid][pSelectedHouseID] = 0;
	}
	if(areaid >= gBusinessArea[0] && areaid <= gBusinessArea[gBusinessCount - 1])
	{
		if(!pTemp[playerid][pJustTP]) pTemp[playerid][pSelectedBusinessID] = -1;
	}*/
	if(areaid == gAreas[arCoalCenter] && !pTemp[playerid][pJustTP])
	{
		if(pTemp[playerid][pWork] == 2)
		{
			pTemp[playerid][pWork] = 0;
			DeletePVar(playerid,"coalamount");
			DeletePVar(playerid,"loadid");
			SetPlayerSkin(playerid,pTemp[playerid][pCSkin]);
			DisablePlayerCheckpoint(playerid);
			SendClientMessage(playerid,CWHITE,"Вы покинули место работы. И были за это уволены.");
			pTemp[playerid][pWorkSalary] = 0;
			SetPVarInt(playerid,"fullam",0);
		}
	}

	/*if(areaid == gAreas[arCoalCenter] && !pTemp[playerid][pJustTP])
	{
		if(pTemp[playerid][pWork] == 1 || pTemp[playerid][pWork] == 2)
		{
			SendClientMessage(playerid,CWHITE,"Вы покинули место работы. И были за это уволены");
			if(pTemp[playerid][pWork] == 1)
			{
				if(pTemp[playerid][pDozerSpawnTimer])
				{
					KillTimer(pTemp[playerid][pDozerSpawnTimer]);
					pTemp[playerid][pDozerSpawnTimer] = 0;
				}
				SetVehicleToRespawnEx(pTemp[playerid][pDozerID]);
				//RemovePlayerFromVehicle(playerid);
				if(IsValid3DTextLabel(pTemp[playerid][pDozerText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pDozerText]);
			}
			pTemp[playerid][pWork] = 0;
			DeletePVar(playerid,"coalamount");
			DeletePVar(playerid,"loadid");
			SetPlayerSkin(playerid,pTemp[playerid][pCSkin]);
			DisablePlayerCheckpoint(playerid);
		}
	}
	*/
	if(areaid >= gRepairArea[0] && areaid <= gRepairArea[2])
	{
		SetPVarInt(playerid,"selectedrepair",0);
	}
	/*if((areaid == gAreas[arTruckWagonCoal] || areaid == gAreas[arTruckWagonWood]) && pData[playerid][pJob] == 2 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(IsTrailerAttachedToVehicle(vehicleid))
		{
			new trailerid = GetVehicleTrailer(vehicleid);
			if(pTemp[playerid][pTruckWagonID] == trailerid)
			{
				new loadid = GetPVarInt(playerid,"loadid");
				pTemp[playerid][pTruckLoadID] = loadid;
				DeletePVar(playerid,"loadid");
				SetPVarInt(playerid,"truckonroad",1);
				gTruckLoadTurn[loadid][0] = INVALID_PLAYER_ID;
				SendClientMessage(playerid,CWHITE,"Теперь можете спокойно ехать к оружейному заводу. (( /gps => Работы => Завод материалов ))");
			}
		}
	}*/
	return 1;
}

public OnRconCommand(cmd[])
{

	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
	if(!pTemp[playerid][pLogined]) return 0;
	if(IsPlayerNPC(playerid))
	{
		SpawnPlayer(playerid);
		return 1;
	}
	return 1;
}

public OnObjectMoved(objectid)
{
	if(IsAFireWork[objectid])
	{
		IsAFireWork[objectid] = false;
		new Float:X,Float:Y,Float:Z;
		GetObjectPos(objectid,X,Y,Z);
		CreateExplosion(X, Y, Z, 2, 0.0);
		DestroyDynamicObject(objectid);
	}
	if(IsAFireWorkTwo[objectid])
	{
		IsAFireWorkTwo[objectid] = false;
		new Float:X,Float:Y,Float:Z;
		GetObjectPos(objectid,X,Y,Z);
		CreateExplosion(X, Y, Z, 2, 0.0);
		DestroyDynamicObject(objectid);
	}
	if(doorlift[0] == objectid)
	{
		if(liftstatus[0] == 2)
		{
			liftstatus[0] = 0;
		}
		else if(liftstatus[0] == 1)
		{
			MoveObject(lift[0], 630.97000000,808.47000000,-93.54000000, 5);
			MoveObject(lift[2], 630.97000000,808.47000000,-90.64000000, 5);
			liftstatus[0] = 3;
			return 1;
		}
	}
	if(lift[0] == objectid)
	{
		if(liftstatus[0] == 3)
		{
			MoveObject(doorlift[2], 628.38903805594,805.09893798828,-40.736106872559-52.84, 5);
			liftstatus[0] = 2;
		}
		else if(liftstatus[0] == 4)
		{
			MoveObject(doorlift[0], 628.38903805594,805.09893798828,-40.736106872559, 5);
			liftstatus[0] = 2;
			return 1;
		}
		return 1;
	}
	if(doorlift[2] == objectid)
	{
		if(liftstatus[0] == 2)
		{
			liftstatus[0] = 0;
		}
		else if(liftstatus[0] == 1)
		{
			MoveObject(lift[0], 630.98000000,808.48000000,-40.70000000, 5);
			MoveObject(lift[2], 630.98000000,808.48000000,-37.78000000, 5);
			liftstatus[0] = 4;
			return 1;
		}
		return 1;
	}

	if(doorlift[1] == objectid)
	{
		if(liftstatus[1] == 2)
		{
			liftstatus[1] = 0;
		}
		else if(liftstatus[1] == 1)
		{
			MoveObject(lift[1], 607.63000000,813.46000000,-93.54000000, 5);
			MoveObject(lift[3], 607.63000000,813.46000000,-90.64000000, 5);
			liftstatus[1] = 3;
			return 1;
		}
	}
	if(lift[1] == objectid)
	{
		if(liftstatus[1] == 3)
		{
			MoveObject(doorlift[3], 608.63153076172,809.44689941406,-40.361083984375-52.84, 5);
			liftstatus[1] = 2;
		}
		else if(liftstatus[1] == 4)
		{
			MoveObject(doorlift[1], 608.63153076172,809.44689941406,-40.361083984375, 5);
			liftstatus[1] = 2;
			return 1;
		}
		return 1;
	}
	if(doorlift[3] == objectid)
	{
		if(liftstatus[1] == 2)
		{
			liftstatus[1] = 0;
			return 1;
		}
		else if(liftstatus[1] == 1)
		{
			MoveObject(lift[1], 607.63000000,813.46000000,-40.70000000, 5);
			MoveObject(lift[3], 607.63000000,813.46000000,-37.78000000, 5);
			liftstatus[1] = 4;
			return 1;
		}
		return 1;
	}
	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}


public OnPlayerPickUpPickup(playerid, pickupid)
{

	return 1;
}


public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	return 1;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
    if(newkeys & KEY_SECONDARY_ATTACK && IsPlayerNearStol(playerid) != -1)
	{
		new s = GetPVarInt(playerid,"GameStol");
		new stolid = IsPlayerNearStol(playerid);
		new g = GetPVarInt(playerid,"Crupe");

		if(StolInfo[stolid][GameStart]) return SendClientMessage(playerid,-1,"Игра уже идет!");
		if(g == 1 && StolInfo[stolid][Crupe] != INVALID_PLAYER_ID) return SendClientMessage(playerid,-1,"Тут уже работает крупье!");
		if(s != -1) return SendClientMessage(playerid,-1,"Ты уже зарегистрирован на другом столе!");
		if(StolInfo[stolid][Stavka] == 0 && g != 1) return SendClientMessage(playerid, -1, "Подождите, пока крупье начнет игру");
		if(GetPlayerMoneyEx(playerid) < StolInfo[stolid][Stavka]) return SendClientMessage(playerid, -1, "У вас не достаточно денег для входа в игру");
		if(GetPVarInt(playerid, "RegCasino") == 1) return SendClientMessage(playerid, -1, "Вы уже зарегестрировались");
		if(g != 1)
		{
			if(SetNameStol(playerid,stolid) == 0) return SendClientMessage(playerid,1,"Стол переполнен!");
		}
		TextDrawShowForPlayer(playerid,KostiBox[stolid]);
		TextDrawShowForPlayer(playerid,TableName[stolid]);
		TextDrawShowForPlayer(playerid,KostiInfo[stolid]);
		TextDrawShowForPlayer(playerid,KostiGameInfo[stolid]);
		TextDrawShowForPlayer(playerid,KostiKeyExit);
		TextDrawShowForPlayer(playerid,KostiKeyDone);
		TextDrawShowForPlayer(playerid,KostiKeyStavka);
		SetPVarInt(playerid,"GameStol",stolid);
		TogglePlayerControllable(playerid,0);
		SelectTextDraw(playerid,0x4169e1FF);
		if(g == 1)
		{
			StolInfo[stolid][Crupe] = playerid;
			return 1;
		}
		else
		{
			TransferMoney(playerid, -1, StolInfo[stolid][Stavka], "stavka");
        	StolInfo[stolid][Bank] += StolInfo[stolid][Stavka];
        	SetPVarInt(playerid, "RegCasino", 1);
        	format(mes,sizeof(mes),"Bet: %d ~g~$~n~~w~Bank: %d ~g~$~n~",StolInfo[stolid][Stavka],StolInfo[stolid][Bank]);
			TextDrawSetString(KostiGameInfo[stolid],mes);
		}
	}
	if(newkeys == 2)
	{
		 if(IsPlayerInAnyVehicle(playerid))
		 {
		    _open(playerid, "");
		 }
	}
	if( ( newkeys & KEY_JUMP || newkeys & KEY_FIRE) && pTemp[playerid][pWork] == 5 && pTemp[playerid][pGraffityStop] == 1)
	{
	    ApplyAnimation(playerid,"CARRY","crry_prtial",1.0,1,1,1,1,1,1);
	    SetTimerEx("CarryDelay",1000,false,"i",playerid);
	}
	if(PRESSED(KEY_FIRE) && pTemp[playerid][pWork] == 5 && pTemp[playerid][pGraffityStop] == 0)
	{
	    if( (GetTickCount() - pTemp[playerid][PlayerLastTick]) < 700 ) return 1;
	    for(new i = 0; i < 15; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, ObjectTree[i][0],ObjectTree[i][1],ObjectTree[i][2]+(128.6059-124.36917)))
			{
			    if(gTreeStatus[i] == false)
				{
					SendClientMessage(playerid, -1, "» Это дерево истощено, пожалуйста подождите пока дерево вырастет");
				 	ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
				}
				else
				{
				    SetPVarInt(playerid,"MinerCount1",GetPVarInt(playerid,"MinerCount1")+1);
				    if(GetPVarInt(playerid,"MinerCount1") >= 7)
					{
     					pTemp[playerid][pGraffityStop] = 1;
					    if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid,0);
					    SetPlayerAttachedObject(playerid,0,1356,1,0.050000,0.445000,0.013999,2.099995,91.099983,0.000000,0.583999,0.672000,0.864999);
						SetPlayerAttachedObject(playerid,1,19060,1,0.078999,0.558999,-0.142000,0.000000,0.000000,-5.599999,0.143999,0.191000,0.153000);
						SetPlayerAttachedObject(playerid,2,19060,1,0.034000,0.504000,0.046999,0.000000,0.000000,0.000000,0.164999,0.203999,0.150000);
						SetPlayerAttachedObject(playerid,3,19060,1,0.002999,0.345999,-0.046000,0.000000,0.000000,141.799926,0.203000,0.132000,0.155999);
						SetPlayerAttachedObject(playerid,4,19060,1,0.031000,0.353999,0.173999,0.000000,0.000000,0.000000,0.200999,0.154999,0.169999);
						SetPlayerAttachedObject(playerid,5,19060,1,-0.019999,0.563000,0.232999,0.000000,0.000000,0.000000,0.267000,0.189999,0.209999);
						ClearAnimations(playerid);
						ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
						SetTimerEx("CarryDelay",1000,false,"i",playerid);
						SetPlayerCheckpoint(playerid, 1059.5696,-345.3574,73.9922, 1.4);
						DeletePVar(playerid, "MinerCount1");
						SendClientMessage(playerid, COLOR_LIGHTGREEN, "» Корзинка заполнена отнесите её");
					}
					if(GetPVarInt(playerid, "MinerCount1") > 0)
					{
						ApplyAnimation(playerid,"SILENCED","Silence_fire",4.1,0,1,1,15,0);
						mes = "";
						format(mes, sizeof(mes),"%d/7", GetPVarInt(playerid, "MinerCount1"));
					 	GameTextForPlayer(playerid, mes, 2000, 3);
					 	pTemp[playerid][PlayerLastTick] = GetTickCount();
				 		if(gTreeHealth[i] > 0)
						{
							 gTreeHealth[i] -= 10;
							 return 1;
						}
					 	else
					 	{
					 	    SetTimerEx("CarryDelay",1000,false,"i",playerid);
					 	    SetTimerEx("TreeVost",25000,false,"i", i);
					 	    gTreeStatus[i] = false;
					 	    gTreeHealth[i] = 0;
					 	    DestroyDynamicObject(gTree[i]);
							gTree[i] = CreateDynamicObject(888, ObjectTree[i][0], ObjectTree[i][1], 72.7784, 0.00000, 0.00000, 359.23209);
					 	    DestroyDynamicCP(gTreeCP[i]);
					 	    SendClientMessage(playerid, COLOR_RED, "» Дерево истощилось.");
					 	    SetPlayerSpecialAction(playerid ,SPECIAL_ACTION_NONE);
					 	    ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
					 	    return 1;
					 	}
					}
				}
			}
		}
		return 1;
	}
	if((newkeys & KEY_SECONDARY_ATTACK && GetPVarInt(playerid,"Animation") == 1))
	{
		ClearAnimations(playerid);
		SetPVarInt(playerid,"Animation",0);
	}
	if(newkeys & KEY_JUMP && pTemp[playerid][pWork] == 4 && GetPVarInt(playerid,"perenos") > 0)
	{
		SetPVarInt(playerid,"perenos",0);
		ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
		if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,2230.8132324219,-2285.7043457031,13.531787872314,2.0);
	}
	if(newkeys & KEY_SPRINT && newkeys & KEY_JUMP)
	{
		if(!IsPlayerInAnyVehicle(playerid) && times[playerid] == true)
		{
			times[playerid] = false;
			SetTimerEx("AntiBH",500,false,"i",playerid);
			return true;
		}
	}

	if (newkeys == KEY_SPRINT)
	{
		if(pTemp[playerid][pChoosingSkin] == true) //Выбор скина
		{
			printf("Выбор скина 3");
			new skinid = GetPVarInt(playerid,"skinid");
			new cat = 0;
			if(pData[playerid][pSex] == 2) cat = 1;
			DeletePVar(playerid,"skinid");
			new skin = gRegSkins[cat][skinid];
			pData[playerid][pSkin] = skin;
			pTemp[playerid][pChoosingSkin] = false;
			TextDrawHideForPlayer(playerid,TD[tdNextSkin]);
			TextDrawHideForPlayer(playerid,TD[tdBackSkin]);
			TextDrawHideForPlayer(playerid,TD[tdSelSkin]);
			TogglePlayerControllable(playerid,1);
			UpdatePlayerData(playerid,"skin",skin);
			SpawnPlayer(playerid);
		}
		if(pTemp[playerid][pChoosingGlasses] == true)
		{
		    new skin = GetPlayerSkin(playerid) - 1;
		    new skinid = GetPVarInt(playerid,"glassesid");
		    DestroyPlayerObject(playerid, pTemp[playerid][pObjectGlasses]);
		    pData[playerid][pObjectGlasses] = skinid;
		    UpdatePlayerData(playerid, "objectglasses", skinid);
		    SetPlayerAttachedObject(playerid, 8, pData[playerid][pObjectGlasses], 2, SkinOffSetGlasses[skin][0], SkinOffSetGlasses[skin][1], SkinOffSetGlasses[skin][2], SkinOffSetGlasses[skin][3], SkinOffSetGlasses[skin][4], SkinOffSetGlasses[skin][5]);
		    _exitshop(playerid, "");
		}
		if(pTemp[playerid][pChoosingHats] == true)
		{
		    new skin = GetPlayerSkin(playerid) - 1;
		    new skinid = GetPVarInt(playerid,"hatsid");
		    DestroyPlayerObject(playerid, pTemp[playerid][pObjectGlasses]);
		    pData[playerid][pObjectHat] = skinid;
		    UpdatePlayerData(playerid, "objecthat", skinid);
            SetPlayerAttachedObject(playerid, 9, pData[playerid][pObjectHat], 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
			_exitshop(playerid, "");
		}
		if(pTemp[playerid][pChoosingMebel] == true)
		{
			ShowPlayerDialog(playerid,dChoosingMebel,0,"Магазин Мебели","{FFFFFF}Вы уверены, что хотите приобрести данную мебель\n\n{FFCD00}Стоимость: 5000$","Да","Нет");
			return 1;
		}
		if(pTemp[playerid][pChoosingElectro] == true)
		{
            ShowPlayerDialog(playerid,dChoosingMebel,0,"Магазин электронники","{FFFFFF}Вы уверены, что хотите приобрести данную электронику\n\n{FFCD00}Стоимость: 5000$","Да","Нет");
            return 1;
		}
	}
	if(predlojbrak == 1)
	{
		if(newkeys == KEY_YES)
		{
//			new string[128];
			SendMes(playerid,-1,"Вы вступили в брак с %s", pData[WeddingTwo[playerid]][pNickname]);
			WeddingTwo1[playerid] = WeddingTwo[playerid];
			SendMes(WeddingTwo[playerid],-1,"Выше предожение вступить в брак принято. Ваша супруга: %s",pData[playerid][pNickname]);
            new sendername[32],giveplayer[32];
			new giveplayerid = WeddingTwo[playerid];
			GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
			GetPlayerName(giveplayerid, giveplayer, MAX_PLAYER_NAME);
			strmid(pData[playerid][pDivorce], giveplayer, 0, strlen(giveplayer), 32);
			strmid(pData[giveplayerid][pDivorce], sendername, 0, strlen(sendername), 32);
			mes = "";
			f(mes, "UPDATE `accounts` SET divorce = '%s',married = 1 WHERE id = '%d'",sendername,pData[giveplayerid][pMysqlID]);
			sql_query(zConn, mes); mes = "";
			f(mes, "UPDATE `accounts` SET divorce = '%s',married = 1 WHERE id = '%d'",giveplayer,pData[playerid][pMysqlID]);
			sql_query(zConn, mes); mes = "";
			pData[giveplayerid][pMarried] = 1;
			pData[playerid][pMarried] = 1;
			predlojbrak = 0;
			//ShowPlayerDialog(playerid,dNameChange1,1,"Смена ника","{FFFFFF}Хотите изменить фамилию","ОК","Отмена");
		}
		if(newkeys == KEY_NO)
		{
			SendClientMessage(playerid,-1,"Вы отвергли предложение вступить в брак");
			SendClientMessage(WeddingTwo[playerid],-1,"Вам отвергли предложение вступить в брак");
			predlojbrak = 0;
		}
	}
	//if(newkeys && pTemp[playerid][pOff] >= 2) return SendClientMessage(playerid,CWHITE,"» Не флуди");
	/*if(oldkeys & KEY_SPRINT)
	{
		pTemp[playerid][pSprint] = false;
	}
	if(newkeys & KEY_SPRINT)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			new index = GetPlayerAnimationIndex(playerid);
			if(index == 1224 || index == 1247 || index == 1257)
			{
				new keys,ud,lr;
				GetPlayerKeys(playerid,keys,ud,lr);
				if(ud != 0 || lr != 0) pTemp[playerid][pSprint] = true;
			}
		}
	}*/
	/*	if(PRESSED(KEY_HANDBRAKE) || PRESSED(KEY_FIRE) || PRESSED(KEY_JUMP) || PRESSED(KEY_CROUCH) || PRESSED(KEY_ACTION) || PRESSED(KEY_FIRE))
	{
		if(GetPVarInt(playerid, "DrugsPlayerVeh") > 0 && IsPlayerAttachedObjectSlotUsed(playerid, 3) || GetPVarInt(playerid, "FactoryPlaceSF") > 0 && IsPlayerAttachedObjectSlotUsed(playerid, 3) || IsPlayerAttachedObjectSlotUsed(playerid, 3) && IsPlayerInRangeOfPoint(playerid, 20.0, 356.6240,865.3132,20.5238) || GetPVarInt(playerid,"Miner") == 2 || GetPVarInt(playerid, "FactoryPlace") > 0 && IsPlayerAttachedObjectSlotUsed(playerid, 3))
		{
			ClearAnimations(playerid);
			ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
			return 1;
		}
	}
*/	if(pTemp[playerid][pCuffee] == playerid)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			if((newkeys & KEY_JUMP || newkeys & KEY_FIRE || newkeys & KEY_CROUCH || (newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK)) && pTemp[playerid][pControllable])
			{
				ClearAnimations(playerid,1);
				//SetTimerEx("Unfreez",3000,false,"i",playerid);
				ApplyAnimation(playerid,"FAT","IDLE_tired",3.0,1,0,0,0,3000,1);
				//TogglePlayerControllable(playerid,0);
				SendClientMessage(playerid,CWHITE,"» Вы не можете использовать это действие так как Вы в наручниках.");
			}
		}
	}
	if(newkeys & KEY_JUMP && newkeys & KEY_SPRINT)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			new index = GetPlayerAnimationIndex(playerid);
			if(index == 1224 || index == 1247 || index == 1257 || index == 1249 || index == 1196 || index == 1249)
			{
				new keys,ud,lr;
				GetPlayerKeys(playerid,keys,ud,lr);
				if(ud != 0 || lr != 0 && times[playerid] == true)
				{
					ApplyAnimation(playerid, "PED", "FLOOR_hit_f", 4.1, 0, 0, 0, 0, 0);
					SetTimerEx("AntiBH",500,false,"i",playerid);
				}
			}
		}
	}
	if(newkeys & KEY_ACTION)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			pTemp[playerid][pOff]++;
			new vehicleid = GetPlayerVehicleID(playerid);
			if(pTemp[playerid][pRaceIvite])
				if(GZRace[playerid] == 0) return SendClientMessage(playerid,CWHITE,"» Двигатель не заводится. Причина: Гонка не началась.");
			if(ToggleEngine(vehicleid) == -1) SendClientMessage(playerid,CWHITE,"» Двигатель не заводится. Вызовите механика {"#cWHITE"}(( /call (/c) ))");
		}
	}
	if(newkeys & KEY_YES)
	{
	    if(pTemp[playerid][pShowPassact1] == playerid)
		{
			new acter = pTemp[playerid][pShowPasspl1];
			SendMes(playerid, COLOR_GREEN, "» {FFCD00}%s[%d] {33AAFF}дал Вам листовку на ней написанно:", pData[acter][pNickname], acter);
			SendMes(playerid, -1, "%s", PromoText);
			pTemp[playerid][AntiID] = acter;
			new value = GetPVarInt(playerid, "listovok")-1;
			SetPVarInt(playerid, "listovok", value);
			TransferMoney(-1, acter, 3, "listovka");
			//ShowPass(acter,playerid);
			pTemp[playerid][pShowPassact1] = -1;
		}
		if(pTemp[playerid][pShowPassact] == playerid)
		{
			new acter = pTemp[playerid][pShowPasspl];
			ShowPass(acter,playerid);
			mes = "";
			f(mes, "» достал паспорт и показал его %s",pData[playerid][pNickname]);
			MeAction(acter,mes);
			pTemp[playerid][pShowPassact] = -1;
		}


		if(GetPVarInt(playerid, "sellexamlic1") == 1)
		{
		    new rc = GetPVarInt(playerid, "idselllic1");
			new rcv = GetPVarInt(playerid, "changelic1");
		    TransferMoney(playerid,rc,rcv,"instrexam");
			SendMes(rc, COLOR_GREEN, "» {FFCD00}%s[%d] {33AAFF}оплатил штраф стоимостью {FFCD00}%d", pData[playerid][pNickname], playerid, rcv);
			SendMes(playerid, COLOR_GREEN, "» Вы успешно оплатили штраф стоимостью {FFCD00}%d", rcv);
			SetPVarInt(playerid, "sellexamlic1", 0);
			DeletePVar(playerid, "sellexamlic1");
			DeletePVar(playerid, "idselllic1");
			DeletePVar(playerid, "changelic1");
		}

		if(GetPVarInt(playerid, "sellexamlic2") == 1)
		{
		    new rc = GetPVarInt(playerid, "idselllic2");
			new rcv = GetPVarInt(playerid, "changelic2");
		    TransferMoney(playerid,rc,rcv,"instrexam");

		    if(pData[playerid][pBusiness] > 0)
		    {
				new i = pData[playerid][pBusiness] - 1;
				gBusiness[i][busiLic] = 1;
				UpdateBusinessData(i+1,"busiLic",1);
		    }

		    pData[playerid][pLicenses][LIC_VISKA] = 1;
			mes = "";
			f(mes, "UPDATE `accounts` SET `licBusiness` = '1' WHERE `id` = '%d'",pData[playerid][pMysqlID]);
			sql_query(zConn, mes); mes = "";

			SendMes(rc, COLOR_GREEN, "» {FFCD00}%s[%d]{33AAFF} купил лицензию на содержание бизнеса стоимостью {FFCD00}%d", pData[playerid][pNickname], playerid, rcv);
			SendMes(playerid, COLOR_GREEN, "» Вы успешно купили лицензию на содержание бизнеса стоимостью {FFCD00}%d", rcv);
			DeletePVar(playerid, "sellexamlic2");
			DeletePVar(playerid, "idselllic2");
			DeletePVar(playerid, "changelic2");
		}

		if(GetPVarInt(playerid, "sellexamlic") == 1)
		{
			new rc = GetPVarInt(playerid, "idselllic");
			new rcv = GetPVarInt(playerid, "changelic");
			new type[28], cena = 1000;
			if(GetPlayerMoneyEx(playerid) < cena) return DeletePVar(playerid, "sellexamlic"), DeletePVar(playerid, "idselllic"), DeletePVar(playerid, "changelic"), SendClientMessage(playerid, COLOR_GREY, "Сделака не состоялась");
			mes = "";
			if(rcv == 1)
			{
				pData[playerid][pLicenses][LIC_FLY] = 1;
				f(mes, "UPDATE `accounts` SET `licFly` = '1' WHERE `id` = '%d'",pData[playerid][pMysqlID]);
				sql_query(zConn, mes); mes = "";
				type = "воздушный транспорт";
			}
			if(rcv == 2)
			{
				pData[playerid][pLicenses][LIC_BOAT] = 1;
				f(mes, "UPDATE `accounts` SET `licBoat` = '1' WHERE `id` = '%d'",pData[playerid][pMysqlID]);
				sql_query(zConn, mes); mes = "";
				type = "водный транспорт";
			}
			if(rcv == 3)
			{
				pData[playerid][pLicenses][LIC_WEAP] = 1;
				f(mes, "UPDATE `accounts` SET `licWeap` = '1' WHERE `id` = '%d'",pData[playerid][pMysqlID]);
				sql_query(zConn, mes); mes = "";
				type = "оружие";
				cena = 3000;
			}
			TransferMoney(playerid,rc,cena,"instrexam");
			SendMes(rc, COLOR_GREEN, "» {FFCD00}%s[%d] {33AAFF}согласился купить у вас лицензию на {FFCD00}%s", pData[playerid][pNickname], playerid, type);
			SendMes(playerid, COLOR_GREEN, "» Вы купили лицензию у {FFFFFF}%s[%d] {33AAFF}на {FFCD00}%s {33AAFF}за %d$", pData[rc][pNickname],rc,type, cena);
			DeletePVar(playerid, "sellexamlic");
			DeletePVar(playerid, "idselllic");
			DeletePVar(playerid, "changelic");
		}

		if(pTemp[playerid][pOfferFraction1] == playerid)
		{
			new fractionid = pTemp[playerid][pOfferFractionid];
			new offer = pTemp[playerid][pOfferFraction];
			mes = "";
			for(new i;i<8;i++)
			{
				new skinid = gFractionSkin[fractionid][i];
				if(!skinid) break;
				if(!i) f(mes, "» {FFFFFF}Скин %d (%d)",i+1,skinid);
				else f(mes, "%s\n» Скин %d (%d)",mes,i+1,skinid);
			}
			SendClientMessage(playerid,COLOR_GREEN,"Сейчас лидер выберет для Вас одежду");
			SetPVarInt(playerid, "OfferInviteLeader", 1);
			pTemp[playerid][pOfferFraction1] = -1;
			ShowPlayerDialog(offer,dInviteSkin,2,pData[playerid][pNickname],mes,"Принять","");
		}
		if(pTemp[playerid][pInviteSubLeader] == playerid)
		{
			new fractionid = pTemp[playerid][pOfferFractionid];
			new offer = pTemp[playerid][pOfferFraction];
		 	mes = "";
			for(new i;i<8;i++)
			{
				new skinid = gFractionSkin[fractionid][i];
				if(!skinid) break;
				if(!i) f(mes, "» {FFFFFF}Скин %d (%d)",i+1,skinid);
				else f(mes, "%s\n» Скин %d (%d)",mes,i+1,skinid);
			}
			pTemp[playerid][pInviteSubLeader] = -1;
			SetPVarInt(playerid, "OfferInviteSubLeader", 1);
			SendClientMessage(playerid,COLOR_GREEN,"Сейчас лидер выберет для Вас одежду");
			ShowPlayerDialog(offer,dInviteSkinLeader,2,pData[playerid][pNickname],mes,"Принять","");
		}
		if(pTemp[playerid][pShowLicact] == playerid)
		{
			new acter = pTemp[playerid][pShowLicpl];
			SendMes(playerid, COLOR_YELLOW, "{e16a6a}Лицензии жителя штата {FFFFFF}%s", pData[acter][pNickname]);
			SendMes(playerid, -1, "Водительские права: %s", (pData[acter][pLicenses][LIC_DRIVING]) ? ("{c6ff00}Есть") : ("{db1d1d}Нет"));
			SendMes(playerid, -1, "Лицензия пилота: %s", (pData[acter][pLicenses][LIC_FLY]) ? ("{c6ff00}Есть") : ("{db1d1d}Нет"));
			SendMes(playerid, -1, "Лицензия на водный транспорт: %s", (pData[acter][pLicenses][LIC_BOAT]) ? ("{c6ff00}Есть") : ("{db1d1d}Нет"));
			SendMes(playerid, -1, "Лицензия на оружие: %s", (pData[acter][pLicenses][LIC_WEAP]) ? ("{c6ff00}Есть") : ("{db1d1d}Нет"));
			SendMes(playerid, -1, "Лицензия на бизнес: %s", (pData[acter][pLicenses][LIC_VISKA]) ? ("{c6ff00}Есть") : ("{db1d1d}Нет"));
			pTemp[playerid][pShowLicact] = -1;
		}
		if(pTemp[playerid][pSellHouseOffee] == playerid) //Согласился купить дом
		{
			new houseid = pTemp[playerid][pSellHouseID];
			new price = pTemp[playerid][pSellHousePrice];
			new offerid = pTemp[playerid][pSellHouseOffer];
			if(!gHouses[houseid][houseOwnerID] || !pData[offerid][pHouse])
			{
				SendClientMessage(playerid,CWHITE,"» Дом был продан в гос.");
				pTemp[offerid][pSellHouseOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellHouseOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellHouseOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellHousePrice] = 0;
				pTemp[playerid][pSellHouseID] = 0;
				return 1;
			}
			if(pTemp[offerid][pSellHouseOffer] == INVALID_PLAYER_ID || !IsPlayerConnected(offerid))
			{
				SendClientMessage(playerid,CWHITE,"» Продавец вышел из игры, либо продал дом другому игроку");
				pTemp[offerid][pSellHouseOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellHouseOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellHouseOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellHousePrice] = 0;
				pTemp[playerid][pSellHouseID] = 0;
				return 1;
			}
			if(GetPlayerMoneyEx(playerid) < price)
			{
				SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег на руках");
				SendClientMessage(offerid,CWHITE,"» У покупателя недостаточно денег");
				pTemp[offerid][pSellHouseOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellHouseOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellHouseOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellHousePrice] = 0;
				pTemp[playerid][pSellHouseID] = 0;
				return 1;
			}
			UpdatePlayerData(offerid,"house",0);
			UpdatePlayerData(playerid,"house",houseid+1);
			mes = "";
			f(mes, "UPDATE `houses` SET `ownerid` = '%d', owner = '%s',inhabit2id = '0',inhabit3id = '0',inhabit4id = '0',inhabit2='',inhabit3='',inhabit4='',day='3' WHERE `id` = '%d'",pData[playerid][pMysqlID],pData[playerid][pNickname],houseid+1);
			sql_query(zConn, mes); mes = "";
			TransferMoney(playerid,offerid,price,"sellhouse");
			pData[playerid][pHouse] = houseid+1;
			pData[offerid][pHouse] = 0;
			gHouses[houseid][houseOwnerID] = pData[playerid][pMysqlID];
			format(gHouses[houseid][houseOwner],MAX_PLAYER_NAME,"%s",pData[playerid][pNickname]);
			strdel(gHouseHabits[houseid][0],0,24);
			strdel(gHouseHabits[houseid][1],0,24);
			strdel(gHouseHabits[houseid][2],0,24);
			gHouses[houseid][houseHabitID][0] = 0;
			gHouses[houseid][houseHabitID][1] = 0;
			gHouses[houseid][houseHabitID][2] = 0;
			gHouses[houseid][houseSkin][1] = 0;
			gHouses[houseid][houseSkin][2] = 0;
			gHouses[houseid][houseSkin][3] = 0;

			gHouses[houseid][houseDays] = 3;

			if(pData[playerid][pFraction]) gHouses[houseid][houseSkin][3] = pData[playerid][pFractionSkin];
			if(pData[offerid][pFraction]) SetPlayerSkin(offerid,pData[offerid][pFractionSkin]);
			SendClientMessage(playerid,0x7FC0E3FF,"{1d92ff}Поздравляем, Вы купили {ffd200}дом");
			SendClientMessage(offerid,0x7FC0E3FF,"Дом продан");
			pTemp[offerid][pSellHouseOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellHouseOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellHouseOffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellHousePrice] = 0;
			pTemp[playerid][pSellHouseID] = 0;
		}
		if(pTemp[playerid][pSellBusinessOffee] == playerid) //Согласился купить бизнес
		{
			new businessid = pTemp[playerid][pSellBusinessID]-1;
			new price = pTemp[playerid][pSellBusinessPrice];
			new offerid = pTemp[playerid][pSellBusinessOffer];
			if(!gBusiness[businessid][busiOwnerID] || !pData[offerid][pBusiness])
			{
				SendClientMessage(playerid,CWHITE,"» Бизнес был продан в гос. владельцем");
				pTemp[offerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellBusinessOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellBusinessPrice] = 0;
				pTemp[playerid][pSellBusinessID] = 0;
				return 1;
			}
			if(pTemp[offerid][pSellBusinessOffer] == INVALID_PLAYER_ID || !IsPlayerConnected(offerid))
			{
				SendClientMessage(playerid,CWHITE,"» Продавец вышел из игры, либо продал бизнес другому игроку");
				pTemp[offerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellBusinessOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellBusinessPrice] = 0;
				pTemp[playerid][pSellBusinessID] = 0;
				return 1;
			}
			if(GetPlayerMoneyEx(playerid) < price)
			{
				SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег на руках");
				SendClientMessage(offerid,CWHITE,"» У покупателя недостаточно денег");
				pTemp[offerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellBusinessOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellBusinessPrice] = 0;
				pTemp[playerid][pSellBusinessID] = 0;
				return 1;
			}
			UpdatePlayerData(offerid,"bussiness",0);
			UpdatePlayerData(playerid,"bussiness",businessid+1);
			mes = "";
			f(mes, "UPDATE `business` SET `ownerid` = '%d' WHERE `id` = '%d'",pData[playerid][pMysqlID],businessid+1);
			sql_query(zConn, mes); mes = "";
			TransferMoney(playerid,offerid,price,"sellbusiness");
			pData[playerid][pBusiness] = gBusiness[businessid][busiID];
			pData[offerid][pBusiness] = 0;
			gBusiness[businessid][busiOwnerID] = pData[playerid][pMysqlID];
			UpdateBusinessText(businessid);
			SendClientMessage(playerid,0x7FC0E3FF,"{1d92ff}Поздравляем, Вы купили {ffd200}Бизнес");
			SendClientMessage(offerid,0x7FC0E3FF,"Бизнес продан");
			PlayerPlaySound(playerid,1185,0.0,0.0,0.0);
			SetTimerEx("PlayerPlaySoundDelay",6900,false,"ii",playerid,1186);
			pTemp[offerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellBusinessOffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellBusinessPrice] = 0;
			pTemp[playerid][pSellBusinessID] = 0;
		}
		if(pTemp[playerid][pSettleHouseOffee] == playerid)
		{
			new houseid = pTemp[playerid][pSettleHouseID];
			new offerid = pTemp[playerid][pSettleHouseOffer];
			if(pTemp[offerid][pSettleHouseOffer] == INVALID_PLAYER_ID || !IsPlayerConnected(offerid))
			{
				SendClientMessage(playerid,CWHITE,"» Тот, кто предлагал поселиться у него дома вышел из игры");
				pTemp[offerid][pSettleHouseOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSettleHouseOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSettleHouseOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSettleHouseID] = 0;
				return 1;
			}
			new slot=-1;
			for(new i;i<gHouses[houseid][houseClass];i++)
			{
				if(!gHouses[houseid][houseHabitID][i]) {slot = i; break;}
			}
			if(slot == -1)
			{
				SendClientMessage(playerid,CWHITE,"» В доме нет места");
				SendClientMessage(offerid,CWHITE,"» В доме нет места");
				pTemp[offerid][pSettleHouseOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSettleHouseOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSettleHouseOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSettleHouseID] = 0;
			}
			UpdatePlayerData(playerid,"house",houseid+1);
			mes = "";
			f(mes, "UPDATE `houses` SET `inhabit%did`='%d', `inhabit%d`='%s' WHERE `id`='%d'",slot+2,pData[playerid][pMysqlID],slot+2,pData[playerid][pNickname],houseid+1);
			sql_query(zConn, mes); mes = "";
			SFCM(playerid,CINFO,"Вы стали жильцом в доме {"#cWHITE"}%s",pData[offerid][pNickname]);
			SFCM(offerid,CINFO,"Вы приняли {"#cWHITE"}%s жильцом в свой дом",pData[playerid][pNickname]);
			pData[playerid][pHouse] = houseid+1;
			gHouses[houseid][houseHabitID][slot] = pData[playerid][pMysqlID];
			format(gHouseHabits[houseid][slot],MAX_PLAYER_NAME,"%s",pData[playerid][pNickname]);
			pTemp[offerid][pSettleHouseOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSettleHouseOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSettleHouseOffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pSettleHouseID] = 0;
		}
		if(pTemp[playerid][pSellCarOffee] == playerid)
		{
			new offerid = pTemp[playerid][pSellCarOffer];
			new carID = pTemp[playerid][pSellCarID];
			new price = pTemp[playerid][pSellCarPrice];
			if(!pData[playerid][pHouse]) return SendClientMessage(playerid,CWHITE,"» У вас нет дома");
			new houseid = pData[playerid][pHouse]-1;
			if(!gCars[carID][carOwnerid] || !pData[offerid][pCar])
			{
				SendClientMessage(playerid,CWHITE,"» Авто было продано в гос.");
				pTemp[offerid][pSellCarOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellCarOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellCarOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellCarPrice] = 0;
				pTemp[playerid][pSellCarID] = 0;
				return 1;
			}
			if(pTemp[offerid][pSellCarOffer] == INVALID_PLAYER_ID || !IsPlayerConnected(offerid))
			{
				SendClientMessage(playerid,CWHITE,"» Продавец вышел из игры");
				pTemp[offerid][pSellCarOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellCarOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellCarOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellCarPrice] = 0;
				pTemp[playerid][pSellCarID] = 0;
				return 1;
			}
			if(GetPlayerMoneyEx(playerid) < price)
			{
				SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег на руках");
				SendClientMessage(offerid,CWHITE,"» У покупателя недостаточно денег");
				pTemp[offerid][pSellCarOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellCarOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellCarOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellCarPrice] = 0;
				pTemp[playerid][pSellCarID] = 0;
				return 1;
			}
			mes = "";
			f(mes, "UPDATE `cars` SET `owner` = '%d' WHERE `id` = '%d'",pData[playerid][pMysqlID],pData[offerid][pCar]);
			sql_query(zConn, mes, QUERY_THREADED);
			UpdatePlayerData(playerid,"car",pData[offerid][pCar]);
			UpdatePlayerData(offerid,"car",0);
			gCars[carID][carOwnerid] = pData[playerid][pMysqlID];
			pData[playerid][pCar] = pData[offerid][pCar];
			pData[offerid][pCar] = 0;
			for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
			{
			    i = cvector_get(PLAYERS, idx);
				if(pData[i][pVehicleKey] == pData[offerid][pCar])
				{
					pData[i][pVehicleKey] = 0;
					UpdatePlayerData(i,"vehiclekey",0);
				}
			}
//			new modelid = gCars[carID][carModelid];
			SendClientMessage(playerid,0x7FC0E3FF,"{1d92ff}Поздравляем, Вы купили {ffd200}т/с.");
			SendClientMessage(offerid,0x7FC0E3FF,"Т/С продано");
			TransferMoney(playerid,offerid,price,"sellcar");
			DestroyVehicle(gCars[carID][carVid]);
			new vehicleid = CreateVehicle(gCars[carID][carModelid],gHouses[houseid][houseParkX],gHouses[houseid][houseParkY],gHouses[houseid][houseParkZ],gHouses[houseid][houseParkR],gCars[carID][carColor1],gCars[carID][carColor2],-1);
			gCars[carID][carVid] = vehicleid;
			//UpdateVehicleDamageStatus(vehicleid,gCars[carID][carDemages][0],gCars[carID][carDemages][1],gCars[carID][carDemages][2],gCars[carID][carDemages][3]);
			if(gCars[carID][carHealth] < 300.0) gCars[carID][carHealth] = 300.0;
			SetVehicleHealthEx(vehicleid,gCars[carID][carHealth]);
			pTemp[offerid][pSellCarOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellCarOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellCarOffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellCarPrice] = 0;
			pTemp[playerid][pSellCarID] = 0;
		}
		if(pTemp[playerid][pSellFillingOffee] == playerid) //Согласился купить АЗС
		{
			new offerid = pTemp[playerid][pSellFillingOffer];
			new price = pTemp[playerid][pSellFillingPrice];
			new fillingid = -1;
			for(new i;i<FILLING_COUNT;i++)
			{
				if(pData[offerid][pMysqlID] == gFillings[i][fillOwnerID]) fillingid = i;
			}
			if(fillingid == -1) return SendClientMessage(playerid,CRED,"Програмная ошибка (не найдена АЗС)");
			if(!gFillings[fillingid][fillOwnerID] || !pData[offerid][pBusiness])
			{
				SendClientMessage(playerid,CWHITE,"» АЗС была продана в гос.");
				pTemp[offerid][pSellFillingOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellFillingOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellFillingOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellFillingPrice] = 0;
				return 1;
			}
			if(pTemp[offerid][pSellFillingOffer] == INVALID_PLAYER_ID || !IsPlayerConnected(offerid))
			{
				SendClientMessage(playerid,CWHITE,"» Продавец вышел из игры");
				pTemp[offerid][pSellFillingOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellFillingOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellFillingOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellFillingPrice] = 0;
				return 1;
			}
			if(GetPlayerMoneyEx(playerid) < price)
			{
				SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег на руках");
				SendClientMessage(offerid,CWHITE,"» У покупателя недостаточно денег");
				pTemp[offerid][pSellFillingOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellFillingOffer] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellFillingOffee] = INVALID_PLAYER_ID;
				pTemp[playerid][pSellFillingPrice] = 0;
				return 1;
			}
			mes = "";
			f(mes, "UPDATE `fillings` SET `ownerid` = '%d', `ownernick` = '%s' WHERE `id` = '%d'",pData[playerid][pMysqlID],pData[playerid][pNickname],fillingid+1);
			sql_query(zConn, mes); mes = "";
			gFillings[fillingid][fillOwnerID] = pData[playerid][pMysqlID];
			format(gFillings[fillingid][fillOwner],24,"%s",pData[playerid][pNickname]);
			pData[offerid][pBusiness] = 0;
			pData[playerid][pBusiness] = fillingid + 1 + FILLING_ID_OFFSET;
			UpdatePlayerData(playerid,"bussiness",pData[playerid][pBusiness]);
			UpdatePlayerData(offerid,"bussiness",pData[offerid][pBusiness]);
			TransferMoney(playerid,offerid,price,"buyazs");
			pTemp[offerid][pSellFillingOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellFillingOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellFillingOffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellFillingPrice] = 0;
			SendClientMessage(offerid,CWHITE,"» Вы продали АЗС");
			SendClientMessage(playerid,-1,"{1d92ff}Поздравляем, Вы купили {ffd200}АЗС.");
			SendClientMessage(playerid,-1,"/filling - {1d92ff}панель управления {ffd200}АЗС");
			PlayerPlaySound(playerid,1185,0.0,0.0,0.0);
			SetTimerEx("PlayerPlaySoundDelay",6900,false,"ii",playerid,1186);
		}
		if(GetPVarInt(playerid,"repairoffee") == playerid && GetPVarInt(playerid,"repairoffer") != playerid)
		{
			new offer = GetPVarInt(playerid,"repairoffer");
			new price = GetPVarInt(playerid,"repairprice");
			if(GetPVarInt(offer,"repairoffee") == playerid)
			{
				SetPVarInt(playerid,"repairoffee",-1);
				SetPVarInt(playerid,"repairoffer",-1);
				SetPVarInt(playerid,"repairprice",0);
				SetPVarInt(offer,"repairoffee",0);
				new vehicleid = GetPlayerVehicleID(playerid);
				if(!vehicleid) return SendClientMessage(playerid,CWHITE,"» Вы должны быть в т.с.");
				if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег");
				TransferMoney(playerid,offer,price,"repair");
				SetVehicleHealthEx(vehicleid,1000.0);
				RepairVehicle(vehicleid);
				SFCM(playerid,CBLUE,"Вам отремонтировали т.с. за %d$",price);
				SFCM(offer,CBLUE,"Вы отремонтировали т.с. за %d$",price);
			}

		}
		if(GetPVarInt(playerid,"drugoffee") == playerid && GetPVarInt(playerid,"drugoffer") != playerid)
		{
			new offer = GetPVarInt(playerid,"drugoffer");
			new price = GetPVarInt(playerid,"drugprice");
			new value = GetPVarInt(playerid,"drugvalue");
			if(GetPVarInt(offer,"drugoffee") == playerid)
			{
				SetPVarInt(playerid,"drugoffee",0);
				SetPVarInt(playerid,"drugoffer",0);
				SetPVarInt(playerid,"drugvalue",0);
				SetPVarInt(playerid,"drugprice",0);
				SetPVarInt(offer,"drugoffee",0);
				if(pData[offer][pDrugs] < value) return SendClientMessage(playerid, CWHITE,"» У продавца закончились наркотики");
				if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid, CWHITE,"» У Вас недостаточно денег для покупки");
				if(pData[playerid][pDrugs]+value > 2000) return SendClientMessage(playerid, CWHITE,"» У Вас не может быть более 2 кг наркотиков");
				TransferMoney(playerid,offer,price,"selldrugs");
				pData[offer][pDrugs] -= value;
				UpdatePlayerData(offer,"drugs",pData[offer][pDrugs]);
				pData[playerid][pDrugs] += value;
				UpdatePlayerData(playerid,"drugs",pData[playerid][pDrugs]);
				mes = "";
			 	f(mes, "» продал наркотики %s", pData[playerid][pNickname]);
				MeAction(offer,mes);
			}
		}


		if(GetPVarInt(playerid,"gzoffee") == playerid && GetPVarInt(playerid,"gzoffer") != playerid)
		{
			new offer = GetPVarInt(playerid,"gzoffer");
			new price = GetPVarInt(playerid,"gzprice");
			new value = GetPVarInt(playerid,"gzvalue");
			if(GetPVarInt(offer,"gzoffee") == playerid)
			{
				SetPVarInt(playerid,"gzoffee",0);
				SetPVarInt(playerid,"gzoffer",0);
				SetPVarInt(playerid,"gzvalue",0);
				SetPVarInt(playerid,"gzprice",0);
				SetPVarInt(offer,"gzoffee",0);
				if(IsCapture == 1) return SendClientMessage(playerid, CWHITE,"» Вы не можете купить территорию во время капта");
				if(pData[offer][pFraction] != GZMZ[value][gFrak]) return SendClientMessage(playerid, CWHITE,"» У продавца уже нет этой территории");
				if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid, CWHITE,"» У Вас недостаточно денег для покупки");
				TransferMoney(playerid,offer,price,"sellgz");
				GZMZ[value][gFrak] = pData[playerid][pFraction];
				GangZoneHideForAll(GZMZ[value][idm]);
				GangZoneShowForAll(GZMZ[value][idm],GetGangZoneColor(value));
				SaveGZ();
				//UpdTerrsBand();
				new zStr[128];
				format(zStr, 128, "Банда %s купила территорию у банды %s",gFractionName[pData[playerid][pFraction]-1],gFractionName[pData[offer][pFraction]-1]);
				SendFMes(F_GROVE,0xff2400FF, zStr);
				SendFMes(F_BALLAS,0xff2400FF, zStr);
				SendFMes(F_AZTEC,0xff2400FF, zStr);
				SendFMes(F_RIFA,0xff2400FF, zStr);
				SendFMes(F_VAGOS,0xff2400FF, zStr);
				return 1;
			}
		}
		if(GetPVarInt(playerid,"gunoffee") == playerid && GetPVarInt(playerid,"gunoffer") != playerid)
		{
			new offer = GetPVarInt(playerid,"gunoffer");
			new price = GetPVarInt(playerid,"gunprice");
			new needammo = GetPVarInt(playerid,"gunammo");
			new weaponid = GetPVarInt(playerid,"gunid");
			if(GetPVarInt(offer,"gunoffee") == playerid)
			{
				SetPVarInt(playerid,"gunoffee",0);
				SetPVarInt(playerid,"gunoffer",0);
				SetPVarInt(playerid,"gunammo",0);
				SetPVarInt(playerid,"gunprice",0);
				SetPVarInt(playerid,"gunid",0);
				SetPVarInt(offer,"gunoffee",0);

				new slot = GetWeaponSlot(weaponid);
				new weapon,ammo;
				GetPlayerWeaponData(offer,slot,weapon,ammo);
				if(weapon != weaponid || ammo < needammo) return SendClientMessage(playerid,CWHITE,"» У продавца закончилось оружие");
				new remain = ammo - needammo;
				if(remain > ammo) return 1;
				if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег");
				new ostat = ammo - needammo;
				GivePlayerWeaponEx(playerid,weaponid,needammo);
				SetPlayerAmmoEx(offer,weaponid,0);
				TransferMoney(playerid,offer,price,"sellgun");
				mes = "";
				f(mes, "» продал оружие %s",pData[playerid][pNickname]);
				MeAction(offer,mes);
				GivePlayerWeaponEx(offer,weaponid,ostat);
			}
		}
		else if(GetPVarInt(playerid,"selectpoint") == 2)
		{

			new driverid = GetPVarInt(playerid,"taxidriver");
			if(GetPlayerState(playerid) != PLAYER_STATE_PASSENGER || GetPlayerVehicleID(playerid) != pTemp[driverid][pTaxiID])
			{
				SetPVarInt(playerid,"selectpoint",0);
				SetPVarInt(playerid,"taxidriver",0);
				RemovePlayerMapIcon(playerid,iconTaxi);
			}
			new Float:x, Float:y;
			x = GetPVarFloat(playerid,"selectpointX");
			y = GetPVarFloat(playerid,"selectpointY");
			SetPlayerMapIcon(driverid,iconTaxi,x,y,0.0,0,CYELLOW,1);
			SetPVarFloat(playerid,"selectpointX",x);
			SetPVarFloat(playerid,"selectpointY",y);
			SetPVarInt(playerid,"selectpoint",0);
			SetPVarInt(driverid,"selectpoint",0);
			SendClientMessage(playerid,CINFO,"Данные о месте назначения отправлены таксисту");
			SendClientMessage(driverid,CINFO,"Пассажир установил {"#cYELLOW"}метку на карте. Чтобы убрать метку введите: {"#cWHITE"}/untaxi");
		}
	}
	if(newkeys & KEY_NO)
	{
		if(GetPVarInt(playerid, "sellexamlic") == 1)
		{
			new rc = GetPVarInt(playerid, "idselllic");
			SendClientMessage(playerid,-1,"Вы отказались от предложения");
			SendClientMessage(rc,-1,"Игрок отказался от предложения");
			DeletePVar(playerid, "sellexamlic");
			DeletePVar(playerid, "idselllic");
		}
		if(GetPVarInt(playerid, "sellexamlic2") == 1)
		{
			new rc = GetPVarInt(playerid, "idselllic");
			SendClientMessage(playerid,-1,"Вы отказались от предложения");
			SendClientMessage(rc,-1,"Игрок отказался от предложения");
			DeletePVar(playerid, "sellexamlic");
			DeletePVar(playerid, "idselllic");
		}
		if(pTemp[playerid][pShowPassact] == playerid)
		{
			SendClientMessage(playerid,-1,"Вы отказались от предложения");
			SendClientMessage(pTemp[playerid][pShowPasspl],-1,"Игрок отказался от предложения");
			pTemp[playerid][pShowPassact] = -1;
		}
		if(pTemp[playerid][pShowPassact1] == playerid)
		{
			SendClientMessage(playerid,-1,"Вы отказались от предложения");
			SendClientMessage(pTemp[playerid][pShowPasspl1],-1,"Игрок отказался от предложения");
			pTemp[playerid][pShowPassact1] = -1;
		}
		if(pTemp[playerid][pInviteSubLeader] == playerid)
		{
			SendClientMessage(playerid,-1,"Вы отказались от предложения");
			SendClientMessage(pTemp[playerid][pInviteSubLeader1],-1,"Игрок отказался от предложения");
			pTemp[playerid][pInviteSubLeader] = -1;
			pTemp[pTemp[playerid][pInviteSubLeader1]][pInviteLeader1] = -1;
		}
		if(pTemp[playerid][pOfferFraction1] == playerid)
		{
			SendClientMessage(playerid,-1,"Вы отказались от предложения");
			SendClientMessage(pTemp[playerid][pOfferFraction],-1,"Игрок отказался от предложения");
			pTemp[playerid][pOfferFraction1] = -1;
			pTemp[pTemp[playerid][pInviteSubLeader1]][pInviteInvite] = -1;
		}
		if(pTemp[playerid][pShowLicact] == playerid)
		{
			SendClientMessage(playerid,-1,"Вы отказались от предложения");
			SendClientMessage(pTemp[playerid][pShowLicpl],-1,"Игрок отказался от предложения");
			pTemp[playerid][pShowLicact] = -1;
		}
		if(playerid == pTemp[playerid][pSellHouseOffee])
		{
			new offerid = pTemp[playerid][pSellHouseOffer];
			SendClientMessage(playerid,CWHITE,"» Вы отказались от покупки дома");
			SendClientMessage(offerid,CWHITE,"» Покупатель отказался покупать дом");
			pTemp[offerid][pSellHouseOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellHouseOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellHouseOffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellHousePrice] = 0;
			pTemp[playerid][pSellHouseID] = 0;
		}
		if(pTemp[playerid][pSellBusinessOffee] == playerid)
		{
			new offerid = pTemp[playerid][pSellBusinessOffer];
			SendClientMessage(playerid,CWHITE,"» Вы отказались от покупки бизнеса");
			SendClientMessage(offerid,CWHITE,"» Покупатель отказался покупать бизнес");
			pTemp[offerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellBusinessOffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellBusinessPrice] = 0;
			pTemp[playerid][pSellBusinessID] = 0;
		}
		else if(pTemp[playerid][pSellCarOffee] == playerid)
		{
			new offerid = pTemp[playerid][pSellCarOffer];
			SendClientMessage(playerid,CWHITE,"» Вы отказались от покупки т/с");
			SendClientMessage(offerid,CWHITE,"» Покупатель отказался покупать т/с");
			pTemp[offerid][pSellCarOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellCarOffer] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellCarOffee] = INVALID_PLAYER_ID;
			pTemp[playerid][pSellCarPrice] = 0;
			pTemp[playerid][pSellCarID] = 0;
		}
		if(GetPVarInt(playerid,"repairoffee") == playerid && GetPVarInt(playerid,"repairoffer") != playerid)
		{
			new offer = GetPVarInt(playerid,"repairoffer");
			if(GetPVarInt(offer,"repairoffee") == playerid)
			{
				SetPVarInt(playerid,"repairoffee",-1);
				SetPVarInt(playerid,"repairoffer",-1);
				SetPVarInt(playerid,"repairprice",0);
				SetPVarInt(offer,"repairoffee",0);
				SendClientMessage(playerid,CBLUE,"Вы отказались от ремонта");
				SendClientMessage(offer,CBLUE,"Клиент отказался от ремонта");
			}

		}
		if(GetPVarInt(playerid, "drugoffee") == playerid && GetPVarInt(playerid,"drugoffer") != playerid)
		{
			new offer = GetPVarInt(playerid,"drugoffer");
			if(GetPVarInt(offer,"drugoffee") == playerid)
			{
				SetPVarInt(playerid,"drugoffee",-1);
				SetPVarInt(playerid,"drugoffer",-1);
				SetPVarInt(playerid,"drugprice",0);
				SetPVarInt(offer,"drugoffee",0);
				SendClientMessage(playerid,CBLUE,"Вы отказались от наркотиков");
				SendClientMessage(offer,CBLUE,"Клиент отказался от наркотиков");
			}
		}
		if(GetPVarInt(playerid, "gzoffee") == playerid && GetPVarInt(playerid,"gzoffer") != playerid)
		{
			new offer = GetPVarInt(playerid,"gzoffer");
			if(GetPVarInt(offer,"gzoffee") == playerid)
			{
				SetPVarInt(playerid,"gzoffee",-1);
				SetPVarInt(playerid,"gzoffer",-1);
				SetPVarInt(playerid,"gzprice",0);
				SetPVarInt(offer,"gzoffee",0);
				SendClientMessage(playerid,CBLUE,"Вы отказались от покупки территории");
				SendClientMessage(offer,CBLUE,"Клиент отказался от покупки территории");
			}
		}
		if(GetPVarInt(playerid,"gunoffee") == playerid && GetPVarInt(playerid,"gunoffer") != playerid)
		{
			new offer = GetPVarInt(playerid,"gunoffer");
			if(GetPVarInt(offer,"gunoffee") == playerid)
			{
				SetPVarInt(playerid,"gunoffee",-1);
				SetPVarInt(playerid,"gunoffer",-1);
				SetPVarInt(playerid,"gunprice",0);
				SetPVarInt(offer,"gunoffee",0);
				SendClientMessage(playerid,CBLUE,"Вы отказались от покупки оружия");
				SendClientMessage(offer,CBLUE,"Клиент отказался от покупки оружия");
			}
		}
		if(pTemp[playerid][pSettleHouseOffee] == playerid)
		{
			new offer = pTemp[playerid][pSettleHouseOffer];
			pTemp[playerid][pSettleHouseOffee] = INVALID_PLAYER_ID;
			SendClientMessage(playerid,CBLUE,"Вы отказались от жилья");
			SendClientMessage(offer,CBLUE,"Клиент отказался от заселения в Ваш дом");
		}
	}
	if (newkeys & KEY_ACTION)
	{
		if(pTemp[playerid][pSellCarSelect])
		{
			pTemp[playerid][pOff]++;
			pTemp[playerid][pSellCarSelect] = false;
			new carclass = GetPVarInt(playerid,"sellcarClass");
			DeletePVar(playerid,"sellcarID");
			DeletePVar(playerid,"sellcarClass");
			TogglePlayerControllable(playerid,1);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerTextDrawDestroy(playerid,pTemp[playerid][pSellCarText]);
			SetCameraBehindPlayer(playerid);
			pTemp[playerid][pJustTP] = true;
			switch(carclass)
			{
			case 0: SetPlayerPos(playerid,555.1915,-1293.4724,17.2482);
			case 1: SetPlayerPos(playerid,-1955.4077,296.6946,35.4688);
			case 2: SetPlayerPos(playerid,1658.9636,2198.3733,10.8203);
			case 3: SetPlayerPos(playerid,2131.2488,-1149.5587,24.2475);
			}
		}
	}
	if (newkeys & KEY_WALK)
	{
		if(pTemp[playerid][pIsInHouse])
		{
			new houseid = pTemp[playerid][pSelectedHouseID];
			if(gHouses[houseid][houseImprove][0])
			{
				new hint = gHouses[houseid][houseHint];
				new Float:x, Float:y, Float:z;
				x = gHints[hint][hintX];
				y = gHints[hint][hintY];
				z = gHints[hint][hintZ];
				if(IsPlayerInRangeOfPoint(playerid,2.0,x,y,z))
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					pTemp[playerid][pJustTP] = true;
					SetPlayerPos(playerid,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ]);
					SetPlayerFacingAngle(playerid,gHouses[houseid][houseR]);
					pTemp[playerid][pIsInHouse] = false;
				}
			}
		}
		/*for(new i;i<8;i++)
		{
			if(IsPlayerInDynamicArea(playerid,gAreas[arHotelEnters][i]))
			{
				pTemp[playerid][pOff]++;
				SetPlayerPos(playerid,gHotelRoomExits[i][0],gHotelRoomExits[i][1],gHotelRoomExits[i][2]);
				SetPlayerFacingAngle(playerid,gHotelRoomExits[i][3]);
				SetPlayerVirtualWorld(playerid, i+1);
			}
			if(IsPlayerInDynamicArea(playerid,gAreas[arHotelExits][i]))
			{
				new hotelid = GetPVarInt(playerid,"selectedhotel");
				pTemp[playerid][pOff]++;
				SetPlayerPos(playerid,gHotelRoomEnters[i][0],gHotelRoomEnters[i][1],gHotelRoomEnters[i][2]);
				SetPlayerFacingAngle(playerid,gHotelRoomEnters[i][3]);
				SetPlayerVirtualWorld(playerid, hotelid);
			}
		}*/
	}
	if (newkeys & KEY_SECONDARY_ATTACK)
	{
		if(pTemp[playerid][pSelectStoreGun])
		{
			new Float:x, Float:y, Float:z, Float:x1, Float:y1, Float:z1;
			x = GetPVarFloat(playerid,"oldcx");
			y = GetPVarFloat(playerid,"oldcy");
			z = GetPVarFloat(playerid,"oldcz");
			GetPlayerCameraPos(playerid,x1,y1,z1);
			InterpolateCameraPos(playerid,x1,y1,z1,x,y,z,700,CAMERA_MOVE);
			SetTimerEx("SetCameraBehindPlayerDelay",1000,false,"i",playerid);
			//SetCameraBehindPlayer(playerid);
			pTemp[playerid][pSelectStoreGun] = false;
			pTemp[playerid][pStoreGun] = 0;
			GameTextForPlayer(playerid," ",100,3);
			TogglePlayerControllable(playerid,1);
		}
		if(pTemp[playerid][pChangingSkin])
		{
			pTemp[playerid][pChangingSkin] = false;
			SetPlayerSkin(playerid,pData[playerid][pSkin]);
			SetPlayerVirtualWorld(playerid,1);
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid,1);
			TogglePlayerDynamicCP(playerid, gCheckpoints[cpBinco], 1);
			pTemp[playerid][pJustTP] = true;
			GameTextForPlayer(playerid,"_",200,3);
		}
	}
	if (newkeys & KEY_WALK)
	{
		for(new i;i<ATM_COUNT;i++)
		{
			if(IsPlayerInDynamicArea(playerid,gATMArea[i]))
			{
				ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
				pTemp[playerid][pOff]++;
				ShowPlayerDialog(playerid, dBankMenuATM, 2, "{ffcf00}Банкомат", "1 » Баланс банковского счета\n2 » Снять деньги с банковского счета\n3 » Положить на банковский счет\n4 » Пополнить баланс мобильного телефона", "Принять", "Отмена");
			}
		}
	}
	if (newkeys & KEY_CTRL_BACK)
	{
		//new houseid = pData[playerid][pHouse]-1;
		/*if(IsGang(pData[playerid][pFraction]) && IsPlayerInDynamicArea(playerid,gAreas[arArmyAmmo]))
		{
			if(GetPVarInt(playerid,"carrygun")) return SendClientMessage(playerid,CWHITE,"» У вас уже есть ящик с оружием");
			new armyid = GetPlayerVirtualWorld(playerid);
			if(gArmyWarehouse[armyid][0] < 100 && gArmyWarehouse[armyid][0] < 100) return SendClientMessage(playerid,CWHITE,"» Недостаточно боеприпасов на складе");
			if(gArmyWarehouse[armyid][0] >= 100)
			{
				gArmyWarehouse[armyid][0] -= 100;
				SetPVarInt(playerid,"carrygun",100);
			}
			if(gArmyWarehouse[armyid][1] >= 100)
			{
				gArmyWarehouse[armyid][1] -= 100;
				SetPVarInt(playerid,"carryammo",100);
			}
			SetPlayerFacingAngle(playerid,270.0);
			ClearAnimations(playerid);
			ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
			SetTimerEx("CarryDelay",1000,false,"i",playerid);
			SetPlayerAttachedObject(playerid,0,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
		}*/
		/*if((pData[playerid][pFraction] == 8) && IsPlayerInDynamicArea(playerid,gAreas[arGunWorkUnload]))
		{
			if(gGunWorkWH[2] < 500) return SendClientMessage(playerid,CWHITE,"» На складе недостаточно единиц оружия");
			if(!GetPVarInt(playerid,"carrygun"))
			{
				gGunWorkWH[2] -= 500;
				SetPlayerFacingAngle(playerid,270.0);
				ClearAnimations(playerid);
				ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
				SetTimerEx("CarryDelay",1000,false,"i",playerid);
				SetPlayerAttachedObject(playerid,0,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
				SetPVarInt(playerid,"carrygun",500);
			}
		}
		if((pData[playerid][pFraction] == 8) && IsPlayerInDynamicArea(playerid,gAreas[arGunWorkUnload1]))
		{
			if(gGunWorkWH[3] < 500) return SendClientMessage(playerid,CWHITE,"» На складе недостаточно патронов");
			if(!GetPVarInt(playerid,"carryammo"))
			{
				gGunWorkWH[3] -= 500;
				SetPlayerFacingAngle(playerid,270.0);
				ClearAnimations(playerid);
				ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
				SetTimerEx("CarryDelay",1000,false,"i",playerid);
				SetPlayerAttachedObject(playerid,0,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
				SetPVarInt(playerid,"carryammo",500);
			}
		}*/
		/*if(IsPlayerInDynamicArea(playerid,gAreas[arCristmas][5]) ||
				IsPlayerInDynamicArea(playerid,gAreas[arCristmas][6]) ||
				IsPlayerInDynamicArea(playerid,gAreas[arCristmas][7]) ||
				IsPlayerInDynamicArea(playerid,gAreas[arCristmas][8]) ||
				IsPlayerInDynamicArea(playerid,gAreas[arCristmas][9]))
		{
			ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.1,0,0,0,0,0,1);
			if(pTemp[playerid][pHatOn] == false) SetTimerEx("HatOn",3000,false,"i",playerid);
		}*/
	}
	if (newkeys & KEY_FIRE)
	{
		new pstate = GetPlayerState(playerid);
		if(pstate == PLAYER_STATE_DRIVER)
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			if(vehicleid) ToggleLamp(vehicleid);
		}
	}
	return 1;
}

forward HatOn(playerid);
public HatOn(playerid)
{
	SetPlayerAttachedObject(playerid,2,19064,2,0.15,0.00,0.00,70.0,94.0,30.0,1.20,1.20,1.20);
	pTemp[playerid][pHatOn] = true;
	return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	if(!success)
	{
		printf("[РКОН ВЗЛОМ] FAILED RCON LOGIN BY IP %s USING PASSWORD %s", ip, password);
		new banip[16];
		for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
		{
		    i = cvector_get(PLAYERS, idx);
			GetPlayerIp(i, banip, sizeof(banip));
			if(!strcmp(ip, banip, true))
			{
				SendClientMessage(i, 0xFFFFFFFF, "Не верный пароль!");
				Ban(i);
				break;
			}
		}
	}
	return 1;
}
CheckFireArm(weaponid) {
	switch(weaponid) {
	case 16..39, 41..43: return 1;
	default: return 0;
	}
	return 0;
}
stock OnUpdate(playerid)
{
	if(IsKicked(playerid)) return 0;
	if(IsPlayerNPC(playerid)) return 0;
	if(GetPlayerWeapon(playerid) && !GetPlayerAmmo(playerid)) SetPlayerArmedWeapon(playerid, 0);
	new svehicleid = GetPlayerVehicleID(playerid);
	new mess[135]; format(mess,sizeof(mess),"%s был кикнут по подозрению в телепорте в машину",pData[playerid][pNickname]);
	if(svehicleid == 0) pTemp[playerid][WVehicle] = 0; else
	{
		if(pTemp[playerid][WVehicle] == 0)//enter
		{
			if(pTemp[playerid][NewWVehicle] != svehicleid)
			{
				AdminChat(CORANGE,mess);
				SendClientMessage(playerid,CORANGE,"Вы были кинуты по подозрению в читерстве (#111)");
				SetVehicleVelocity(svehicleid, 0.0, 0.0, 0.0);
				NewKick(playerid);
				return 0;
			}
			else
			{
				if(GetTickCount()-pTemp[playerid][EnterWVehicleTime] < 1500)
				{
					AdminChat(CORANGE,mess);
					SendClientMessage(playerid,CORANGE,"Вы были кинуты по подозрению в читерстве (#111)");
					SetVehicleVelocity(svehicleid, 0.0, 0.0, 0.0);
					NewKick(playerid);
					return 0;
				}
				else
				{
					pTemp[playerid][WVehicle] = svehicleid;
					pTemp[playerid][NewWVehicle] = 0;
					pTemp[playerid][EnterWVehicleTime] = GetTickCount();
					if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) WVehicleDriver[svehicleid] = playerid;
				}
			}
		}
		else if(pTemp[playerid][WVehicle] != svehicleid)
		{
			AdminChat(CORANGE,mess);
			SendClientMessage(playerid,CORANGE,"Вы были кинуты по подозрению в читерстве (#111)");
			SetVehicleVelocity(svehicleid, 0.0, 0.0, 0.0);
			NewKick(playerid);
			return 0;
		}
		if(GetPlayerState(playerid)==PLAYER_STATE_DRIVER && WVehicleDriver[svehicleid] != playerid)
		{
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			SetPlayerPos(playerid, x, y, z);
		}
	}
	if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK)
	{
		if(!IsKicked(playerid))
		{
			SendClientMessage(playerid,CWHITE,"» Вы были забанены на 30 дней за использование JetPack");
			ServerBan(-1,playerid,30,"JetPack");
			NewKick(playerid);
		}
	}

	new index = GetPlayerAnimationIndex(playerid);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(pData[playerid][pJob] == 2 && IsTrailerAttachedToVehicle(vehicleid))
		{
			new trailerid = GetVehicleTrailer(vehicleid);
			if(pTemp[playerid][pTruckWagonID] != trailerid)
			{
				DetachTrailerFromVehicle(vehicleid);
				new Float:x, Float:y, Float:z;
				GetVehiclePos(vehicleid,x,y,z);
				y -= 1.0;
				SetVehiclePos(vehicleid,x,y,z);
			}
			else if(pTemp[playerid][pTruckWeight] < GetPVarInt(playerid,"truckamount"))
			{
				DetachTrailerFromVehicle(vehicleid);
				SendClientMessage(playerid,CWHITE,"Фура еще не загружена полностью");
				new Float:x, Float:y, Float:z;
				GetVehiclePos(vehicleid,x,y,z);
				y -= 1.0;
				SetVehiclePos(vehicleid,x,y,z);
			}
			else if(!GetPVarInt(playerid,"informed"))
			{
				pTemp[playerid][pTruckWagonTime] = 60;
				SendClientMessage(playerid,CWHITE,"Отлично. Теперь у Вас есть 1 минута, чтобы покинуть место загрузки.");
				SendClientMessage(playerid,CWHITE,"Иначе заказ будет аннулирован");
				SetPVarInt(playerid,"informed",1);
			}
		}
	}
	else if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		new newkeys,ud,lr;
		GetPlayerKeys(playerid,newkeys,ud,lr);
		new animlib[30], animname[30];
		GetAnimationName(index, animlib, sizeof(animlib), animname, sizeof(animname));
		if(!IsKicked(playerid) && strcmp(animlib, "PED", true) == 0 && strcmp(animname, "RUN_PLAYER", true) == 0 && GetPlayerSkin(playerid) != 0)
		{
			SendClientMessage(playerid,CBADINFO, "Чтобы играть на нашем сервере вам необходимо удалить читы");
			NewKick(playerid);
		}
		if((ud || lr) && pTemp[playerid][pControllable] && pTemp[playerid][pCuffee] == playerid && (!(newkeys & KEY_WALK) || newkeys & KEY_SPRINT))
		{
			if(GetPVarInt(playerid,"naruch") == 0)
			{
				ApplyAnimation(playerid,"FAT","IDLE_tired",3.0,1,0,0,0,3000);
				SendClientMessage(playerid,CWHITE,"» Вы не можете бегать в наручниках. Зажмите клавишу ходьбы и идите шагом.");
				SetPVarInt(playerid,"naruch",1);
			}
			else
			{
				ApplyAnimation(playerid,"FAT","IDLE_tired",3.0,1,0,0,0,3000);
			}
		}
		if(pData[playerid][pFraction] < 3 || pData[playerid][pFraction] > 9 && pTemp[playerid][pControllable])
		{
			if(index >= 1136 && index <= 1138 || index == 504 || index == 505 || index == 1141)
			{
				for(new i;i<sizeof(gAreas[arGreenZone]);i++)
				{
					if(IsPlayerInDynamicArea(playerid,gAreas[arGreenZone][i]))
					{
						ApplyAnimation(playerid,"FAT","IDLE_tired",3.0,1,0,0,1,3000);
						SetTimerEx("ClearAnimationsDelay",3000,false,"i",playerid);
					}
				}
			}
		}
	}
	return 1;
}

public OnPlayerUpdate(playerid)
{
    new s = GetPVarInt(playerid,"GameStol");
	if(IsPlayerNearStol(playerid) != -1 && s == -1) GameTextForPlayer(playerid,"~g~PRESS ENTER",1300,4);
	if(GetPVarInt(playerid,"GameStol") != -1) SelectTextDraw(playerid,0x4169e1FF);
	if(GetPVarInt(playerid,"GangCasino") == 1) SelectTextDraw(playerid,0x4169e1FF);

    new Keys,uds,lrs;
    GetPlayerKeys(playerid,Keys,uds,lrs);
    if(lrs == KEY_LEFT)
    {
		if(pTemp[playerid][pChoosingSkin] == true) //Выбор скина
		{
			printf("Выбор скина 1");
			new skinid = GetPVarInt(playerid,"skinid");
			new cat = 0;
			if(pData[playerid][pSex] == 2) cat = 1;
			if(skinid >= 6) skinid = 0;
			else skinid++;
			SetPVarInt(playerid,"skinid",skinid);
			SetPlayerSkin(playerid,gRegSkins[cat][skinid]);
		}
		if(pTemp[playerid][pChoosingGlasses] == true)
		{
		    new skinid = GetPVarInt(playerid,"glassesid");
		    if(skinid <= 19006) skinid = 19035;
		    else skinid--;
		    SetPVarInt(playerid,"glassesid",skinid);
		    DestroyPlayerObject(playerid, pTemp[playerid][pObjectGlasses]);
			pTemp[playerid][pObjectGlasses] = CreatePlayerObject(playerid, skinid, 2508.45, -1698.27, 875.74, 0.00, 0.00, 123.43);
		}
		if(pTemp[playerid][pChoosingHats] == true)
		{
		    new skinid = GetPVarInt(playerid,"hatsid");
		    if(skinid <= 18924) skinid = 18954;
		    else skinid--;
		    SetPVarInt(playerid,"hatsid",skinid);
		    DestroyPlayerObject(playerid, pTemp[playerid][pObjectGlasses]);
			pTemp[playerid][pObjectGlasses] = CreatePlayerObject(playerid, skinid, 2507.37, -1699.05, 875.91, -18.00, -88.00, 0.00);
		}


		if(pTemp[playerid][pChoosingMebel] == true)
		{
		    new skinid = pTemp[playerid][pObjectMebel];
	  		if(skinid <= 0) skinid = 82;
  			else skinid--;
			pTemp[playerid][pObjectMebel] = skinid;
		    DestroyPlayerObject(playerid, pTemp[playerid][pObjectGlasses]);
			pTemp[playerid][pObjectGlasses] = CreatePlayerObject(playerid, gMebel[skinid], -210.0477, -186.3223, 2000.2397, 0.0000, 0.0000, 91.3747);
		}

		if(pTemp[playerid][pChoosingElectro] == true)
		{
		    new skinid = pTemp[playerid][pObjectMebel];
	  		if(skinid <= 0) skinid = 20;
  			else skinid--;
			pTemp[playerid][pObjectMebel] = skinid;
		    DestroyPlayerObject(playerid, pTemp[playerid][pObjectGlasses]);
			pTemp[playerid][pObjectGlasses] = CreatePlayerObject(playerid, gElectro[skinid], -233.6858, -521.3494, 2000.6501, 0.0000, 0.0000, 44.2655);
		}

	}
    else if(lrs == KEY_RIGHT)
	{
	    if(pTemp[playerid][pChoosingSkin] == true) //Выбор скинаd
		{
		    printf("Выбор скина 2");
			new skinid = GetPVarInt(playerid,"skinid");
			new cat = 0;
			if(pData[playerid][pSex] == 2) cat = 1;
			if(skinid <= 0) skinid = 3;
			else skinid--;
			SetPVarInt(playerid,"skinid",skinid);
			SetPlayerSkin(playerid,gRegSkins[cat][skinid]);
		}
		if(pTemp[playerid][pChoosingGlasses] == true)
		{
		    new skinid = GetPVarInt(playerid,"glassesid");
		    if(skinid >= 19035) skinid = 19006;
		    else skinid++;
		    SetPVarInt(playerid,"glassesid",skinid);
		    DestroyPlayerObject(playerid, pTemp[playerid][pObjectGlasses]);
			pTemp[playerid][pObjectGlasses] = CreatePlayerObject(playerid, skinid, 2508.45, -1698.27, 875.74, 0.00, 0.00, 123.43);
		}
		if(pTemp[playerid][pChoosingHats] == true)
		{
		    new skinid = GetPVarInt(playerid,"hatsid");
		    if(skinid >= 18954) skinid = 18924;
		    else skinid++;
		    SetPVarInt(playerid,"hatsid",skinid);
		    DestroyPlayerObject(playerid, pTemp[playerid][pObjectGlasses]);
			pTemp[playerid][pObjectGlasses] = CreatePlayerObject(playerid, skinid, 2507.37, -1699.05, 875.91, -18.00, -88.00, 0.00);
		}
		if(pTemp[playerid][pChoosingMebel] == true)
		{
		    new skinid = pTemp[playerid][pObjectMebel];
  			if(skinid >= 82) skinid = 0;
		    else skinid++;
		    pTemp[playerid][pObjectMebel] = skinid;
		    DestroyPlayerObject(playerid, pTemp[playerid][pObjectGlasses]);
			pTemp[playerid][pObjectGlasses] = CreatePlayerObject(playerid, gMebel[skinid], -210.0477, -186.3223, 2000.2397, 0.0000, 0.0000, 91.3747);
		}
		if(pTemp[playerid][pChoosingElectro] == true)
		{
		    new skinid = pTemp[playerid][pObjectMebel];
  			if(skinid >= 20) skinid = 0;
		    else skinid++;
		    pTemp[playerid][pObjectMebel] = skinid;
		    DestroyPlayerObject(playerid, pTemp[playerid][pObjectGlasses]);
			pTemp[playerid][pObjectGlasses] = CreatePlayerObject(playerid, gElectro[skinid], -233.6858, -521.3494, 2000.6501, 0.0000, 0.0000, 44.2655);
		}
	}

	SetPVarInt(playerid,"AFK_Tick", GetPVarInt(playerid,"AFK_Tick") + 1);

	if(!pTemp[playerid][pAbletoGun] && !IsKicked(playerid))
	{
		new weapon, ammo;
		new weapname[32], weapname2[32];
		for (new i = 0; i < 13; i++)
		{
			GetPlayerWeaponData(playerid, i, weapon, ammo);
			if(weapon != 0 && weapon != 46 && weapon != 40 && weapon != 1 && ammo > 0)
			{
				if(gGuns[playerid][i] != weapon)
				{
					SendClientMessage(playerid,COLOR_LIGHTRED,"Вы были кикнуты по подозрению в чите на оружие.");
					GetWeaponName(weapon, weapname, 32);
					GetWeaponName(gGuns[playerid][i], weapname2, sizeof weapname);
					mes = "";
					f(mes, "» Античит: %s[%i] был кикнут по подозрению в чите на оружие (было: %s[%i], стало: %s[%i]).", pData[playerid][pNickname], playerid, weapname2, gAmmos[playerid][i], weapname, ammo);
					AdminChat(CORANGE,mes);
					NewKick(playerid);
					ResetPlayerWeaponsEx(playerid);
					return 1;
				}
			}
			if(ammo != gAmmos[playerid][i] && CheckFireArm(weapon)) {
				if(ammo < gAmmos[playerid][i]) {
					gAmmos[playerid][i] = ammo;
				}
				else if((weapon >= 16 && weapon <= 18) || (weapon >= 22 && weapon <= 39) || (weapon >= 41 && weapon <= 43)) {
                    SendClientMessage(playerid, COLOR_LIGHTRED, "Вы были кикнуты по подозрению в чите на патроны.");
                    GetWeaponName(weapon, weapname, sizeof weapname);
                    format(mes, sizeof mes, "Античит: %s[%i] был кикнут по подозрению в чите на патроны (%s, было: %i, стало: %i).", pData[playerid][pNickname], playerid, weapname, gAmmos[playerid][i], ammo);
                    AdminChat(CORANGE, mes);
                    NewKick(playerid);
                    ResetPlayerWeaponsEx(playerid);
                    return 1;
				}
			}
		}
	}
	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	if(!(pData[forplayerid][pSettings] & setShowNickname)) ShowPlayerNameTagForPlayer(forplayerid,playerid,0);
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
	UpdateVehiclePos(vehicleid, 0);
	if(gVehicles[vehicleid-1][vLock]) SetVehicleParamsForPlayer(vehicleid,forplayerid,0,1);
	else SetVehicleParamsForPlayer(vehicleid,forplayerid,0,0);
	gVehicles[vehicleid - 1][vCheckDelay] = true;
	GetVehiclePos(vehicleid, gVehicles[vehicleid - 1][vX], gVehicles[vehicleid - 1][vY], gVehicles[vehicleid - 1][vZ]);
	GetVehicleZAngle(vehicleid, gVehicles[vehicleid - 1][vA]);
	gVehicles[vehicleid - 1][vCheckDelay] = true;
	return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	printf("OnDialogResponse(%d, %d, %d, %d, %s)",playerid, dialogid, response, listitem, inputtext);
	if(GetPVarInt(playerid,"USEDIALOGID") != dialogid)
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "Вы кикнуты по подозрению в читерстве {F81414}(#0444)");
		NewKick(playerid);
		return true;
	}
	if(pTemp[playerid][pDialog] != true)
	{
	    SendClientMessage(playerid, COLOR_LIGHTRED, "Вы кикнуты по подозрению в читерстве {F81414}(DialogHider)");
	    NewKick(playerid);
	    return true;
	}
	else pTemp[playerid][pDialog] = false;

	strreplace(inputtext, '%', '#');
	if(strlen(inputtext) && (strfind(inputtext,"`") != -1 ||
				strfind(inputtext,"'") != -1 ||
				strfind(inputtext,"=") != -1)) return SendClientMessage(playerid,-1,"Ошибка. Вы использовали запрещенные символы.");
	switch(dialogid)
	{

	case EXIT_DIALOG:
	{
		if(!response) return 1;
		new stolid = GetPVarInt(playerid,"GameStol");
		TextDrawHideForPlayer(playerid,KostiBox[stolid]);
		TextDrawHideForPlayer(playerid,TableName[stolid]);
		TextDrawHideForPlayer(playerid,KostiInfo[stolid]);
		TextDrawHideForPlayer(playerid,KostiGameInfo[stolid]);
		TextDrawHideForPlayer(playerid,KostiKeyExit);
		TextDrawHideForPlayer(playerid,KostiKeyDone);
		TextDrawHideForPlayer(playerid,KostiKeyStavka);
		SetPVarInt(playerid,"GameStol",-1);
		SetPVarInt(playerid,"StolReg",-1);
		TogglePlayerControllable(playerid,1);
		CancelSelectTextDraw(playerid);
		DelName(playerid,stolid);
  		SetPVarInt(playerid,"Ochki",-1);
  		SetPVarInt(playerid,"RegCasino", 0);
	}
	case DIALOG_CRP:
	{
		new cr = GetPVarInt(playerid,"Crupe");
		if(!response){
			if(cr == 0) SendClientMessage(playerid,-1,"Ошибочка, ты не работаешь Крупье!");
			else SetPVarInt(playerid,"Crupe",0);
			SetPlayerSkin(playerid,pTemp[playerid][pCSkin]);
			return 1;
		}
		if(cr == 1) return SendClientMessage(playerid,-1,"Ошибочка, ты уже работаешь Крупье!");
		SetPVarInt(playerid,"Crupe",1);
		SendClientMessage(playerid,-1,"Вы начали работу Крупье.");
  		SetPlayerSkinNA(playerid,189);
	}
	case dMafiaGang:
	{
	    if(!response) return 1;
	    new stavka = strval(inputtext);
	    new i = GetPVarInt(playerid, "MafiaCPNumber");
	    if(pData[playerid][pMaterialN] <= 0) return 1;
        if(pData[playerid][pMaterialN] - stavka < 0) return SendClientMessage(playerid,-1,"Введите другое количество");
	    gMafiaInfo[i][mMaterial] += stavka;
	    pData[playerid][pMaterialN] -= stavka;
	    UpdatePlayerData(playerid, "materialn", pData[playerid][pMaterialN]);
	    TransferMoney(-1, playerid, stavka*gMafiaValue[i], "mafias");
	    mes = "";
	    f(mes, "UPDATE `mafia` SET `materials` = '%d' WHERE id = '%d'", gMafiaInfo[i][mMaterial], i+1);
		sql_query(zConn, mes); mes = "";
		DeletePVar(playerid, "MafiaCPNumber");
	}
	case dMafiaGang3:
	{
	    if(!response) return 1;
	    if(GetPVarInt(playerid, "loadyash")) return SendClientMessage(playerid,-1,"Вы уже взяли ящик");
	    new i = GetPVarInt(playerid, "MafiaCPNumber");

		if(gMafiaInfo[i][mMaterial] + gGunAmount[listitem]+10 < gMafiaInfo[i][mMaterial]) return SendClientMessage(playerid,-1,"Введите другое количество");
	    gMafiaInfo[i][mMaterial] -= gGunAmount[listitem]+10;

	    SetPlayerAttachedObject(playerid, 5 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
		SetPlayerSpecialAction(playerid, 25);
		SetPVarInt(playerid, "loadyash", 1);
		SetPVarInt(playerid, "materialsnn", gGunAmount[listitem]+10);

	}
	case dMafiaGang2:
	{
	    if(!response) return true;
		switch(listitem)
		{
  			case 0: ShowPlayerDialog(playerid, dMafiaGang, DIALOG_STYLE_INPUT, "{ffcf00}Продажа заготовок", "{FFFFFF}Введите количество заготовок материалов", "Принять", "Отмена");
	    	case 1:
			{
			    mes = "";
				for(new i; i < 7; i++)
				{
				    f(mes, "%s%s -> купить %d единиц\n", mes, gGunName[i], gGunAmount[i]+10);
				}
				ShowPlayerDialog(playerid, dMafiaGang3, 2, "{ffcf00}Закупка оружия", mes, "Да", "Нет");
			}
		}
	}
	case dMafiaMenu:
 	{
  		if(!response) return true;
		switch(listitem)
		{
  			case 0: ShowPlayerDialog(playerid, dMafiaTake, DIALOG_STYLE_INPUT, "{ffcf00}Склад Мафии", "{FFFFFF}Введите количество заготовок материалов", "Принять", "Отмена");
	    	case 1: ShowPlayerDialog(playerid, dMafiaPut, DIALOG_STYLE_MSGBOX, "{ffcf00}Склад Мафии", "{FFFFFF}Вы уверены, что хотите положить оружие на склад", "Да", "Нет");
		}
   	}
   	case dMafiaPut:
   	{
   	    //new gGunAmount[7] = {3,6,9,8,10,11,10}; //SD,Deagle,MP5,Shotgun,M4,AK47,Rifle,Sniper Rifle
		//new gGunID[7] = {22,23,24,25,29,30,31};
   	    if(!response) return true;
   	    new structur[12] = {0,0,0,0,0,0,0};
   	    new i = GetPVarInt(playerid, "MafiaCPNumber");
   	    for(new l1;l1<12;l1++)
		{
			new weapid,ammot;
			GetPlayerWeaponData(playerid,l1,weapid,ammot);
			switch(weapid)
			{
			    case 22: structur[0] = gGunAmount[0]+10;
			    case 23: structur[1] = gGunAmount[1]+10;
			    case 24: structur[2] = gGunAmount[2]+10;
			    case 25: structur[3] = gGunAmount[3]+10;
			    case 29: structur[4] = gGunAmount[4]+10;
			    case 30: structur[5] = gGunAmount[5]+10;
			    case 31: structur[6] = gGunAmount[6]+10;
			}
		}
		ResetPlayerWeapons(playerid);
		mes = "";
   	    for(new l; l < 7; l++)
   	    {
	  		gMafiaInfo[i][mGun][l] += structur[l];
	  		gMafiaInfo[i][mMaterial] += gMafiaInfo[i][mGun][l];
	   	    new data[120];
			for(new s;s<7;s++)
			{
				if(!s) format(data,sizeof(data),"%d",gMafiaInfo[i][mGun][s]);
				else format(data,sizeof(data),"%s|%d",data,gMafiaInfo[i][mGun][s]);
			}
			format(mes,sizeof(mes),"UPDATE `mafia` SET `guns` = '%s' WHERE id = '%d'",data,i+1);
			sql_query(zConn, mes); mes = "";
		}
		DeletePVar(playerid, "MafiaCPNumber");
   	}
   	case dMafiaTake:
   	{
    	if(!response) return 1;
	    new stavka = strval(inputtext);
	    new i = GetPVarInt(playerid, "MafiaCPNumber");
     	if(stavka < 0) return 1;
	    if(gMafiaInfo[i][mMaterial] - stavka < 0) return SendClientMessage(playerid,-1,"Введите другое количество");
	    gMafiaInfo[i][mMaterial] -= stavka;
	    pData[playerid][pGunAmount] += stavka;
	    mes = "";
	    f(mes, "UPDATE `mafia` SET `materials` = '%d' WHERE id = '%d'", gMafiaInfo[i][mMaterial], i+1);
		sql_query(zConn, mes); mes = "";
	    UpdatePlayerData(playerid, "gunamount", pData[playerid][pGunAmount]);
	    SendMes(playerid, COLOR_BLUE, "Вы взяли со склада заготовки материалов (+%i)", stavka);
		f(mes, "{3399FF}%s [id %d] взял(а) со склада мафии {66CC00}%i {3399FF}заготовок материалов", pData[playerid][pNickname], playerid, stavka);
		SendFMes(pData[playerid][pFraction], -1, mes);
		DeletePVar(playerid, "MafiaCPNumber");
   	}
	case DIALOG_PAY1:
	{
	    if(!response) return 1;
	    new stavka = strval(inputtext);
		if(stavka < 0 || stavka > 1000000) return SendClientMessage(playerid,-1,"Не правильная стоимость");
	    if(GetPlayerMoneyEx(playerid) < stavka) return SendClientMessage(playerid,-1,"У вас слишком мало денег");
		TransferMoney(playerid, -1, stavka, "balance");
		Balance[playerid] += stavka;
		GangUpdateBalanceTextDraw(playerid, Balance[playerid]);
	}
	case DIALOG_PAY:
	{
		new s = GetPVarInt(playerid,"GameStol");
		if(StolInfo[s][Stavka] != 0) return SendClientMessage(playerid,-1,"Ставка уже была установлена! Изменять можно только в след.раунде!");
		new stavka = strval(inputtext);
		if(stavka < MIN_STAVKA) return SendClientMessage(playerid,-1,"Введная ставка слишком мала для начала игры!");
		if(stavka > MAX_STAVKA) return SendClientMessage(playerid,-1,"Введная ставка привышает ценновую политику штата!");
		if(StolInfo[s][GameStart] != 0) return SendClientMessage(playerid,-1,"Вы не можете изменить ставку в процессе игры!");
		StolInfo[s][Stavka] = stavka;
		mes = "";
		format(mes,sizeof(mes),"Игровой стол %d\nСтавка: %d$",s+1, StolInfo[s][Stavka]);
		UpdateDynamic3DTextLabelText(StolCoorText[s], -1, mes);
		SendClientMessage(playerid,-1,"Ставка успешно установлена! Можете позвать игроков к столу!");
		mes = "";
		format(mes,sizeof(mes),"Bet: %d ~g~$~n~~w~Bank: 0 ~g~$~n~",stavka);
		TextDrawSetString(KostiGameInfo[s],mes);

	}

	case dLearn:
	{
		if(!response) return 1;
		switch(GetPVarInt(playerid, "learn"))
		{
			case 1:
			{
	    		SetPlayerCameraPos(playerid, 30.6143, 52.6836, 1201.5830);
				SetPlayerCameraLookAt(playerid, 31.5496, 53.0337, 1201.6230);
				if(GetPVarInt(playerid, "learnobject") == 1)
					DestroyObject(LearnObject[playerid]);//19353
				LearnObject[playerid] = CreatePlayerObject(playerid, 19353, 35.1051, 54.3846, 1202.5306-0.4, -0.3000, -0.2999, 179.8636);
				SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "", 0, 140, "Arial", 24, 0, -1, 0, 1);
    			switch(random(3))
				{
				    case 0: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Математический Анализ\n\nЭто — совокупность разделов математики, \nпосвящённых исследованию функций. \nВ более общей трактовке к анализу \nотносят и функциональный анализ вместе \nс теорией интеграла Лебега, комплексный анализ, \nизучающий функции, заданные на комплексной плоскости.", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 1: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Введение\n\nВысшая математика — курс обучения в средних \nи высших учебных заведениях. Высшая математика \nвключает: \nаналитическую геометрию, элементы высшей и линейной алгебр, \nдифференциальное и интегральное исчисления, дифференциальные уравнения, \nтеорию вероятностей и элементы математической статистики.", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 2: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Общая математика\n\nЭто -  раздел математики, изучающий алгебраические системы,\n такие как группы, кольца, поля, модули, решётки, \nа также отображения между такими структурами. \nПримерами алгебраических структур с бинарной операцией \n являются полугруппы, моноиды, квазигруппы.", 0, 140, "Arial", 24, 0, -1, 0, 1);
				}
				SetPVarInt(playerid,"learnobject",1);
				LearnTimer[playerid] = SetTimerEx("LearnUniver", 60000, true, "dd", playerid, 1);
			}
			case 2:
			{
			    SetPlayerCameraPos(playerid, 30.7062, 45.6051, 1201.6630);
				SetPlayerCameraLookAt(playerid, 31.7046, 45.6273, 1201.6577);

				if(GetPVarInt(playerid, "learnobject") == 1)
					DestroyObject(LearnObject[playerid]);
				LearnObject[playerid] = CreatePlayerObject(playerid, 19353, 35.0928, 45.3589, 1202.4010-0.4, -0.3000, -0.2999, 179.8636);
				SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "", 0, 140, "Arial", 24, 0, -1, 0, 1);
				switch(random(3))
				{
				    case 0: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Этимология\n\nСлово «информатика» образовано из \n«информ» от «информация» и «атика» от «автоматика». \nВ русском, английском, французском и \nнемецком языках в 1960-х годах была тенденция к замене термина словом, \nсвязанным со словом «информация».", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 1: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Введение\n\nИнформатика— наука о методах и \nпроцессах сбора, хранения, обработки, \nпередачи, анализа и оценки информации, обеспечивающих возможность \nеё использования. Она включает дисциплины, \nотносящиеся к обработке информации \nв вычислительных машинах и вычислительных сетях", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 2: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Теоретическая информатика\n\nТеоретическая информатика занимается \nтеорией формальных языков и автоматов, теориями \nвычислимости и сложности, теорией графов, криптологией, логикой, \nформальной семантикой и предлагает основы \nдля разработки Компиляторов языков программирования.", 0, 140, "Arial", 24, 0, -1, 0, 1);
				}
				SetPVarInt(playerid,"learnobject", 1);
				LearnTimer[playerid] = SetTimerEx("LearnUniver", 60000, true, "dd", playerid, 2);
			}
			case 3:
			{
			    SetPlayerCameraPos(playerid, 30.5128, 31.3466, 1201.6506);
				SetPlayerCameraLookAt(playerid, 31.4561, 31.6743, 1201.6654);

	    		if(GetPVarInt(playerid, "learnobject") == 1)
					DestroyObject(LearnObject[playerid]);
				LearnObject[playerid] = CreatePlayerObject(playerid, 19353, 35.0525, 32.9940, 1202.5638-0.4, -0.3000, -0.2999, 179.8636);
				SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "", 0, 140, "Arial", 24, 0, -1, 0, 1);
				switch(random(3))
				{
				    case 0: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Историография\n\nТермин историография имеет несколько значений. \nЭто наука о том, как пишется история, насколько правильно \nприменяется исторический метод и \nкак развивается историческое познание. \nТем же термином обозначают \nсовокупность исторических трудов.", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 1: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Введение\n\nИстория — область знаний, \nа также гуманитарная наука, \nзанимающаяся изучением человека в прошлом. \nЭто наука, изучающая всевозможные источники о прошлом для того, \nчтобы установить последовательность событий, \nисторический процесс, объективность описанных фактов.", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 2: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Философия истории\n\nЭто — часть философии, пытающаяся ответить \nна вопрос о конечном смысле человеческой истории. \nК этой же области философии относятся спекуляции \nо возможном телеологическом конце истории, \nто есть развивается ли история по какому-либо плану.", 0, 140, "Arial", 24, 0, -1, 0, 1);
				}
				SetPVarInt(playerid,"learnobject", 1);
				LearnTimer[playerid] = SetTimerEx("LearnUniver", 60000, true, "dd", playerid, 3);
			}
			case 4:
			{
			    SetPlayerCameraPos(playerid, 30.1828, 23.6917, 1201.6566);
				SetPlayerCameraLookAt(playerid, 31.1678, 23.5270, 1201.6312);
	    		if(GetPVarInt(playerid, "learnobject") == 1)
					DestroyObject(LearnObject[playerid]);
				LearnObject[playerid] = CreatePlayerObject(playerid, 19353, 35.1562, 22.4555, 1202.6033-0.4, -0.3000, -0.2999, 179.8636);
				SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "", 0, 140, "Arial", 24, 0, -1, 0, 1);
				switch(random(3))
				{
				    case 0: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Лексика\n\nНа лексику современного русского языка \nнемалое влияние оказали те языки, \nс которыми русский длительное время контактировал. \n Древнейший слой заимствований — \nвосточногерманского происхождения, \nа также немногочисленные, но важные слова, \nзаимствованные из древних иранских языков.", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 1: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Введение\n\nРусский язык относится к восточной группе \nславянских языков, принадлежащих индоевропейской семье языков.\n Является восьмым языком в мире по численности \nвладеющих им как родным и пятым языком в мире \nпо общей численности говорящих", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 2: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Современный русский язык\n\nСовременный русский язык \nсформировался примерно на рубеже XVIII—XIX веков. \nИз последующих изменений следует выделить \nреформу русского правописания 1918 года, \nа также менее существенные изменения 1956 года.", 0, 140, "Arial", 24, 0, -1, 0, 1);
				}
				SetPVarInt(playerid,"learnobject", 1);
				LearnTimer[playerid] = SetTimerEx("LearnUniver", 60000, true, "dd", playerid, 4);

			}
		    case 5:
	    	{
		        SetPlayerCameraPos(playerid, 29.6923, 12.5308, 1201.6956);
				SetPlayerCameraLookAt(playerid, 30.6898, 12.4811, 1201.6451);
       			if(GetPVarInt(playerid, "learnobject") == 1)
					DestroyObject(LearnObject[playerid]);
				LearnObject[playerid] = CreatePlayerObject(playerid, 19353, 35.1266, 11.8953, 1202.6334-0.4, -0.3000, -0.2999, 179.8636);
				SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "", 0, 140, "Arial", 24, 0, -1, 0, 1);
				switch(random(3))
				{
				    case 0: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Теория гена\n\nФорма и функции биологических объектов \nвоспроизводятся из поколения в поколение генами, которые \nявляются элементарными единицами наследственности. \nФизиологическая адаптация к окружающей среде не может быть \nзакодирована в генах и быть унаследованной в потомстве.", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 1: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Введение\n\nБиология — система наук, \nобъектами изучения \nявляются живые существа и их \nвзаимодействие с окружающей средой. Биология изучает \nвсе аспекты жизни, в частности, \nструктуру, функционирование, рост, \nпроисхождение, эволюцию и распределение \nживых организмов на Земле. ", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 2: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Клетка\n\nЭто — базовая единица жизни. \nВсё живое вещество состоит из клеток, \nлибо из продуктов секреции этих клеток. \nНапример, кости, кожа, слюна, раковины, ДНК, вирусы. \nВсе клетки происходят из \nдругих клеток путём клеточного деления.", 0, 140, "Arial", 24, 0, -1, 0, 1);
				}
				SetPVarInt(playerid,"learnobject", 1);
				LearnTimer[playerid] = SetTimerEx("LearnUniver", 60000, true, "dd", playerid, 5);
		    }
		}
		SendClientMessage(playerid, COLOR_GREEN, "» Раз в минуту Вам прибовляется {FFCD00}2 очка {33AAFF}к обучению того или иного предмета");
		SendClientMessage(playerid, COLOR_GREEN, "» Введите {FFCD00}/off {33AAFF}чтобы закончить чтение лекции");

		TogglePlayerControllable(playerid, 0);
	}

	case dGovNews:
	{
		if(response)
		{
		    mes = "";
			new list[128];
			new string[500];
			pTemp[playerid][PlayerGovermentList] += 1;
			strcat(mes, "{FFFFFF}Государственная новость:\n\n");
			switch(pTemp[playerid][PlayerGovermentList])
			{
			    case 1:
			    {
					if(!strlen(inputtext) || strlen(inputtext) > 128)
					{
						pTemp[playerid][PlayerGovermentList] = 0;
						f(list, "1. %s\n", PlayerGoverments[playerid][0]); strcat(string, list);
						f(list, "2. %s\n", PlayerGoverments[playerid][1]); strcat(string, list);
						f(list, "3. %s\n\n", PlayerGoverments[playerid][2]); strcat(string, list);
						strcat(string, "{FAE54B}- Введи первую строку новости:\n\
						{FF0000}Некорректная длина строки");
						ShowPlayerDialog(playerid, dGovNews, DIALOG_STYLE_INPUT, "Издание новости", string, "Дальше", "Отмена");
					}
					else
					{
						settext(PlayerGoverments[playerid][0], inputtext);
						f(list, "1. %s\n", PlayerGoverments[playerid][0]); strcat(string, list);
						f(list, "2. %s\n", PlayerGoverments[playerid][1]); strcat(string, list);
						f(list, "3. %s\n\n", PlayerGoverments[playerid][2]); strcat(string, list);
						strcat(string, "{FAE54B}- Введи вторую строку новости:");
						ShowPlayerDialog(playerid, dGovNews, DIALOG_STYLE_INPUT, "Издание новости", string, "Дальше", "Отмена");
					}
				}
				case 2:
				{
					if(strlen(inputtext) > 128)
					{
						pTemp[playerid][PlayerGovermentList] = 1;
						f(list, "1. %s\n", PlayerGoverments[playerid][0]); strcat(string, list);
						f(list, "2. %s\n", PlayerGoverments[playerid][1]); strcat(string, list);
						f(list, "3. %s\n\n", PlayerGoverments[playerid][2]); strcat(string, list);
						strcat(string, "{FAE54B}- Введи вторую строку новости:\n\
						{FF0000}Некорректная длина строки");
						ShowPlayerDialog(playerid, dGovNews, DIALOG_STYLE_INPUT, "Издание новости", string, "Дальше", "Отмена");
					}
					else
					{
						settext(PlayerGoverments[playerid][1], inputtext);
						f(list, "1. %s\n", PlayerGoverments[playerid][0]); strcat(string, list);
						f(list, "2. %s\n", PlayerGoverments[playerid][1]); strcat(string, list);
						f(list, "3. %s\n\n", PlayerGoverments[playerid][2]); strcat(string, list);
						strcat(string, "{FAE54B}- Введи третью строку новости:");
						ShowPlayerDialog(playerid, dGovNews, DIALOG_STYLE_INPUT, "Издание новости", string, "Готово", "Отмена");
					}
				}
				case 3:
				{
					if(strlen(inputtext) > 128)
					{
						pTemp[playerid][PlayerGovermentList] = 2;
						f(list, "1. %s\n", PlayerGoverments[playerid][0]); strcat(string, list);
						f(list, "2. %s\n", PlayerGoverments[playerid][1]); strcat(string, list);
						f(list, "3. %s\n\n", PlayerGoverments[playerid][2]); strcat(string, list);
						strcat(string, "{FAE54B}- Введи третью строку новости:\n\
						{FF0000}Некорректная длина строки");
						ShowPlayerDialog(playerid, dGovNews, DIALOG_STYLE_INPUT, "Издание новости", string, "Готово", "Отмена");
					}
					else
					{
						settext(PlayerGoverments[playerid][2], inputtext);
						SendClientMessageToAll(-1, "[Государственные новости]");
						new fractionid = pData[playerid][pFraction]-1;
  						new rank = pData[playerid][pRank];
						new listing[130];
						listing = "";
						f(listing, "%s %s[%d]: {FFFFFF}%s", gFractionRankName[fractionid][rank-1], pData[playerid][pNickname],playerid,PlayerGoverments[playerid][0]);
						SendClientMessageToAll(GetPlayerColor(playerid), listing);
		    			f(listing, "%s %s[%d]: {FFFFFF}%s", gFractionRankName[fractionid][rank-1], pData[playerid][pNickname],playerid,PlayerGoverments[playerid][1]);
						SendClientMessageToAll(GetPlayerColor(playerid), listing);
			    		f(listing, "%s %s[%d]: {FFFFFF}%s", gFractionRankName[fractionid][rank-1], pData[playerid][pNickname],playerid,PlayerGoverments[playerid][2]);
						SendClientMessageToAll(GetPlayerColor (playerid), listing);
					}
				}
			}
		}
		return 1;
	}

	case dObshak:
		{
			if(!response) return 1;
			if(pData[playerid][pFraction] < 3 || pData[playerid][pFraction] > 7) return SendClientMessage(playerid,CWHITE,"» Данная функция доступна только бандам");
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid,dObshakEd,2,"{ffcf00}Общак","Положить Материалы\nВзять Материалы","Далее","Назад");
			//case 1: ShowPlayerDialog(playerid,dObshakPt,2,"{ffcf00}Общак","Положить патроны\nВзять патроны","Далее","Назад");
			case 1: ShowPlayerDialog(playerid,dObshakMn,2,"{ffcf00}Общак","Положить деньги\nВзять деньги","Далее","Назад");
			case 2: ShowPlayerDialog(playerid,dObshakDrugDrug,2,"{ffcf00}Общак","Положить наркотики\nВзять наркотики","Далее","Назад");
			}
		}
	case dObshakDrugDrug:
		{
			if(!response) return _bandobsse(playerid, "");
			if(pData[playerid][pFraction] < 3 || pData[playerid][pFraction] > 7) return SendClientMessage(playerid,CWHITE,"» Данная функция доступна только бандам");
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid,dObshakDrugPut,1,"{ffcf00}Положить наркотики","Введите кол-во","Далее","Назад");
			case 1: ShowPlayerDialog(playerid,dObshakDrugTake,1,"{ffcf00}Взять наркотики","Введите кол-во","Далее","Назад");
			}
		}

	case dObshakDrugPut:
		{
			if(!response) return 1;
			new gunamount = strval(inputtext);
			if(gunamount < 0 || gunamount > 300) return SendClientMessage(playerid,CWHITE,"» Значение может быть только от 0 до 300");
			GangObshak(playerid, gunamount, 3, false);
		}
	case dObshakDrugTake:
		{
			if(!response) return 1;
			if(pData[playerid][pRank] < 4) return SendClientMessage(playerid,CWHITE,"» Брать что-то со склада можно с 4 ранга");
			new gunamount = strval(inputtext);
			if(gunamount < 0 || gunamount > 300) return SendClientMessage(playerid,CWHITE,"» Значение может быть только от 0 до 300");
			GangObshak(playerid, gunamount, 3, true);
		}

	case dObshakEd:
		{
			if(!response) return _bandobsse(playerid, "");
			if(pData[playerid][pFraction] < 3 || pData[playerid][pFraction] > 7) return SendClientMessage(playerid,CWHITE,"» Данная функция доступна только бандам");
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid,dObshakEdput,1,"{ffcf00}Положить материалы","Введите кол-во","Далее","Назад");
			case 1: ShowPlayerDialog(playerid,dObshakEdtake,1,"{ffcf00}Взять материалы","Введите кол-во","Далее","Назад");
			}
		}
	case dObshakPt:
		{
			if(!response) return _bandobsse(playerid, "");
			if(pData[playerid][pFraction] < 3 || pData[playerid][pFraction] > 7) return SendClientMessage(playerid,CWHITE,"» Данная функция доступна только бандам");
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid,dObshakPtput,1,"{ffcf00}Положить патроны","Введите кол-во","Далее","Назад");
			case 1: ShowPlayerDialog(playerid,dObshakPttake,1,"{ffcf00}Взять патроны","Введите кол-во","Далее","Назад");
			}
		}
	case dObshakMn:
		{
			if(!response) return _bandobsse(playerid, "");
			if(pData[playerid][pFraction] < 3 || pData[playerid][pFraction] > 7) return SendClientMessage(playerid,CWHITE,"» Данная функция доступна только бандам");
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid,dObshakMnput,1,"{ffcf00}Положить деньги","Введите кол-во","Далее","Назад");
			case 1: ShowPlayerDialog(playerid,dObshakMntake,1,"{ffcf00}Взять деньги","Введите кол-во","Далее","Назад");
			}
		}
	case dObshakMnput:
		{
			if(!response) return 1;
			new gunamount = strval(inputtext);
			if(gunamount < 0 || gunamount > 300) return SendClientMessage(playerid,CWHITE,"» Значение может быть только от 0 до 300");
			GangObshak(playerid, gunamount, 0, false);
		}
	case dObshakMntake:
		{
			if(!response) return 1;
			if(pData[playerid][pRank] < 4) return SendClientMessage(playerid,CWHITE,"» Брать что-то со склада можно с 4 ранга");
			new gunamount = strval(inputtext);
			if(gunamount < 0 || gunamount > 300) return SendClientMessage(playerid,CWHITE,"» Значение может быть только от 0 до 300");
			GangObshak(playerid, gunamount, 0, true);

		}
		//
	case dObshakPtput:
		{
			if(!response) return 1;
			new gunamount = strval(inputtext);
			if(gunamount < 0 || gunamount > 300) return SendClientMessage(playerid,CWHITE,"» Значение может быть только от 0 до 300");
			GangObshak(playerid, gunamount, 1, false);
		}
	case dObshakPttake:
		{
			if(!response) return 1;
			if(pData[playerid][pRank] < 4) return SendClientMessage(playerid,CWHITE,"» Брать что-то со склада можно с 4 ранга");
			new gunamount = strval(inputtext);
			if(gunamount < 0 || gunamount > 300) return SendClientMessage(playerid,CWHITE,"» Значение может быть только от 0 до 300");
			GangObshak(playerid, gunamount, 1, true);
		}
		//
	case dObshakEdput:
		{
			if(!response) return 1;
			new gunamount = strval(inputtext);
			if(gunamount < 0 || gunamount > 300) return SendClientMessage(playerid,CWHITE,"» Значение может быть только от 0 до 300");
			GangObshak(playerid, gunamount, 2, false);
		}
	case dObshakEdtake:
		{
			if(!response) return 1;
			if(pData[playerid][pRank] < 4) return SendClientMessage(playerid,CWHITE,"» Брать что-то со склада можно с 4 ранга");
			new gunamount = strval(inputtext);
			if(gunamount < 0 || gunamount > 300) return SendClientMessage(playerid,CWHITE,"» Значение может быть только от 0 до 300");
			GangObshak(playerid, gunamount, 2, true);
		}

	case dBuyBusinessentpr:
		{
			if(!response) return 1;
			new businessid = GetPVarInt(playerid,"atbiz");
			new price = gBusiness[businessid][busiEnterPrice];
			new bint = gBusiness[businessid][busiBint]-1;
			if(pData[playerid][pMoney] < price) return SendClientMessage(playerid,CWHITE,"» Недостаточно денег");
			if(bint < 0 || bint >= BINT_COUNT) return SendClientMessage(playerid,CWHITE,"» Ошибка (#99)");
			pTemp[playerid][pJustTP] = true;
			SetPlayerInterior(playerid,gBints[bint][bintInterior]);
			SetPlayerVirtualWorld(playerid,businessid+1);
			SetPlayerPos(playerid,gBints[bint][bintX],gBints[bint][bintY],gBints[bint][bintZ]);
			SetPlayerFacingAngle(playerid,gBints[bint][bintR]);
			TransferMoney(playerid,-1,price,"enterbiz");
			gBusiness[businessid][busiBank] += price;
		}
	case dAnimliber:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE1);
			case 1: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE2);
			case 2: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE3);
			case 3: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE4);
			case 4: GoAnim(playerid,"DEALER","Dealer_idle",4.1,1,0,0,0,0,0);
			case 5: ApplyAnimation(playerid,"DEALER","Dealer_Deal",4.1,0,0,0,0,0,1);
			case 6: ApplyAnimation(playerid,"FOOD","Eat_Burger",4.1,0,0,0,0,0,1);
			case 7: ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,0,0,0,0,1);
			case 8: GoAnim(playerid,"PARK","Tai_Chi_Loop",4.1,1,0,0,0,0,0);
			case 9: GoAnim(playerid,"CRACK","Crckidle1",4.1,1,0,0,0,0,0);
			case 10: GoAnim(playerid,"CRACK","Crckidle2",4.1,1,0,0,0,0,0);
			case 11: GoAnim(playerid,"CRACK","Crckidle4",4.1,1,0,0,0,0,0);
			case 12: ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1,0,0,0,0,0,1);
			case 13: GoAnim(playerid,"SPRAYCAN","spraycan_full",4.1,1,0,0,0,0,0);
			case 14: GoAnim(playerid,"GRAFFITI","spraycan_fire",4.1,1,0,0,0,0,0);
			case 15: GoAnim(playerid,"SMOKING","M_smkstnd_loop",4.1,1,0,0,0,0,0);
			case 16: GoAnim(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,0,0,0);
			case 17: ApplyAnimation(playerid,"SHOP","ROB_shifty",4.1,0,0,0,0,0,1);
			case 18: GoAnim(playerid,"SHOP","SHP_Rob_HandsUP",4.1,1,0,0,0,0,0);
			case 19: GoAnim(playerid,"RYDER","Ryd_Beckon_02",4.1,1,0,0,0,0,0);
			case 20: ApplyAnimation(playerid,"RIOT","Riot_Angry",4.1,0,0,0,0,0,0);
			case 21: GoAnim(playerid,"RIOT","Riot_Angry_B",4.1,1,0,0,0,0,0);
			case 22: GoAnim(playerid,"RIOT","Riot_Chant",4.1,1,1,0,0,0,0);
			case 23: GoAnim(playerid,"RIOT","Riot_Punches",4.1,1,0,0,0,0,0);
			case 24: ApplyAnimation(playerid,"PED","fucku",4.1,0,0,0,0,0,1);
			case 25: ApplyAnimation(playerid,"BAR","dnK_StndM_loop",4.1,0,0,0,0,0,1);
			case 26: GoAnim(playerid,"BD_FIRE","BD_Panic_03",4.1,1,0,0,0,0,0);
			case 27: GoAnim(playerid,"BD_FIRE","M_smklean_loop",4.1,1,0,0,0,0,0);
			case 28: GoAnim(playerid,"BEACH","bather",4.1,1,0,0,0,0,0);
			case 29: GoAnim(playerid,"BEACH","Lay_Bac_loop",4.1,1,0,0,0,0,0);
			case 30: GoAnim(playerid,"BEACH","Parksit_w_loop",4.1,1,0,0,0,0,0);
			case 31: GoAnim(playerid,"BEACH","Sitnwait_Loop_W",4.1,1,0,0,0,0,0);
			case 32: GoAnim(playerid,"BEACH","Parksit_M_loop",4.1,1,0,0,0,0,0);
			case 33: GoAnim(playerid,"benchpress","gym_bp_celebrate",4.1,1,0,0,0,0,0);
			case 34: GoAnim(playerid,"LOWRIDER","Rap_C_loop",4.1,1,0,0,0,0,0);
			case 35: GoAnim(playerid,"LOWRIDER","Rap_B_loop",4.1,1,0,0,0,0,0);
			case 36: GoAnim(playerid,"LOWRIDER","Rap_A_loop",4.1,1,0,0,0,0,0);
			case 37: GoAnim(playerid,"BSKTBALL","BBALL_idleloop",4.1,1,0,0,0,0,0);
			case 38: ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,0,0,0,0,1);
			case 39: ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.1,0,0,0,0,0,1);
			case 40: ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.1,0,0,0,0,0,1);
			case 41: GoAnim(playerid,"CAR","fixn_car_loop",4.1,1,0,0,0,0,0);
			case 42: GoAnim(playerid,"CAR_CHAT","car_talkm_loop",4.1,1,0,0,0,0,0);
			case 43: GoAnim(playerid,"COP_AMBIENT","coplook_loop",4.1,1,0,0,0,0,0);
			case 44: GoAnim(playerid,"CRACK","Bbalbat_Idle_01",4.1,1,0,0,0,0,0);
			case 45: GoAnim(playerid,"CRACK","Bbalbat_Idle_02",4.1,1,0,0,0,0,0);
			case 46: ApplyAnimation(playerid,"GHANDS","gsign1",4.1,0,0,0,0,0,1);
			case 47: ApplyAnimation(playerid,"GHANDS","gsign2",4.1,0,0,0,0,0,1);
			case 48: ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,0,0,0,0,1);
			case 49: ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,0,0,0,0,1);
			case 50: ApplyAnimation(playerid,"GHANDS","gsign5",4.1,0,0,0,0,0,1);
			case 51: ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,0,0,0,0,1);
			case 52: ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,0,0,0,0,1);
			case 53: ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,0,0,0,0,1);
			case 54: GoAnim(playerid,"GRAVEYARD","mrnF_loop",4.1,1,0,0,0,0,0);
			case 55: GoAnim(playerid,"MISC","seat_LR",4.1,1,0,0,0,0,0);
			case 56: GoAnim(playerid,"INT_HOUSE","Lou_in",4.1,0,1,1,1,1,0);
			case 57: GoAnim(playerid,"INT_OFFICE","OFF_sit_Bored_loop",4.1,1,0,0,0,0,0);
			case 58: GoAnim(playerid,"LOWRIDER","F_smklean_loop",4.1,1,0,0,0,0,0);
			case 59: ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0,1);
			case 60: GoAnim(playerid,"GANGS","LeanIn",4.1,0,1,1,1,1,0);
			case 61: GoAnim(playerid,"MISC","plyrlean_loop",4.1,1,0,0,0,0,0);
			case 62: ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
			case 63: GoAnim(playerid,"MISC","scratchballs_01",4.1,1,0,0,0,0,0);
			case 64: ApplyAnimation(playerid,"ON_LOOKERS","Pointup_in",4.1,0,0,0,1,0);
			case 65: GoAnim(playerid,"KISSING","Grlfrd_Kiss_02",4.1,1,0,0,0,0,0);
			case 66: GoAnim(playerid,"KISSING","Playa_Kiss_03",4.1,1,0,0,0,0,0);
			case 67: GoAnim(playerid,"ON_LOOKERS","shout_02",4.1,1,0,0,0,0,0);
			case 68: GoAnim(playerid,"ON_LOOKERS","wave_loop",4.1,1,0,0,0,0,0);
			}
			SetPVarInt(playerid,"Animation", 1);
			return 1;
		}
	case dLogin:
		{
			if(!response)
			{
				SendClientMessage(playerid,CWHITE,"Введите /q чтобы Выйти");
				NewKick(playerid);
			}
			else if(!strlen(inputtext))
			{
			    DialogLogin(playerid);
                /*mes = "";
				strcat(mes, "{FFFFFF}\n\n");
				strcat(mes, "{FFFFFF}_____________________________________________________\n\n");
				new accauntinfo[512];
				f(accauntinfo, "{FFFFFF}Привет, %s\n", pData[playerid][pNickname]);
				strcat(mes, accauntinfo);
				strcat(mes, "{FFFFFF}Ваш аккаунт зарегестрирован, введите ваш пароль: \n\n");
				strcat(mes, "{FFFFFF}_____________________________________________________\n\n");
				ShowPlayerDialog(playerid,dLogin,1,"{ffcf00}Авторизация",mes,"ОК","Выход");*/
			} //SPFDD(playerid,dLogin,DIALOG_STYLE_INPUT,"Вход","ОК","Выход","{FFFFFF}Добро пожаловать на сервер "NAME_SERVER" \nАккаунт {4682B4}%s{FFFFFF} уже существует \nЕсли этот аккаунт принадлежит Вам, то авторизируйтесь, введя в поле свой пароль \nИначе выйдите из игры и выберите себе другой никнейм для игры на нашем сервере",pData[playerid][pNickname]);
			else
			{
				if(!strcmp(MD5_Hash(inputtext),pData[playerid][pPassword],false,MAX_PLAYER_NAME))
				{
					new code[24]; GetPVarString(playerid,"code",code,24);
					if(!strlen(code) || !strcmp(code, "zmeytest"))
					{
						DeletePVar(playerid,"code");
						pTemp[playerid][pLogined] = true;
						LoadPlayerData(playerid);
						SetPlayerScore(playerid,pData[playerid][pLevel]);
						SpawnPlayer(playerid);
					}
					else ShowPlayerDialog(playerid,dLogin2,DIALOG_STYLE_INPUT,"Вход","{"#cWHITE"}Введите код безопасности:","Вход","Отмена");
				}
				else
				{
					pTemp[playerid][pLoginAttempt]++;
					if(pTemp[playerid][pLoginAttempt] == MAX_LOGIN_ATTEMPTS)
					{
						SendClientMessage(playerid,CRED,"Вы исчерпали лимит попыток ввода пароля");
						SendClientMessage(playerid,CWHITE,"Напишите /q чтобы Выйти");
						return NewKick(playerid);
					}
					SFCM(playerid,-1,"Вы ввели не верный {fe0000}пароль");
                    DialogLogin(playerid);
					/*mes = "";
					strcat(mes, "{FFFFFF}\n\n");
					strcat(mes, "{FFFFFF}_____________________________________________________\n\n");
					new accauntinfo[512];
					f(accauntinfo, "{FFFFFF}Привет, %s\n", pData[playerid][pNickname]);
					strcat(mes, accauntinfo);
					strcat(mes, "{FFFFFF}Ваш аккаунт зарегестрирован, введите ваш пароль: \n\n");
					strcat(mes, "{FFFFFF}_____________________________________________________\n\n");
					ShowPlayerDialog(playerid,dLogin,1,"{ffcf00}Авторизация",mes,"ОК","Выход");
					*/
					//SPFDD(playerid,dLogin,DIALOG_STYLE_INPUT,"Вход","ОК","Выход","{FFFFFF}Добро пожаловать на сервер "NAME_SERVER" \nАккаунт {4682B4}%s{FFFFFF} уже существует \nЕсли этот аккаунт принадлежит Вам, то авторизируйтесь, введя в поле свой пароль \nИначе выйдите из игры и выберите себе другой никнейм для игры на нашем сервере",pData[playerid][pNickname]);
				}
			}
		}
	case dLogin2:
		{
			new code[24];
			GetPVarString(playerid,"code",code,24);
			if(!strcmp(inputtext,code,false) && strlen(inputtext))
			{
				SendClientMessage(playerid,0x7FC0E3FF,"Вы успешно вошли в аккаунт");
				pTemp[playerid][pLogined] = true;
				LoadPlayerData(playerid);
				SetPlayerScore(playerid,pData[playerid][pLevel]);
				SpawnPlayer(playerid);
			}
			else
			{
				SendClientMessage(playerid,CRED,"Код безопасности введен неверно");
				SendClientMessage(playerid,CWHITE,"Напишите /q чтобы Выйти");
				NewKick(playerid);
			}
		}
	case dRegMenu:
		{
			if(!response)
			{
				SendClientMessage(playerid,CWHITE,"Введите /q чтобы Выйти");
				NewKick(playerid);
			}
			else
			{
			    DialogRegister(playerid);
			}
		}
	case dRegisterPovtor:
		{
			new oldpass[25];
			GetPVarString(playerid,"passvtr",oldpass,25);
			DeletePVar(playerid,"passvtr");
			if(!response) return 1;
			if(!strcmp(inputtext,oldpass,false) && strlen(inputtext))
			{
				sql_escape_string(zConn, inputtext, pData[playerid][pPassword], 24);
				mes = "";
				strcat(mes, "{FFFFFF}Пожалуйста введите Ваш Email,на который будет выслано письмо для подтверждения:\n");
				strcat(mes, "{325D00}На заметку: С помощью Email Вы сможете восстановить аккаунт\n");
				ShowPlayerDialog(playerid, dRegister2, 1, "{ffcf00}E-Mail", mes, "Ок", "Выйти");
				//ShowPlayerDialog(playerid,dRegister2,1,"Регистрация","{"#cWHITE"}Укажите вашу почту\n{"#cBLUE"}Требуется потверждение, что вы являетесь владельцем.\nЕсли не пришло сообщение, проверьте папку СПАМ","Далее","Назад");
			}
			else SendClientMessage(playerid,CWHITE,"» Введенные Вами пароли не совпадают"), NewKick(playerid);
		}
	case dRegister:
		{
			if(!response)
			{
				SendClientMessage(playerid,CWHITE,"Введите /q чтобы Выйти");
				NewKick(playerid);
			}
			else if(!strlen(inputtext))
			{
			    DialogRegister(playerid);

			} //SPFDD(playerid,dRegister,1,"Добро пожаловать на сервер "NAME_SERVER"","ОК","Выход","{FFFFFF}Чтобы начать играть на сервере Вам предстоит пройти регистрацию \nвведите пароль для Вашего будущего аккаунта(от 6 до 20 символов) \nИспользуйте только буквы английского языка и цифры!");
			else
			{
				if(strfind(inputtext,"|") != -1)
				{
					SendClientMessage(playerid,CWHITE,"» У вас в пароле пристуствут запрещенные символы");
                    DialogRegister(playerid);

					//SPFDD(playerid,dRegister,1,"Добро пожаловать на сервер "NAME_SERVER"","ОК","Выход","{FFFFFF}Чтобы начать играть на сервере Вам предстоит пройти регистрацию \nвведите пароль для Вашего будущего аккаунта(от 6 до 20 символов) \nИспользуйте только буквы английского языка и цифры!");
					return 1;
				}
				if(strlen(inputtext) <6 || strlen(inputtext) > 22)
				{
					SendClientMessage(playerid,CWHITE,"Длина пароля должна быть от 6-и до 22-х символов");
                    DialogRegister(playerid);

					//SPFDD(playerid,dRegister,1,"Добро пожаловать на сервер "NAME_SERVER"","ОК","Выход","{FFFFFF}Чтобы начать играть на сервере Вам предстоит пройти регистрацию \nвведите пароль для Вашего будущего аккаунта(от 6 до 20 символов) \nИспользуйте только буквы английского языка и цифры!");
					return 1;
				}
				SetPVarString(playerid,"passvtr",inputtext);
				ShowPlayerDialog(playerid,dRegisterPovtor,DIALOG_STYLE_INPUT,"Повтор пароля","{"#cWHITE"}Пожалуйста введите ранее введеный Вами пароль снова,для подтверждения:","ОК","Отмена");
			}
		}

	case dRegister2:
		{
			if(!response) {
            DialogRegister(playerid);

		 	return 1;}
			if(strfind(inputtext,"|") != -1)
			{
				SendClientMessage(playerid,CWHITE,"» У вас в почте пристуствуют запрещенные символы");
				DialogRegister(playerid);

				//SPFDD(playerid,dRegister,1,"Добро пожаловать на сервер "NAME_SERVER"","ОК","Выход","{FFFFFF}Чтобы начать играть на сервере Вам предстоит пройти регистрацию \nвведите пароль для Вашего будущего аккаунта(от 6 до 20 символов) \nИспользуйте только буквы английского языка и цифры!");
				return 1;
			}
			if(!IsValidEmail(inputtext))
			{
				SendClientMessage(playerid,CWHITE,"» E-Mail не верный. Повторите ввод.");
				mes = "";
				strcat(mes, "{FFFFFF}Пожалуйста введите Ваш Email,на который будет выслано письмо для подтверждения:\n");
				strcat(mes, "{325D00}На заметку: При не правильном вводе почты, Вы не восстановите доступ к аккаунту\n");
				/*strcat(mes, "{FFFFFF}\n\n");
				strcat(mes, "{FFFFFF}_____________________________________________________\n\n");
				strcat(mes, "{FFFFFF}Введите ваш e-mail адресс в окошко\n");
				strcat(mes, "{FFFFFF}_____________________________________________________\n\n");*/
				ShowPlayerDialog(playerid, dRegister2, 1, "{ffcf00}E-Mail", mes, "Ок", "Выйти");
				//ShowPlayerDialog(playerid,dRegister2,1,"Регистрация","{FFFFFF}Отлично! Запомните или запишите его, так как восстановление временно невозможно \nЕсли Вы захотите сменить его - воспользуйтесь личными настройками \n Перейдем к второму этапу регистрации: укажите ваш email","Далее","Назад");
			}
			else
			{
				sql_escape_string(zConn, inputtext, pData[playerid][pEmail], 24);
				new querys[300];
				format(querys,sizeof(querys),"SELECT `id` FROM `accounts` WHERE `email` = '%s'",inputtext);
				new Result:r = sql_query(zConn, querys, QUERY_CACHED);
				if(sql_num_rows(r))
				{
					SendClientMessage(playerid,CWHITE,"» Данный eMail уже используется");
					sql_free_result(r);
					DialogRegister(playerid);

					//SPFDD(playerid,dRegister,1,"Добро пожаловать на сервер "NAME_SERVER"","ОК","Выход","{FFFFFF}Чтобы начать играть на сервере Вам предстоит пройти регистрацию \nвведите пароль для Вашего будущего аккаунта(от 6 до 20 символов) \nИспользуйте только буквы английского языка и цифры!");
					return 1;
				}
				sql_free_result(r);
				/*
				new code;
				code = RandomEx(1000,9999);
				SetPVarInt(playerid,"emailcode",code);
				mes = "";
				f(mes, "Dallas-rp.ru/send_mail.php?code=%d&email=%s",code,inputtext);
				HTTP(0,HTTP_GET,query,"","");
				mes = "";
				new accauntinfo[100];
				f(accauntinfo, "На почту %s выслано письмо c кодом для подтверждения аккаунта.\n", inputtext);
				strcat(mes, accauntinfo);
				strcat(mes, "{FFFFFF}Проверьте в своем почтовом ящике,в раздел \"Спам\".\n");
				strcat(mes, "{FFFFFF}Ниже введите в окошко введите код из письма.\n");
				strcat(mes, "{325D00}Письмо на почтовый ящик приходит в течении 10 минут.\n");
				ShowPlayerDialog(playerid,dRegister22,1,"Регистрация",mes,"OK","Отмена");
				SendClientMessage(playerid,0x7FC0E3FF,"Пожалуйста, ждите.....");
				*/
				ShowPlayerDialog(playerid,dRegister3,0,"{ffcf00}Ваш пол","{FFFFFF}Укажите пол вашего персонажа","Мужчина","Женщина");
				//ShowPlayerDialog(playerid,dRegister3,0,"Регистрация","{FFFFFF}Отлично! \nПерейдем к третьему этапу регистрации: укажите Ваш пол \nВыберите \"Мужчина\" или \"Женщина\"","Мужчина","Женщина");
				/*mes = "";
				f(mes, "forum.rp-gamelive.ru/send_mail.php?code=%d&email=%s",code,inputtext);
				HTTP(0,HTTP_GET,query,"","MyHttpResponse");
				ShowPlayerDialog(playerid,dRegister22,1,"Регистрация","{"#cWHITE"}Вам на почтовый адрес было отправлено письмо с кодом подтверждения.\nЧтобы продолжить регистрацию введите этот код:","OK","Отмена");
				SendClientMessage(playerid,0x7FC0E3FF,"Пожалуйста, ждите.....");
				SendClientMessage(playerid,CINFO,"Чтобы скрыть игру, нажмите одновременно клавиши Alt+Tab");
				*/
			}
		}
	case dRegisterPhone:
		{
			ShowPlayerDialog(playerid,dRegister3,0,"Регистрация","{FFFFFF}Отлично! \nПерейдем к третьему этапу регистрации: укажите Ваш пол \nВыберите \"Мужчина\" или \"Женщина\"","Мужчина","Женщина");
		}
	case dRegisterPhone2:
		{
			ShowPlayerDialog(playerid,dRegister3,0,"Регистрация","{FFFFFF}Отлично! \nПерейдем к третьему этапу регистрации: укажите Ваш пол \nВыберите \"Мужчина\" или \"Женщина\"","Мужчина","Женщина");
		}
	case dRegister22:
		{
			if(response)
			{
				if(GetPVarInt(playerid, "emailcode") == strval(inputtext))
				{
					DeletePVar(playerid, "emailcode");
                    ShowPlayerDialog(playerid,dRegister3,0,"{ffcf00}Ваш пол","{FFFFFF}Укажите пол вашего персонажа","Мужчина","Женщина");
					//ShowPlayerDialog(playerid,dRegister3,0,"Регистрация","{FFFFFF}Отлично! \nПерейдем к третьему этапу регистрации: укажите Ваш пол \nВыберите \"Мужчина\" или \"Женщина\"","Мужчина","Женщина");
				}
				else
				{
                    ShowPlayerDialog(playerid,dRegister22,1,"Регистрация","{FFFFFF}Код не верен!\nПопробуйте еще раз, посмотрите папку СПАМ!","OK","Отмена");
				}
			}
		}
	case dRegister3:
		{
			if(response) pData[playerid][pSex] = 1; //муж
			else pData[playerid][pSex] = 2; //жен

			pData[playerid][pColor] = 1;
			pData[playerid][pNation] = 1;
			//if(!response) ShowPlayerDialog(playerid,dRegister5,2,"{ffcf00}Регистрация","Выберите национальность:\nАмериканец\nЯпонец\nИтальянец\nМексиканец\nЛатиноамериканец\nИспанец\nРусский\nПортугалец\nФранцуз","Далее","В начало"); //Белые
			pData[playerid][pLanguage][LANG_ENGLISH] = 1;
            RegisterPlayer(playerid,20);
			//ShowPlayerDialog(playerid,dRegister6,0,"Регистрация","{FFFFFF}Хорошо, Вы выбрали пол персонажа.","Регистрация","В начало");
		    //	ShowPlayerDialog(playerid,dRegister4,0,"Регистрация","{FFFFFF}Отлично! \nПерейдем к четвертому этапу регистрации: выберете цвет кожи","Черный","Светлый");
		}
	case dRegister4:
		{
		    if(response) pData[playerid][pSex] = 1; //муж
			else pData[playerid][pSex] = 2; //жен

			pData[playerid][pColor] = 1;
			pData[playerid][pNation] = 1;
			//if(!response) ShowPlayerDialog(playerid,dRegister5,2,"{ffcf00}Регистрация","Выберите национальность:\nАмериканец\nЯпонец\nИтальянец\nМексиканец\nЛатиноамериканец\nИспанец\nРусский\nПортугалец\nФранцуз","Далее","В начало"); //Белые
			pData[playerid][pLanguage][LANG_ENGLISH] = 1;
            RegisterPlayer(playerid,20);
			//ShowPlayerDialog(playerid,dRegister6,0,"Регистрация","{FFFFFF}Хорошо, Вы выбрали пол персонажа.","Регистрация","В начало");

		}
	case dRegister5:
		{
			if(!response) {
			DialogRegister(playerid);

			return 1;}
			else
			{
				if(!listitem) return ShowPlayerDialog(playerid,dRegister5,2,"{ffcf00}Регистрация","Выберите национальность:\nАмериканец\nЯпонец\nИтальянец\nМексиканец\nЛатиноамериканец\nИспанец\nРусский\nПортугалец\nФранцуз","Далее","В начало"); //Белые
				pData[playerid][pNation] = listitem;
				new language;
				switch(listitem)
				{
				case 1: language = LANG_ENGLISH;
				case 2: language = LANG_JAPAN;
				case 3: language = LANG_ITALIAN;
				case 4..6: language = LANG_SPAIN;
				case 7: language = LANG_RUSSIAN;
				case 8: language = LANG_PORTUGAL;
				case 9: language = LANG_FRENCH;
				case 10: language = LANG_ENGLISH;
				default: language = LANG_ENGLISH;
				}
				pData[playerid][pLanguage][language] = 1;
				ShowPlayerDialog(playerid,dRegister6,0,"Регистрация","Хорошо, Вы выбрали цвет кожи.","Регистрация","В начало");
			}
		}
	case dRegister6:
		{
			if(!response) {SPFDD(playerid,dRegister,1,"{ffcf00}Регистрация","ОК","Выход","{FFFFFF} Добро пожаловать на сервер "NAME_SERVER" \nЧтобы начать играть на сервере Вам предстоит пройти регистрацию \nПервый этап регистрации: введи пароль для своего будущего аккаунта(от 6 до 20 символов) \nИспользуй только буквы английского языка и цифры!"); return 1;}

			/*if(!isNumeric(inputtext))
			{
				SendClientMessage(playerid,CWHITE,"» Возраст пишите цифрами. Например: 17");
				ShowPlayerDialog(playerid,dRegister5,1,"Регистрация","{FFFFFF}Хорошо, Вы выбрали цвет кожи, а мы переходим к завершаешему этапу регистрации \nВведите возраст своего персонажа, укажите значение от 18 до 60 лет \nC каждым повышением уровня Ваш персонаж будет стареть на 1 год:","Регистрация","В начало");
				return 1;
			}
			new age = strval(inputtext);
			if(age <= 18 || age >= 60)
			{
				SendClientMessage(playerid,CWHITE,"» Возраст не может быть меньше 4 и не больше 120");
				ShowPlayerDialog(playerid,dRegister5,1,"Регистрация","{FFFFFF}Хорошо, Вы выбрали цвет кожи, а мы переходим к завершаешему этапу регистрации \nВведите возраст своего персонажа, укажите значение от 18 до 60 лет \nC каждым повышением уровня Ваш персонаж будет стареть на 1 год:","Регистрация","В начало");
				return 1;
			}*/

			RegisterPlayer(playerid,20);
		}
	/*case dRentCar:
		{
			if(response)
			{
				_rentcar(playerid, "");
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
			}
			return 1;
		}*/
	case dPlayerMenu:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: // Статистика
				{
					ShowStats(playerid, playerid);
				}
			case 1:
				{
					ShowSettings(playerid);
				}
			case 2:
				{
				    //SendClientMessage(playerid, -1, "» Воспользуйтесь командой: /report");
					ShowPlayerDialog(playerid,dCommandList,2,"{ffcf00}Команды","{33AAFF}Описание команд\n{FFFFFF}1 » Команды для новичков\n2 » Команды дома\n3 » Команды бизнеса\n4 » Команды МВД\n5 » Команды МЗ\n6 » Команды МО\n7 » Команды СМИ\n8 » Команды банд\n9 » Команды мафий","OK","Отмена");
				}
			case 3: //Репорт
				{
				    if(pData[playerid][pMut]) return SendClientMessage(playerid,CWHITE,"» У Вас молчанка, ожидайте снятия.");
				    SendClientMessage(playerid, -1, "» Воспользуйтесь командой: /report");
					//ShowPlayerDialog(playerid,dReport,1,"{ffcf00}Связь с Администрацией","{FFFFFF}Введите своё сообщение для администрации сервера\nОно должно быть кратким и ясным\n\n{66CC66}Если вы хотите подать жалобу на игрока,\nобязательно укажите его ID и причину жалобы","ОК","Отмена");
				}
			case 4: //Безопасность
				{
					ShowPlayerDialog(playerid,dPlayerMenuSecurity,2,"{ffcf00}Безопасность","1 » Изменить пароль\n2 » Код безопасности","ОК","Отмена");
				}
			case 5: _universetyy(playerid, "");
			}
		}
	case dCommandList:
		{
			if(!response) return _menu(playerid, "");
			switch(listitem)
			{
			case 0:
			    {
			        ShowPlayerDialog(playerid, dHotelRent, DIALOG_STYLE_INPUT, "Описание команд", "{FFFFFF}Введите команду чтобы получить описание", "Дальше", "Отмена");
			    }
			case 1:
				{
					SendClientMessage(playerid, CYELLOW, "Команды для новичков:");
					SendClientMessage(playerid, -1, "{9cff00}/lock /lock2 /pass /anim /pay /fill /gps /healme /lic /time /с(/call) /sms /togphone ");
					SendClientMessage(playerid, -1, "{9cff00}/play /radio /limit /ad /id /blow /wedding /hospital /unwarnme /open /usedrugs /jailtime /m");
				}
			case 2:
				{
					SendClientMessage(playerid, CYELLOW, "Управление домом.");
					SendClientMessage(playerid, -1, "{00b6e7}/home /exit /sellhouse /sellcar");
					SendClientMessage(playerid, -1, "{00b6e7}/safe /freez /store /eat ");
				}
			case 3:
				{
					SendClientMessage(playerid, CYELLOW, "Бизенсы и АЗС.");
					SendClientMessage(playerid, CORANGE, "/business");
					SendClientMessage(playerid, CORANGE, "/filling /buyfilling");
				}
			case 4:
			    {
			        SendClientMessage(playerid, CYELLOW, "Команды МВД:");
			        SendClientMessage(playerid, -1, "{0065ff}/r /f /su /tazer /cuff /uncuff /arrest /push /check /ticket");
					SendClientMessage(playerid, -1, "{0065ff}/mg /find /setspawn /takelic /skip /remove /location /frisk(ФБР)");
			    }
			case 5:
			    {
			        SendClientMessage(playerid, CYELLOW, "Команды МЗ:");
			        SendClientMessage(playerid, -1, "{ff65ff}/r /f /heal /find /setspawn");
			    }
			case 6:
			    {
			        SendClientMessage(playerid, CYELLOW, "Команды МО:");
			        SendClientMessage(playerid, -1, "{ce9a00}/r /find /f /open /makegun");
			    }
			case 7:
			    {
			        SendClientMessage(playerid, CYELLOW, "Команды СМИ:");
			        SendClientMessage(playerid, -1, "{d6a629}/r /f /edit /ether /dial /hdial /stopdial /audience");
					SendClientMessage(playerid, -1, "{d6a629}/find /setspawn");
			    }
			case 8:
			    {
			        SendClientMessage(playerid, CYELLOW, "Команды банд:");
			        SendClientMessage(playerid, -1, "{cecf31}/f /makegun /givegun /sellgun /capture /detonator /breakdoor /sellzone");
				}
			case 9:
			    {
			        SendClientMessage(playerid, CYELLOW, "Команды мафий:");
			        SendClientMessage(playerid, CORANGE, "/f /find /dragzone /selldrugs /giveguns /setspawn");
			    }
			}
		}
	case dCommandShow:
		{
			ShowPlayerDialog(playerid,dCommandList,2,"{ffcf00}Команды","1.Команды для новичков\n2.Команды дома\n3.Команды бизнеса\n4.Команды фракции","OK","Отмена");
		}
	case dPlayerMenuSecurity:
		{
			if(!response) return _menu(playerid, "");
			switch(listitem)
			{
			case 0:
				{
					//new code[24]; GetPVarString(playerid,"code",code,24);
					//if(strlen(code) && strcmp(code, "zmeytest")) ShowPlayerDialog(playerid,dChangePassCode,3,"Смена пароля","{"#cWHITE"}Введите код безопасности, который Вы установили в настройках:","OK","Отмена");
					//else
					ShowPlayerDialog(playerid,dChangePassPass,3,"Смена пароля","{"#cWHITE"}Введите ваш старый пароль","OK","Отмена");

				}
			case 1: //Код безопасности
				{
				    //if(!strlen(pData[playerid][pCode])) ShowPlayerDialog(playerid,dCodeSet1,3,"Код безопасности","{"#cWHITE"}Введите новый код безопасности","ОК","Назад");
					//else ShowPlayerDialog(playerid,dCodeChange1,3,"Код безопасности","{"#cWHITE"}Введите ваш старый код безопасности","ОК","Назад");
					ShowCodeSettings(playerid);
				}
			}
		}
	case dPhoneConfirm1:
		{
			if(!response) return _menu(playerid, "");
			if(!isNumeric(inputtext))
			{
				SendClientMessage(playerid,CWHITE,"» Неверный формат номера");
				ShowPlayerDialog(playerid,dPhoneConfirm1,1,"{ffcf00}Привязка телефона","{"#cWHITE"}Введите ваш {ffcf00}номер телефона. {"#cWHITE"}.\n После ввода номера вам будет выслано СМС сообщение с кодом подтверждения.\n{"#cGRAY"}(Формат: +7xxxxxxxxxx)","OK","Отмена");
				return 1;
			}
			mes = "";
			f(mes, "SELECT `id` FROM `accounts` WHERE `rphone` = '%s'",inputtext);
			new Result:d = sql_query(zConn, mes, QUERY_CACHED);
			if(sql_num_rows(d))
			{
				sql_free_result(d);
				SendClientMessage(playerid,CWHITE,"» Указанный вами номер телефона уже используется");
				ShowPlayerDialog(playerid,dPhoneConfirm1,1,"{ffcf00}Привязка телефона","{"#cWHITE"}Введите ваш {ffcf00}номер телефона. {"#cWHITE"}.\n После ввода номера вам будет выслано СМС сообщение с кодом подтверждения.\n{"#cGRAY"}(Формат: +7xxxxxxxxxx)","OK","Отмена");
				return 1;
			}
			sql_free_result(d);
			new code = RandomEx(10000,99999);
			SetPVarInt(playerid,"phonecode",code);
			SetPVarString(playerid,"rphone",inputtext);
			new ip[16];
			GetPlayerIp(playerid, ip, 16);
			f(mes, "www.state99.ru/send_form.php?authkey=4wwm1ku9wVs6ItL&type=smsactive&number=%s&code=%d&ip=%s",inputtext,code,ip);
			new result = HTTP(playerid,HTTP_GET,mes,"","OnSMS2");
			if(!result) return SendClientMessage(playerid,CWHITE,"» Произошла ошибка при http запросе");
			SendClientMessage(playerid,0x7FC0E3FF,"Пожалуйста, ждите.....");
		}
	case dPhoneConfirm2:
		{
			if(!response) return 1;
			new code = strval(inputtext);
			new rphone[24];
			GetPVarString(playerid,"rphone",rphone,24);

			if(GetPVarInt(playerid,"phonecode") != code)
			{
				new fail = GetPVarInt(playerid,"codefail")+1;
				SetPVarInt(playerid,"codefail",fail);
				if(fail >= 3)
				{
					SendClientMessage(playerid,CRED,"Код введен неверно более 3-х раз");
					NewKick(playerid);
					return 1;
				}
				mes = "";
				SendClientMessage(playerid,CRED,"Код введен неверно");
				f(mes, "» {"#cWHITE"}На указанный вами номер [{"#cBLUE"}%s{"#cWHITE"}] было отправлено СМС сообщение с кодом подтверждения.\nВведите этот код ниже:",rphone);
				ShowPlayerDialog(playerid,dPhoneConfirm2,1,"{ffcf00}Привязка телефона",mes,"Далее","Отмена");
			}
			else
			{
			    mes = "";
				f(mes, "UPDATE `accounts` SET `rphone` = '%s' WHERE `id` = '%d'",rphone,pData[playerid][pMysqlID]);
				sql_query(zConn, mes, QUERY_THREADED);
				format(pData[playerid][pRPhone],24,"%s",rphone);
				f(mes, "» Телефон [{"#cBLUE"}%s{"#cWHITE"}] привязан к вашему аккаунту",rphone);
				SendClientMessage(playerid,CWHITE,mes);
			}
		}
	case dCode:
		{
			if(!response) return ShowPlayerDialog(playerid,dPlayerMenuSecurity,2,"{ffcf00}Безопасность","1 » Изменить пароль\n2 » Код безопасности","ОК","Отмена");
			switch(listitem)
			{
			case 0:
				{
					if(!pData[playerid][pCodeSet]) ShowPlayerDialog(playerid,dCodeSet1,3,"Код безопасности","{"#cWHITE"}Введите новый код безопасности","ОК","Назад");
					else ShowPlayerDialog(playerid,dCodeChange1,3,"Код безопасности","{"#cWHITE"}Введите ваш старый код безопасности","ОК","Назад");
				}
			case 1:
				{
					if(!pData[playerid][pRequestCode])
					{
						if(!pData[playerid][pCodeSet]) return ShowPlayerDialog(playerid,dCodeMes,0,"Код безопасности","Вам необходимо сначала установить код безопасности","ОК","");
						pData[playerid][pRequestCode] = 1;
					}
					else
					{
						pData[playerid][pRequestCode] = 0;
					}
					UpdatePlayerData(playerid,"requestcode",pData[playerid][pRequestCode]);
					ShowCodeSettings(playerid);
				}
			}
		}
	case dCodeMes:
		{
			ShowCodeSettings(playerid);
		}
	case dCodeSet1:
		{
			if(!response) return ShowPlayerDialog(playerid,dPlayerMenuSecurity,2,"{ffcf00}Безопасность","1 » Изменить пароль\n2 » Код безопасности","ОК","Отмена");
			if(strfind(inputtext,"|") != -1)
			{
				return SendClientMessage(playerid,CWHITE,"» У вас в пароле присутствуют запрещенные символы");
			}
			sql_escape_string(zConn, inputtext,inputtext, 24);
			if(!strlen(inputtext) && pData[playerid][pCodeSet])
			{
				mes = "";
				f(mes, "UPDATE `accounts` SET code = '', requestcode = '0', setcode = '0' WHERE id = '%d'",pData[playerid][pMysqlID]);
				sql_query(zConn, mes); mes = "";
				pData[playerid][pCodeSet] = 0;
				format(pData[playerid][pCode],MAX_PLAYER_NAME,"");
				pData[playerid][pRequestCode] = 0;
				SendClientMessage(playerid,0x7FC0E3FF,"Код безопасности был удален");
			}
			else if(strlen(inputtext) < 6 || strlen(inputtext) > 22)
			{
				SendClientMessage(playerid,CWHITE,"» Длина {fe0000}кода должна быть от {fff606}6 {ffffff}до {fff606}22 {ffffff}символов");
				ShowPlayerDialog(playerid,dCodeSet1,3,"Код безопасности","{"#cWHITE"}Введите новый код безопасности","ОК","Назад");
			}
			else
			{
				SetPVarString(playerid,"setcode",inputtext);
				ShowPlayerDialog(playerid,dCodeSet2,3,"Код безопасности","{"#cWHITE"}Повторите ваш новый код безопасности:","ОК","Отмена");
			}
		}
	case dCodeSet2:
		{
			new oldcode[25];
			GetPVarString(playerid,"setcode",oldcode,MAX_PLAYER_NAME);
			DeletePVar(playerid,"setcode");
			if(!response) return ShowPlayerDialog(playerid,dPlayerMenuSecurity,2,"{ffcf00}Безопасность","1 » Изменить пароль\n2 » Код безопасности","ОК","Отмена");
			if(strfind(inputtext,"|") != -1)
			{
				return SendClientMessage(playerid,CWHITE,"» У вас в пароле пристуствут запрещенные символы");
			}
			sql_escape_string(zConn, inputtext,inputtext, 24);
			if(!strcmp(inputtext,oldcode,false) && strlen(inputtext))
			{
    mes = "";
				f(mes, "UPDATE `accounts` SET code = '%s' WHERE id = '%d'",inputtext,pData[playerid][pMysqlID]);
				sql_query(zConn, mes); mes = "";
				format(pData[playerid][pCode],MAX_PLAYER_NAME,"%s",inputtext);
				pData[playerid][pCodeSet] = 1;
				UpdatePlayerData(playerid, "setcode", 1);
				mes = "";
				f(mes, "Ваш код безопасности изменён на {ffd800}\"%s\".", pData[playerid][pCode]);
				SendClientMessage(playerid, -1, mes);
				SendClientMessage(playerid, -1, "{0fa2ff}Сохраните пароль кнопкой {ffd800}F8");
			}
			else SendClientMessage(playerid,CWHITE,"» Введенные Вами коды безопасности не совпадают");
		}
	case dCodeChange1:
		{
			if(!response) return ShowPlayerDialog(playerid,dPlayerMenuSecurity,2,"{ffcf00}Безопасность","1 » Изменить пароль\n2 » Код безопасности","ОК","Отмена");
			if(!strcmp(inputtext,pData[playerid][pCode],false) && strlen(inputtext))
			{
				ShowPlayerDialog(playerid,dCodeSet1,3,"Код безопасности","Введите новый код безопасности. (Чтобы удалить код безопасности оставте поле пустым)","ОК","Назад");
			}
			else SendClientMessage(playerid,CWHITE,"» Код введен неверно");
		}
	case dChangePassCode:
		{
			if(!response) return 1;
			if(!strcmp(inputtext,pData[playerid][pCode],false) && strlen(inputtext))
			{
				ShowPlayerDialog(playerid,dChangePassPass,3,"Смена пароля","{"#cWHITE"}Введите ваш старый пароль","OK","Отмена");
			}
			else SendClientMessage(playerid,CWHITE,"» Код введен неверно");
		}
	case dChangePassPass:
		{
			if(!response) return _menu(playerid, "");
            if(!strcmp(MD5_Hash(inputtext),pData[playerid][pPassword],false,MAX_PLAYER_NAME))
			//if(!strcmp(MD5_Hash(inputtext),pData[playerid][pPassword],false) && strlen(inputtext))
			{
				ShowPlayerDialog(playerid,dChangePass1,3,"Смена пароля","{"#cWHITE"}Введите ваш новый пароль","ОК","Отмена");
			}
			else SendClientMessage(playerid,CWHITE,"» Пароль введен неверно");
		}
	case dChangePass1:
		{
			if(!response) return _menu(playerid, "");
			if(strlen(inputtext) <6 || strlen(inputtext) > 22)
			{
				SendClientMessage(playerid,CWHITE,"» Длина {fe0000}пароля должна быть от {fff606}6 {ffffff}до {fff606}22 {ffffff}символов");
				ShowPlayerDialog(playerid,dChangePass1,3,"Смена пароля","{"#cWHITE"}Введите ваш новый пароль","ОК","Отмена");
			}
			else
			{
				SetPVarString(playerid,"changepass",inputtext);
				ShowPlayerDialog(playerid,dChangePass2,3,"Смена пароля","{"#cWHITE"}Повторите ваш пароль:","ОК","Отмена");
			}
		}
	case dChangePass2:
		{
			new oldpass[25];
			GetPVarString(playerid,"changepass",oldpass,25);
			DeletePVar(playerid,"changepass");
			if(!response) return 1;
			if(!strcmp(inputtext,oldpass,false) && strlen(inputtext))
			{
				format(MD5_Hash(pData[playerid][pPassword]),MAX_PLAYER_NAME,"%s",inputtext);
    			mes = "";
				f(mes, "UPDATE `accounts` SET password = '%s' WHERE id = '%d'",MD5_Hash(inputtext),pData[playerid][pMysqlID]);
				sql_query(zConn, mes); mes = "";

				SendMes(playerid, -1, "{F3FF02}Ваш новый пароль: {3399FF}%s", inputtext);
				SendClientMessage(playerid, -1, "Рекомендуем сделать скрин {6EF83C}(клавиша F8) {FFFFFF}чтобы не забыть его");
			}
			else SendClientMessage(playerid,CWHITE,"» Введенные Вами пароли не совпадают");
		}
	case dPlayerMenuSecurityEConfirm:
		{
			if(!response) return _menu(playerid, "");
			new code;
			code = RandomEx(10000,99999);
			SetPVarInt(playerid,"emailcode",code);
			mes = "";
			f(mes, "www.state99.ru/send_form.php?authkey=4wwm1ku9wVs6ItL&type=emailactive&email=%s&code=%d",pData[playerid][pEmail],code);
			new result = HTTP(0,HTTP_HEAD,mes,"","");
			if(!result) return SendClientMessage(playerid,CWHITE,"» Произошла ошибка при http запросе");
			//printf("query: %s",mes);
			f(mes, " {"#cWHITE"}Вам на почтовый адрес {"#cBLUE"}%s{"#cWHITE"} было отправлено письмо с кодом подтверждения.\n Сверните игру, проверьте почту и введите этот код.\n {"#cRED"}ВНИМАНИЕ! Не нажимйте ESC для Выхода из паузы (т.к. окно может закрыться), используйте мышь");
			ShowPlayerDialog(playerid,dPlayerMenuSecurityEConfirm2,1,"{ffcf00}Подтверждение E-Mail",mes,"ОК","Отмена");
		}
	case dPlayerMenuSecurityEConfirm2:
		{
			if(!response) return _menu(playerid, "");
			new code = GetPVarInt(playerid,"emailcode");
			if(strval(inputtext) != code)
			{
				SendClientMessage(playerid,CRED,"Код указан неверно");
				return _menu(playerid, "");
			}
			SendClientMessage(playerid,0x7FC0E3FF,"E-Mail подтвержден. Теперь Вы можете восстановить свой пароль в любой момент.");
			UpdatePlayerData(playerid,"econfirmed",1);
		}
    case dPlayerMenuSettingsAction1:
		{
            new skin = GetPlayerSkin(playerid) - 1;
			if(!response) return 1;
			new setting = 1 << listitem;
			if(!(pData[playerid][pSett] & setting)) pData[playerid][pSett] |= setting;
			else pData[playerid][pSett] ^= setting;
			UpdatePlayerData(playerid,"sett",pData[playerid][pSett]);
			if(setting == setGlasses)
			{
				if(pData[playerid][pSett] & setGlasses)
				{
				    RemovePlayerAttachedObject(playerid, 8);
                    SetPlayerAttachedObject(playerid, 8, pData[playerid][pObjectGlasses], 2, SkinOffSetGlasses[skin][0], SkinOffSetGlasses[skin][1], SkinOffSetGlasses[skin][2], SkinOffSetGlasses[skin][3], SkinOffSetGlasses[skin][4], SkinOffSetGlasses[skin][5]);
				}
				else
				{
                    RemovePlayerAttachedObject(playerid, 8);
				}
			}
			if(setting == setHats)
			{
				if(pData[playerid][pSett] & setHats)
				{
				    RemovePlayerAttachedObject(playerid, 9);
                    SetPlayerAttachedObject(playerid, 9, pData[playerid][pObjectHat], 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				}
				else
				{
                    RemovePlayerAttachedObject(playerid, 9);
				}
			}
			ShowInv(playerid);
		}
	case dPlayerMenuSettingsMafia:
	    {
	        if(!response) return 1;
            if(listitem == 5) ShowPlayerDialog(playerid,dPlayerMenuSettingsMafia2,DIALOG_STYLE_INPUT,"{ffcf00}Стоимость","Введите стоимость за 1 материал","Изменить","Отмена");
			if(!gMafiaAcces[pData[playerid][pFraction]-13][listitem]) gMafiaAcces[pData[playerid][pFraction]-13][listitem] = true;
	        else gMafiaAcces[pData[playerid][pFraction]-13][listitem] = false;
	        ShowSettingsMafia(playerid);

	    }
	case dPlayerMenuSettingsMafia2:
	    {


	    }
	case dPlayerMenuSettingsAction:
		{
			if(!response) return 1;
			new setting = 1 << listitem;
			if(!(pData[playerid][pSettings] & setting)) pData[playerid][pSettings] |= setting;
			else pData[playerid][pSettings] ^= setting;
			UpdatePlayerData(playerid,"settings",pData[playerid][pSettings]);
			if(setting == setShowNickname)
			{
				if(pData[playerid][pSettings] & setShowNickname)
				{
					for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
					{
					    i = cvector_get(PLAYERS, idx);
						ShowPlayerNameTagForPlayer(playerid,i,1);
					}
				}
				else
				{
					for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
					{
					    i = cvector_get(PLAYERS, idx);
						ShowPlayerNameTagForPlayer(playerid,i,0);
					}
				}
			}
			ShowSettings(playerid);
		}
	case dBuyBomb:
		{
		    if(!response) return 1;
		    if(!IsAGang(playerid)) return SendClientMessage(playerid, -1, ">> Вы не состоите в банде");
			SetPVarInt(playerid, "BombaBuy", 2);
			TransferMoney(playerid,-1,200,"dozer");
			SendClientMessage(playerid,COLOR_GREEN,"Вы купили 2 взрывчатки. {FFCD00}(При выходе из игры они удаляться)");
			SendClientMessage(playerid,COLOR_GREEN,"Используйте такие комманды как: {FFCD00}/detonator /breakdoor");

		}
	case dCancelInfoCasino:
		{
		    if(!response) return 1;
		    for(new i; i < 14; i++)
		    {
		        PlayerTextDrawDestroy(playerid,gInfoCasino[i]);
		    }
		    SetPVarInt(playerid, "dCancelInfoCasino1", 0);
		}
	case dBuyTuning:
	    {
	        new vehcar = GetPVarInt(playerid, "vtuning");
			new component = GetPVarInt(playerid, "vcomponent");
			if(!response) return RemoveVehicleComponent(vehcar,component);
			if(GetPlayerMoney(playerid) < 5000) return RemoveVehicleComponent(vehcar,component);
		    for(new i; i < sizeof(gCars); i++)
			{
				if(gCars[i][carVid] != vehcar) continue;
				for(new i2;i2<14;i2++)
				{
				    if(GetVehicleComponentType(component) == i2)
				    {
						gCars[i][carTuning][i2] = component;
					}
				}
				break;
			}
		    SaveServerData2(playerid, vehcar);
	        TransferMoney(playerid,-1,500,"tuning");
	    }

	case dJob1234:
		{
			if(!response) return 1;
			if(!pTemp[playerid][pWork])
			{
				pTemp[playerid][pWork] = 11;
				SetPlayerSkinNA(playerid, 23);
				SendClientMessage(playerid, COLOR_GREEN, "Вы переоделись, можете идти на занятия");
			}
			else if(pTemp[playerid][pWork] == 11)
			{
			    pTemp[playerid][pWork] = 0;
				SetPlayerSkin(playerid,pTemp[playerid][pCSkin]);
			}
		}
 	case dJob123:
		{
			if(!response) return 1;
			if(!pTemp[playerid][pWork])
			{
				pTemp[playerid][pWorkGruzObject] = 0;
				pTemp[playerid][pWorkGruzSkin] = GetPlayerSkin(playerid);
				pTemp[playerid][pWork] = 5;
				SetPlayerSkin(playerid, 161);
				SendClientMessage(playerid, COLOR_GREEN, "Вы устроились на работу фермера");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Следуйте к дереву, чтобы набрать яблок. {ffffff}Используйте: \"левую кнопку мыши (огонь)\"");
				SetPVarInt(playerid,"MinerCount", 0);
				SetPlayerAttachedObject(playerid,0,1356,6,0.166000,-0.045999,0.073999,89.099990,-9.800000,105.999992,0.550999,0.520999,0.517999);
			}
			else if(pTemp[playerid][pWork] == 5)
			{
			    if(IsPlayerAttachedObjectSlotUsed(playerid, 0))RemovePlayerAttachedObject(playerid,0);
	    		if(IsPlayerAttachedObjectSlotUsed(playerid, 1))RemovePlayerAttachedObject(playerid,1);
	    		if(IsPlayerAttachedObjectSlotUsed(playerid, 2))RemovePlayerAttachedObject(playerid,2);
	   		 	if(IsPlayerAttachedObjectSlotUsed(playerid, 3))RemovePlayerAttachedObject(playerid,3);
	    		if(IsPlayerAttachedObjectSlotUsed(playerid, 4))RemovePlayerAttachedObject(playerid,4);
	    		if(IsPlayerAttachedObjectSlotUsed(playerid, 5))RemovePlayerAttachedObject(playerid,5);
				pTemp[playerid][pWork] = 0;
				SetPlayerSkin(playerid, pTemp[playerid][pWorkGruzSkin]);
				DisablePlayerCheckpoint(playerid);
				SetPlayerSpecialAction(playerid, 0);
				mes = "";
				f(mes, "» Вы заработали {FFCD00}%d$ {33AAFF}.Приходите еще",pTemp[playerid][pGraffityID]);
				SendClientMessage(playerid,COLOR_GREEN,mes);
				TransferMoney(-1,playerid,pTemp[playerid][pGraffityID],"work");
				pTemp[playerid][pGraffityID] = 0;
			}
		}
	case dBenzWork:
		{
			if(!response) return 1;
			if(!pTemp[playerid][pWork])
			{
				if(pData[playerid][pFraction]) return SendClientMessage(playerid, -1, ">> Вы состоите в организации");
				if(pData[playerid][pLevel] < 3) return SendClientMessage(playerid, -1, ">> Вам нужен уровень не меньше 3-его");
				pTemp[playerid][pWork] = 8;
				SetPlayerSkinNA(playerid,260);
				SetPVarInt(playerid,"perenos",0);
				SendClientMessage(playerid,CWHITE,"Поздравляем. Теперь идите и садитесь в {"#cRED"}фуру{"#cWHITE"}, чтобы развезти бензин.");
			}
			else if(pTemp[playerid][pWork] == 8)
			{
				pTemp[playerid][pWork] = 0;
				SetPlayerSkin(playerid,pTemp[playerid][pCSkin]);
				if(pTemp[playerid][pTruckWagonText] != Text3D:INVALID_3DTEXT_ID) DestroyDynamic3DTextLabelEx(pTemp[playerid][pTruckWagonText]);
			}
		}
	case dCoalwork:
		{
			if(!response) return 1;
			if(!pTemp[playerid][pWork])
			{
				pTemp[playerid][pWork] = 2;
				SetPlayerSkinNA(playerid,260);
				SetPVarInt(playerid,"perenos",0);
				SendClientMessage(playerid,CWHITE,"Поздравляем. Теперь идите на {"#cRED"}чекпоинт{"#cWHITE"}, чтобы взять мешок с железом.");
				new id = RandomEx(0,2);
				SetPlayerCheckpoint(playerid,gCoalManCPs[id][0],gCoalManCPs[id][1],gCoalManCPs[id][2],3.0);
				SetPVarInt(playerid,"loadid",id);
			}
			else if(pTemp[playerid][pWork] == 2)
			{
				pTemp[playerid][pWork] = 0;
				DeletePVar(playerid,"coalamount");
				DeletePVar(playerid,"loadid");
				RemovePlayerAttachedObject(playerid,0);
				SetPlayerSkin(playerid,pTemp[playerid][pCSkin]);
				DisablePlayerCheckpoint(playerid);
				mes = "";
				f(mes, "» Вы заработали {FFFFFF}%d$. Приходите еще",GetPVarInt(playerid,"fullam"));
				SendClientMessage(playerid,-1,mes);
				SetPlayerSpecialAction(playerid, 0);
				TransferMoney(-1,playerid,GetPVarInt(playerid,"fullam"),"coal");
				pTemp[playerid][pWorkSalary] = 0;
				DeletePVar(playerid,"fullam");
			}
		}
  case dPesokWork:
		{
			if(!response) return 1;
			if(!pTemp[playerid][pWork])
			{
			    if(pData[playerid][pLevel] < 2) return SendClientMessage(playerid, -1, "Вам нужен 2 уровень");
				pTemp[playerid][pWork] = 10;
				SetPlayerSkinNA(playerid, 27);
				SendClientMessage(playerid,CWHITE,"Поздравляем. Теперь берите машину и езжайте грузите {"#cRED"}песок{"#cWHITE"}.");
				pTemp[playerid][pPesokID] = INVALID_VEHICLE_ID;
			}
			else if(pTemp[playerid][pWork] == 10)
			{
				pTemp[playerid][pWork] = 0;
				SetPlayerSkin(playerid,pTemp[playerid][pCSkin]);
				mes = "";
				f(mes, "» Вы заработали {FFCD00}%d$. {33AAFF}Приходите еще",pTemp[playerid][pWorkSalary]);
				SendClientMessage(playerid,COLOR_GREEN,mes);


				PesokSpawn(playerid);


			}
		}
	case dGruzWork:
		{
			if(!response) return 1;
			if(!pTemp[playerid][pWork])
			{
			    if(pData[playerid][pLevel] < 2) return SendClientMessage(playerid, -1, "Вам нужен 2 уровень");
				pTemp[playerid][pWork] = 7;
				SetPlayerSkinNA(playerid, 27);
				SendClientMessage(playerid,CWHITE,"Поздравляем. Теперь берите машину и езжайте на {"#cRED"}ферму{"#cWHITE"}.");
				pTemp[playerid][pVinogradID] = INVALID_VEHICLE_ID;
			}
			else if(pTemp[playerid][pWork] == 7)
			{
				pTemp[playerid][pWork] = 0;
				SetPlayerSkin(playerid,pTemp[playerid][pCSkin]);
				mes = "";
				f(mes, "» Вы заработали {FFCD00}%d$. {33AAFF}Приходите еще",pTemp[playerid][pWorkSalary]);
				SendClientMessage(playerid,COLOR_GREEN,mes);

                VingoSpawn(playerid);


			}
		}
	case dVodkaWork:
		{
			if(!response) return 1;
			if(!pTemp[playerid][pWork])
			{
				pTemp[playerid][pWork] = 6;
				SetPlayerSkinNA(playerid, 27);
				SendClientMessage(playerid,CWHITE,"Поздравляем. Теперь идите на {"#cRED"}пикап{"#cWHITE"}, и разливайте вино.");
			}
			else if(pTemp[playerid][pWork] == 6)
			{
				pTemp[playerid][pWork] = 0;
				DeletePVar(playerid,"woodamount1");
				DeletePVar(playerid,"loadid");
				RemovePlayerAttachedObject(playerid,0);
			    RemovePlayerAttachedObject(playerid,1);
			    RemovePlayerAttachedObject(playerid,2);
			    RemovePlayerAttachedObject(playerid,3);
			    RemovePlayerAttachedObject(playerid,4);
			    RemovePlayerAttachedObject(playerid,5);
				SetPlayerSkin(playerid,pTemp[playerid][pCSkin]);
				DisablePlayerCheckpoint(playerid);
				mes = "";
				f(mes, "» Вы заработали {FFCD00}%d$. {33AAFF}Приходите еще",pTemp[playerid][pWorkSalary]);
				SendClientMessage(playerid,COLOR_GREEN,mes);
				TransferMoney(-1,playerid,pTemp[playerid][pWorkSalary],"wood");
				pTemp[playerid][pWorkSalary] = 0;
				SetPlayerSpecialAction(playerid, 0);
			}
		}
	case dWoodwork:
		{
			if(!response) return 1;
			if(!pTemp[playerid][pWork])
			{
				pTemp[playerid][pWork] = 3;
				SetPlayerSkinNA(playerid, 133);
				SendClientMessage(playerid,CWHITE,"Поздравляем. Теперь идите на {"#cRED"}чекпоинт{"#cWHITE"}, чтобы собрать {8f68ff}виноград.");
				new id = RandomEx(0,27);
				SetPlayerCheckpoint(playerid,gWoodCPs[id][0],gWoodCPs[id][1],gWoodCPs[id][2],1.0);
				SetPVarInt(playerid,"loadid",id);
			}
			else if(pTemp[playerid][pWork] == 3)
			{
				pTemp[playerid][pWork] = 0;
				DeletePVar(playerid,"woodamount");
				DeletePVar(playerid,"loadid");
				RemovePlayerAttachedObject(playerid,0);
			    RemovePlayerAttachedObject(playerid,1);
			    RemovePlayerAttachedObject(playerid,2);
			    RemovePlayerAttachedObject(playerid,3);
			    RemovePlayerAttachedObject(playerid,4);
			    RemovePlayerAttachedObject(playerid,5);
				SetPlayerSkin(playerid,pTemp[playerid][pCSkin]);
				DisablePlayerCheckpoint(playerid);
				mes = "";
				f(mes, "» Вы заработали {FFCD00}%d$. {33AAFF}Приходите еще",pTemp[playerid][pWorkSalary]);
				SendClientMessage(playerid,COLOR_GREEN,mes);
				TransferMoney(-1,playerid,pTemp[playerid][pWorkSalary],"wood");
				pTemp[playerid][pWorkSalary] = 0;
				SetPlayerSpecialAction(playerid, 0);
			}
		}
	case dGunWork:
		{
			if(!response) return 1;
			if(!pTemp[playerid][pWork])
			{
				pTemp[playerid][pWork] = 4;
				SetPlayerSkinNA(playerid,27);
				SendClientMessage(playerid,COLOR_GREEN,"Поздравляем. Теперь идите на {FFCD00}желтый маркер{33AAFF}, чтобы взять заготовку.");
				SetPVarInt(playerid,"varioty",40);
			}
			else if(pTemp[playerid][pWork] == 4)
			{
				pTemp[playerid][pWork] = 0;
				if(GetPVarInt(playerid,"pgunobject"))
				{
					new objectid = GetPVarInt(playerid,"pgunobject");
					if(IsValidDynamicObject(objectid)) DestroyDynamicObject(objectid);
					DeletePVar(playerid,"pgunobject");
				}
				DeletePVar(playerid,"gunamount");
				RemovePlayerAttachedObject(playerid,0);
				/*if(!pData[playerid][pFraction]) SetPlayerSkin(playerid,pData[playerid][pSkin]);
				else SetPlayerSkin(playerid,pData[playerid][pFractionSkin]);*/
				SetPlayerSkin(playerid,pTemp[playerid][pCSkin]);
				mes = "";
				f(mes, "» Вы заработали {FFCD00}%d$. {33AAFF}Приходите еще",pTemp[playerid][pWorkSalary]);
				SendClientMessage(playerid,COLOR_GREEN,mes);
				TransferMoney(-1,playerid,pTemp[playerid][pWorkSalary],"gun");
				pTemp[playerid][pWorkSalary] = 0;
				SetPlayerSpecialAction(playerid, 0);
				DeletePVar(playerid,"varioty");
			}
		}
	case dHire:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: //Дальнобойщик
				{
					if(pData[playerid][pJob] == 3) return SendClientMessage(playerid,CWHITE,"» Вы уже устроены на данную работу");
					pData[playerid][pJob] = 3;
					UpdatePlayerData(playerid,"job",3);
					SendClientMessage(playerid,CYELLOW,"Поздравляем!");
					SendClientMessage(playerid,COLOR_GREEN,"» Вы были приняты на работу {FFCD00}таксиста.");
					SendClientMessage(playerid,COLOR_GREEN,"» Чтобы начать работу арендуйте такси в таксопарке {FFCD00}(/gps - Общественые места)");
					SendClientMessage(playerid,COLOR_GREEN,"» Чтобы арендовать такси Вам нужно просто сесть в него.");
				}
			case 1: //Автобусник
				{
				    if(pData[playerid][pJob] == 1) return SendClientMessage(playerid,CWHITE,"» Вы уже устроены на данную работу");
					pData[playerid][pJob] = 1;
					UpdatePlayerData(playerid,"job",1);
					SendClientMessage(playerid,CYELLOW,"Поздравляем!");
					SendClientMessage(playerid,COLOR_GREEN,"» Вы были приняты на работу водителя {FFCD00}автобуса.");
					SendClientMessage(playerid,COLOR_GREEN,"» Чтобы начать работу арендуйте автобус на ближайшей автобусной станции {FFCD00}(/gps - Общественные места).");
					SendClientMessage(playerid,COLOR_GREEN,"» Чтобы арендовать автобус Вам нужно просто сесть в него.");
				}
			case 2: //Механик
				{
				    if(pData[playerid][pJob] == 4) return SendClientMessage(playerid,CWHITE,"» Вы уже устроены на данную работу");
					pData[playerid][pJob] = 4;
					UpdatePlayerData(playerid,"job",4);
					SendClientMessage(playerid,CYELLOW,"Поздравляем!");
					SendClientMessage(playerid,COLOR_GREEN,"» Вы были приняты на работу {FFCD00}механика.");
					SendClientMessage(playerid,COLOR_GREEN,"» Чтобы начать работу арендуйте рабочий траспорт на стоянке {FFCD00}(/gps - Общественые места).");
					SendClientMessage(playerid,COLOR_GREEN,"» Чтобы арендовать транспорт Вам нужно просто сесть в него.");
				}
			case 3:
			    {
			    	if(pData[playerid][pJob] == 6) return SendClientMessage(playerid,CWHITE,"» Вы уже устроены на данную работу");
			        pData[playerid][pJob] = 6;
					UpdatePlayerData(playerid,"job", 6);
					SendClientMessage(playerid,CYELLOW,"Поздравляем!");
					SendClientMessage(playerid,COLOR_GREEN,"» Вы были приняты на работу {FFCD00}промоутера.");
					SendClientMessage(playerid,COLOR_GREEN,"» Чтобы начать работу возьмите листовки они находятся в комнате позади Вас.");
					SendClientMessage(playerid,COLOR_GREEN,"» Чтобы раздавать листовки используте команду {FFCD00}(/givelist).");

			    }
			}
		}
	case dBusRent:
		{
			if(!response) return RemovePlayerFromVehicle(playerid);
			ShowPlayerDialog(playerid,dBusRoute,2,"{ffcf00}Выберите маршрут:","1 » Метро Лос-Сантос - Винный Завод\n2 » Метро Лос-Сантос - Яблочная Ферма","ОК","Отмена");
		}
	case dBusRoute:
		{
			if(!response) return RemovePlayerFromVehicle(playerid);
			SetPVarInt(playerid,"pbusroute",listitem);
			ShowPlayerDialog(playerid,dBusPrice,1,"{ffcf00}Цена за проезд","{"#cWHITE"}Введите стоимость проезда:","ОК","Отмена");
		}
	case dBusPrice:
		{
			if(!response) return RemovePlayerFromVehicle(playerid);
			if(!strlen(inputtext) || !isNumeric(inputtext))
			{
				SendClientMessage(playerid,CWHITE,"» Цена должна быть указана цифрами");
				return ShowPlayerDialog(playerid,dBusPrice,1,"{ffcf00}Цена за проезд","{"#cWHITE"}Введите цену билета:","ОК","Отмена");
			}
			new price = strval(inputtext);
			if(price < 50 || price > 200)
			{
				SendClientMessage(playerid,CWHITE,"» Цена должна быть от 50 до 200$");
				return ShowPlayerDialog(playerid,dBusPrice,1,"{ffcf00}Цена за проезд","{"#cWHITE"}Введите цену билета:","ОК","Отмена");
			}
			new vehicleid = GetPlayerVehicleID(playerid);
			new model = GetVehicleModel(vehicleid);
			new route = GetPVarInt(playerid,"pbusroute");
			DeletePVar(playerid,"pbusroute");
			if(vehicleid == INVALID_VEHICLE_ID || (model != 431 && model != 437)) return 1;
			TransferMoney(playerid,-1,50,"busrent");
			new routename[56];
			switch(route)
			{
				case 0: routename = "Метро Лос-Сантос » Винный Завод";
				case 1: routename = "Метро Лос-Сантос » Яблочная Ферма";
				//case 2: routename = "Метро Лос-Сантос » Университет";
			}
			mes = "";
			f(mes, "{3399FF}%s\n{FFFFFF}Номер маршрута: {ff8300}%i\n{FFFFFF}Стоимость проезда: {"#cLIGHTBLUE"}%d$",routename,route,price);
			if(!IsValid3DTextLabel(pTemp[playerid][pBusText])) pTemp[playerid][pBusText] = CreateDynamic3DTextLabel(mes,CWHITE,0.0,0.0,3.0,40.0,INVALID_PLAYER_ID,vehicleid);
			pTemp[playerid][pBusID] = vehicleid;
			pTemp[playerid][pBusRoute] = route;
			pTemp[playerid][pBusPrice] = price;
			pTemp[playerid][pBusPos] = 0;
			pTemp[playerid][pBusDemage] = 1000.0;
			if(route == 0) SetPlayerRaceCheckpoint(playerid,0,LS_001[0][0],LS_001[0][1],LS_001[0][2],LS_001[0][3],LS_001[0][4],LS_001[0][5],5.0);
			if(route == 1) SetPlayerRaceCheckpoint(playerid,0,LS_002[0][0],LS_002[0][1],LS_002[0][2],LS_002[0][3],LS_002[0][4],LS_002[0][5],5.0);
			if(route == 2) SetPlayerRaceCheckpoint(playerid,0,UNI_001[0][0],UNI_001[0][1],UNI_001[0][2],UNI_001[0][3],UNI_001[0][4],UNI_001[0][5],5.0);
			//SetNextBusCP(playerid,0);
			//SetPlayerRaceCheckpoint(playerid,0,gBusCPs[route][0][0],gBusCPs[route][0][1],gBusCPs[route][0][2],gBusCPs[route][1][0],gBusCPs[route][1][1],gBusCPs[route][1][2],4.0);
		}
	case dBusEnd:
		{
			if(!response) return 1;
			else
			{
				SetVehicleToRespawnEx(pTemp[playerid][pBusID]);
				BusSpawn(playerid);
				return 1;
			}
		}

	/*case dTruckWEnd:
		{
			if(!response) return 1;
			if(GetPVarInt(playerid,"exitedtrans") != 1) return SendClientMessage(playerid,CRED,"Нельзя выходить из т/c");
			SetVehicleToRespawnEx(pTemp[playerid][pTruckID]);
			if(IsValid3DTextLabel(pTemp[playerid][pTruckWagonText])) DestroyDynamic3DTextLabel(pTemp[playerid][pTruckWagonText]);
			pTemp[playerid][pTruckID] = INVALID_VEHICLE_ID;
			if(pTemp[playerid][pTruckWagonID] != INVALID_VEHICLE_ID)
			{
				DestroyVehicle(pTemp[playerid][pTruckWagonID]);
				pTemp[playerid][pTruckWagonID] = INVALID_VEHICLE_ID;
			}
			for(new i2;i2<2;i2++)
			{
				for(new i;i<10;i++)
				{
					if(gTruckLoadTurn[i2][i] == playerid || gTruckLoadTurn[i2][i] == playerid) gTruckLoadTurn[i2][i] = INVALID_PLAYER_ID;
				}
			}
			SendClientMessage(playerid,COLOR_GREY,"Рабочее т/с было отбуксировано.");

			return 1;
			//TruckerSpawn(playerid);
		}*/
	case dTaxiWEnd:
		{
			if(!response) return 1;
			TaxiSpawn(playerid);
			return 1;
		}
	case dSetSpawn:
		{

			new zS[156];
			if(listitem == 0)
			{
				if(!pData[playerid][pHouse]) return SendClientMessage(playerid, CWHITE,"» У Вас нет дома");
				switch(listitem)
				{
				case 0: format(zS, sizeof(zS), "Теперь Вы будете появляться дома");
				case 1: format(zS, sizeof(zS), "Теперь Вы будете появляться на базе Вашей организации");
				}
			}
			else if(listitem == 1)
			{
				if(!pData[playerid][pFraction]) return SendClientMessage(playerid, CWHITE,"» Вы не в организации");
				switch(listitem)
				{
					case 0: format(zS, sizeof(zS), "Теперь Вы будете появляться дома");
					case 1: format(zS, sizeof(zS), "Теперь Вы будете появляться на базе Вашей организации");
				}
			}
			pData[playerid][pSpawn] = listitem+1;
			SendClientMessage(playerid, -1, zS);
			UpdatePlayerData(playerid, "spawn", listitem+1);
		}

	case dSetRadio:
		{
			if(!response) return 1;
   			pData[playerid][pRadio] = listitem+1;
			UpdatePlayerData(playerid, "radio", listitem+1);
			new zStr[64];
			switch(listitem)
			{
			case 0: format(zStr, 64, "Вы переключились на радиостанцию г. Лос-Сантос");
			case 1: format(zStr, 64, "Вы переключились на радиостанцию г. Лас-Вентурас");
			case 2: format(zStr, 64, "Вы переключились на радиостанцию г. Сан-Фиеро");
			}
			SendClientMessage(playerid, COLOR_WHITE, zStr);
		}


	/*case dTruckRent:
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			new price = GetPVarInt(playerid,"truckprice");
			DeletePVar(playerid,"truckprice");
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
			if(!response || vehicleid == INVALID_VEHICLE_ID) return RemovePlayerFromVehicle(playerid);
			pTemp[playerid][pTruckID] = vehicleid;
			TransferMoney(playerid,-1,price,"truckrent");
			if(vehicleid >= aFuel[0] && vehicleid < aFuel[1]) {
				SendClientMessage(playerid,0x7FC0E3FF,"Вы арендовали грузовик. Для просмотра доступных заказов подъезжайте к маркеру на радаре.");
				SetPlayerCheckpoint(playerid,249.3104,1395.4984,10.5859,4.0);
				pTemp[playerid][pGPS] = true;
				return 1;
			}
			SendClientMessage(playerid,0x7FC0E3FF,"Вы арендовали грузовик. Используйте /gps => Дальнобойщики, чтобы найти один из пунктов загрузки");
		}*/
	/*case dTruckLoad:
		{
			if(!response) return 1;
			new amount = strval(inputtext);
			new maxamount = GetPVarInt(playerid,"maxamount");
			new loadid = GetPVarInt(playerid,"loadid");
			if(amount < 1 || amount > maxamount)
			{
				SFCM(playerid,CWHITE,"» Значение должно быть от 1 до %d",maxamount);
				if(!loadid)
				{
					SPFDD(playerid,dTruckLoad,1,"{ffcf00}Загрузка железа","OK","Отмена","Сколько железа Вы хотите загрузить? (макс. %d кг)",maxamount);
				}
				else
				{
					SPFDD(playerid,dTruckLoad,1,"{ffcf00}Загрузка древесины","OK","Отмена","Сколько железа Вы хотите загрузить? (макс. %d кг)",maxamount);
				}
				return 1;
			}
			new price = gTruckLoadPrice[loadid]*amount;
			if(GetPlayerMoneyEx(playerid) < price)
			{
				SendClientMessage(playerid,CWHITE,"» Недостаточно денег");
				return 1;
			}
			new ll;
			for (new i;i<10;i++)
			{
				if(gTruckLoadTurn[loadid][i] == INVALID_PLAYER_ID || i == playerid) continue;
				ll += GetPVarInt(gTruckLoadTurn[loadid][i],"truckamount");
			}
			new warehouse;
			if(loadid == 0) warehouse = gCoalWH;
			else warehouse = gWoodWH;
			if(loadid == 0 && warehouse - ll < amount) return SendClientMessage(playerid,CWHITE,"» Недостаточно железа на складе, либо весь Железо распределен между дальнобойщиками в очереди");
			else if(loadid && warehouse - ll < amount) return SendClientMessage(playerid,CWHITE,"» Недостаточно древесины на складе, либо вся древесина распределена между дальнобойщиками в очереди");
			for(new i;i<10;i++)
			{
				if(gTruckLoadTurn[loadid][i] == INVALID_PLAYER_ID)
				{
					gTruckLoadTurn[loadid][i] = playerid;
					SFCM(playerid,CWHITE,"Вы номер %d в очереди на загрузку",i+1);
					SetPVarInt(playerid,"truckamount",amount);
					SetPVarInt(playerid,"truckonroad",0);
					SetPVarInt(playerid,"waitgruz",0);
					TransferMoney(playerid,-1,price,"truckload");
					DeletePVar(playerid,"maxamount");
					return 1;
				}
			}
			SendClientMessage(playerid,CWHITE,"» Нет места в очереди. Подождите пожалуйста");
		}*/
	case dTaxiRent:
		{
			if(!response) return RemovePlayerFromVehicle(playerid);
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
			new vehicleid = GetPlayerVehicleID(playerid);
			TransferMoney(playerid,-1,100,"taxirent");
			pTemp[playerid][pTaxiID] = vehicleid;
			SendClientMessage(playerid,0x7FC0E3FF,"Вы арендовали такси.");
			SendClientMessage(playerid,CYELLOW,"/taxi{"#cWHITE"} - запросить у пассажира место назначения");
			SendClientMessage(playerid,CYELLOW,"/fare{"#cWHITE"} - установить стоимость проезда");
		}
	case dLoginAdmins1:
	    {
	        if(strval(inputtext) != zbtpass || !response) return SendClientMessage(playerid,CYELLOW,"Вы ввели не верный пароль от ЗБТ"), NewKick(playerid);
	        DialogRegister(playerid);
	        KillTimer(pTemp[playerid][pWorldKick]);
	        pTemp[playerid][pWorldKick] = -1;
	    }
	case dLoginAdmins:
		{
			if(strval(inputtext) != admpass || !response) return NewKick(playerid);
			pTemp[playerid][admloged] = 1;
			new send[128],pip[24];
			GetPlayerIp(playerid,pip,24);
			if(pData[playerid][pAdmin] >= 1 && pData[playerid][pAdmin] <= 4) SendMes(playerid, CYELLOW, "Вы вошли как администратор %d-го уровня",pData[playerid][pAdmin]);
			else if(pData[playerid][pAdmin] == 5) SendClientMessage(playerid, CYELLOW, "Вы вошли как главный администратор");
			format(send,sizeof(send),"%s авторизовался [IP: %s]",pData[playerid][pNickname],pip);
			AdminChat(0xc3ef15FF, send);
			return 1;
		}
	case dCreatehouse1:
		{
			if(!response) return 1;
			gCreatehouse[playerid][chouseHint] = listitem;
			ShowPlayerDialog(playerid,dCreatehouse2,1,"{ffcf00}Создание жилища","Укажите цену за квартиру/дом (от 1 тыс. до 10 млн.)","Далее","Выход");
		}
	case dCreatehouse2:
		{
			if(!response) return 1;
			new price = strval(inputtext);
			if(!isNumeric(inputtext) || price < 1000 || price > 10000000)
			{
				SendClientMessage(playerid,CRED,"Неверная цена");
				ShowPlayerDialog(playerid,dCreatehouse2,1,"{ffcf00}Создание жилища","Укажите цену за квартиру/дом (от 1 тыс. до 10 млн.)","Далее","Выход");
				return 1;
			}
			gCreatehouse[playerid][chousePrice] = price;
			ShowPlayerDialog(playerid,dCreatehouse3,2,"{ffcf00}Создание жилища","Эконом класс\nСредний класс\nЭлитный класс\nОсобняк","Создать","Выход");
		}
	case dCreatehouse3:
		{
			if(!response) return 1;
			new clas=listitem;
			new Float:x, Float:y, Float:z, Float:r;
			GetPlayerPos(playerid,x,y,z);
			GetPlayerFacingAngle(playerid,r);
			gHouseCount++;
			mes = "";
			f(mes, "INSERT INTO `houses` VALUES('','%d','3','%d','%d','0|0|0|0|0','0|0|0|0|0|0|0|0|0','0|0|0|0','0','0','0','0','0','%f','%f','%f','%f','','','','','','','','','','','','','3')",clas,gCreatehouse[playerid][chousePrice],gCreatehouse[playerid][chouseHint],x,y,z,r);
            sql_query(zConn, mes); mes = "";
			//new Result:d = sql_query(zConn, mes, QUERY_CACHED);
			/*new houseid = sql_insert_id(d);
			sql_free_result(d);
			new i = houseid - 1;*/
			SPFDD(playerid,dMes,0,"Результат","ОК","","Создан дом. ID: {ffcf00}%d",gHouseCount);
			gHouses[gHouseCount][houseID] = gHouseCount;
			gHouses[gHouseCount][houseClass] = clas;
			gHouses[gHouseCount][housePrice] = gCreatehouse[playerid][chousePrice];
			gHouses[gHouseCount][houseHint] = gCreatehouse[playerid][chouseHint];
			gHouses[gHouseCount][houseX] = x;
			gHouses[gHouseCount][houseY] = y;
			gHouses[gHouseCount][houseZ] = z;
			gHouses[gHouseCount][houseR] = r;
			//gHouseArea[gHouseCount] = CreateDynamicSphere(gHouses[gHouseCount][houseX],gHouses[gHouseCount][houseY],gHouses[gHouseCount][houseZ],2.0,0,0,-1);
			gHousePickup[gHouseCount] = CreateDynamicPickup(1273,1,gHouses[gHouseCount][houseX],gHouses[gHouseCount][houseY],gHouses[gHouseCount][houseZ]);
		}
	case dHints:
		{
			if(!response) return 1;
			new hintid = listitem;
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid,x,y,z);
			SetPVarFloat(playerid,"oldx",x);
			SetPVarFloat(playerid,"oldy",y);
			SetPVarFloat(playerid,"oldz",z);
			SetPlayerInterior(playerid,gHints[hintid][hintInterior]);
			SetPlayerVirtualWorld(playerid,hintid+500);
			SetPlayerPos(playerid,gHints[hintid][hintX],gHints[hintid][hintY],gHints[hintid][hintZ]);

		}
	case dHouseInfo:
		{
			if(!response) return 1;
			new houseid = pTemp[playerid][pSelectedHouseID];
			if(!gHouses[houseid][houseOwnerID])
			{
				if(pData[playerid][pHouse]) return SendClientMessage(playerid,CWHITE,"» У Вас уже есть дом");
				SPFDD(playerid,dHouseBuy,0,"Частный дом","Да","Нет","{"#cWHITE"}Вы действительно хотите купить этот дом за {ffcf00}%d$?",gHouses[houseid][housePrice]*10);
			}
			else
			{
				if(gHouses[houseid][houseClose]) return GameTextForPlayer(playerid,"~r~closed",2000,1);
				SetPlayerInterior(playerid,gHints[gHouses[houseid][houseHint]][hintInterior]);
				SetPlayerPos(playerid,gHints[gHouses[houseid][houseHint]][hintX],gHints[gHouses[houseid][houseHint]][hintY],gHints[gHouses[houseid][houseHint]][hintZ]);
				SetPlayerFacingAngle(playerid,gHints[gHouses[houseid][houseHint]][hintR]);
				SetPlayerVirtualWorld(playerid,houseid+1);
				pTemp[playerid][pIsInHouse] = true;
			}
		}
	case dHouseBuy:
		{
			if(!response) return 1;
			new houseid = pTemp[playerid][pSelectedHouseID];
			if(!gHouses[houseid][houseOwnerID])
			{
				if(pData[playerid][pHotel] > 0) return SendClientMessage(playerid,CWHITE,"» У вас есть комната в отеле, сначало выселитесь из отеля");
				new price = gHouses[houseid][housePrice]*10;
				if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег на руках");
				mes = "";
				f(mes, "UPDATE `houses` SET `ownerid` = '%d', `owner` = '%s' WHERE `id` = '%d'",pData[playerid][pMysqlID],pData[playerid][pNickname],gHouses[houseid][houseID]);
				sql_query(zConn, mes); mes = "";
				UpdatePlayerData(playerid,"house",gHouses[houseid][houseID]);
				gHouses[houseid][houseOwnerID] = pData[playerid][pMysqlID];
				format(gHouses[houseid][houseOwner],MAX_PLAYER_NAME,"%s",pData[playerid][pNickname]);
				pData[playerid][pHouse] = gHouses[houseid][houseID];
				SendClientMessage(playerid,0x7FC0E3FF,"Вы купили дом.");
				gHouses[houseid][houseDays] = 3;
				f(mes, "UPDATE `houses` SET `day` = '3' WHERE id = '%d'",pData[playerid][pHouse]);
				sql_query(zConn, mes); mes = "";
				PlayerPlaySound(playerid,1185,0.0,0.0,0.0);
				SetTimerEx("PlayerPlaySoundDelay",6900,false,"ii",playerid,1186);
				TransferMoney(playerid,-1,price,"buyhouse");
				DestroyDynamicPickup(gHousePickup[houseid]);
				gHousePickup[houseid] = CreateDynamicPickup(1272,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ]);
				DestroyDynamicMapIcon(gHouseIcon[houseid]);
				gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],32,CWHITE);

			}
		}
	case dSellHouse:
		{
			if(!response) return 1;
			new houseid = pData[playerid][pHouse]-1;
			UpdatePlayerData(playerid,"house",0);
			mes = "";
			f(mes, "UPDATE `houses` SET `ownerid` = '0', `owner` = '', `days` = '3', improve = '0|0|0|0|0|0|0', gun = '0|0|0|0|0|0|0|0|0', skin = '0|0|0|0',safecode='0', safemoney='0', drugs='0', products='0',inhabit2id = '0',inhabit3id = '0',inhabit4id = '0',inhabit2='',inhabit3='',inhabit4='' WHERE `id` = '%d'",houseid+1);
			sql_query(zConn, mes); mes = "";
			pData[playerid][pHouse] = 0;
			gHouses[houseid][houseOwnerID] = 0;
			strdel(gHouses[houseid][houseOwner],0,24);
			strdel(gHouseHabits[houseid][0],0,24);
			strdel(gHouseHabits[houseid][1],0,24);
			strdel(gHouseHabits[houseid][2],0,24);
			gHouses[houseid][houseHabitID][0] = 0;
			gHouses[houseid][houseHabitID][1] = 0;
			gHouses[houseid][houseHabitID][2] = 0;
			for(new i;i<9;i++)
			{
				if(i < 6)
				{
					gHouses[houseid][houseImprove][i] = 0;
				}
				gHouses[houseid][houseGun][i] = 0;
			}
			pData[playerid][pSpawn] = 1;
			UpdatePlayerData(playerid, "spawn", pData[playerid][pSpawn]);
			gHouses[houseid][houseSafeCode] = 0;
			gHouses[houseid][houseSafeMoney] = 0;
			gHouses[houseid][houseDrugs] = 0;
			gHouses[houseid][houseProducts] = 0;
			TransferMoney(-1,playerid,gHouses[houseid][housePrice]/100*80,"gossellhouse");
			DestroyDynamicPickup(gHousePickup[houseid]);
			gHousePickup[houseid] = CreateDynamicPickup(1273,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ]);
			DestroyDynamicMapIcon(gHouseIcon[houseid]);
			gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],31,CWHITE);
			SendClientMessage(playerid,0x7FC0E3FF,"Дом продан");
			pData[playerid][pObjectHouse] = 0;
			UpdatePlayerData(playerid, "objecthouse", pData[playerid][pObjectHouse]);
		}
		case dSearchBusines://case dBuyCar:
		{
			if(!response)
			{
			    NEWLIST[playerid][0] = 0;
			    NEWLIST[playerid][1] = 1;
			    NEWLIST[playerid][2] = 0;
			 	return 1;
			}
			if(listitem == NEWLIST[playerid][2])
			{
				NEWLIST[playerid][1]++;
				NEWLIST[playerid][0] = 16*NEWLIST[playerid][1];
				if(NEWLIST[playerid][0] > FBI_TOTALY) NEWLIST[playerid][0]-=FBI_TOTALY;
				_fbibase(playerid, "");
			}
			if(FBI_Info[listitem+NEWLIST[playerid][0]][FBI_BussinesID])
			{
				EnableGPSForPlayer(playerid,FBI_Info[listitem+NEWLIST[playerid][0]][FBI_X],FBI_Info[listitem+NEWLIST[playerid][0]][FBI_Y],FBI_Info[listitem+NEWLIST[playerid][0]][FBI_Z],4.0,16);
				pTemp[playerid][pGPS] = true;
				NEWLIST[playerid][0] = 0;
			    NEWLIST[playerid][1] = 1;
			    NEWLIST[playerid][2] = 0;
			}
		}
	case dBuyCarDialog2:
		{
		    if(!response) return 1;
		    switch(listitem)
		    {
		        case 0: BuyCarAuto(playerid, GetPVarInt(playerid, "dBuyCarDialog"));
		        case 1:
		        {
		            gCarInfoBuy = CreatePlayerTextDraw(playerid,15.666653, 165.925903, "");
					PlayerTextDrawLetterSize(playerid,gCarInfoBuy, 0.449999, 1.600000);
					PlayerTextDrawTextSize(playerid,gCarInfoBuy, 94.666671, 108.266677);
					PlayerTextDrawAlignment(playerid,gCarInfoBuy, 1);
					PlayerTextDrawColor(playerid,gCarInfoBuy, -1);
					PlayerTextDrawUseBox(playerid,gCarInfoBuy, true);
					PlayerTextDrawBoxColor(playerid,gCarInfoBuy, 0);
					PlayerTextDrawSetShadow(playerid,gCarInfoBuy, 0);
					PlayerTextDrawSetOutline(playerid,gCarInfoBuy, 1);
					PlayerTextDrawBackgroundColor(playerid,gCarInfoBuy, 51);
					PlayerTextDrawFont(playerid,gCarInfoBuy, 5);
					PlayerTextDrawSetProportional(playerid,gCarInfoBuy, 1);
					PlayerTextDrawSetPreviewModel(playerid,gCarInfoBuy, AutoS[GetPVarInt(playerid, "dBuyCarDialog")][AUTO_AREA][0]);
					PlayerTextDrawSetPreviewRot(playerid, gCarInfoBuy, 0.000000, 0.000000, 50.000000, 1.000000);
					PlayerTextDrawShow(playerid, gCarInfoBuy);
					f(mes, "\
					{FFFFFF}Название: {33AAFF}%s\n{FFFFFF}Модель: {FFCD00}%d\n{FFFFFF}Стоимость: {FFFF00}%d\n\n{FFFFFF}Для покупки транспорта нажмите \"Закрыть\"\nИ перейдите в раздел покупки т/c",AutoS[GetPVarInt(playerid, "dBuyCarDialog")][AUTO_NAME],AutoS[GetPVarInt(playerid, "dBuyCarDialog")][AUTO_AREA][0],AutoS[GetPVarInt(playerid, "dBuyCarDialog")][AUTO_AREA][1]);
					ShowPlayerDialog(playerid, dBuyCarDialog3, DIALOG_STYLE_MSGBOX, "{ffcf00}Информация о моделе", mes, "Закрыть", "");

					SetPVarInt(playerid, "ShowTextDrawCar", 1);
		        }
		        case 2:
		        {
		            pTemp[playerid][pCarTesting] = CreateVehicle(AutoS[GetPVarInt(playerid, "dBuyCarDialog")][AUTO_AREA][0], -1411.5925, 967.4960, 1024.1427, 270.3275, -1, -1, 100);
					PutPlayerInVehicleEx(playerid, pTemp[playerid][pCarTesting], 0);
					SendClientMessage(playerid, -1, "Чтобы выйти из тест драйва введите /testexit");
					SetPlayerInterior(playerid, 15);
					LinkVehicleToInterior(pTemp[playerid][pCarTesting], 15);
					SetPVarInt(playerid, "testexit", 1);
		        }
		    }

		}
	case dBuyCarDialog3:
		{
		    PlayerTextDrawHide(playerid, gCarInfoBuy);
		    PlayerTextDrawDestroy(playerid,gCarInfoBuy);
		    SetPVarInt(playerid, "ShowTextDrawCar", 0);
		    ShowPlayerDialog(playerid,dBuyCarDialog2,2,"{ffcf00}Автосалон","1. Купить автомобиль\n2. Посмотреть модель\n3. Тест-драйв","Далее","Отмена");
		}

	case dBuyCarDialog://case dBuyCar:
		{
			if(!response) return 1;
			if(!pData[playerid][pHouse] && !pData[playerid][pHotel]) return SendClientMessage(playerid,CWHITE,"» У Вас нет дома");
			ShowPlayerDialog(playerid,dBuyCarDialog2,2,"{ffcf00}Автосалон","1. Купить автомобиль\n2. Посмотреть модель\n3. Тест-драйв","Далее","Отмена");
			SetPVarInt(playerid, "dBuyCarDialog", listitem);
		}
	case dBuyCarC1:
		{
			if(!response) return 1;
			new color;
			switch(listitem)
			{
			case 0: color = 1;
			case 1: color = 0;
			case 2: color = 2;
			case 3: color = 3;
			case 4: color = 6;
			case 5: color = 103;
			case 6: color = 33;
			case 7: color = 126;
			case 8: color = 102;
			case 9: color = 85;
			default: return ShowPlayerDialog(playerid,dBuyCarC1Edit,1,"{ffcf00}Выбор цвета номер 1","Введите ID цвета номер 1:","ОК","Назад");
			}
			SetPVarInt(playerid,"pbuycarC1",color);
			ShowPlayerDialog(playerid,dBuyCarC2,2,"{ffcf00}Выберите цвет номер 2","1.Белый\n{505050}2.Черный\n{"#cLIGHTBLUE"}3.Голубой\n{"#cRED"}4.Красный\n{"#cYELLOW"}5.Желтый\n{"#cBLUE"}6 » Синий\n{"#cGRAY"}7.Серый\n{"#cPINK"}8 » РозоВый\n{f5f5dc}9.БежеВый\n{ff00ff}10.Пурпурный\n{"#cWHITE"}Другой...","OK","Выход");
		}
	case dBuyCarC1Edit:
		{
			if(!response) return ShowPlayerDialog(playerid,dBuyCarC1,2,"{ffcf00}Выберите цвет номер 1","1.Белый\n{505050}2.Черный\n{"#cLIGHTBLUE"}3.Голубой\n{"#cRED"}4.Красный\n{"#cYELLOW"}5.Желтый\n{"#cBLUE"}6 » Синий\n{"#cGRAY"}7.Серый\n{"#cPINK"}8 » РозоВый\n{f5f5dc}9.БежеВый\n{ff00ff}10.Пурпурный\n{"#cWHITE"}Другой...","OK","Выход");
			if(!strval(inputtext) || !isNumeric(inputtext))
			{
				SendClientMessage(playerid,CWHITE,"» Вы должны указать ID цвета авто");
				return ShowPlayerDialog(playerid,dBuyCarC1Edit,1,"{ffcf00}Выбор цвета номер 1","Введите ID цвета номер 1:","ОК","Назад");
			}
			SetPVarInt(playerid,"pbuycarC1",strval(inputtext));
			ShowPlayerDialog(playerid,dBuyCarC2,2,"{ffcf00}Выберите цвет номер 2","1.Белый\n{505050}2.Черный\n{"#cLIGHTBLUE"}3.Голубой\n{"#cRED"}4.Красный\n{"#cYELLOW"}5.Желтый\n{"#cBLUE"}6 » Синий\n{"#cGRAY"}7.Серый\n{"#cPINK"}8 » РозоВый\n{f5f5dc}9.БежеВый\n{ff00ff}10.Пурпурный\n{"#cWHITE"}Другой...","OK","Назад");
		}
	case dBuyCarC2:
		{
			if(!response) ShowPlayerDialog(playerid,dBuyCarC1,2,"{ffcf00}Выберите цвет номер 1","1.Белый\n{505050}2.Черный\n{"#cLIGHTBLUE"}3.Голубой\n{"#cRED"}4.Красный\n{"#cYELLOW"}5.Желтый\n{"#cBLUE"}6 » Синий\n{"#cGRAY"}7.Серый\n{"#cPINK"}8 » РозоВый\n{f5f5dc}9.БежеВый\n{ff00ff}10.Пурпурный\n{"#cWHITE"}Другой...","OK","Выход");
			new color;
			switch(listitem)
			{
			case 0: color = 1;
			case 1: color = 0;
			case 2: color = 2;
			case 3: color = 3;
			case 4: color = 6;
			case 5: color = 103;
			case 6: color = 33;
			case 7: color = 126;
			case 8: color = 102;
			case 9: color = 85;
			default: return ShowPlayerDialog(playerid,dBuyCarC2Edit,1,"{ffcf00}Выбор цвета номер 2","Введите ID цвета номер 2:","ОК","Назад");
			}
			SetPVarInt(playerid,"pbuycarC2",color);
			ShowPlayerDialog(playerid,dBuyCar,0,"Покупка авто","Вы действительно хотите купить этот автомобиль?","Да","Нет");
		}
	case dBuyCarC2Edit:
		{
			if(!response) return ShowPlayerDialog(playerid,dBuyCarC2,2,"{ffcf00}Выберите цвет номер 2","1.Белый\n{505050}2.Черный\n{"#cLIGHTBLUE"}3.Голубой\n{"#cRED"}4.Красный\n{"#cYELLOW"}5.Желтый\n{"#cBLUE"}6 » Синий\n{"#cGRAY"}7.Серый\n{"#cPINK"}8 » РозоВый\n{f5f5dc}9.БежеВый\n{ff00ff}10.Пурпурный\n{"#cWHITE"}Другой...","OK","Назад");
			if(!strval(inputtext) || !isNumeric(inputtext))
			{
				SendClientMessage(playerid,CWHITE,"» Вы должны указать ID цвета авто");
				return ShowPlayerDialog(playerid,dBuyCarC2Edit,1,"{ffcf00}Выбор цвета номер 2","Введите ID цвета номер 2:","ОК","Назад");
			}
			SetPVarInt(playerid,"pbuycarC2",strval(inputtext));
			ShowPlayerDialog(playerid,dBuyCar,0,"Покупка авто","Вы действительно хотите купить этот автомобиль?","Да","Нет");
		}
	case dSellCar:
		{
			if(!response) return 1;
			new price = GetPVarInt(playerid,"psellcarPrice");
			new carID = GetPVarInt(playerid,"psellcarID");
			//new vehicleid = gCars[carID][carVid];
			DeletePVar(playerid,"psellcarPrice");
			DeletePVar(playerid,"psellcarID");
			mes = "";
			f(mes, "DELETE FROM `cars` WHERE `id` = '%d'",pData[playerid][pCar]);
			sql_query(zConn, mes); mes = "";
			UpdatePlayerData(playerid,"car",0);
			pData[playerid][pCar] = 0;
			DestroyVehicle(gCars[carID][carVid]);
			gCars[carID][carOwnerid] = 0;
			gCars[carID][carMysqlID] = 0;
			gCars[carID][carModelid] = 0;
			gCars[carID][carSell] = 0;
			gCars[carID][carFuel] = 0.0;
			gCars[carID][carDrived] = 0.0;
			gCars[carID][carHealth] = 0.0;
			gCars[carID][carColor1] = 0;
			gCars[carID][carColor2] = 0;
			gCars[carID][carVid] = INVALID_VEHICLE_ID;
			strdel(gCars[carID][carPlate],0,12);
			TransferMoney(-1,playerid,price,"gossellcar");
			SendClientMessage(playerid,0x7FC0E3FF,"Т/с продано");
		}
	case dActPlayerMenu:
		{
			if(!response) return 1;
			if(listitem == 1)
			{
				ShowPlayerDialog(playerid,dActPlayerMenuMoney,1,"{ffcf00}Передача денег","{"#cWHITE"}Укажите сумму, которую хотите передать:","ОК","Отмена");
			}
			if(listitem == 0)
			{
				new actplayerid = pTemp[playerid][pActPlayer];
				if(GetPlayerDistanceToPlayer(playerid,actplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(actplayerid)) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
				mes = "";
				f(mes, "» Вы предложили {"#cWHITE"}%s  показать паспорт",pData[actplayerid][pNickname]);
				SendClientMessage(playerid,CINFO,mes);
				f(mes, "» %s хочет показать Вам паспорт",pData[playerid][pNickname]);
				SendClientMessage(actplayerid,CWHITE,mes);
				SendClientMessage(actplayerid,COLOR_GREEN,"{33AAFF}Нажмите {f6ff00}[ Y ] {33AAFF}что-бы принять предложение или {c54d13}[ N ] {33AAFF}для отказа");
				pTemp[actplayerid][pShowPasspl] = playerid;
				pTemp[actplayerid][pShowPassact] = actplayerid;
			}
		}
	case dActPlayerMenuMoney:
		{
			if(!response) return 1;
			if(pData[playerid][pLevel] < 2) return SendClientMessage(playerid,CWHITE,"» Передача денег разрешена со 2 уровня");
			new actplayerid = pTemp[playerid][pActPlayer];
			if(pData[actplayerid][pLevel] < 2) return SendClientMessage(playerid,CWHITE,"» Передача денег разрешена со 2 уровня");
			new money = strval(inputtext);
			if(money < 1 || money > 5000) return SendClientMessage(playerid,CWHITE,"» Вы можете передавать от $1 до $5000");
			if(GetPlayerMoneyEx(playerid) < money) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
			TransferMoney(playerid,actplayerid,money,"pay");
			mes = "";
			f(mes, "» %s передал Вам {ffcf00}%d$",pData[playerid][pNickname],money);
			SendClientMessage(actplayerid,CWHITE,mes);
			f(mes, "» Вы передали {"#cWHITE"}%s {"#cRED"}%d$",pData[actplayerid][pNickname],money);
			SendClientMessage(playerid,CINFO,mes);
			f(mes, "» достал деньги и передал их %s'y",pData[actplayerid][pNickname]);
			MeAction(playerid,mes);
			pTemp[playerid][pActPlayer] = INVALID_PLAYER_ID;

		}
	case dMaskirovka:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SetPlayerSkin(playerid,107),SetPlayerColor(playerid, 0x009900AA),SendClientMessage(playerid,-1,"Вы выбрали прикрытие `Grove Street Gang`"), SetPVarInt(playerid,"maskedf",1);
			case 1: SetPlayerSkin(playerid,103),SetPlayerColor(playerid, 0xCC00FFAA),SendClientMessage(playerid,-1,"Вы выбрали прикрытие `The Ballas Gang`"),SetPVarInt(playerid,"maskedf",2);
			case 2: SetPlayerSkin(playerid,175),SetPlayerColor(playerid, 0x6666FFAA),SendClientMessage(playerid,-1,"Вы выбрали прикрытие `The Rifa Gang`"),SetPVarInt(playerid,"maskedf",3);
			case 3: SetPlayerSkin(playerid,109),SetPlayerColor(playerid, 0xFBD400AA),SendClientMessage(playerid,-1,"Вы выбрали прикрытие `Los Santos Vagos Gang`"),SetPVarInt(playerid,"maskedf",4);
			case 4: SetPlayerSkin(playerid,114),SetPlayerColor(playerid, 0x00EEEEAA),SendClientMessage(playerid,-1,"Вы выбрали прикрытие `Varior Los Aztecas Gang`"),SetPVarInt(playerid,"maskedf",5);
			case 5: SetPlayerSkin(playerid,125),SetPlayerColor(playerid, 0xAFAFAFAA),SendClientMessage(playerid,-1,"Вы выбрали прикрытие `Колумбийская мафия`"),SetPVarInt(playerid,"maskedf",6);
			case 6: SetPlayerSkin(playerid,98),SetPlayerColor(playerid, 0x9b2d30AA),SendClientMessage(playerid,-1,"Вы выбрали прикрытие `Мексиканская мафия`"),SetPVarInt(playerid,"maskedf",7);
			case 7: SetPlayerSkin(playerid,123),SetPlayerColor(playerid, 0xff0000AA),SendClientMessage(playerid,-1,"Вы выбрали прикрытие `Yakyza'"),SetPVarInt(playerid,"maskedf",8);



			case 8: SetPlayerSkin(playerid,265),SetPlayerColor(playerid, 0xff0000AA),SendClientMessage(playerid,-1,"Вы выбрали прикрытие `МВД'"),SetPVarInt(playerid,"maskedf",9);
			case 9: SetPlayerSkin(playerid,123),SetPlayerColor(playerid, 0xff0000AA),SendClientMessage(playerid,-1,"Вы выбрали прикрытие `МО'"),SetPVarInt(playerid,"maskedf",10);
			case 10: SetPlayerSkin(playerid,170),SetPlayerColor(playerid, 0xff0000AA),SendClientMessage(playerid,-1,"Вы выбрали прикрытие `СМИ'"),SetPVarInt(playerid,"maskedf",11);
			case 11: SetPlayerSkin(playerid,164),SetPlayerColor(playerid, 0xff0000AA),SendClientMessage(playerid,-1,"Вы выбрали прикрытие `Мэрия'"),SetPVarInt(playerid,"maskedf",12);
			case 12:
				{
					SetPlayerSkin(playerid,GetPVarInt(playerid,"OldSkinm"));
					SetPVarInt(playerid,"maskedf",0);
					SetPVarInt(playerid,"seloldsk",0);
					SetPlayerColor(playerid,gFractionColor[pData[playerid][pFraction] - 1]);
				}
			}
		}

	case dFuelList:
		{
			if(!response) return 1;
			new vehicleid = GetPlayerVehicleID(playerid);
			new truckid = GetVehicleTrailer(vehicleid);
			if((vehicleid >= aFuel[0] && vehicleid < aFuel[1]) && GetVehicleModel(truckid) == 584 && pTemp[playerid][pTruckID] == vehicleid)
			{
				new fillid[10];
				new zS[25]; GetPVarString(playerid, "tempfill", zS, 25);
				sscanf(zS,"p<|>e<iiiiiiiiii>",fillid);
				DeletePVar(playerid, "tempfill");
				for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++) {
					if(pTemp[i][pTruckLoadID] == fillid[listitem]) return SendClientMessage(playerid, COLOR_RED, "Этот заказ уже недоступен.");
				}
				pTemp[playerid][pTruckLoadID] = fillid[listitem];

				GetPVarString(playerid, "tempval", zS, 25);
				sscanf(zS,"p<|>e<iiiiiiiiii>",fillid);
				DeletePVar(playerid, "tempval");

				pTemp[playerid][pTruckWagonID] = truckid;
				pTemp[playerid][pTruckWeight] = fillid[listitem];

				SetPlayerCheckpoint(playerid,gFuelPumps[pTemp[playerid][pTruckLoadID]-1][0][0],gFuelPumps[pTemp[playerid][pTruckLoadID]-1][0][1],gFuelPumps[pTemp[playerid][pTruckLoadID]-1][0][2],4.0);
				pTemp[playerid][pGPS] = true;
				fuelOrders--;
				mes = "";
				if(pTemp[playerid][pTruckWagonText] != Text3D:INVALID_3DTEXT_ID) DestroyDynamic3DTextLabelEx(pTemp[playerid][pTruckWagonText]);
				f(mes, "» {ffcf00}Топлива в цистерне: {"#cWHITE"}%d л.",pTemp[playerid][pTruckWeight]);
				pTemp[playerid][pTruckWagonText] = CreateDynamic3DTextLabel(mes,CWHITE,0.0,0.0,2.0,20.0,INVALID_PLAYER_ID,pTemp[playerid][pTruckWagonID]);
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Вы приняли заказ. В Вашу цистерну залит бензин для заказчика");
				SendClientMessage(playerid, COLOR_LIGHTRED, "Отвезите бензин на заправку. Её местоположение отмечено на Вашем радаре");
			}
			else SendClientMessage(playerid,CWHITE,"» Вы должны быть за рулём арендованного бензовоза.");
		}
	case dFillingBuy:
		{
			if(!response) return 1;
			if(pData[playerid][pBusiness]) return SendClientMessage(playerid,CWHITE,"» У вас уже есть бизнес");
			new fillingid = GetPVarInt(playerid,"bfillingid");
			new price = gFillings[fillingid][fillPrice];
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег");
			mes = "";
			f(mes, "UPDATE `fillings` SET `ownerid` = '%d', `ownernick` = '%s', `working` = '0', bank = '0' WHERE `id` = '%d'",pData[playerid][pMysqlID],pData[playerid][pNickname],fillingid+1);
			sql_query(zConn, mes); mes = "";
			UpdatePlayerData(playerid,"bussiness",fillingid + 1 + FILLING_ID_OFFSET);
			pData[playerid][pBusiness] = fillingid + 1 + FILLING_ID_OFFSET;
			gFillings[fillingid][fillOwnerID] = pData[playerid][pMysqlID];
			format(gFillings[fillingid][fillOwner],24,"%s",pData[playerid][pNickname]);
			gFillings[fillingid][fillWorking] = true;
			gFillings[fillingid][fillBank] = 0;
			TransferMoney(playerid,-1,gFillings[fillingid][fillPrice],"fillingbuy");
			SendClientMessage(playerid,-1,"{1d92ff}Поздравляем, Вы купили {ffd200}АЗС.");
			SendClientMessage(playerid,-1,"/filling - {1d92ff}панель управления {ffd200}АЗС");
			PlayerPlaySound(playerid,1185,0.0,0.0,0.0);
			SetTimerEx("PlayerPlaySoundDelay",6900,false,"ii",playerid,1186);
			UpdateFillingText(fillingid);
		}
	case dFillingInfo:
		{
			if(!response) return 1;
			new fillingid = GetPVarInt(playerid,"fillingid");
			switch(listitem)
			{
			case 0: //Информация
				{
				    mes = "";
				    new status[30];
					if(gFillings[fillingid][fillWorking]) strcat(status,"{ffcf00}Работает");
					else strcat(status,"{"#cRED"}Не работает");
					f(mes, "» {"#cWHITE"}Общая информация:\nСостояние: %s{FFFFFF}\nВладелец: %s\n{"#cWHITE"}Кол-во дней: %d/30\n{"#cWHITE"}Банк: %d\n\n{"#cWHITE"}Состояние цистерн:\n%d",status,gFillings[fillingid][fillOwner],gFillings[fillingid][fillDay],gFillings[fillingid][fillBank],gFillings[fillingid][fillFuel]);
					ShowPlayerDialog(playerid,dMes,0,"Управление АЗС",mes,"OK","");
				}
			case 1: //Смена цены
				{
					mes = "";
					f(mes, "» Установленая цена: %d",gFillings[fillingid][fillFuelPrice]);
					ShowPlayerDialog(playerid,dFillingPrice,2,"{ffcf00}Управление АЗС",mes,"Изменить","Назад");
				}
			case 2: //Улучшения
				{
				    ShowPlayerDialog(playerid,dFillingInfo,2,"{ffcf00}Управление АЗС","1 » Информация\n2 » Цены\n3 » Улучшения\n4 » Заказать топливо\n5 » Управление кассой\n6 » Открыть / закрыть заправку\n7 » Продать АЗС","ОК","Отмена");
					//ShowPlayerDialog(playerid,dFillingEquip,2,"{ffcf00}Управление АЗС","1 » Купить улучшенные бензоколонки\n2 » Увеличить объем цистерны","Далее","Назад");
				}
			case 3: //Заказ топлива
				{
					ShowPlayerDialog(playerid,dFillingOrderAmount,1,"{ffcf00}Заказ топлива","{"#cWHITE"}Сколько литров Вы хотите заказать ?","ОК","Отмена");
				}
			case 4:
				{
					ShowPlayerDialog(playerid,dFillingBank,2,"{ffcf00}Управление АЗС","1 » Посмотреть сумму в кассе\n2 » Положить деньги в кассу\n3 » Снять деньги с кассы","Далее","Назад");
				}
			case 5:
				{
					if(!gFillings[fillingid][fillWorking])
					{
						gFillings[fillingid][fillWorking] = true;
						GameTextForPlayer(playerid,"~g~open",3000,3);
					}
					else
					{
						gFillings[fillingid][fillWorking] = false;
						GameTextForPlayer(playerid,"~r~close",3000,3);
					}
					ShowPlayerDialog(playerid,dFillingInfo,2,"{ffcf00}Управление АЗС","1 » Информация\n2 » Цены\n3 » Улучшения\n4 » Заказать топливо\n5 » Управление кассой\n6 » Открыть / закрыть заправку\n7 » Продать АЗС","ОК","Отмена");
				}
			case 6: //Продать
				{
					SPFDD(playerid,dFillingSell,0,"Управление АЗС","Да","Нет","{"#cWHITE"}Вы хотите продать свою АЗС за %d$",gFillings[fillingid][fillPrice]);
				}
			}
		}
	case dFillingSell:
		{
			new fillingid = GetPVarInt(playerid,"fillingid");
			if(gFillings[fillingid][fillOwnerID] != pData[playerid][pMysqlID]) return SendClientMessage(playerid,CWHITE,"» Эта заправка уже не принадлежит вам");
			if(!response) return ShowPlayerDialog(playerid,dFillingInfo,2,"{ffcf00}Управление АЗС","1 » Информация\n2 » Цены\n3 » Улучшения\n4 » Заказать топливо\n5 » Управление кассой\n6 » Открыть / закрыть заправку\n7 » Продать АЗС","ОК","Отмена");
			mes = "";
			f(mes, "UPDATE `fillings` SET `ownerid` = '0', `ownernick` = '', `working` = '0', bank = '0' WHERE `id` = '%d'",fillingid+1);
			sql_query(zConn, mes); mes = "";
			UpdatePlayerData(playerid,"bussiness",0);
			pData[playerid][pBusiness] = 0;
			gFillings[fillingid][fillOwnerID] = 0;
			format(gFillings[fillingid][fillOwner],24,"");
			gFillings[fillingid][fillWorking] = true;
			gFillings[fillingid][fillBank] = 0;
			gFillings[fillingid][fillDay] = 3;
			UpdateFillingText(fillingid);
			TransferMoney(-1,playerid,gFillings[fillingid][fillPrice],"fillingsell");
			SendClientMessage(playerid,0x7FC0E3FF,"{e82d2d}Вы продали свою {ffc600}АЗС {e82d2d}государству");
		}
	case dFillingPrice:
		{
			if(!response) return ShowPlayerDialog(playerid,dFillingInfo,2,"{ffcf00}Управление АЗС","1 » Информация\n2 » Цены\n3 » Улучшения\n4 » Заказать топливо\n5 » Управление кассой\n6 » Открыть / закрыть заправку\n7 » Продать АЗС","ОК","Отмена");
			new fillingid = GetPVarInt(playerid,"fillingid");
			ShowFillingPrice(playerid,fillingid);
		}
	case dFillingPrice2:
		{
			if(!response) return ShowPlayerDialog(playerid,dFillingInfo,2,"{ffcf00}Управление АЗС","1 » Информация\n2 » Цены\n3 » Улучшения\n4 » Заказать топливо\n5 » Управление кассой\n6 » Открыть / закрыть заправку\n7 » Продать АЗС","ОК","Отмена");
			new fillingid = GetPVarInt(playerid,"fillingid");
			new price = strval(inputtext);
			if(!strlen(inputtext) || !isNumeric(inputtext) || price < 3 || price > 5)
			{
				SFCM(playerid,CWHITE,"» Цена не может быть ниже %d и выше %d", 3,5);
				ShowFillingPrice(playerid,fillingid);
				return 1;
			}
			gFillings[fillingid][fillFuelPrice] = price;
			mes = "";//,data[64];
			/*for(new i;i<5;i++)
			{
				if(!i) format(data,sizeof(data),"%d",gFillings[fillingid][fillFuelPrice]);
				else format(data,sizeof(data),"%s|%d",data,gFillings[fillingid][fillFuelPrice]);
			}*/
			f(mes, "UPDATE `fillings` SET `fuelprice` = '%d' WHERE id = '%d'",gFillings[fillingid][fillFuelPrice],gFillings[fillingid][fillMysqlID]);
			sql_query(zConn, mes); mes = "";
			SendClientMessage(playerid,0x7FC0E3FF,"Цена на топливо изменена");
			UpdateFillingText(fillingid);
			ShowPlayerDialog(playerid,dFillingInfo,2,"{ffcf00}Управление АЗС","1 » Информация\n2 » Цены\n3 » Улучшения\n4 » Заказать топливо\n5 » Управление кассой\n6 » Открыть / закрыть заправку\n7 » Продать АЗС","ОК","Отмена");
		}
	case dFillingEquip:
		{
			if(!response) return ShowPlayerDialog(playerid,dFillingInfo,2,"{ffcf00}Управление АЗС","1 » Информация\n2 » Цены\n3 » Улучшения\n4 » Заказать топливо\n5 » Управление кассой\n6 » Открыть / закрыть заправку\n7 » Продать АЗС","ОК","Отмена");
			new fillingid = GetPVarInt(playerid,"fillingid");
			switch(listitem)
			{
			case 0:
				{
					if(gFillings[fillingid][fillPumps] == 1)
					{
						SendClientMessage(playerid,CWHITE,"У Вас уже стоят новейшие бензоколонки");
						return ShowPlayerDialog(playerid,dFillingInfo,2,"{ffcf00}Управление АЗС","1 » Информация\n2 » Цены\n3 » Улучшения\n4 » Заказать топливо\n5 » Управление кассой\n6 » Открыть / закрыть заправку\n7 » Продать АЗС","ОК","Отмена");
					}
					ShowPlayerDialog(playerid,dFillingPumps,0,"Управление АЗС","{"#cWHITE"}Вы хотите установить новые бензоколонки на вашу АЗС?\nЭто будет стоить {"#cRED"}$80000","Да","Нет");
				}
			case 1:
				{
					mes = "";
					for(new i;i<5;i++)
					{
						new newsize;
						newsize = gFillings[fillingid][fillTanks][i]+500;
						if(newsize > 4000) continue;
						if(!i) f(mes, "» Цистерна %d: {"#cYELLOW"}%d {"#cWHITE"} - {ffcf00}%d",i+1,gFillings[fillingid][fillTanks][i],newsize);
						else f(mes, "» %s\nЦистерна %d: {"#cYELLOW"}%d {"#cWHITE"} - {ffcf00}%d",mes,i+1,gFillings[fillingid][fillTanks][i],newsize);
					}
					if(!strlen(mes))
					{
						SendClientMessage(playerid,CWHITE,"» Объем всех цистерн уже достиг максимального значения");
						ShowPlayerDialog(playerid,dFillingInfo,2,"{ffcf00}Управление АЗС","1 » Информация\n2 » Цены\n3 » Улучшения\n4 » Заказать топливо\n5 » Управление кассой\n6 » Открыть / закрыть заправку\n7 » Продать АЗС","ОК","Отмена");
					}
					ShowPlayerDialog(playerid,dFillingTankSize,2,"{ffcf00}Управление АЗС",mes,"ОК","Отмена");
				}
			}
		}
	case dFillingPumps:
		{
			if(!response) return ShowPlayerDialog(playerid,dFillingInfo,2,"{ffcf00}Управление АЗС","1 » Информация\n2 » Цены\n3 » Улучшения\n4 » Заказать топливо\n5 » Управление кассой\n6 » Открыть / закрыть заправку\n7 » Продать АЗС","ОК","Отмена");
			new fillingid = GetPVarInt(playerid,"fillingid");
			if(GetPlayerMoneyEx(playerid) < 80000) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
			TransferMoney(playerid,-1,80000,"fillingpumps");
			mes = ""; f(mes,  "UPDATE `fillings` SET pumps = '1' WHERE id = '%d'", fillingid+1);
			sql_query(zConn, mes); mes = "";
			gFillings[fillingid][fillPumps] = 1;
			for(new i;i<4;i++)
			{
				if(gFuelPumps[fillingid][i][0] == 0.0) continue;
				DestroyDynamicObject(gFuelPumpObjects[fillingid][i]);
				gFuelPumpObjects[fillingid][i] = CreateDynamicObject(1676,gFuelPumps[fillingid][i][0],gFuelPumps[fillingid][i][1],gFuelPumps[fillingid][i][2]+1.5,gFuelPumps[fillingid][i][3],gFuelPumps[fillingid][i][4],gFuelPumps[fillingid][i][5]+90.0);
			}
		}
	case dFillingTankSize:
		{
			if(!response) return ShowPlayerDialog(playerid,dFillingInfo,2,"{ffcf00}Управление АЗС","1 » Информация\n2 » Цены\n3 » Улучшения\n4 » Заказать топливо\n5 » Управление кассой\n6 » Открыть / закрыть заправку\n7 » Продать АЗС","ОК","Отмена");
			new fillingid = GetPVarInt(playerid,"fillingid");
			new newtanksize = gFillings[fillingid][fillTanks][0] + 500;
			new price = newtanksize*200;
			mes = "";
			f(mes, "» {"#cWHITE"}Вы хотите увеличить объем цистерны до {ffcf00}%d{"#cWHITE"} литров?\nЭто будет стоить {"#cRED"}%d$",newtanksize,price);
			ShowPlayerDialog(playerid,dFillingTankSize2,0,"Управление АЗС",mes,"Да","Нет");
		}
	case dFillingTankSize2:
		{
			if(!response) return ShowPlayerDialog(playerid,dFillingInfo,2,"{ffcf00}Управление АЗС","1 » Информация\n2 » Цены\n3 » Улучшения\n4 » Заказать топливо\n5 » Управление кассой\n6 » Открыть / закрыть заправку\n7 » Продать АЗС","ОК","Отмена");
			new fillingid = GetPVarInt(playerid,"fillingid");
			new newtanksize = gFillings[fillingid][fillTanks][0] + 500;
			new price = newtanksize*200;
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
			gFillings[fillingid][fillTanks][0] += 500;
			mes = "";
			new data[64];
			for(new i;i<5;i++)
			{
				if(!i) format(data,sizeof(data),"%d",gFillings[fillingid][fillTanks][i]);
				else format(data,sizeof(data),"%s|%d",data,gFillings[fillingid][fillTanks][i]);
			}
			f(mes, "UPDATE `fillings` SET tanks = '%s' WHERE id = '%d'",data,gFillings[fillingid][fillMysqlID]);
			sql_query(zConn, mes); mes = "";
			TransferMoney(playerid,-1,price,"tanksize");
			SendClientMessage(playerid,0x7FC0E3FF,"Поздравляем, объем цистерны увеличен");
		}
	case dFillingBank:
		{
			if(!response) return ShowPlayerDialog(playerid,dFillingInfo,2,"{ffcf00}Управление АЗС","1 » Информация\n2 » Цены\n3 » Улучшения\n4 » Заказать топливо\n5 » Управление кассой\n6 » Открыть / закрыть заправку\n7 » Продать АЗС","ОК","Отмена");
			new fillingid = GetPVarInt(playerid,"fillingid");
			switch(listitem)
			{
			case 0:
				{
					mes = "";
					f(mes, "» {"#cWHITE"}В кассе {ffcf00}%d$",gFillings[fillingid][fillBank]);
					ShowPlayerDialog(playerid,dFillingCheck,0,"Управление АЗС",mes,"OK","");
				}
			case 1:
				{
					ShowPlayerDialog(playerid,dFillingPut,1,"{ffcf00}Управление АЗС","Укажите сумму, которую хотите положить в кассу:","ОК","Отмена");
				}
			case 2:
				{
					ShowPlayerDialog(playerid,dFillingGet,1,"{ffcf00}Управление АЗС","Укажите сумму, которую хотите взять из кассы:","ОК","Отмена");
				}
			}
		}
	case dFillingCheck:
		{
			ShowPlayerDialog(playerid,dFillingBank,2,"{ffcf00}Управление АЗС","1 » Посмотреть сумму в кассе\n2 » Положить деньги в кассу\n3 » Снять деньги с кассы","Далее","Назад");
		}
	case dFillingPut:
		{
			if(!response) return ShowPlayerDialog(playerid,dFillingBank,2,"{ffcf00}Управление АЗС","1 » Посмотреть сумму в кассе\n2 » Положить деньги в кассу\n3 » Снять деньги с кассы","Далее","Назад");
			new fillingid = GetPVarInt(playerid,"fillingid");
			new price = strval(inputtext);
			if(price < 1 || price > 1000000) return SendClientMessage(playerid,CWHITE,"» Неверная сумма");
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег на руках");
			gFillings[fillingid][fillBank] += price;
			mes = "";
			f(mes, "UPDATE `fillings` SET `bank` = '%d' WHERE `id` = '%d'",gFillings[fillingid][fillBank],fillingid+1);
			sql_query(zConn, mes); mes = "";
			TransferMoney(playerid,-1,price,"fillingputkassa");
			SendClientMessage(playerid,0x7FC0E3FF,"Вы положили деньги в кассу заправки");
		}
	case dFillingGet:
		{
			if(!response) return ShowPlayerDialog(playerid,dFillingBank,2,"{ffcf00}Управление АЗС","1 » Посмотреть сумму в кассе\n2 » Положить деньги в кассу\n3 » Снять деньги с кассы","Далее","Назад");
			new fillingid = GetPVarInt(playerid,"fillingid");
			new price = strval(inputtext);
			if(price < 1 || price > 1000000) return SendClientMessage(playerid,CWHITE,"» Неверная сумма");
			if(gFillings[fillingid][fillBank] < price) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег в кассе");
			gFillings[fillingid][fillBank] -= price;
			mes = "";
			f(mes, "UPDATE `fillings` SET `bank` = '%d' WHERE `id` = '%d'",gFillings[fillingid][fillBank],fillingid+1);
			sql_query(zConn, mes); mes = "";
			TransferMoney(-1,playerid,price,"fillinggetkassa");
			SendClientMessage(playerid,0x7FC0E3FF,"Вы взяли деньги из кассы заправки");
		}
	case dFillingOrderAmount:
		{
			if(!response) return _filling(playerid, "");
			new fillingid = GetPVarInt(playerid,"fillingid");
			new amount = strval(inputtext);
			if(amount < 1 || amount > 5000) return SendClientMessage(playerid,CWHITE,"» Неверное количество топлива");
			if(gFillings[fillingid][fillFuel] + amount > 5000) return SendClientMessage(playerid,CWHITE,"» Недостаточно места в цистерне");
			new price;
			price = (10 * amount);
			new result = amount+price;

			if(fuelOrders > 10) return SendClientMessage(playerid, CGRAY, "На данный момент слишком много заказов в нефтезаводе. Попробуйте позже.");
			if(GetPlayerMoneyEx(playerid) < result) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег на руках");
			TransferMoney(playerid,-1,price,"fillingprod");
			//SendClientMessage(playerid,0x7FC0E3FF,"Бензин завезен на заправку");
			//SendClientMessage(playerid,CWHITE,"» (Скоро привезут топливо)");
			//gFillings[fillingid][fillFuel] += amount;
			UpdateFillingFuel(fillingid);
			new str[255];
			format(str, 255, "INSERT INTO fuelorders (`id`, `value`) VALUES (%d, %d)", fillingid, amount);
			sql_query(zConn, str);
			fuelOrders++;


			format(mes, 256, "{FFFFFF}Параметры заказа:\n\nКоличество топлива:\t\t\t%dл\nСтоимость 1 литра:\t\t\t10$\nОбщаяя стоимость заказа:\t\t%i$\n\nДанные были переданы в службу развозчиков\nОжидайте Вашего заказа!",amount,result);
			ShowPlayerDialog(playerid, dMes, 0, "{CC9900}Заказ оформлен", mes, "Закрыть", "");

			//TransferMoney(playerid,-1,price,"fillingprod");
			//SendClientMessage(playerid,0x7FC0E3FF,"Товар был доставлен в ваш бизнес с помошью технологии телепортации");
			//SendClientMessage(playerid,CWHITE,"» (Это временно. Скоро появятся развозчики товаров)");
			//gFillings[fillingid][fillFuel] += amount;
			//UpdateFillingFuel(fillingid);

		}
	case dFillingOrder:
		{
			if(!response) return _filling(playerid, "");
			new fillingid = GetPVarInt(playerid,"fillingid");
			new amount = GetPVarInt(playerid,"fillingorderamount");
			new price = GetPVarInt(playerid,"fillingorderprice");
			if(fuelOrders > 10) return SendClientMessage(playerid, CGRAY, "На данный момент слишком много заказов в нефтезаводе. Попробуйте позже.");
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег на руках");
			TransferMoney(playerid,-1,price,"fillingprod");
			SendClientMessage(playerid,0x7FC0E3FF,"Бензин завезен на заправку");
			SendClientMessage(playerid,CWHITE,"» (Скоро привезут топливо)");
			gFillings[fillingid][fillFuel] += amount;
			UpdateFillingFuel(fillingid);
			new str[255];
			format(str, 255, "INSERT INTO fuelorders (`id`, `value`) VALUES (%d, %d)", fillingid, amount);
			sql_query(zConn, str);
			fuelOrders++;
		}
	case dHouseMenu:
		{
			if(!response) return 1;
			//new houseid = pData[playerid][pHouse];
			new houseid = pData[playerid][pHouse] - 1;
			switch(listitem)
			{
			case 0://Открыть - закрыть
				{
					if(!gHouses[houseid][houseClose])
					{
						gHouses[houseid][houseClose] = 1;
						GameTextForPlayer(playerid,"~r~closed",2000,3);
					}
					else
					{
						gHouses[houseid][houseClose] = 0;
						GameTextForPlayer(playerid,"~g~opened",2000,3);
					}
					mes = "";
					f(mes, "UPDATE `houses` SET `close` = '%d' WHERE `id` = '%d'",gHouses[houseid][houseClose],houseid);
					sql_query(zConn, mes); mes = "";
				}
			case 1: //Статистика
				{
					new classname[20];
					switch(gHouses[houseid][houseClass])
					{
					case 0:classname = "Эконом";
					case 1:classname = "Cредний";
					case 2:classname = "Элитный";
					case 3:classname = "Особняк";
					default: classname = "Неизвестно";
					}

					new cnt;
					for(new i;i<3;i++)
					{
						if(gHouses[houseid][houseHabitID][i]) cnt++;
					}
					new rent = floatround(gHouses[houseid][housePrice] * 0.005);
					if(gHouses[houseid][houseImprove][4]) rent = rent / 2;
					new status[24];
					if(gHouses[houseid][houseClose]) strcat(status,"{"#cRED"}Закрыт");
					else strcat(status,"{ffcf00}Открыт");
					new improve[64];
					if(gHouses[houseid][houseImprove][0]) strcat(improve,"Автом. двери\n");
					if(gHouses[houseid][houseImprove][1]) strcat(improve,"Маячок на автомобиле\n");
					if(gHouses[houseid][houseImprove][2]) strcat(improve,"Объектов в доме 10\n");
					if(gHouses[houseid][houseImprove][3]) strcat(improve,"Объектов в доме 15\n");
					if(gHouses[houseid][houseImprove][4]) strcat(improve,"Объектов в доме 20\n");
					if(gHouses[houseid][houseImprove][5]) strcat(improve,"Шкаф\n");
					if(gHouses[houseid][houseImprove][6]) strcat(improve,"Субсидии");
					mes = "";
					f(mes, "{FFFFFF}Номер дома: %d\nКласс: %s\nКвартплата: %d\nКол-во оплаченных дней: %d\nСостояние: %s\nГос. цена: %d\nУлучшения:\n%s",houseid+1,classname,rent,gHouses[houseid][houseDays],status,gHouses[houseid][housePrice]*10,improve);
					ShowPlayerDialog(playerid,dHouseStat,0,"Управление домом",mes,"OK","");

				}
			
			case 2:
				{
					if(!pData[playerid][pCar]) return SendClientMessage(playerid,CWHITE,"» У Вас нет т/с");
					if(pData[playerid][pMoney] < 100) return SendClientMessage(playerid,-1,"Недостаточно денег.");
					new slot = GetCarSlot(pData[playerid][pCar]);
                    new carID = gCars[slot][carVid];
					DestroyVehicle(carID);
					carID = CreateVehicle(gCars[slot][carModelid],gHouses[houseid][houseParkX],gHouses[houseid][houseParkY],gHouses[houseid][houseParkZ],gHouses[houseid][houseParkR],gCars[slot][carColor1],gCars[slot][carColor2],-1);
					SetVehicleZAngle(carID, gHouses[houseid][houseParkR]);
					SendClientMessage(playerid,0x7FC0E3FF,"Ваше т/c доставлено к дому.");
					TransferMoney(playerid,-1,100,"fixcar");
					for(new i5;i5<14;i5++)
					{
						new tun = gCars[slot][carTuning][i5];
						if(tun != 0) AddVehicleComponent(carID, tun);
					}
					if(!gCars[slot][carPaintJob]) ChangeVehiclePaintjob(carID, gCars[slot][carPaintJob]);
				}
			case 3:
			    {
			        if(!gHouses[houseid][houseImprove][1]) return SendClientMessage(playerid,CWHITE,"» У Вас нет улучшения моячка для машины");
			        new slot = GetCarSlot(pData[playerid][pCar]);
					new Float:x, Float:y, Float:z;
					new vehicleid = gCars[slot][carVid];
					GetVehiclePos(vehicleid,x,y,z);
					EnableGPSForPlayer(playerid,x,y,z,4.0,55);
					pTemp[playerid][pGPS] = true;
					SendClientMessage(playerid, CWHITE,"» Ваш транспорт отмечен меткой на радаре. Чтобы убрать метку введите /gps");
			    }
			case 4: //Улучшения
				{
					mes = "";
					for(new i;i<7;i++)
					{
						new c[7];
						if(gHouses[houseid][houseImprove][i]) c = ""#cGREEN"";
						else if(!i || gHouses[houseid][houseImprove][i-1]) c = ""#cWHITE"";
						else c = ""#cGRAY"";
						if(!i) f(mes, "» {%s}%d. %s",c,i+1,gHouseImproveName[i]);
						else f(mes, "%s\n» {%s}%d. %s",mes,c,i+1,gHouseImproveName[i]);
					}
					ShowPlayerDialog(playerid,dHouseImprove,2,"{ffcf00}Управление домом",mes,"Купить","Отмена");
				}
			case 5:
				{
					_sellhouse(playerid, "");
				}
			}
		}
	case dHouseStat:
		{
			ShowPlayerDialog(playerid,dHouseMenu,2,"{ffcf00}Управление домом","1 » Открыть / закрыть дом\n2 » Информация о доме\n3 » Улучшения\n4 » Продать дом","ОК","Отмена");
		}
	case dHouseImprove:
		{
			if(!response) return ShowPlayerDialog(playerid,dHouseMenu,2,"{ffcf00}Управление домом","1 » Открыть / закрыть дом\n2 » Информация о доме\n3 » Улучшения\n4 » Продать дом","ОК","Отмена");
			new houseid = pData[playerid][pHouse] - 1;
			if(gHouses[houseid][houseImprove][listitem])
			{
				SendClientMessage(playerid,0x7FC0E3FF,"У Вас уже установлено это улучшение");
				ShowPlayerDialog(playerid,dHouseMenu,2,"{ffcf00}Управление домом","1 » Открыть / закрыть дом\n2 » Информация о доме\n3 » Улучшения\n4 » Продать дом","ОК","Отмена");
			}
			else if((!listitem && !gHouses[houseid][houseImprove][listitem]) || (gHouses[houseid][houseImprove][listitem-1] && !gHouses[houseid][houseImprove][listitem]))
			{
				mes = "";
				f(mes, "» {"#cWHITE"}Вы хотите купить улучшение: \"%s\"?\n{"#cWHITE"}Оно обойдется Вам в {"#cRED"}%d$",gHouseImproveName[listitem],gHouseImprovePrice[listitem]);
				ShowPlayerDialog(playerid,dHouseImprove2,0,"Управление домом",mes,"Да","Нет");
				SetPVarInt(playerid,"improveid",listitem);
			}
			else
			{
				SendClientMessage(playerid,CWHITE,"» Это улучшение еще не доступно Вам");
				ShowPlayerDialog(playerid,dHouseMenu,2,"{ffcf00}Управление домом","1 » Открыть / закрыть дом\n2 » Информация о доме\n3 » Улучшения\n4 » Продать дом","ОК","Отмена");
			}
		}
	case dHouseImprove2:
		{
			new improveid = GetPVarInt(playerid,"improveid");
			DeletePVar(playerid,"improveid");
			if(!response) return ShowPlayerDialog(playerid,dHouseMenu,2,"{ffcf00}Управление домом","1 » Открыть / закрыть дом\n2 » Информация о доме\n3 » Улучшения\n4 » Продать дом","ОК","Отмена");
			new price = gHouseImprovePrice[improveid];
			if(GetPlayerMoneyEx(playerid) < price)
			{
				ShowPlayerDialog(playerid,dHouseMenu,2,"{ffcf00}Управление домом","1 » Открыть / закрыть дом\n2 » Информация о доме\n3 » Улучшения\n4 » Продать дом","ОК","Отмена");
				return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
			}
			new houseid = pData[playerid][pHouse] - 1;
			gHouses[houseid][houseImprove][improveid] = 1;
//			new hintid = gHouses[houseid][houseHint];
			mes = "";
			new data[32];
			for(new i;i<7;i++)
			{
				if(!i) format(data,sizeof(data),"%d",gHouses[houseid][houseImprove][i]);
				else format(data,sizeof(data),"%s|%d",data,gHouses[houseid][houseImprove][i]);
			}
			f(mes, "UPDATE `houses` SET `improve` = '%s' WHERE id = '%d'",data,houseid+1);
			sql_query(zConn, mes); mes = "";
			TransferMoney(playerid,-1,price,"houseimprove");
			SendClientMessage(playerid,0x7FC0E3FF,"Поздравляем, Вы купили улучшение для дома.");
		}
	case dBuyFuel1:
		{
			if(response)
			{
				if(Kanistra[playerid] == 1)
				{
					if(gVehicles[VehK-1][vFuel] > 100) return SendClientMessage(playerid, CGRAY, "Транспорт заполнен");
					new string[32];
					format(string,32,"~r~filling ~w~20 ~g~liters");
					GameTextForPlayer(playerid, string, 600, 6);
					gVehicles[VehK-1][vFuel] += 20;
					SendClientMessage(playerid, COLOR_LIME, "Транспорт заправлен");
					Kanistra[playerid] = 0;
					if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
				}
			}
			else SetPVarInt(playerid,"BFUEL",gettime() + 10);
		}
	case dBuyFuel:
		{
			if(response)
			{
				if(Kanistra[playerid] == 0)
				{
					TransferMoney(playerid,-1,-300,"buyfuel");
					new string[50];
					format(string, sizeof(string), "Вы купили канистру с 20 литрами бензина");
					SendClientMessage(playerid, COLOR_LIME, string);
					format(string, sizeof(string), "Чтобы заправить транспорт просто подойдите к нему");
					SendClientMessage(playerid, COLOR_GREEN, string);
					Kanistra[playerid] = 1;
					if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
					SetPlayerAttachedObject(playerid, 1, 1650, 6, 0.109687, 0.019223, 0.054616, 0.000000, 260.555694, 0.000000, 1.000000, 1.000000, 1.000000 ); // petrolcanm - kanistra
				}
				else
				{
					SendClientMessage(playerid, -1, "Вы покупали уже канистру.");
				}
			}
		}
	case dBuySkin:
		{
			if(!response) return 1;
			new houseid = pData[playerid][pHouse]-1;
			if(!pData[playerid][pHouse] || !gHouses[houseid][houseImprove][3] || ((houseid+1) > 0 && pData[playerid][pMysqlID] != gHouses[houseid][houseOwnerID])) ShowPlayerDialog(playerid,dBuySkin2,0,"Покупка одежды","{"#cRED"}Внимание! {"#cWHITE"}У Вас нет шкафа для одежды.\nЕсли Вы купите эту одежду, то она заменит вашу текущую\nВы все равно хотите купить Выбранную одежду?","Да","Нет");
			else
			{
				new skinid = GetPVarInt(playerid,"clothes_select");
				new skin = gSkins[skinid][skinID];
				new price = GetSkinPrice(skinid);
				new id = pTemp[playerid][pSelectedBusinessID];
				//new slot=-1;
				//for(new i;i<3;i++)
				//{
				//if(skin == gHouses[houseid][houseSkin][i]) return SendClientMessage(playerid,CWHITE,"» У Вас уже есть эта одежда в шкафу");
				//if(!gHouses[houseid][houseSkin][i]) {slot = i; break;}
				//}
				//if(slot == -1) return ShowPlayerDialog(playerid,dBuySkin2,0,"Покупка одежды","{"#cRED"}Внимание! {"#cWHITE"}У Вас недостаточно места в шкафу.\nЕсли Вы купите эту одежду, то она заменит вашу текущую\nВы все равно хотите купить Выбранную одежду?","Да","Нет");
				if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» Недостаточно денег");

				if(gBusiness[id][busiOwnerID])
				{
					if(gBusiness[id][busiProduct] - floatround((price / 150) * 5) / 10 <= 0) return SendClientMessage(playerid, CGRAY, "{fe0000}Ошибка:{ffffff} В бизнесе недостаточно продуктов.");
				}
				gBusiness[id][busiBank] += floatround((price / 150) * 12);
				gBusiness[id][busiProduct] -= floatround((price / 150) * 5) / 20;
				UpdateBusinessText(id);
				UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
				//gHouses[houseid][houseSkin][slot] = skin;
				//UpdateHouseDress(houseid);
				TransferMoney(playerid,-1,price,"buyskin");
				//SendClientMessage(playerid,0x7FC0E3FF,"Одежда была доставлена в ваш шкаф");
				pTemp[playerid][pChangingSkin] = false;

				pData[playerid][pSkin] = skin;
				UpdatePlayerData(playerid, "skin", skin);
				//if(GetPVarInt(playerid, "curskin") == pData[playerid][pFractionSkin] || (!(houseid+1) || ((houseid+1) > 0 && gHouses[houseid][houseOwnerID] != pData[playerid][pMysqlID])) && pData[playerid][pFraction]) SetPlayerSkin(playerid, GetPVarInt(playerid, "curskin"));
				//else pData[playerid][pSkin] = skin, SetPlayerSkin(playerid,skin);

				HidePlayerClothesTD(playerid);
				pTemp[playerid][pJustTP] = true;
				SetPlayerPos(playerid, GetPVarFloat(playerid, "posx"), GetPVarFloat(playerid, "posy"), GetPVarFloat(playerid, "posz"));
				SetPlayerInterior(playerid, GetPVarInt(playerid, "interior"));
				SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "vw"));
				SetPlayerFacingAngle(playerid, GetPVarInt(playerid, "posa"));
				TogglePlayerControllable(playerid, 1);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid, "posx");
				DeletePVar(playerid, "posy");
				DeletePVar(playerid, "posz");
				DeletePVar(playerid, "posa");
				DeletePVar(playerid, "interior");
				DeletePVar(playerid, "vw");
				DeletePVar(playerid, "clothes_sel");
				DeletePVar(playerid, "clothes_class");
				pTemp[playerid][pChangingSkin] = false;
			}
		}
	case dBuySkin2:
		{
			if(!response) return 1;
			new skin;
			new skinid = GetPVarInt(playerid,"clothes_select");
			new houseid = pData[playerid][pHouse]-1;
			skin = gSkins[skinid][skinID];
			new price = GetSkinPrice(skinid);
			new id = pTemp[playerid][pSelectedBusinessID];
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» Недостаточно денег");
			if(gBusiness[id][busiOwnerID])
			{
				if(gBusiness[id][busiProduct] - floatround((price / 150) * 5) / 10 <= 0) return SendClientMessage(playerid, CGRAY, "{fe0000}Ошибка:{ffffff} В бизнесе недостаточно продуктов.");
			}
			gBusiness[id][busiBank] += floatround((price / 150) * 5);
			gBusiness[id][busiProduct] -= floatround((price / 150) * 5) / 10;
			UpdateBusinessText(id);
			UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);

			UpdatePlayerData(playerid,"skin",skin);
			TransferMoney(playerid,-1,price,"buyskin");
			pData[playerid][pSkin] = skin;
			pTemp[playerid][pChangingSkin] = false;
			if(GetPVarInt(playerid, "curskin") == pData[playerid][pFractionSkin] || (!(houseid+1) || ((houseid+1) > 0 && gHouses[houseid][houseOwnerID] != pData[playerid][pMysqlID])) && pData[playerid][pFraction]) SetPlayerSkin(playerid, GetPVarInt(playerid, "curskin"));
			else SetPlayerSkin(playerid,pData[playerid][pSkin]);

			HidePlayerClothesTD(playerid);
			pTemp[playerid][pJustTP] = true;
			SetPlayerPos(playerid, GetPVarFloat(playerid, "posx"), GetPVarFloat(playerid, "posy"), GetPVarFloat(playerid, "posz"));
			SetPlayerInterior(playerid, GetPVarInt(playerid, "interior"));
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "vw"));
			SetPlayerFacingAngle(playerid, GetPVarInt(playerid, "posa"));
			TogglePlayerControllable(playerid, 1);
			SetCameraBehindPlayer(playerid);
			DeletePVar(playerid, "posx");
			DeletePVar(playerid, "posy");
			DeletePVar(playerid, "posz");
			DeletePVar(playerid, "posa");
			DeletePVar(playerid, "interior");
			DeletePVar(playerid, "vw");
			DeletePVar(playerid, "clothes_sel");
			DeletePVar(playerid, "clothes_class");
			pTemp[playerid][pChangingSkin] = false;
		}
	case dFreez:
		{
			if(!response) return 1;
			new products,name[24];
			switch(listitem)
			{
			case 0: {products = 10; strcat(name,"хот-дог");}
			case 1: {products = 15; strcat(name,"бургер");}
			case 2: {products = 30; strcat(name,"пиццу");}
			}
			new houseid = pData[playerid][pHouse] - 1;
			if(gHouses[houseid][houseProducts] < products)
			{
				SFCM(playerid,CWHITE,"» У Вас в холодильнике недостаточно продуктов. %d/%d",gHouses[houseid][houseProducts],products);
				ShowPlayerDialog(playerid,dFreez,2,"{ffcf00}Холодильник","Хот-дог ({"#cRED"}-10 прод. {ffcf00}+20 сытость{"#cWHITE"})\nБургер ({"#cRED"}-15 прод. {ffcf00}+30 сытость{"#cWHITE"})\nПицца ({"#cRED"}-30 прод. {ffcf00}+60 сытость{"#cWHITE"})","Съесть","Отмена");
				return 1;
			}
			mes = "";
			f(mes, "UPDATE `houses` SET `products` = '%d' WHERE `id` = '%d'",gHouses[houseid][houseProducts]-products,houseid+1);
			sql_query(zConn, mes); mes = "";
			gHouses[houseid][houseProducts] -= products;
			SFCM(playerid,CORANGE,"Чтобы съесть напишите {"#cWHITE"}/eat{"#cORANGE"}. Осталось %d продуктов",gHouses[houseid][houseProducts]);
			SendClientMessage(playerid,-1,"Чтобы положить поднос, введите {"#cORANGE"}/put{"#cWHITE"}.");
			mes = "";
			f(mes, "» взял(а) %s из холодильника",name);
			MeAction(playerid,mes);
			if(listitem == 1) SetPlayerAttachedObject(playerid,0,2214,3,0.232999,-0.376998,-0.408999,54.199886,-35.700153,-35.000019,1.000000,1.000000,1.000000);
			else if(listitem == 2) SetPlayerAttachedObject(playerid,0,2220,3,0.232999,-0.376998,-0.408999,54.199886,-35.700153,-35.000019,1.000000,1.000000,1.000000);
			else if(!listitem) SetPlayerAttachedObject(playerid,0,19346,6,0.059000,0.059999,0.000000,-97.399963,0.000000,0.000000);
			if(listitem) SetPlayerSpecialAction(playerid, 25);
			pTemp[playerid][pEat] = listitem+1;
		}
	case dReception:
		{
			if(!response) return 1;
			if(pData[playerid][pHouse]) return SendClientMessage(playerid,CWHITE,"» У Вас уже есть дом. Зачем Вам нужна комната в отеле?");
			if(pData[playerid][pHotel]) return SendClientMessage(playerid,CWHITE,"» Вы уже арендуете комнату в другом отеле");
			//ShowPlayerDialog(playerid,dHotelRent,DIALOG_STYLE_INPUT,"Отель","На какой период Вы хотите арендовать комнату? (1 день = 400$)\nВведите количество дней (от 1 до 30):","OK","Отмена");
		}
	/*case dRace2:
		{
			if(!response) return SetPVarInt(playerid,"Race", -1);
			new price = strval(inputtext);
			if(pData[playerid][pLicenses] & LIC_DRIVING) return SendClientMessage(playerid,CWHITE,"» У Вас нет водительских прав");
			if(price < 1000) return ShowPlayerDialog(playerid,dRace2,DIALOG_STYLE_INPUT,"{ffcf00}Регистрация на гонку","Чтобы поучаствовать в конке, нужно:\n\t1 » !!! Внести минимум 1000$ !!!\n\t2 » Иметь лицензию на транспорт","Выбрать","Закрыть");
			if(GetPlayerMoneyEx(playerid) < 1000) return SendClientMessage(playerid,CWHITE,"» У Вас не достаточно денег (1000$)");
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас не достаточно денег, уменьшите сумму");
			if(TotalRace == 8) return SendClientMessage(playerid,CWHITE,"» Все места заняты");
			if(RaceStart1 == 1) return SendClientMessage(playerid,CWHITE,"» Гонка уже идет");
			for(new i = 0; i < 10; i++)
			{
				if(ResultFirst[i] == -1)
				{
					for(new is; is<10; is++)
					{
						if(gRacePlaceCar[is] == 0)
						{
							gRacePlaceCar[is] = 1;
							PlaceNumber[playerid] = is;
							break;
						}
					}
					TransferMoney(playerid,-1,price,"Race");

	//				TextDrawShowForPlayer(playerid, RacerS[playerid][TD1]);
	//				TextDrawShowForPlayer(playerid, RacerS[playerid][TD2]);
	//				TextDrawShowForPlayer(playerid, RacerS[playerid][TD3]);
	//				TextDrawShowForPlayer(playerid, RacerS[playerid][TD4]);
	//				TextDrawShowForPlayer(playerid, RacerS[playerid][TD5]);

					ResultFirst[i] = playerid;
					TotalRace ++;

					new carid;
					switch(GetPVarInt(playerid,"Race"))
					{
						case 0: carid = CreateVehicle(RaceCar1, gRaceCar[GetPVarInt(playerid,"Race")][PlaceNumber[playerid]][0],gRaceCar[GetPVarInt(playerid,"Race")][PlaceNumber[playerid]][1],gRaceCar[GetPVarInt(playerid,"Race")][PlaceNumber[playerid]][2],gRaceCar[GetPVarInt(playerid,"Race")][PlaceNumber[playerid]][3], 33, 33, 60000);
						case 1: carid = CreateVehicle(RaceCar1, gRaceCar[GetPVarInt(playerid,"Race")][PlaceNumber[playerid]][0],gRaceCar[GetPVarInt(playerid,"Race")][PlaceNumber[playerid]][1],gRaceCar[GetPVarInt(playerid,"Race")][PlaceNumber[playerid]][2],gRaceCar[GetPVarInt(playerid,"Race")][PlaceNumber[playerid]][3], 33, 33, 60000);
					}
					//PutPlayerInVehicle(playerid, carid, 0),
					SetVehicleVirtualWorld(carid, 5555);


					if(IsValid3DTextLabel(pTemp[playerid][pRace3DText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pRace3DText]);

					mes = "";
					f(mes, "» Машина для {"#cYELLOW"}%s",pData[playerid][pNickname]);
					pTemp[playerid][pRace3DText] = CreateDynamic3DTextLabel(mes,-1,0.0,0.0,1.5,20.0,INVALID_PLAYER_ID,carid);

					pTemp[playerid][pRaceID] = carid;



					gVehicles[carid-1][vFuel] = 100;
					AddVehicleComponent(carid,1010);
					SetPlayerInterior(playerid,0);
					pTemp[playerid][pRaceIvite] = 1;
					SetPlayerVirtualWorld(playerid,5555);
					SendClientMessage(playerid,COLOR_LIME,"Вы зарегестрировались на гонку. Ожидайте конца таймера.");
					SendClientMessage(playerid,COLOR_BLUE,"Пройдите в ваш транспорт. Желательно его закрыть /lock 4");
					SendClientMessage(playerid,COLOR_GREY,"Если транспорт закрыт, введите /lock 4 » Если вы сели в машину, выходить уже нельзя");
					BRace += price;
					GZRace[playerid] = 0;
					break;
				}
			}
		}*/
	case dRace1:
		{
			if(!response) return SetPVarInt(playerid,"Race", -1);
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid,dRace2,DIALOG_STYLE_INPUT,"{9CCF00}Регистрация на гонку","Чтобы зарегистрироваться, нужно сделать взнос\nв минимальном размере 1000$. Вы также можете\nвнести большую сумму, тогда общий бюджет\nгонки и награды для победителей буду выше:","Выбрать","Закрыть");
			case 1: _getrace(playerid, "");
			case 2: ShowPlayerDialog(playerid,dMes,DIALOG_STYLE_MSGBOX,"{00CB9C}Информация","{FFFFFF}В зависимости от бюджета гонки, участники,\nмогут получить за призовые места:\n\n\n1 место - 80% от бюджета гонки\n2 место - 60% от бюджета гонки\n3 место - 40% от бюджета гонки\n4 место - 10% от бюджета гонки\n5 место - 6% от бюджета гонки","Закрыть","");
			}
		}
	case dHotelRent:
	    {
	        if(!response) return 1;
         	if(!strcmp(inputtext,"/m",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /m или /menu:");
			SendMes(playerid, -1, "{FFCD00}Команда для вызова главного игрового меню,где вы можете узнать:");
			SendMes(playerid, -1, "{FFCD00}- Информацию о Вашей статистике.");
			SendMes(playerid, -1, "{FFCD00}- Как связаться с администрацией.");
			SendMes(playerid, -1, "{FFCD00}- Как защитить свой аккаунт.");
			SendMes(playerid, -1, "{FFCD00}И многое другое.");
			}else if(!strcmp(inputtext,"/menu",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /m или /menu:");
			SendMes(playerid, -1, "{FFCD00}Команда для вызова главного игрового меню,где вы можете узнать:");
			SendMes(playerid, -1, "{FFCD00}- Информацию о Вашей статистике.");
			SendMes(playerid, -1, "{FFCD00}- Как связаться с администрацией.");
			SendMes(playerid, -1, "{FFCD00}- Как защитить свой аккаунт.");
			SendMes(playerid, -1, "{FFCD00}И многое другое.");
			}else if(!strcmp(inputtext,"/jailtime",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /jailtime:");
			SendMes(playerid, -1, "{FFCD00}Данная команда позволит Вам смотреть время до освобождения из тюрьмы.");
			}else if(!strcmp(inputtext,"/usedrugs",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /usedrugs:");
			SendMes(playerid, -1, "{FFCD00}С помощью команды {FFCC00}/usedrugs {FFCD00}Вы сможете сможете употреблять наркотики по 1-му грамму.");
			}else if(!strcmp(inputtext,"/pass",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /pass:");
			SendMes(playerid, -1, "{FFCD00}Данная команда Вам позволит показать паспорт другому человеку.");
			}else if(!strcmp(inputtext,"/lock",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /lock:");
			SendMes(playerid, -1, "{FFCD00}С помощью /lock 1 Вы сможете закрыть или открыть свою домашнюю машину.");
			SendMes(playerid, -1, "{FFCD00}А с помощью /lock 2 Вы сможете закрыть или открыть свой рабочий транспорт.");
			}else if(!strcmp(inputtext,"/anim",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /anim:");
			SendMes(playerid, -1, "{FFCD00}Данная команда предоставит Вам море анимаций на выбор.");
			SendMes(playerid, -1, "{FFCD00}Достаточно набрать {FFCC00}/anim{FFCD00} и выбрать анимацию.");
			}else if(!strcmp(inputtext,"/pay",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /pay:");
			SendMes(playerid, -1, "{FFCD00}С помощью данной команды Вы сможете передать денежные средства другому человеку.");
			SendMes(playerid, -1, "{FFCD00}От 0 до 5000.");
			}else if(!strcmp(inputtext,"/fill",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /fill:");
			SendMes(playerid, -1, "{FFCD00}С помощью данной команды Вы сможете заправить свою машину.");
			SendMes(playerid, -1, "{FFCD00}Вам достаточно подъехать к АЗС,и использовать команду{FFCC00} /fill{FFCD00}. ");
			}else if(!strcmp(inputtext,"/gps",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /gps:");
			SendMes(playerid, -1, "{FFCD00}Команда позволит Вам открыть список полезных мест которые Вам могут пригодится.");
			SendMes(playerid, -1, "{FFCD00}Например: Автосалон,или-же бюро занятости.");
			}else if(!strcmp(inputtext,"/healme",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /healme:");
			SendMes(playerid, -1, "{FFCD00}Если у Вас имеется аптечка,то Вы с помощью этой команды сможете ее использовать.");
			}else if(!strcmp(inputtext,"/lic",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /lic:");
			SendMes(playerid, -1, "{FFCD00}С помощью данной команды Вы сможете показать свои лицензии другому человеку.");
			}else if(!strcmp(inputtext,"/time",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /time:");
			SendMes(playerid, -1, "{FFCD00}Команда позволит Вам посмотреть время(Московское).");
			}else if(!strcmp(inputtext,"/call",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /call или /c:");
			SendMes(playerid, -1, "{FFCD00}Если Вам известен номер товарища(Или-же любой другой номер).. ");
			SendMes(playerid, -1, "{FFCD00}С помощью данной команды Вы сможете позвонить ему.");
			SendMes(playerid, -1, "{FFCD00}Например: {FFCC00}/call 100500.");
			}else if(!strcmp(inputtext,"/c",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /call или /c:");
			SendMes(playerid, -1, "{FFCD00}Если Вам известен номер товарища(Или-же любой другой номер).. ");
			SendMes(playerid, -1, "{FFCD00}С помощью данной команды Вы сможете позвонить ему.");
			SendMes(playerid, -1, "{FFCD00}Например: {FFCC00}/call 100500.");
			}else if(!strcmp(inputtext,"/sms",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /sms:");
			SendMes(playerid, -1, "{FFCD00}Если Вам известен номер товарища(Или-же любой другой номер)..");
			SendMes(playerid, -1, "{FFCD00}С помощью данной команды Вы сможете отправить ему текстовое сообщение.");
			SendMes(playerid, -1, "{FFCD00}Например: {FFCC00}/sms 100500 Привет,пополни мне деньги на телефоне.");
			}else if(!strcmp(inputtext,"/togphone",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /togphone:");
			SendMes(playerid, -1, "{FFCD00}Если Вам кто-то надоел своими частыми звонками..");
			SendMes(playerid, -1, "{FFCD00}То Вы можете отключить свой телефон,с помощью данной команды.");
			}else if(!strcmp(inputtext,"/play",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /play:");
			SendMes(playerid, -1, "{FFCD00}С помощью данной команды Вы сможете включить радио(Онлайн-Радио,например: RadioRecord)");
			}else if(!strcmp(inputtext,"/radio",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /radio:");
			SendMes(playerid, -1, "{FFCD00}С помощью данной команды Вы сможете включить радио SAN-FM.");
			}else if(!strcmp(inputtext,"/ad",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /ad:");
			SendMes(playerid, -1, "{FFCD00}Если Вы хотите продать машину,или что-нибудь еще..");
			SendMes(playerid, -1, "{FFCD00}То Вы можете подать объявление с помощью данной команды.");
			}else if(!strcmp(inputtext,"/id",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /id:");
			SendMes(playerid, -1, "{FFCD00}С помощью данной команды Вы сможете найти игрока по первой части игрового ника.");
			}else if(!strcmp(inputtext,"/wedding",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /wedding:");
			SendMes(playerid, -1, "{FFCD00}Данная команда позволит Вам пожениться с другим игроком.");
			SendMes(playerid, -1, "{FFCD00}Например: /wedding ID");
			}else if(!strcmp(inputtext,"/hospital",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /hospital:");
			SendMes(playerid, -1, "{FFCD00}С помощью данной команды Вы сможете занять койку в больнице.");
			}else if(!strcmp(inputtext,"/unwarnme",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /unwarnme:");
			SendMes(playerid, -1, "{FFCD00}Если Вы получили предупреждение Вы можете снять его наведя эту команду");
			SendMes(playerid, -1, "{FFCD00}На заметку: {FFCC00}Предупреждение пропадет через 10 дней.");
			}else if(!strcmp(inputtext,"/open",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /open:");
			SendMes(playerid, -1, "{FFCD00}Если Вы военный,полицейский,и т.д.. ");
			SendMes(playerid, -1, "{FFCD00}С помощью данной команды Вы сможете открыть/закрыть ворота.");
			}else if(!strcmp(inputtext,"/home",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /home:");
			SendMes(playerid, -1, "{FFCD00}Команда позволит Вам открыть меню дома,где Вы сможете просмотреть:");
			SendMes(playerid, -1, "{FFCD00}- Информацию о своем доме.");
			SendMes(playerid, -1, "{FFCD00}- Ваши улучшения.");
			SendMes(playerid, -1, "{FFCD00}- Где ваше ТС.");
			SendMes(playerid, -1, "{FFCD00}И многое другое.");
			}else if(!strcmp(inputtext,"/exit",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /exit:");
			SendMes(playerid, -1, "{FFCD00}Если у Вас имеется учучшение для дома(Автоматические двери).");
			SendMes(playerid, -1, "{FFCD00}То с помощью данной команды Вы сможете выйти из дома.");
			}else if(!strcmp(inputtext,"/safe",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /safe:");
			SendMes(playerid, -1, "{FFCD00}С помощью данной команды Вы сможете открыть свой сейф.");
			SendMes(playerid, -1, "{FFCD00}На заметку: Только если Вы купили улучшение для дома.");
			}else if(!strcmp(inputtext,"/freez",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /freez:");
			SendMes(playerid, -1, "{FFCD00}Если у Вас имеется улучшение для дома(Холодильник)..");
			SendMes(playerid, -1, "{FFCD00}То с помощью данной команды Вы сможете его открыть.");
			}else if(!strcmp(inputtext,"/sellcar",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /sellcar:");
			SendMes(playerid, -1, "{FFCD00}С помощью данной команды Вы сможете продать машину.");
			}else if(!strcmp(inputtext,"/sellhouse",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /sellhouse:");
			SendMes(playerid, -1, "{FFCD00}С помощью данной команды Вы сможете продать дом.");
			}else if(!strcmp(inputtext,"/r",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /r:");
			SendMes(playerid, -1, "{FFCD00}Если Вы находитесь в таких гос.орг как:");
			SendMes(playerid, -1, "{FFCD00}МВД,МО,СМИ,МЗ.");
			SendMes(playerid, -1, "{FFCD00}То с помощью данной команды Вы сможете общаться со своими коллегами.");
			SendMes(playerid, -1, "{FFCD00}Например: {FFCC00}/r Здравствуйте коллеги.");
			}else if(!strcmp(inputtext,"/f",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /f:");
			SendMes(playerid, -1, "{FFCD00}Если Вы находитесь в организации..");
			SendMes(playerid, -1, "{FFCD00}То данная команда позволит Вам общаться с другими организациями.");
			SendMes(playerid, -1, "{FFCD00}Если Вы из банды или мафии,то нет.");
			SendMes(playerid, -1, "{FFCD00}Например: {FFCC00}/f Приветствую Вас директор ФБР.");
			}else if(!strcmp(inputtext,"/tazer",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /tazer:");
			SendMes(playerid, -1, "{FFCD00}Данная команда предназначена для МВД.");
			SendMes(playerid, -1, "{FFCD00}Оглушает преступника на 10 секунд.");
			SendMes(playerid, -1, "{FFCD00}На заметку: Оглушает того кто стоит рядом с Вами.");
			}else if(!strcmp(inputtext,"/cuff",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /cuff:");
			SendMes(playerid, -1, "{FFCD00}Данная команда предназначена для МВД.");
			SendMes(playerid, -1, "{FFCD00}Позволяет надеть на преступника наручники.");
			SendMes(playerid, -1, "{FFCD00}Например: {FFCC00}/cuff ID.");
			}else if(!strcmp(inputtext,"/uncuff",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /uncuff:");
			SendMes(playerid, -1, "{FFCD00}Данная команда предназначена для МВД.");
			SendMes(playerid, -1, "{FFCD00}Позволяет снять наручники с игрока или преступника.");
			SendMes(playerid, -1, "{FFCD00}Например: {FFCC00}/uncuff ID.");
			}else if(!strcmp(inputtext,"/mg",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /mg:");
			SendMes(playerid, -1, "{FFCD00}Данная команда предназначена для МВД.");
			SendMes(playerid, -1, "{FFCD00}Позволяет говорить в громкоговоритель.");
			SendMes(playerid, -1, "{FFCD00}Например: {FFCC00}/mg Остановитесь!");
			}else if(!strcmp(inputtext,"/setspawn",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /setspawn:");
			SendMes(playerid, -1, "{FFCD00}Позволяет поменять место появления в игре.");
			}else if(!strcmp(inputtext,"/find",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /find:");
			SendMes(playerid, -1, "{FFCD00}Если Вы находитесь в организации..");
			SendMes(playerid, -1, "{FFCD00}То с помощью данной команды Вы сможете просмотреть кто из Ваших коллег в сети.");
			}else if(!strcmp(inputtext,"/takelic",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /takelic:");
			SendMes(playerid, -1, "{FFCD00}Данная команда предназначена для МВД и Инструкторов.");
			SendMes(playerid, -1, "{FFCD00}Позволяет изъять права,или-же лицензии у нарушителя.");
			}else if(!strcmp(inputtext,"/push",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /push:");
			SendMes(playerid, -1, "{FFCD00}Данная команда предназначена для МВД.");
			SendMes(playerid, -1, "{FFCD00}Позволяет затащить преступника в машину.");
			SendMes(playerid, -1, "{FFCD00}На заметку: {FFCC00}Только если преступник оглушен.");
			}else if(!strcmp(inputtext,"/frisk",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /frisk:");
			SendMes(playerid, -1, "{FFCD00}Данная команда предназначена для ФБР.");
			SendMes(playerid, -1, "{FFCD00}Позволяет обыскать человека.");
			}else if(!strcmp(inputtext,"/check",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /check:");
			SendMes(playerid, -1, "{FFCD00}Данная команда предназначена для МВД.");
			SendMes(playerid, -1, "{FFCD00}Позволяет проверить игрока на наличие розыска.");
			}else if(!strcmp(inputtext,"/location",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /location:");
			SendMes(playerid, -1, "{FFCD00}Данная команда предназначена для МВД.");
			SendMes(playerid, -1, "{FFCD00}Позволяет определить местонахождение преступника.");
			}else if(!strcmp(inputtext,"/heal",true)){
			SendMes(playerid, -1, "{FFCC00}Команда /heal:");
			SendMes(playerid, -1, "{FFCD00}Данная команда предназначена для МЗ.");
			SendMes(playerid, -1, "{FFCD00}Позволяет сотруднику больницы вылечить игрока в больнице(За деньги).");
			}
			ShowPlayerDialog(playerid, dHotelRent, DIALOG_STYLE_INPUT, "Описание команд", "{FFFFFF}Введите команду чтобы получить описание", "Дальше", "Отмена");
	    }
		/*
		case dHotel:
		{
			if(!response) return 1;
			new hotelidd = GetPVarInt(playerid,"selectedhotel");
			switch(listitem)
			{
				case 0:
				{
					new zStr[2000];
					format(zStr,sizeof(zStr),"Номер\t\tСтатус\t\tОплаченые дни\t\tПостоялец\n\n");
					for(new i; i<8; i++)
					{
						if(gHotelResidents[hotelidd][i]) format(zStr,sizeof(zStr),"%s{FFFFFF}%d\t\tЗанят\t\t\t%i\t\t\t%s\n", zStr, i+1, gHotelEndurance[hotelidd][i] - gCurDay, gHotelName[hotelidd][i]);
						else format(zStr,sizeof(zStr),"%s{FFFFFF}%d\t\tСвободно\t\tНеизвестно\t\tНет\n", zStr, i+1);
					}
					ShowPlayerDialog(playerid,dMes,DIALOG_STYLE_MSGBOX,"{ffcf00}Список номеров",zStr,"Закрыть","");
				}
				case 1:
				{
					if(pData[playerid][pHouse]) return SendClientMessage(playerid,CWHITE,"» У Вас уже есть дом. Зачем Вам нужна комната в отеле?");
					if(pData[playerid][pHotel]) return SendClientMessage(playerid,CWHITE,"» Вы уже арендуете комнату в другом отеле");
					ShowPlayerDialog(playerid,dHotelRent,DIALOG_STYLE_INPUT,"Отель","На какой период Вы хотите оплатить аренду комнаты в отеле? (1 день = 400$)\nВведите количество дней (от 1 до 30):","OK","Отмена");
				}
				case 2:
				{
					if(pData[playerid][pHotel] != hotelidd+1) return SendClientMessage(playerid,CWHITE,"» Вы не арендуете комнату в отеле");
					new zStr[128]; format(zStr, sizeof(zStr),"1 » Вернуть транспорт к отелю (%d$)\n2 » Отказаться от аренды\n3 » Продлить отель\n4 » Продать машину", gHotelData[hotelidd][hCarPrice]);
					ShowPlayerDialog(playerid,dHotelExtend,2,"{ffcf00}Отель",zStr,"OK","Отмена");
				}
				case 3:
				{
					if((gHotelData[hotelidd][hotelOwnerid] != pData[playerid][pMysqlID]) && pData[playerid][pAdmin] != 8) return SendClientMessage(playerid,CWHITE,"» Вы не владелец данного отеля");
					ShowPlayerDialog(playerid,dHotelOwnMenu,2,"{ffcf00}Отель","1 » Изменить цену за вход\n2 » Продать отель\n3 » Проверить баланс\n4 » Снять деньги\n5.Изменить цену за доставку авто","OK","Отмена");
				}
			}
		}
		case dHotelRent:
		{
			if(!response) return 1;
			new time = strval(inputtext);
			if(time < 1 || time > 30) return ShowPlayerDialog(playerid,dHotelRent,DIALOG_STYLE_INPUT,"Отель","На какой период Вы хотите арендовать комнату? (1 день = 400$)\nВведите количество дней (от 1 до 30):","OK","Отмена");
			new hotelid = GetPVarInt(playerid,"selectedhotel");
			new room = -1;
			for(new i;i<8;i++)
			{
				if(!gHotelResidents[hotelid][i]) {room = i;break;}
			}
			if(room == -1) return SendClientMessage(playerid,CWHITE,"» В отеле все номера заняты. Приходите позже");
			SetPVarInt(playerid,"selectedhoteltime",time);
			SetPVarInt(playerid,"selectedroom",room);
			ShowPlayerDialog(playerid,dHotelRent2,0,"Аренда","{"#cWHITE"}Стоимость аренды в сутки составляет 400$\nВы согласны?","Да","Нет");
		}
		case dHotelRent2:
		{
			if(!response) return 1;
			if(PTEMPHOTEL == 0) return SendClientMessage(playerid, COLOR_GREY, "Отели временно не работают, мы уже решаем проблемы");
			new time = GetPVarInt(playerid,"selectedhoteltime");
			new price = time*400;
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас не достаточно денег");
			new room = GetPVarInt(playerid,"selectedroom");
			new hotelid = GetPVarInt(playerid,"selectedhotel");
			if(gHotelResidents[hotelid][room]) return SendClientMessage(playerid,CWHITE,"» Вы не успели. Этот номер уже занят.");
			gHotelResidents[hotelid][room] = pData[playerid][pMysqlID];
			gHotelEndurance[hotelid][room] = gCurDay + time;
			UpdateHotelResidents(hotelid);
			AddHotelBank(hotelid, floatround(price/2));
			mes = "";
			f(mes, "UPDATE `accounts` SET `hotel` = '%d', hotelroom = '%d' WHERE `id` = '%d'",hotelid+1,room,pData[playerid][pMysqlID]);
			sql_query(zConn, mes); mes = "";
			pData[playerid][pHotel] = hotelid+1;
			pData[playerid][pHotelRoom] = room;
			format(gHotelName[hotelid][room],MAX_PLAYER_NAME,"%s",pData[playerid][pNickname]);
			f(mes, "UPDATE `hotels` SET `name%d`='%s' WHERE `id`='%d'",room,pData[playerid][pNickname],hotelid+1);
			sql_query(zConn, mes); mes = "";
			TransferMoney(playerid,-1,price,"hotelrent");
			SendClientMessage(playerid,0x7FC0E3FF,"Поздравляем! Вы арендовали номер в отеле. У вас появилась возможность приобрести транспорт.");
			UpdateHotel3D(hotelid);
		}
		case dHotelExtend:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					if(!pData[playerid][pCar] || (!pData[playerid][pHouse] && !pData[playerid][pHotel])) return SendClientMessage(playerid,CWHITE,"» У Вас нет т/с");
					new hotelid = pData[playerid][pHotel] - 1;
					if(pData[playerid][pMoney] < gHotelData[hotelid][hCarPrice]) return SendClientMessage(playerid,-1,"Недостаточно денег.");
					new carID = GetCarSlot(pData[playerid][pCar]);
					DestroyVehicle(carID);
					new room = pData[playerid][pHotelRoom];
					CreateVehicle(carID,gHotelPark[hotelid][room][0],gHotelPark[hotelid][room][1],gHotelPark[hotelid][room][2],gHotelPark[hotelid][room][3],gCars[carID][carColor1],gCars[carID][carColor2],-1);
					SetVehicleZAngle(carID,gHotelPark[hotelid][room][3]);
					SendClientMessage(playerid,0x7FC0E3FF,"Ваше т/c доставлено к отелю.");
					TransferMoney(playerid,-1,gHotelData[hotelid][hCarPrice],"fixcar");
					AddHotelBank(hotelid, floatround(gHotelData[hotelid][hCarPrice]/1.5));
				}
				case 1:
				{
					ShowPlayerDialog(playerid,dHotelReject,0,"Аренда","Вы хотите отказаться от аренды?","Да","Отмена");
				}
				case 2:
				{
					ShowPlayerDialog(playerid,dHotelRentEx,DIALOG_STYLE_INPUT,"Отель","На какой период Вы хотите продлить аренду комнаты? (1 день = 400$)\nВведите количество дней (от 1 до 30):","OK","Отмена");
				}
				case 3:
				{
					if(!pData[playerid][pCar] || (!pData[playerid][pHouse] && !pData[playerid][pHotel])) return SendClientMessage(playerid,CWHITE,"» У Вас нет т/с");
					OnPlayerCommandText(playerid,"/sellcar");
					ShowPlayerDialog(playerid,dHotelExtend,2,"{ffcf00}Отель","1 » Вернуть транспорт к отелю\n2 » Отказаться от аренды\n3 » Продлить отель\n4 » Продать машину","OK","Отмена");
				}
			}
		}
		case dHotelRentEx:
		{
			if(!response) return 1;
			new time = strval(inputtext);
			if(time < 1 || time > 30) return ShowPlayerDialog(playerid,dHotelRentEx,DIALOG_STYLE_INPUT,"Отель","На какой период Вы хотите продлить аренду комнаты? (1 день = 400$)\nВведите количество дней (от 1 до 30):","OK","Отмена");
			new price = time*400;
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
			new room = pData[playerid][pHotelRoom];
			new hotelid = pData[playerid][pHotel] - 1;
			if(gHotelEndurance[hotelid][room]-gCurDay+time > 30) return SendClientMessage(playerid, CGRAY, "Номер в отеле не может быть проплачен более чем на месяц вперед.");
			TransferMoney(playerid,-1,price,"hotelextend");
			AddHotelBank(hotelid, floatround(price/2));
			gHotelEndurance[hotelid][room] += time;
			UpdateHotelResidents(hotelid);
			SendClientMessage(playerid,0x7FC0E3FF,"Вы продлили проживаемость в отеле. Спасибо.");
		}
		case dHotelReject:
		{
			if(!response) return 1;
			if(pData[playerid][pCar]) return SendClientMessage(playerid,CWHITE,"» Перед тем как отказаться от аренды продайте ваше т/с");
			new room = pData[playerid][pHotelRoom];
			new hotelid = GetPVarInt(playerid,"selectedhotel");//pData[playerid][pHotel] - 1;
			mes = "";
			f(mes, "UPDATE `hotels` SET `name%d` = 'Свободно' WHERE `id`='%d'",room,hotelid+1);
			sql_query(zConn, mes); mes = "";
			pData[playerid][pHotel] = 0;
			pData[playerid][pHotelRoom] = 0;
			gHotelResidents[hotelid][room] = 0;
			gHotelEndurance[hotelid][room] = 0;
			UpdateHotelResidents(hotelid);
			f(mes, "UPDATE `accounts` SET `hotel` = '0', `hotelroom` = '0' WHERE `id` = '%d'",pData[playerid][pMysqlID]);
			sql_query(zConn, mes); mes = "";
			UpdateHotel3D(hotelid);
		}
		case dHotelBuy:
		{
			if(!response) {
				new hotelid = GetPVarInt(playerid,"selectedhotel");
				pTemp[playerid][pJustTP] = true;
				SetPlayerVirtualWorld(playerid,hotelid);
				SetPlayerInterior(playerid,2);
				SetPlayerPos(playerid,1330.9351,-1063.2609,3359.7158);
				SetPlayerFacingAngle(playerid,270.0);
				return 1;
			}
			if(pData[playerid][pBusiness]) return SendClientMessage(playerid,CWHITE,"» У Вас уже есть Бизнес");
			ShowPlayerDialog(playerid,dHotelBuy2,0,"Отель","{"#cWHITE"}Вы действительно хотите купить этот отель?","Да","Нет");
		}
		case dHotelBuy2:
		{
			if(!response) return 1;
			new hotelid = GetPVarInt(playerid,"selectedhotel");
			if(GetPlayerMoneyEx(playerid) < 600000) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
			mes = "";
			f(mes, "UPDATE `hotels` SET `ownerid` = '%d', `owner` = '%s' WHERE `id` = '%d'",pData[playerid][pMysqlID],pData[playerid][pNickname],hotelid+1);
			sql_query(zConn, mes); mes = "";
			TransferMoney(playerid,-1,600000,"buyhotel");
			gHotelData[hotelid][hotelOwnerid] = pData[playerid][pMysqlID];
			format(gHotelData[hotelid][hotelOwner],24,"%s",pData[playerid][pNickname]);
			SendClientMessage(playerid,0x7FC0E3FF,"Поздравляем! Вы купили отель");
			UpdateHotel3D(hotelid);
		}
		case dHotelEnter:
		{
			if(!response) return 1;
			new hotelid = GetPVarInt(playerid,"selectedhotel");
			if(gHotelData[hotelid][hEnterPrice] && pTemp[playerid][hotelEnter] != hotelid+1) {
				if(GetPlayerMoneyEx(playerid) < gHotelData[hotelid][hEnterPrice]) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег для входа");
				TransferMoney(playerid,-1,gHotelData[hotelid][hEnterPrice],"hotelenter");
				AddHotelBank(hotelid, gHotelData[hotelid][hEnterPrice]);
				pTemp[playerid][hotelEnter] = hotelid+1;
			}
			pTemp[playerid][pJustTP] = true;
			SetPlayerVirtualWorld(playerid,hotelid);
			SetPlayerInterior(playerid,4);
			SetPlayerPos(playerid,1330.9351,-1063.2609,3359.7158);
			SetPlayerFacingAngle(playerid,356.9135);
		}
		case dHotelOwnMenu:
		{
			if(!response) return 1;
			new hotelid = GetPVarInt(playerid,"selectedhotel");
			switch(listitem) {
				case 0: ShowPlayerDialog(playerid,dHotelSetEnter,DIALOG_STYLE_INPUT,"Отель","Введите желаемую цену для входа посторонних в отель (от 0$ до 200$):","OK","Отмена");
				case 1: ShowPlayerDialog(playerid,dHotelSell,0,"Отель","Вы действительно хотите продать свой отель государству за 300.000$?","Да","Отмена");
				case 2: {
					new zStr[64]; format(zStr, 64, "Текущий баланс на счету Вашего отеля: %d$", gHotelData[hotelid][hotelBank]);
					ShowPlayerDialog(playerid,0000,0,"Отель",zStr,"Выход","");
				}
				case 3: ShowPlayerDialog(playerid,dHotelGetMoney,DIALOG_STYLE_INPUT,"Отель","Введите сумму для снятия со счёта отеля:","OK","Отмена");
				case 4: ShowPlayerDialog(playerid,dHotelSetCar,DIALOG_STYLE_INPUT,"Отель","Введите желаемую цену для доставки авто к дому (от 100$ до 500$):","OK","Отмена");
			}
		}
		case dHotelSell:
		{
			if(!response) return 1;
			new hotelid = GetPVarInt(playerid,"selectedhotel");
			mes = "";
			f(mes, "UPDATE `hotels` SET `ownerid` = '0', `owner` = 'No' WHERE `id` = '%d'",hotelid+1);
			sql_query(zConn, mes); mes = "";
			pData[playerid][pBank] += 300000;
			UpdatePlayerData(playerid,"bank",pData[playerid][pBank]);
			gHotelData[hotelid][hotelOwnerid] = 0;
			SendClientMessage(playerid,0x7FC0E3FF,"Вы успешно продали отель государству. 300.000$ отправлено на Ваш банковский счёт.");
			UpdateHotel3D(hotelid);
		}
		case dHotelSetEnter:
		{
			if(!response) return 1;
			new price = strval(inputtext);
			if(price < 0 || price > 200) return ShowPlayerDialog(playerid,dHotelSetEnter,DIALOG_STYLE_INPUT,"Отель","Введите желаемую цену для входа посторонних в отель (от 0$ до 200$):","OK","Отмена");
			new hotelid = GetPVarInt(playerid,"selectedhotel");
			gHotelData[hotelid][hEnterPrice] = price;
			mes = "";
			f(mes, "UPDATE `hotels` SET `enterprice` = '%d' WHERE `id` = '%d'",price, hotelid+1);
			sql_query(zConn, mes); mes = "";
			SendClientMessage(playerid,0x7FC0E3FF,"Вы изменили цену за вход в отель.");
			UpdateHotel3D(hotelid);
		}
		case dHotelSetCar:
		{
			if(!response) return 1;
			new price = strval(inputtext);
			if(price < 100 || price > 500) return ShowPlayerDialog(playerid,dHotelSetCar,DIALOG_STYLE_INPUT,"Отель","Введите желаемую цену для доставки авто к дому (от 100$ до 500$):","OK","Отмена");
			new hotelid = GetPVarInt(playerid,"selectedhotel");
			gHotelData[hotelid][hCarPrice] = price;
			mes = "";
			f(mes, "UPDATE `hotels` SET `carprice` = '%d' WHERE `id` = '%d'",price, hotelid+1);
			sql_query(zConn, mes); mes = "";
			SendClientMessage(playerid,0x7FC0E3FF,"Вы изменили цену за доставку авто в отель.");
		}
		case dHotelGetMoney:
		{
			if(!response) return 1;
			new price = strval(inputtext);
			new hotelid = GetPVarInt(playerid,"selectedhotel");
			if(price < 0 || price > gHotelData[hotelid][hotelBank]) return ShowPlayerDialog(playerid,dHotelGetMoney,DIALOG_STYLE_INPUT,"Отель","Введите сумму для снятия со счёта отеля:","OK","Отмена");
			AddHotelBank(hotelid, -price);
			TransferMoney(-1,playerid,price,"hotelmoney");
			new zStr[126]; format(zStr, 126, "Вы сняли со счёта своего отеля %d$. Остаток на счету: %d$",price,gHotelData[hotelid][hotelBank]);
			SendClientMessage(playerid,COLOR_GREEN, zStr);
		}*/
	case dInfoProject:
	    {
	        if(!response) return 1;
			new mess[2048];
			switch(listitem)
			{
	            case 0:
	            {
					mess = "";
					strcat(mess, "{FFCC00}Песочница, совершено новый мир, которым полностью управляют игроки,\n");
					strcat(mess, "станьте частью истории или напишите ее сами, перед вами сняты все ограничения.\n");
					strcat(mess, "К вашему вниманию представлены несколько путей развития вашего персонажа.\n");
					strcat(mess, "Быть на стороне закона или же противоречить ему,спасать жизнь или подвергать их опасности.\n");
					strcat(mess, "Ваши пути безграничны. Начало вашего пути лежит в метро,именно отсюда\n");
					strcat(mess, "Вы начнете с парой монет в кармане свой дальнейший путь. Все остальное зависит от вас.\n");
					strcat(mess, "Ваши возможности ограничиваются только вашим воображением. Присоединяйтесь!\n\n");
					strcat(mess, "Dallas RP - не просто сервер для игры, а пока что, развивающийся уникальный проект SA:MP\n");
					strcat(mess, "Dallas RP(C)");
	            }
	            case 1:
	            {
					mess = "";
					strcat(mess, "{FFCC00}Безопасность.\n");
					strcat(mess, "{FFCD00}Ваш аккаунт-это ваша собственность,за сохранность которой вы сами несете ответственность.\n");
					strcat(mess, "{FFCD00}Не кому не давайте свой пароль,иначе вы рискуете потерять ваш аккаунт и все достижения на нем.\n");
					strcat(mess, "{FFCD00}Не скачивайте дополнительные программы,большинство из них создаются чтоб заполучить доступ к вашему аккаунту.\n");
					strcat(mess, "{FFCD00}Каждый игрок Dallas-RP может расширить свои настройки безопасности,тем самым практически исключит возможность взлома.\n");
					strcat(mess, "{FFCD00}Подробнее:/m -> Безопасность");
	            }
 				case 2:
	            {
     				mess = "";
	                strcat(mess, "{FFCC00}RolePlay и основы сервера.");
	                strcat(mess, "{FFCD00}Играй на сервере,вы можете повышать свой уровень.\n");
	                strcat(mess, "{FFCD00}Тем самым получая новые возможности на проекте.\n");
	                strcat(mess, "{FFCD00}Чтобы повысить свой уровень,Вам надо накопить определенное количество очков опыта.\n");
	                strcat(mess, "{FFCD00}Опыт Вы получаете в PayDay(18:00,17:00,16:00,и т.д).\n");
                    strcat(mess, "{FFCD00}RolePlay - Это вид игры,в котором вы должны отыгрывать свою роль,будто вы находитесь в реальной жизни.\n");
                    strcat(mess, "{FFCD00}Каждый игрок определяет сам себе роль,он может стать:\n");
                    strcat(mess, "{FFCD00}Полицейским,военным,бандитом,таксистом и т.д.\n");
                    strcat(mess, "{FFCD00}RolePlay режим подразумевает некоторое знание понятий и правил игры.\n");
                    strcat(mess, "{FFCD00}С этой информацией вы можете ознакомиться на нашем форуме.");
	            }
	            case 3:
	            {
					mess = "";
                    strcat(mess, "{FFCC00}Общение.\n");
                    strcat(mess, "{FFCD00}Во время игры вам придется очень часто общаться с людьми,для этого существует 2 вида чатов:\n");
                    strcat(mess, "{FFCD00}IC(In Character)-общение внутри игры для игровых ситуаций.\n");
                    strcat(mess, "{FFCD00}Чат вызывается клавишей F6 или английской клавишей T.\n");
                    strcat(mess, "{FFCD00}ОСС(Out Of Character)-это чат создан для обсуждения реальной жизни, не игровой.\n");
                    strcat(mess, "{FFCD00}Чтоб общаться в этом чате водите перед сообщением /n.\n");
                    strcat(mess, "{FFCD00}Помимо этих способов,вы сможете позвонить или отправить смс другому игроку.\n");
                    strcat(mess, "{FFCD00}А при вступлении во фракцию у вас появиться доступ к рации /r и /f\n");
                    strcat(mess, "{FFCD00}через которую вы сможете связать с сотрудником этой же фракции.");
	            }
	            case 4:
	            {
					mess = "";
					strcat(mess, "{FFFFFF}После того как вы прошли регистрацию вы попадаете на станцию метро.\n");
                    strcat(mess, "{FFFFFF}И первом делом вам необходимо заработать денег.\n");
                    strcat(mess, "{FFFFFF}Для этого на сервере существует огромный список начальных работ,таких как\n");
                    strcat(mess, "{FFFFFF}яблочная ферма,виноградная ферма,вино водочный завод и многие другие.\n");
                    strcat(mess, "{FFFFFF}Все эти места вы сможете найти с помощью команды /gps.\n");
                    strcat(mess, "{FFFFFF}Добраться до работы Вы сможете используя автобусные маршруты,ходящие от метро.\n");
                    strcat(mess, "{FFFFFF}После того, как вы получили первые сбережения,\n");
                    strcat(mess, "{FFFFFF}Вы можете отправиться в автошколу для получения прав.\n");
                    strcat(mess, "{FFFFFF}Водительские права позволят вам купить или арендовать транспорт,\n");
                    strcat(mess, "{FFFFFF}и устроиться на более интересную и высокооплачиваемую работу.\n");
                    strcat(mess, "{FFFFFF}Сдача на права абсолютно бесплатная.");
	            }
	            case 5:
	            {
					mess = "";
                    strcat(mess, "{FFCC00}Транспорт.\n");
                    strcat(mess, "{FFCD00}Транспортная система - Одна из важнейших на сервере.\n");
                    strcat(mess, "{FFCD00}С ее помощью работает большинство предприятий и организаций.\n");
                    strcat(mess, "{FFCC00}Автобус - {FFCD00}Основной вид транспорта.\n");
                    strcat(mess, "{FFCD00}С его помощью Вы сможете добраться до любой точки на сервере,где проложен его маршрут.\n");
                    strcat(mess, "{FFCC00}Такси - {FFCD00}Хороший и быстрый вид перемещение.\n");
                    strcat(mess, "{FFCD00}С его помощью Вы сможете попасть в любой укромный уголок сервера.\n");
                    strcat(mess, "{FFCD00}Но поездка на нем обойдется вам в не маленькие деньги.\n");
                    strcat(mess, "{FFCD00}Штату всегда требуются водители автобусов,или такси.\n");
                    strcat(mess, "{FFCD00}Если Вас заинтересовали данные работы,то Вы сможете на них устроится в бюро занятости(/GPS - Полезные места).");
	            }
	            case 6:
	            {
					mess = "";
 	                strcat(mess, "{FFCC00}Гос.Устройство:\n");
	                strcat(mess, "{FFCD00}Вся игровая жизнь на сервере проходит под контролем правительства.\n");
                    strcat(mess, "{FFCD00}В ее состав входят мэрии всех 3 городов и Белый дом,где располагается сам президент.\n");
                    strcat(mess, "{FFCD00}В штате раз в месяц проводятся выборы президента и мэра.\n");
                    strcat(mess, "{FFCD00}Где каждый может проголосовать за любимого кандидата.\n");
                    strcat(mess, "{FFCD00}Вы спросите: А как мы узнаем кто наш любимый кандидат?\n");
                    strcat(mess, "{FFCD00}Для этого каждый кандидат проводит предвыборную компанию.\n");
                    strcat(mess, "{FFCD00}Устраивает концерты, митинги, мероприятия, раздачи денег и многое другое...");

	            }
	            case 7:
	            {
					mess = "";
                    strcat(mess, "{FFCC00}Жилье.\n");
					strcat(mess, "{FFCD00}По всему штату находиться множество домов от 5000 до нескольких сотен тысяч,которые можно купить.стоимость дома зависит от множества..\n");
                    strcat(mess, "{FFCD00}Факторов,таких как расположение,интерьер и другое...\n\n");
                    strcat(mess, "{FFCD00}Купив дом,вы сможете приобрести личный автомобиль,или купить улучшения для дома,которые облегчат вам жизнь.\n");
                    strcat(mess, "{FFCD00}В зависимости от престижности дома с вас будет взыматься разная квартплата.");
			 	}
				case 8:
				{
					mess = "";
                    strcat(mess, "{FFCC00}Бизнес.\n");
                   	strcat(mess, "{FFCD00}В штате находиться множество бизнесов и АЗС,купив которые вы можете заработать неплохие деньги.\n");
                   	strcat(mess, "{FFCD00}Это может быть небольшой магазинчик в деревушки или магазин одежды в центе ЛС,либо АЗС на оживленной трассе.\n");
                   	strcat(mess, "{FFCD00}Конечно не все бизнесы приносят одинаковую прибыль,это нужно учитывать при покупки.\n");
                   	strcat(mess, "{FFCD00}Каждый новый житель штата получает счет в банке.\n");
                   	strcat(mess, "{FFCD00}На него вам будут начислять зарплату и другие доходы.\n");
                   	strcat(mess, "{FFCD00}Этот счет называется основным , и доступ к нему Вы сможете получить в любом банкомате.");
				}
				case 9:
				{
					mess = "";
                    strcat(mess, "{FFCC00}Организации.\n");
                    strcat(mess, "{FFCD00}В штате имеется огромное количество организаций.\n");
                    strcat(mess, "{FFCD00}Они делятся на официальные(СМИ,МВД,МО...)и неофициальные(банды и мафии).\n");
                    strcat(mess, "{FFCD00}Чем больше вы живете в штате ,тем больше организаций вам становится доступными.\n");
                    strcat(mess, "{FFCD00}Но для вступления в некоторые организации Вам понадобиться и другие умения:\n");
                    strcat(mess, "{FFCD00}Например в банде нужно умения пользоваться оружием,а в полиции Вам по набиться знание уставов и законов.\n");
                    strcat(mess, "{FFCD00}После вступления в организацию Ваша жизнь преобразиться,а повышение по карьерной лестнице..\n");
                    strcat(mess, "{FFCD00}будет увеличивать вам зарплату и статус в обществе.\n");
                    strcat(mess, "{FFCD00}И кто знает ,может именно вы будущий лидер одной организаций нашего штата.\n");
                    strcat(mess, "{FFCD00}Удачи и приятной игры на Dallas Role Play!");
				}
	        }
	        ShowPlayerDialog(playerid, dMes, DIALOG_STYLE_MSGBOX, "{ffcf00}Информация", mess, "Закрыть", "");

	    }
	case dGPS:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid,dGPSAuto,2,"{ffcf00}GPS","Авторынок ( LS )","Отметить","Назад"); //Авторынки
			case 1: ShowPlayerDialog(playerid,dGPSMain,2,"{ffcf00}GPS","Автостанция г.Лос-Сантос\nАвтошкола\nВоенкомат\nКлуб Альхамбра\nКлуб Санта Мария\nКлуб Джиззи\nТеатр Лос-Сантос","Отметить","Назад"); //Общественные места
			case 2: ShowPlayerDialog(playerid,dGPSBanki,2,"{ffcf00}GPS","Банк г.Лос-Сантос\nБанк г.Сан-Фиерро\nБанк г.Лас-Вентурас\nТочка отмытия денег\nОружейный склад(для военных)\nБюро Занятости","Отметить","Назад");//Банки
			case 3:	ShowPlayerDialog(playerid,dGPSWork,2,"{ffcf00}GPS","{33AAFF}» Места загрузки\n{FFFFFF}Яблочная ферма\nФерма по сбору винограда\nЗавод по производству Вина\nРазвозчик Вингорада\nРазвозчик Песка\nРазвочик бензина","Отметить","Назад");
            case 4: ShowPlayerDialog(playerid,dGPSGosOrg1,2,"{ffcf00}GPS","Государственные организации\nМафии и Банды","Отметить","Назад"); //Гос. организации
			case 6:
			{
			    EnableGPSForPlayer(playerid,-2109.9614,-171.5102,35.3203,4.0,11); //Карьер
				pTemp[playerid][pGPS] = true;
				SendClientMessage(playerid,COLOR_GREEN,"GPS навигатор включен, выключить: {FFCD00}/gps");
			}
			}
		}
	case dGPSWork:
		{
			if(!response) return ShowPlayerDialog(playerid,dGPS,2,"{ffcf00}GPS","1 » АвтоПарки\n2 » Общественные места\n3 » Полезные места\n4 » Работы\n5 » Расположение организаций","Выбрать","Выход");
			switch(listitem)
			{
			case 0:
			    {
			        ShowPlayerDialog(playerid,dGPSTruck,2,"{ffcf00}Развозчики","1 » Место загрузки развозчика песка\n2 » Место загрузки развозчика винограда","Выбрать","Выход");

			    }
			case 1:
				{
					EnableGPSForPlayer(playerid,1101.3026,-301.6427,73.9922,4.0,11); //Яблочная ферма
					pTemp[playerid][pGPS] = true;
					SendClientMessage(playerid,COLOR_GREEN,"GPS навигатор включен, выключить: {FFCD00}/gps");
				}
			case 2:
				{
					EnableGPSForPlayer(playerid,-50.7439,30.3882,3.1094,4.0,11); //Ферма по винограда
					pTemp[playerid][pGPS] = true;
					SendClientMessage(playerid,COLOR_GREEN,"GPS навигатор включен, выключить: {FFCD00}/gps");
				}
			case 3:
				{
					EnableGPSForPlayer(playerid,-50.0296,-275.9604,5.4297,4.0,11); //Завод по вину
					pTemp[playerid][pGPS] = true;
					SendClientMessage(playerid,COLOR_GREEN,"GPS навигатор включен, выключить: {FFCD00}/gps");
				}
			case 4:
				{
					EnableGPSForPlayer(playerid,-49.4246,-231.3683,6.7646,4.0,11); //Развозчик винограда
					pTemp[playerid][pGPS] = true;
					SendClientMessage(playerid,COLOR_GREEN,"GPS навигатор включен, выключить: {FFCD00}/gps");
				}
			case 5:
				{
					EnableGPSForPlayer(playerid,13.9598,-264.1795,5.4297,4.0,11); //Развозчики песка
					pTemp[playerid][pGPS] = true;
					SendClientMessage(playerid,COLOR_GREEN,"GPS навигатор включен, выключить: {FFCD00}/gps");
				}
			case 6:
			    {
			        EnableGPSForPlayer(playerid,278.5051,1358.0149,10.5859,4.0,11); //Развозчики бензина
					pTemp[playerid][pGPS] = true;
					SendClientMessage(playerid,COLOR_GREEN,"GPS навигатор включен, выключить: {FFCD00}/gps");

			    }
			}
		}
	case dGPSMain:
		{
			if(!response) return ShowPlayerDialog(playerid,dGPS,2,"{ffcf00}GPS","1 » АвтоПарки\n2 » Общественные места\n3 » Полезные места\n4 » Работы\n5 » Расположение организаций","Выбрать","Выход");
			switch(listitem)
			{
			/*case 0: EnableGPSForPlayer(playerid,1764.4985,-1895.7789,13.5624,4.0,56); //ЖДЛС
			case 1: EnableGPSForPlayer(playerid,-1984.1062,123.9981,27.6875,4.0,56); //ЖДСФ
			case 2: EnableGPSForPlayer(playerid,2834.2429,1303.2932,10.7785,4.0,56);*/ //ЖДЛВ
			case 0: EnableGPSForPlayer(playerid,1194.1826,-1750.0758,13.5824,4.0,56); //Автовокзал ЛС
			case 1: EnableGPSForPlayer(playerid,-2031.4530,-97.4284,35.1641,4.0,56); //Автошкола
			case 2: EnableGPSForPlayer(playerid,1168.7147,1370.9049,10.8125,4.0,56); //Военкомат
			case 3: EnableGPSForPlayer(playerid,1832.4493,-1682.3551,13.5146,4.0,56); //Альхамбра
			case 4: EnableGPSForPlayer(playerid,382.7101,-1817.8518,7.8331,4.0,56); //Санта Мария
			case 5: EnableGPSForPlayer(playerid,-2622.4104,1407.2300,7.1016,4.0,56); //Джиззи
			case 6: EnableGPSForPlayer(playerid,621.5738,-1643.1906,16.3739,4.0,56); //Джиззи

			}
			pTemp[playerid][pGPS] = true;
			SendClientMessage(playerid,COLOR_GREEN,"GPS навигатор включен, выключить: {FFCD00}/gps");
		}
	case dGPSAuto:
		{
			if(!response) return ShowPlayerDialog(playerid,dGPS,2,"{ffcf00}GPS","1 » АвтоПарки\n2 » Общественные места\n3 » Полезные места\n4 » Работы\n5 » Расположение организаций","Выбрать","Выход");
			switch(listitem)
			{
				case 0: EnableGPSForPlayer(playerid,554.0256,-1287.5737,17.2482,4.0,55);
			}
			pTemp[playerid][pGPS] = true;
			SendClientMessage(playerid,COLOR_GREEN,"GPS навигатор включен, выключить: {FFCD00}/gps");
		}
	case dGPSTruck:
		{
			if(!response) return ShowPlayerDialog(playerid,dGPSWork,2,"{ffcf00}GPS","{33AAFF}» Развозчики песка\n{33AAFF}» Развозчики винограда\n{FFFFFF}Завод по производству материалов\nЯблочная ферма\nФерма по сбору винограда\nЗавод по производству Вина\nРазвозчик Вингорада\nРазвозчик Песка\nРазвочик бензина","Отметить","Назад");
			switch(listitem)
			{
			case 0: EnableGPSForPlayer(playerid,362.4321,860.5054,20.4063,4.0,51);
			case 1: EnableGPSForPlayer(playerid,-27.5678,38.7974,3.1172,4.0,51);

			}
			pTemp[playerid][pGPS] = true;
			SendClientMessage(playerid,COLOR_GREEN,"GPS навигатор включен, выключить: {FFCD00}/gps");
		}
	case dGPSTruck1:
		{
			if(!response) return ShowPlayerDialog(playerid,dGPSWork,2,"{ffcf00}GPS","{33AAFF}» Развозчики песка\n{33AAFF}» Развозчики винограда\n{FFFFFF}Завод по производству материалов\nЯблочная ферма\nФерма по сбору винограда\nЗавод по производству Вина\nРазвозчик Вингорада\nРазвозчик Песка\nРазвочик бензина","Отметить","Назад");
			switch(listitem)
			{
			case 0: EnableGPSForPlayer(playerid,-22.8803,-272.8096,6.6332,4.0,51);
			case 1: EnableGPSForPlayer(playerid,-887.6867,1867.0271,20.2641,4.0,51);

			}
			pTemp[playerid][pGPS] = true;
			SendClientMessage(playerid,COLOR_GREEN,"GPS навигатор включен, выключить: {FFCD00}/gps");
		}
	case dGPSGosOrg1:
		{
		    if(!response) return ShowPlayerDialog(playerid,dGPS,2,"{ffcf00}GPS","1 » АвтоПарки\n2 » Общественные места\n3 » Полезные места\n4 » Работы\n5 » Расположение организаций","Выбрать","Выход");
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid,dGPSGosOrg,2,"{ffcf00}GPS","Белый Дом\nМэрия г.Лос-Сантос\nМэрия г.Сан-Фиерро\nМэрия г.Лас-Вентурас\nПолиция г.Лос-Сантос\nПолиция г.Сан-Фиерро\nПолиция г.Лас-Вентурас\nБольница г.Лос-Сантос\nБольница г.Сан-Фиерро\nБольница г.Лас-Вентурас\nЗона 51\nАвианосец\nSAN-FM\nSAN-TV\nФБР\nМинистерство","Отметить","Назад"); //Гос. организации
			case 1: ShowPlayerDialog(playerid,dGPSMafiiBandi,2,"{ffcf00}GPS","Grove Street\nBallas\nLos Santos Vagos\nThe Rifa\nVarios Los Aztecas\nRussian Mafia\nYakuza\nLa Cosa Nostra","Отметить","Назад"); //мафии
		    }
		}
	case dGPSGosOrg:
		{
			if(!response) return ShowPlayerDialog(playerid,dGPS,2,"{ffcf00}GPS","1 » АвтоПарки\n2 » Общественные места\n3 » Полезные места\n4 » Работы\n5 » Расположение организаций","Выбрать","Выход");
			switch(listitem)
			{
			case 0: EnableGPSForPlayer(playerid,1458.0372,-1359.2563,13.3828,4.0,19);//Администрация Президента
			case 1: EnableGPSForPlayer(playerid,1470.5105,-1743.7321,13.5469,4.0,19);//Мэрия ЛС
			case 2: EnableGPSForPlayer(playerid,-2752.7209,368.9571,4.1589,4.0,19);//Мэрия СФ
			case 3: EnableGPSForPlayer(playerid,2441.8787,2375.8682,11.4771,4.0,19);//Мэрия ЛВ
			case 4: EnableGPSForPlayer(playerid,1535.2081,-1678.4012,13.3828,4.0,30);//ЛСПД
			case 5: EnableGPSForPlayer(playerid,-1588.6359,724.2081,8.7667,4.0,30);//СФПД
			case 6: EnableGPSForPlayer(playerid,2231.4441,2459.5396,10.7403,4.0,30);//ЛВПД
			case 7: EnableGPSForPlayer(playerid,1193.6185,-1326.5986,13.3984,4.0,22);//Больница ЛС
			case 8: EnableGPSForPlayer(playerid,-2655.2747,634.7916,14.4531,4.0,22);//Больница СФ
			case 9: EnableGPSForPlayer(playerid,1607.5747,1820.0541,10.8280,4.0,22);//Больница ЛВ
			case 10: EnableGPSForPlayer(playerid,145.1473,1968.4036,19.5025,4.0,56);//СВ
			//case 11: EnableGPSForPlayer(playerid,463.8846,2527.6189,20.8748,4.0,56);//ВВС
			case 11: EnableGPSForPlayer(playerid,-2005.0848,1811.7623,3.0414,4.0,56);//ВМФ
			case 12: EnableGPSForPlayer(playerid,1631.6947,-1725.2740,13.5469,4.0,56);//ЛСФМ
			//case 13: EnableGPSForPlayer(playerid,-2014.4717,485.4414,35.1719,4.0,56);//СФФМ
			case 13: EnableGPSForPlayer(playerid,643.7409,-1357.4482,13.5710,4.0,56);//ЛВФМ
			case 14: EnableGPSForPlayer(playerid,1037.6587,1021.8680,11.0000,4.0,30);//ФБР
			case 15: EnableGPSForPlayer(playerid,1310.2018,-1376.4811,13.6553,4.0,19);//Министерство

			}
			pTemp[playerid][pGPS] = true;
			SendClientMessage(playerid,COLOR_GREEN,"GPS навигатор включен, выключить: {FFCD00}/gps");
		}
	case dGPSMafiiBandi:
		{
			if(!response) return ShowPlayerDialog(playerid,dGPS,2,"{ffcf00}GPS","1 » АвтоПарки\n2 » Общественные места\n3 » Полезные места\n4 » Работы\n5 » Расположение организаций","Выбрать","Выход");
			switch(listitem)
			{
				//case 0: EnableGPSForPlayer(playerid,963.8026,1733.5601,8.6484,4.0,56);//Колумбийская мафия
				//case 1: EnableGPSForPlayer(playerid,1469.6617,2773.5659,10.6719,4.0,56);//Мексиканская мафия
				//	case 2: EnableGPSForPlayer(playerid,2596.5854,1823.9829,10.8203,4.0,56);//Якудза
				//case 3: EnableGPSForPlayer(playerid,-1054.2860,-1197.1118,129.0511,4.0,56);//Ферма
			case 0: EnableGPSForPlayer(playerid,2487.5886,-1654.4797,13.3343,4.0,62);//Groove
			case 1: EnableGPSForPlayer(playerid,2000.9332,-1120.0969,26.7813,4.0,59);//Ballas
			case 2: EnableGPSForPlayer(playerid,2744.9495,-1177.4055,69.4025,4.0,60);//Vagos
			case 3: EnableGPSForPlayer(playerid,2733.4053,-1954.5991,13.5469,4.0,61);//Рифа
			case 4: EnableGPSForPlayer(playerid,2187.9260,-1812.1604,13.5469,4.0,58);//Ацтек

			case 5: EnableGPSForPlayer(playerid,-2706.4041,128.5393,4.1797,4.0,19);//RM
			case 6: EnableGPSForPlayer(playerid,665.1891,-1276.0887,13.4609,4.0,19);//YAK
			case 7: EnableGPSForPlayer(playerid,1467.3665,2773.1021,10.6719,4.0,19);//Ацтек

				//				case 9: SetPlayerCheckpoint(playerid,2494.0757,-1464.6000,24.0254,4.0);//Авто для банды
			}
			pTemp[playerid][pGPS] = true;
			SendClientMessage(playerid,COLOR_GREEN,"GPS навигатор включен, выключить: {FFCD00}/gps");
		}
	case dGPSBanki:
		{
			if(!response) return ShowPlayerDialog(playerid,dGPS,2,"{ffcf00}GPS","1 » АвтоПарки\n2 » Общественные места\n3 » Полезные места\n4 » Работы\n5 » Расположение организаций","Выбрать","Выход");
			switch(listitem)
			{
			case 0: EnableGPSForPlayer(playerid,1499.4066,-1589.9551,13.3828,4.0,52);//Банк ЛС
			case 1: EnableGPSForPlayer(playerid,-2650.0825,376.0515,6.1563,4.0,52);//Банк СФ
			case 2: EnableGPSForPlayer(playerid,2362.7910,2377.5986,10.8203,4.0,52);//Банк ЛВ
			case 3: EnableGPSForPlayer(playerid,1048.0184,-657.1345,120.1172,4.0,19);//1048.0184,-657.1345,120.1172
			case 4: EnableGPSForPlayer(playerid,-1870.1986,1414.6869,7.1845,4.0,19);
			case 5: EnableGPSForPlayer(playerid, 1418.0067,-1705.0101,13.5469,4.0,19);
			}
			pTemp[playerid][pGPS] = true;
			SendClientMessage(playerid,COLOR_GREEN,"GPS навигатор включен, выключить: {FFCD00}/gps");
		}
	case dLeaderskinAdm:
		{
			if(!response) return 1;
			if(listitem == 0) SetPVarInt(playerid,"actfraction",listitem+1);
			else if(listitem == 1) SetPVarInt(playerid,"actfraction",listitem+10);
			else SetPVarInt(playerid,"actfraction",listitem+5);

			switch(listitem)
			{
			case 0: SetPVarInt(playerid,"skinleader",295);
			case 1: SetPVarInt(playerid,"skinleader",120);
			case 2: SetPVarInt(playerid,"skinleader",228);
			case 3: SetPVarInt(playerid,"skinleader",294);
			case 4: SetPVarInt(playerid,"skinleader",227);
			}
			new actplayerid = GetPVarInt(playerid,"actplayerid");
//			new last = GetPlayerSkin(actplayerid);
			new fractionid = GetPVarInt(playerid,"actfraction");
			new skinid = GetPVarInt(playerid,"skinleader");
			new rank = gFractionRankCount[fractionid];
			mes = "";
			f(mes, "UPDATE `accounts` SET `fraction` = '%d', rank = '%d', `fractionskin` = '%d', `subfraction` = '0' WHERE `id` = '%d'",fractionid+1,rank,skinid,pData[actplayerid][pMysqlID]);
			sql_query(zConn, mes); mes = "";
			pData[actplayerid][pFraction] = fractionid+1;
			pData[actplayerid][pRank] = rank;
			pData[actplayerid][pFractionSkin] = skinid;
			UpdatePlayerData(actplayerid, "fractionskin", pData[playerid][pFractionSkin]);
			pData[actplayerid][pSubfraction] = 0;
			pData[actplayerid][pJob] = 0;
			UpdatePlayerData(actplayerid, "job", pData[playerid][pJob]);
			SetPlayerColor(actplayerid,gFractionColor[fractionid]);
			mes = "";
			f(mes, "» %s {"#cWHITE"}был назначен лидером организации \"%s\"",pData[actplayerid][pNickname],gFractionName[fractionid]);
			SendClientMessage(playerid,CYELLOW,mes);
			f(mes, "» Президент %s назначил Вас лидером организации \"%s\"",pData[playerid][pNickname],gFractionName[fractionid]);
			SendClientMessage(actplayerid,CINFO,mes);
			f(mes, "» [ВНИМАНИЕ] Президент %s назначил %s лидером организации \"%s\"",pData[playerid][pNickname],pData[actplayerid][pNickname],gFractionName[fractionid]);
			AdminChat(0xff0000ff,mes);
			SetPlayerSkin(actplayerid,skinid);
		}
	case dLeaderskin:
		{
			if(!response) return 1;
			new fractionid = listitem;
			new actplayerid = GetPVarInt(playerid,"actplayerid");
//			new last = GetPlayerSkin(actplayerid);
			new skinid = GetPVarInt(playerid,"skinleader");
			new rank = gFractionRankCount[fractionid];
			mes = "";
			f(mes, "UPDATE `accounts` SET `fraction` = '%d', rank = '%d', `fractionskin` = '%d', `subfraction` = '0' WHERE `id` = '%d'",fractionid+1,rank,skinid,pData[actplayerid][pMysqlID]);
			sql_query(zConn, mes); mes = "";
			pData[actplayerid][pFraction] = fractionid+1;
			pData[actplayerid][pRank] = rank;
			pData[actplayerid][pFractionSkin] = skinid;
			UpdatePlayerData(actplayerid, "fractionskin", pData[playerid][pFractionSkin]);
			pData[actplayerid][pSubfraction] = 0;
			pData[actplayerid][pJob] = 0;
			UpdatePlayerData(actplayerid, "job", pData[playerid][pJob]);
			SetPlayerColor(actplayerid,gFractionColor[fractionid]);
			mes = "";
			f(mes, "» %s {"#cWHITE"}был назначен лидером фракции \"%s\"",pData[actplayerid][pNickname],gFractionName[fractionid]);
			SendClientMessage(playerid,CYELLOW,mes);
			f(mes, "» %s назначил Вас лидером организации \"%s\"",pData[playerid][pNickname],gFractionName[fractionid]);
			SendClientMessage(actplayerid,COLOR_YELLOW,mes);
			f(mes, "» [ВНИМАНИЕ] Администратор %s назначил %s лидером организации \"%s\"",pData[playerid][pNickname],pData[actplayerid][pNickname],gFractionName[fractionid]);
			AdminChat(0xff0000ff,mes);
			SetPlayerSkin(actplayerid,skinid);
		}
	case dWeather:
		{
			if(response)
			{
				switch (listitem)
				{
				case 0: SetWeather(1);
				case 1: SetWeather(2);
				case 2: SetWeather(3);
				case 3: SetWeather(4);
				case 4: SetWeather(5);
				case 5: SetWeather(6);
				case 6: SetWeather(7);
				case 7: SetWeather(8);
				case 8: SetWeather(9);
				case 9: SetWeather(10);
				case 10: SetWeather(11);
				case 11: SetWeather(12);
				case 12: SetWeather(13);
				case 13: SetWeather(14);
				case 14: SetWeather(15);
				case 15: SetWeather(16);
				case 16: SetWeather(17);
				case 17: SetWeather(18);
				case 18: SetWeather(19);
				case 19: SetWeather(20);
				case 20: SetWeather(21);
				case 21: SetWeather(22);
				case 22: SetWeather(23);
				case 23: SetWeather(26);
				case 24: SetWeather(27);
				case 25: SetWeather(29);
				case 26: SetWeather(30);
				case 27: SetWeather(32);
				case 28: SetWeather(33);
				case 29: SetWeather(34);
				case 30: SetWeather(35);
				case 31: SetWeather(36);
				case 32: SetWeather(38);
				case 33: SetWeather(39);
				case 34: SetWeather(40);
				case 35: SetWeather(42);
				case 36: SetWeather(43);
				case 37: SetWeather(44);
				case 38: SetWeather(45);
				case 39: SetWeather(81);
				case 40: SetWeather(91);
				case 41: SetWeather(200);
				}
				SendClientMessage(playerid, COLOR_ORANGE, "Погода установлена");
			}
		}
	case dSellZone:
		{
			if(!response) return 1;
			if(listitem+3 == pData[playerid][pFraction]) return SendClientMessage(playerid, CWHITE,"» Вы указали свою организацию");
			new leader = -1;
			foreach(new i: Player) {
				if(pData[i][pFraction] == listitem+3) {
					if(IsALeader(i)) {
						if(GetPlayerDistanceToPlayer(playerid,i) <= 3.0) {
							leader = i;
							break;
						}
					}
				}
			}
			if(leader == -1) return SendClientMessage(playerid, CWHITE,"» Лидер выбранной банды должен находиться рядом с Вами");
			SetPVarInt(playerid, "sellzonelead", leader);
			SetPVarInt(playerid, "sellzone",listitem+3);
			ShowPlayerDialog(playerid, dSellZone2, DIALOG_STYLE_INPUT,"Продажа территории", "Укажите предлагаемую цену для продажи своей территории\n(Цена может быть от 1 до 1.000.000$","Выбор","Отмена");
			return 1;
		}
	case dSellZone2:
		{
			if(!response) return 1;
			if(IsCapture == 1) return SendClientMessage(playerid, CWHITE,"» Вы не можете продать территорию во время капта");
			new price = strval(inputtext);
			if(price < 1 || price > 1000000) return ShowPlayerDialog(playerid, dSellZone2, DIALOG_STYLE_INPUT,"Продажа территории", "Укажите предлагаемую цену для продажи своей территории\n(Цена может быть от 1 до 1.000.000$","Выбор","Отмена");
			new lead = GetPVarInt(playerid, "sellzonelead");
			new faction = GetPVarInt(playerid, "sellzone");
			if(!IsALeader(lead) || pData[lead][pFraction] != faction) return SendClientMessage(playerid, CWHITE,"» Лидер выбранной организации покинул игру");
			if(GetPlayerDistanceToPlayer(playerid,lead) > 3.0) return SendClientMessage(playerid, CWHITE,"» Вы находитесь далеко от лидера указанной банды");
			for(new i;i<MAX_GZONE;i++)
			{
				if(PlayerToKvadrat(playerid,GZMZ[i][gCoords][0], GZMZ[i][gCoords][1],GZMZ[i][gCoords][2],GZMZ[i][gCoords][3]) && ZoneOnBattle[i] == 0)
				{
					if(GZMZ[i][gFrak] == pData[playerid][pFraction]) {
						SetPVarInt(playerid,"gzoffee",lead);
						SetPVarInt(lead,"gzoffee",lead);
						SetPVarInt(lead,"gzoffer",playerid);
						SetPVarInt(lead,"gzprice",price);
						SetPVarInt(lead,"gzvalue",i);
						new zStr[150];
						format(zStr, 150, "Вы предложили {"#cWHITE"}%s купить у вас гангзону за {"#cWHITE"}%d$",pData[lead][pNickname],price);
						SendClientMessage(playerid, CINFO, zStr);
						format(zStr, 150, "{"#cWHITE"}%s предложил Вам купить его гангзону за {"#cWHITE"}%d$",pData[playerid][pNickname],price);
						SendClientMessage(lead, CINFO, zStr);
						SendClientMessage(lead,COLOR_GREEN,"{33AAFF}Нажмите {f6ff00}[ Y ] {33AAFF}что-бы принять предложение или {c54d13}[ N ] {33AAFF}для отказа");
						return 1;
					}
					break;
				}
			}
			SendClientMessage(playerid, CWHITE,"» Вы должны находиться на своей территории");
			return 1;
		}

	case dZaxvat:
		{
			if(response)
			{
				new faction = pData[playerid][pFraction];
				for(new i;i<MAX_GZONE;i++)
				{
					if(PlayerToKvadrat(playerid,GZMZ[i][gCoords][0], GZMZ[i][gCoords][1],GZMZ[i][gCoords][2],GZMZ[i][gCoords][3]) && ZoneOnBattle[i] == 0)
					{
						if(WaitCapture[faction] > 3) return SendMes(playerid,COLOR_GREY, "Вы уже захватывали 3 раза!");
						if(IsPlayerInBandOnline(faction) < D_SELOVER) return SendMes(playerid,COLOR_GREY, "В вашей банде мало игроков онлайн!");
						if(IsPlayerInBandOnline(GZMZ[i][gFrak]) < D_SELOVER) return SendMes(playerid,COLOR_GREY, "У банды \"%s\" мало игроков!", GetGangName(GZMZ[i][gFrak]));
						if(IsCapture == 1) return SendClientMessage(playerid, COLOR_GREY, "Уже происходит захват одной из зон. Дождитесь окончания!");
						GangZoneFlashForAll(GZMZ[i][idm],GetGZColorF(faction));
						new string[150];
						format(string, sizeof(string), "%s начали захват территории банды %s в районе %s",GetGangName(faction), GetGangName(GZMZ[i][gFrak]), GetPlayerZone(playerid, 0));
						for(new d = 3; d < 8; d++)
						{
							SendFMes(d, COLOR_LIME, string);
						}
						format(string, sizeof(string), "%s %s инициировал захват ",gFractionRankName[pData[playerid][pFraction]-1][pData[playerid][pRank]-1],pData[playerid][pNickname]);
						SendFMes(faction, COLOR_LIME, string);
						GZSafeTime = 420; //420
						GZMZ[i][gNapad] = faction;
						ZoneOnBattle[i] = 1;
						WaitCapture[faction]++;
						IsCapture = 1;
						PustZone = 0;
						GangInfo[faction][capture] = 1;
						GangInfo[GZMZ[i][gFrak]][capture] = 1;
						GangInfo[GZMZ[i][gFrak]][captureid] = faction;
						GangInfo[faction][captureid] = faction;
						GangInfo[faction][gangnumber] = 1;
						GangInfo[GZMZ[i][gFrak]][gangnumber] = 0;
						CaptureStart(faction, GZMZ[i][gFrak]);
      mes = "";
						f(mes, "UPDATE `grabbank` SET `gang%d` = '1'", pData[playerid][pFraction]);
						sql_query(zConn, mes); mes = "";
						GrabBank[pData[playerid][pFraction]-3]++;
						CaptureBegin = false;
						SetTimer("CaptureOnStart",1200000,false);
					}
				}
			}
			else
			{
				SendMes(playerid, COLOR_YELLOW, "Вы отменили захват");
			}
			return 1;
		}

	case dMakeleader:
		{
			if(!response) return 1;
			new actplayerid = GetPVarInt(playerid,"actplayerid");
			new last = GetPlayerSkin(actplayerid);
			new fractionid = GetPVarInt(playerid,"actfraction");
			new skinid = gFractionSkin[fractionid][listitem];
			new rank = gFractionRankCount[fractionid];
			mes = "";
			f(mes, "UPDATE `accounts` SET `fraction` = '%d', rank = '%d', `fractionskin` = '%d', `subfraction` = '0' WHERE `id` = '%d'",fractionid+1,rank,skinid,pData[actplayerid][pMysqlID]);
			sql_query(zConn, mes); mes = "";
			pData[actplayerid][pFraction] = fractionid+1;
			pData[actplayerid][pRank] = rank;
			pData[actplayerid][pFractionSkin] = skinid;
			UpdatePlayerData(actplayerid, "fractionskin", pData[playerid][pFractionSkin]);
			pData[actplayerid][pSubfraction] = 0;
			pData[actplayerid][pJob] = 0;
			UpdatePlayerData(actplayerid, "job", pData[playerid][pJob]);
			SetPlayerColor(actplayerid,gFractionColor[fractionid]);
			mes = "";
			f(mes, "» %s {"#cWHITE"}был назначен лидером фракции \"%s\"",pData[actplayerid][pNickname],gFractionName[fractionid]);
			SendClientMessage(playerid,CYELLOW,mes);
			f(mes, "» Администратор %s назначил вас лидером фракции \"%s\"",pData[playerid][pNickname],gFractionName[fractionid]);
			SendClientMessage(actplayerid,CINFO,mes);
			f(mes, "» Администратор %s назначил %s лидером фракции \"%s\"",pData[playerid][pNickname],pData[actplayerid][pNickname],gFractionName[fractionid]);
			AdminChat(0xff0000ff,mes);
			new houseid = pData[actplayerid][pHouse]-1;
			if(!(houseid+1) || ((houseid+1) > 0 && gHouses[houseid][houseOwnerID] != pData[playerid][pMysqlID])) SetPlayerSkin(actplayerid,skinid);
			else if(!gHouses[houseid][houseImprove][3]) SetPlayerSkin(actplayerid,skinid);
			else
			{
				if(GetPlayerSkin(actplayerid) == gHouses[houseid][houseSkin][3]) SetPlayerSkin(actplayerid,skinid);
				gHouses[houseid][houseSkin][3] = last;
				SetPlayerSkin(actplayerid,skinid);
				SendClientMessage(actplayerid,CINFO,"Ваш скин был доставлен в шкаф");
			}
		}
	case dInvite:
		{
			if(!response) return 1;
			new fractionid = pTemp[playerid][pOfferFractionid];
			new offer = pTemp[playerid][pOfferFraction];
			mes = "";
			for(new i;i<8;i++)
			{
				new skinid = gFractionSkin[fractionid][i];
				if(!skinid) break;
				if(!i) f(mes, "» {FFFFFF}Скин %d (%d)",i+1,skinid);
				else f(mes, "%s\n» Скин %d (%d)",mes,i+1,skinid);
			}
			SendClientMessage(playerid,CINFO,"Ждите, пока лидер выберет одежду для Вас");
			ShowPlayerDialog(offer,dInviteSkin,2,pData[playerid][pNickname],mes,"Принять","");
		}
	case dInviteSkin:
		{
			new actplayerid = GetPVarInt(playerid,"actinplayerid");
			new fractionid = pTemp[actplayerid][pOfferFractionid];
			new skinid = gFractionSkin[fractionid][listitem];
			if(pData[playerid][pFraction] != fractionid+1) return SendClientMessage(playerid,CWHITE,"» Ошибка #001");
			pData[actplayerid][pFraction] = fractionid+1;
			pData[actplayerid][pRank] = 1;
			pData[actplayerid][pFractionSkin] = skinid;
			UpdatePlayerData(actplayerid, "fractionskin", pData[playerid][pFractionSkin]);

			pData[actplayerid][pSubfraction] = pData[playerid][pSubfraction];
			pData[actplayerid][pJob] = 0;
			UpdatePlayerData(actplayerid, "job", pData[playerid][pJob]);
			SetPlayerColor(actplayerid,gFractionColor[fractionid]);
			mes = "";
			f(mes, "UPDATE `accounts` SET `fraction` = '%d', rank = '1', `fractionskin` = '%d', `subfraction` = '%d', `job` = '0' WHERE `id` = '%d'",fractionid+1,skinid,pData[playerid][pSubfraction],pData[actplayerid][pMysqlID]);
			sql_query(zConn, mes); mes = "";
			UpdatePlayerData(actplayerid,"subfraction",pData[actplayerid][pSubfraction]);
			SendMes(playerid,-1,"{66CC00}%s принимает Ваше предложение",pData[actplayerid][pNickname]);

			new bool:dostup = false;
			switch(fractionid)
			{
			case 1: dostup = true;
			case 7..10: dostup = true;
			}
			if(dostup == true)
			{
				new frid = GetSubfractionID(fractionid);
				new subid = pData[playerid][pSubfraction] - 1;
				SendMes(actplayerid,COLOR_LIME,"Поздравляем! Вы вступили в организацию \"%s\", подразделение \"%s\"",gFractionName[fractionid],gSubfractionName[frid][subid]);
			}
			else SendMes(actplayerid,COLOR_LIME,"Поздравляем! Вы вступили в организацию \"%s\"",gFractionName[fractionid]);

			pTemp[playerid][pInviteInvite] = -1;

			SetPVarInt(actplayerid, "OfferInviteLeader", 0);
			SetPVarInt(actplayerid, "OfferInviteSubLeader", 0);

			SendClientMessage(actplayerid, -1, "{3399FF}Используйте {FFCD00}/menu »» команды {3399FF}, чтобы узнать о новых возможностях");
			SetPlayerSkin(actplayerid,skinid);
		}
	case dFractionSkin:
		{
			if(!response) return 1;
			new actplayerid = GetPVarInt(playerid,"actplayerid");
			if(!IsPlayerConnected(actplayerid) || pData[actplayerid][pFraction] != pData[playerid][pFraction]) return 1;
			new fractionid = pData[actplayerid][pFraction]-1;
			new skinid = gFractionSkin[fractionid][listitem];
			if(skinid == pData[actplayerid][pFractionSkin]) return 1;
			mes = "";
			f(mes, "» %s Выдал Вам новую фракционную одежду",pData[playerid][pNickname]);
			SendClientMessage(actplayerid,CINFO,mes);
			UpdatePlayerData(actplayerid,"fractionskin",skinid);
			pData[actplayerid][pFractionSkin] = skinid;
			new houseid = pData[actplayerid][pHouse]-1;
			if(!(houseid+1) || ((houseid+1) > 0 && gHouses[houseid][houseOwnerID] != pData[actplayerid][pMysqlID])) SetPlayerSkin(actplayerid,skinid);
			else if(!gHouses[houseid][houseImprove][3]) SetPlayerSkin(actplayerid,skinid);
			else
			{
				gHouses[houseid][houseSkin][3] = skinid;
			}
			SetPlayerSkin(actplayerid,skinid);
		}
	case dExamType:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 1:
				{
					if(pData[playerid][pLicenses][LIC_DRIVING]) return SendClientMessage(playerid,CWHITE,"» У вас уже есть права");
					ShowPlayerDialog(playerid,dAutoExam1,0,"Автошкола","\t\t\t\t\t\tШкола вождения\n\n{"#cWHITE"}Добро пожаловать в автошколу. Чтобы сдать на права Вам нужно выполнить следующие действия\n1 » Прочитайте и запомните ПДД\n2 » Сдайте тест на знание ПДД\n3 » Сдайте практический экзамен иструктору","Далее","Выход");
				}
			case 2:
				{
					if(pData[playerid][pLicenses][LIC_FLY]) return SendClientMessage(playerid,CWHITE,"» У вас уже есть лицензия пилота");
					ShowPlayerDialog(playerid,dAirExam1,0,"Летная школа","\t\t\t\t\t\tЛетная школа\n\n{"#cWHITE"}Добро пожаловать в летную школу. Чтобы получить лицензию пилота вам необходимо:\n1 » Прочитайте и запомните ПВП\n2 » Сдайте тест на знание ПВП\n3 » Заплатите $3000 за проведение экзамена\n4 » Сдайте практический экзамен иструктору","Далее","Выход");
				}
			case 3:
				{
					if(pData[playerid][pLicenses][LIC_BOAT]) return SendClientMessage(playerid,CWHITE,"» У вас уже есть эта лицензия");
					if(GetPlayerMoneyEx(playerid) < 20000) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
					TransferMoney(-1,playerid,20000,"Weapon");
					pData[playerid][pLicenses][LIC_BOAT] = 1;
					mes = "";
					f(mes, "UPDATE `accounts` SET `licBoat` = '1' WHERE `id` = '%d'",pData[playerid][pMysqlID]);
					sql_query(zConn, mes); mes = "";
					SendClientMessage(playerid, COLOR_GREEN, "Вы приобрели лицензию на водный транспорт, за 20000$");
				}
			case 4:
				{
					if(pData[playerid][pLicenses][LIC_WEAP]) return SendClientMessage(playerid,CWHITE,"» У вас уже есть эта лицензия");
					if(GetPlayerMoneyEx(playerid) < 30000) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
					TransferMoney(-1,playerid,30000,"Weapon");
					pData[playerid][pLicenses][LIC_WEAP] = 1;
					mes = "";
					f(mes, "UPDATE `accounts` SET `licWeap` = '1' WHERE `id` = '%d'",pData[playerid][pMysqlID]);
					sql_query(zConn, mes); mes = "";
					SendClientMessage(playerid, COLOR_GREEN, "Вы приобрели лицензию на оружие, за 30000$");
				}
			}

		}
	case dAutoExam1:
		{
			if(!response) return 1;
			new mess[1560];
			strcat(mess,"Общие положения:\n");
			strcat(mess,"1.Разрешенная скорость передвижения для т/с, по городу - 60 км/ч, за городом - 110 км/ч, на автомагистралях - 150 км/ч.\n");
			strcat(mess,"2.При необходимости, водитель обязан пропустить т/с со спец.сигналом (Полиция,Служба спасения,Скорая помощь) , а именно: постепенно снижая скорость, прижаться к обочине.\n");
			strcat(mess,"3.Перекрестки в штате являются нерегулируемыми. Разрешается проезд на запрещающие сигналы светофора.\n");
			//strcat(mes,"4 » Без возможности определения приорететов пересекающихся дорог нужно руководствоваться \"помехой справа\".\n");
			strcat(mess,"4.По требованию работника правоoхранительных органов, водитель обязан остановится и выполнить все перечисленные требования сотрудника правоохранительных органов.\n");
			strcat(mess,"5.В случае возникновения ДТП(Дорожно-транспортного происшествия) водитель обязан: \n");
			strcat(mess,"  а) оставаться на месте ДТП;\n");
			strcat(mess,"  б) Вызвать сотрудников правоохоранительных органов;\n");
			strcat(mess,"  в) Вызвать сотрудников скорой помощи, если того требует ситуация.\n");
			strcat(mess,"6.Водитель обязан пропускать пешеходов, в специальных местах для перехода (перекрестки, специальная разметка).\n");
			strcat(mess,"7.Водитель обязан осуществлять парковку транспортного средства только на стоянках, либо на обочине, заезжая при этом только 2-мя колесами.\n");
			strcat(mess,"Запрещается:\n");
			strcat(mess,"1 » Выезд на полосу встречного движения при очевидной угрозе лобового столкновения.\n");
			strcat(mess,"2 » Экстренное торможение без везкой причины, в случае возникновения поломки т/с, по мере возможности Вам следует:\n");
			strcat(mess," а) прижаться к обочине;\n");
			strcat(mess," б) включить сигнал, оповещающий об аварийной ситуации.\n");
			strcat(mess,"3.Обгон впереди движущегося т/с с правой стороны,обгон разрешен лишь в случае поворота впереди движущегося т/с.\n");
			strcat(mess,"4.Нарушение установленного скоростного лимита.\n");
			strcat(mess,"5.Управление транспортным средством в нетрезвом виде.");
			strcat(mess,"6 » Разворот в туннелях строго запрещен.");
			strcat(mess,"7 » Движение транспортного средства задним ходом разрешается при условии, что этот маневр будет безопасен и не создаст помех другим участникам движения.\n");
			strcat(mess,"При необходимости водитель должен прибегнуть к помощи других лиц.");
			strcat(mess,"8 » На автомагистралях запрещается: движение задним ходом и учебная езда.");
			ShowPlayerDialog(playerid,dAutoExam2,0,"Школа вождения",mess,"Далее","Отмена");
		}
	case dAutoExam2:
		{
			if(!response) return 1;
			ShowPlayerDialog(playerid,dAutoExam3,0,"Школа вождения","{"#cWHITE"}Сейчас Вам будет предложено пройти тест.\nЧтобы получить доступ к практическому экзамену\nВам нужно правильно ответить на все 5 вопросов","Далее","Отмена");
		}
	case dAutoExam3:
		{
			if(!response) return 1;
			ShowTestQuestion(playerid,0,5,dAutoTest1);
		}
	case dAutoTest1:
		{
			if(!response) return 1;
			new q = pTemp[playerid][pTestQNumber];
			if(!listitem) return ShowTestQuestion(playerid,0,2,dAutoTest1,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,CBADINFO,"К сожалению Вы ответили неверно. Тест провален");
			ShowTestQuestion(playerid,5,10,dAutoTest2);
		}
	case dAutoTest2:
		{
			if(!response) return 1;
			new q = pTemp[playerid][pTestQNumber];
			if(!listitem) return ShowTestQuestion(playerid,2,4,dAutoTest2,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,CBADINFO,"К сожалению Вы ответили неверно. Тест провален");
			ShowTestQuestion(playerid,10,15,dAutoTest3);
		}
	case dAutoTest3:
		{
			if(!response) return 1;
			new q = pTemp[playerid][pTestQNumber];
			if(!listitem) return ShowTestQuestion(playerid,4,6,dAutoTest3,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,CBADINFO,"К сожалению Вы ответили неверно. Тест провален");
			ShowTestQuestion(playerid,15,20,dAutoTest4);
		}
	case dAutoTest4:
		{
			if(!response) return 1;
			new q = pTemp[playerid][pTestQNumber];
			if(!listitem) return ShowTestQuestion(playerid,6,8,dAutoTest4,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,CBADINFO,"К сожалению Вы ответили неверно. Тест провален");
			ShowTestQuestion(playerid,20,25,dAutoTest5);
		}
	case dAutoTest5:
		{
			if(!response) return 1;
			new q = pTemp[playerid][pTestQNumber];
			if(!listitem) return ShowTestQuestion(playerid,8,12,dAutoTest5,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,CBADINFO,"К сожалению Вы ответили неверно. Тест провален");

			SendClientMessage(playerid, COLOR_GREEN, "Выходите во двор и садитесь в свободный транспорт");
			ShowPlayerDialog(playerid, dMes, 0, "{33AAFF}Права", "{ffffff}Вы начали экзамен по вождению\n\nВыходите на стоянку и садитесь в транспорт", "Закрыть", "");
			//SetPVarInt(playerid, "LicTest", 1);
			pPressed[playerid] = 0;
			SetPlayerRaceCheckpoint(playerid, 1,-2068.3342,-92.1278,35.1641,-2068.3342,-92.1278,35.1641, 7.0);
			pTemp[playerid][pOnExam] = true;
			/*if(gDSTurn[19] != INVALID_PLAYER_ID) return SendClientMessage(playerid,CWHITE,"» К сожалению все места в очереди заняты");
			for(new i=19;i>=0;i--)
			{
				if(gDSTurn[i] == playerid) return SendClientMessage(playerid,CWHITE,"» Вы уже стоите в очереди");
				if(i && gDSTurn[i] == INVALID_PLAYER_ID) continue;
				gDSTurn[i+1] = playerid;
				break;
			}
			pTemp[playerid][pExamType] = 0;
			pTemp[playerid][pWaitingExam] = true;
			SendClientMessage(playerid,0x7FC0E3FF,"Поздравляем, Вы сдали тест. Ждите, Вас Вызовут для прохождения экзамена.");
			SendClientMessage(playerid,0x7FC0E3FF,"Не Выходите из автошколы");
			*/
		}
	case dAirExam1:
		{
			if(!response) return 1;
			new mess[1000];
			strcat(mess,"Правила визуального полета:\n");
			strcat(mess,"1 » Управлять воздушным транспортом разрешается лицам, достигшим 18 лет и имеющим лицензию на управление указанным транспортом.\n");
			strcat(mess,"2 » Управление воздушным транспортом в состоянии наркотического или алкогольного опьянения строго запрещается.\n");
			strcat(mess,"3 » Во время управления воздушным транспортным средством запрещается разговаривать по телефону и отвлекаться от управления.\n");
			strcat(mess,"4 » При сближении с воздушным судном, двигающимся вам навстречу, необходимо отклониться от текущего курса на 30 градусов вправо, после расхождения, вернуться на прежний курс\n");
			strcat(mess,"5 » Ограничения скорости для воздушного транспорта отсутствуют. \n");
			strcat(mess,"6 » Ограничения высоты полета для воздушного транспорта отсутствуют.\n");
			strcat(mess,"7 » Полеты над базами СВ,ВМФ для гражданских воздушных судов категорически запрещены. При пролете над военными базам по вам может быть открыт огонь на поражение без предупреждения\n");
			strcat(mess,"8 » Выполнение фигур высшего пилотажа разрешается только лицам, достигшим 21 года и имеющим стаж управления воздушными судами не менее 3-х лет.\n");
			strcat(mess,"9 » Выполнение фигур высшего пилотажа разрешается только над незаселеной зоной.");
			strcat(mess,"10 » Выполнение фигур высшего пилотажа с пассажирами на борту запрещается.\n");
			ShowPlayerDialog(playerid,dAirExam2,0,"Летная школа",mess,"Далее","Отмена");
		}
	case dAirExam2:
		{
			if(!response) return 1;
			ShowPlayerDialog(playerid,dAirExam3,0,"Летная школа","{"#cWHITE"}Сейчас Вам будет предложено пройти тест.\nЧтобы получить доступ к практическому экзамену\nВам нужно правильно ответить на все 8 вопросов","Далее","Отмена");
		}
	case dAirExam3:
		{
			if(!response) return 1;
			ShowPlayerDialog(playerid,dAirExam4,2,"{ffcf00}Летная школа","Со скольки лет разрешено управлять воздушным траспортом?\n1 » С 18\n2 » С 20\n3 » С 21\n4 » С 16","Далее","Отмена");
		}
	case dAirExam4:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:ShowPlayerDialog(playerid,dAirExam4,2,"{ffcf00}Летная школа","Со скольки лет разрешено управлять воздушным траспортом?\n1 » С 18\n2 » С 20\n3 » С 21\n4 » С 16","Далее","Отмена");
			case 1:ShowPlayerDialog(playerid,dAirExam5,2,"{ffcf00}Летная школа","Управление воздушным траспортом в состоянии наркотического или алкогольного опьянения\n1.Запрещается\n2.Разрешается\n3.Не рекомендуется","Далее","Отмена");
			default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
	case dAirExam5:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:ShowPlayerDialog(playerid,dAirExam5,2,"{ffcf00}Летная школа","Управление воздушным траспортом в состоянии наркотического или алкогольного опьянения\n1.Запрещается\n2.Разрешается\n3.Не рекомендуется","Далее","Отмена");
			case 1:ShowPlayerDialog(playerid,dAirExam6,2,"{ffcf00}Летная школа","Что запрещается при управлении воз. транспортом?\n1.Оглядываться по сторонам\n2.Разговаривать по рации\n3.Разговаривать по телефону и отвлекаться от управления","Далее","Отмена");
			default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
	case dAirExam6:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:ShowPlayerDialog(playerid,dAirExam6,2,"{ffcf00}Летная школа","Что из перечисленного запрещается во время управления воздушным транспортом?\n1.Оглядываться по сторонам\n2.Разговаривать по рации\n3.Разговаривать по телефону и отвлекаться от управления","Далее","Отмена");
			case 3:ShowPlayerDialog(playerid,dAirExam7,2,"{ffcf00}Летная школа","Что необходимо сделать при сближении с другим воздушным судном?\n1.Отклониться от курса на 20 градусов влево\n2.Отклониться от курса на 90 градусов вправо\n3.Отклониться от курса на 30 градусов вправо\n4.Изменить высоту\n5.Изменить скорость","Далее","Отмена");
			default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
	case dAirExam7:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:ShowPlayerDialog(playerid,dAirExam7,2,"{ffcf00}Летная школа","Что необходимо сделать при сближении с другим воздушным судном?\n1.Отклониться от курса на 20 градусов влево\n2.Отклониться от курса на 90 градусов вправо\n3.Отклониться от курса на 30 градусов вправо\n4.Изменить высоту\n5.Изменить скорость","Далее","Отмена");
			case 3:ShowPlayerDialog(playerid,dAirExam8,2,"{ffcf00}Летная школа","Ограничение скорости для воздушного транспорта:\n1.60 км/ч\n2.120 км/ч\n3.180 км/ч\n4.220 км/ч\n5.Отсутствует","Далее","Отмена");
			default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
	case dAirExam8:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:ShowPlayerDialog(playerid,dAirExam8,2,"{ffcf00}Летная школа","Ограничение скорости для воздушного транспорта:\n1.60 км/ч\n2.120 км/ч\n3.180 км/ч\n4.220 км/ч\n5.Отсутствует","Далее","Отмена");
			case 5:ShowPlayerDialog(playerid,dAirExam9,2,"{ffcf00}Летная школа","Ограничение высоты полёта воздушного транспорта:\n1.Отсутствует\n2 » 100 м\n3 » 200 м\n4 » 500 м\n5 » 1 км","Далее","Отмена");
			default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
	case dAirExam9:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:ShowPlayerDialog(playerid,dAirExam9,2,"{ffcf00}Летная школа","Ограничение высоты полёта воздушного транспорта:\n1.Отсутствует\n2 » 100 м\n3 » 200 м\n4 » 500 м\n5 » 1 км","Далее","Отмена");
			case 1:ShowPlayerDialog(playerid,dAirExam10,2,"{ffcf00}Летная школа","Полёты над военными базами для гражданских лиц:\n1.Запрещены\n2.Разрешены в дневное время\n3.Разрешены в ночное время\n4.Разрешены","Далее","Отмена");
			default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
	case dAirExam10:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:ShowPlayerDialog(playerid,dAirExam10,2,"{ffcf00}Летная школа","Полёты над военными базами для гражданских лиц:\n1.Запрещены\n2.Разрешены в дневное время\n3.Разрешены в ночное время\n4.Разрешены","Далее","Отмена");
			case 1:ShowPlayerDialog(playerid,dAirExam11,2,"{ffcf00}Летная школа","Выполнение фигур высшего пилотажа:\n1.Разрешено с 20 лет\n2.Разрешено с 21 года\n3.Разрешено с 25 лет\n4.Запрещено","Далее","Отмена");
			default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
	case dAirExam11:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:ShowPlayerDialog(playerid,dAirExam11,2,"{ffcf00}Летная школа","Выполнение фигур высшего пилотажа:\n1.Разрешено с 20 лет\n2.Разрешено с 21 года\n3.Разрешено с 25 лет\n4.Запрещено","Далее","Отмена");
			case 2:
				{

					if(gDSTurn[19] != INVALID_PLAYER_ID) return SendClientMessage(playerid,CWHITE,"» К сожалению, все места в очереди заняты");
					for(new i=19;i>=0;i--)
					{
						if(gDSTurn[i] == playerid) return SendClientMessage(playerid,CWHITE,"» Вы уже стоите в очереди");
						if(i && gDSTurn[i] == INVALID_PLAYER_ID) continue;
						gDSTurn[i+1] = playerid;
						break;
					}
					pTemp[playerid][pWaitingExam] = true;
					pTemp[playerid][pExamType] = 1;
					SendClientMessage(playerid,0x7FC0E3FF,"Поздравляем, Вы успешно сдали тест. Ждите, Вас вызовут для прохождения экзамена.");
					SendClientMessage(playerid,0x7FC0E3FF,"Не выходите из автошколы");
				}
			default: return SendClientMessage(playerid,CRED,"Неверно!");
			}
		}
	case dExamResult:
		{
			new actplayerid = pTemp[playerid][pExamCandidate];
			if(!IsPlayerConnected(actplayerid) || !pTemp[actplayerid][pOnExam]) return SendClientMessage(playerid,CWHITE,"Экзаменуемый вышел. Экзамен завершен");
			if(listitem == 1)
			{
				if(pTemp[actplayerid][pExamType] == 0) pData[actplayerid][pLicenses][LIC_DRIVING] = 1;
				if(pTemp[actplayerid][pExamType] == 1) pData[actplayerid][pLicenses][LIC_FLY] = 1;
				if(pTemp[actplayerid][pExamType] == 2) pData[actplayerid][pLicenses][LIC_BOAT] = 1;
				mes = "";
				pData[actplayerid][pLicenses][LIC_DRIVING] = 1;
				f(mes, "UPDATE `accounts` SET `licDrive` = '1' WHERE `id` = '%d'",pData[actplayerid][pMysqlID]);
				sql_query(zConn, mes); mes = "";
				SendClientMessage(actplayerid,0x7FC0E3FF,"Поздравляем. Вы сдали экзамен.");
				SendClientMessage(playerid,0x7FC0E3FF,"Экзамен завершен");
				TransferMoney(-1,playerid,250,"instrexam");
			}
			else
			{
				SendClientMessage(actplayerid,CBADINFO,"Вы провалили экзамен.");
				SendClientMessage(playerid,0x7FC0E3FF,"Экзамен завершен");
			}
			pTemp[playerid][pOnExam] = false;
			pTemp[playerid][pExamCandidate] = INVALID_PLAYER_ID;
			pTemp[playerid][pOnExam] = false;
		}
		/*case dFerma:
		{
			if(!response)
			{
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			new full;
			for(new i = 1; i <= 5; i++)
			{
				if(MafiaDrugSlot[i] == pData[playerid][pFraction]) full = i;
			}
			if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "Ошибка! Действие невозможно!");
			if(MafiaDrugs[full][0] == true) return SendClientMessage(playerid, COLOR_GREY, "Поле уже засеяно или сеется кем-то!");
			new rand = 1 + random(3);
			SetPVarInt(playerid, "MafiaDrugsPlace", full);
			if(rand < 3) SetPlayerRaceCheckpoint(playerid,1,-1041.2728,-1183.1082,128.8862,-1041.2728,-1183.1082,128.8862,5.0);
			else SetPlayerRaceCheckpoint(playerid,1,-1061.2144,-1155.1042,129.1833,-1061.2144,-1155.1042,129.1833,5.0);
			SendClientMessage(playerid, COLOR_GREEN, "[Ферма] Следуйте на чекпоинт, чтобы взять семена");
			MafiaDrugs[full][0] = true;
		}
		case dFerma3:
		{
			new price = GetPVarInt(playerid, "PlaceDrugPrice"), slot = GetPVarInt(playerid, "PlaceDrugSlot");
			if(response)
			{
				if(GetPlayerMoneyEx(playerid) < price)
				{
					DeletePVar(playerid, "PlaceDrugPlayer");
					DeletePVar(playerid, "PlaceDrugPrice");
					DeletePVar(playerid, "PlaceDrugSlot");
					DeletePVar(playerid, "PlaceDrugTime");
					return SendClientMessage(playerid, COLOR_GREY, "Недостаточно средств");
				}
				TransferMoney(-1,playerid,-price,"drugstime");
				new time = GetPVarInt(playerid, "PlaceDrugTime");
				MafiaDrugTime[slot] = gettime()+ time*60;
				SendMes(playerid, COLOR_BLUE, "Вы купили слот для мафии за %i долларов", price);
				MafiaDrugSlot[slot] = pData[playerid][pFraction];
			}
			else
			{
				DeletePVar(playerid, "PlaceDrugPlayer");
				DeletePVar(playerid, "PlaceDrugPrice");
				DeletePVar(playerid, "PlaceDrugSlot");
				DeletePVar(playerid, "PlaceDrugTime");
			}
		}
		case dFerma2:
		{
			if(!response)
			{
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			new full;
			for(new i = 1; i <= 5; i++)
			{
				if(MafiaDrugSlot[i] == pData[playerid][pFraction]) full = i;
			}
			if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "Ошибка! Действие невозможно!");
			if(MafiaDrugs[full][0] == false) return SendClientMessage(playerid, COLOR_GREY, "Поле должно быть засеяно!");
			if(MafiaDrugs[full][1] == true && MafiaDrugs[full][2] == false) return SendClientMessage(playerid, COLOR_GREY, "Урожай еще не созрел!");
			if(MafiaDrugs[full][3] == true) return SendClientMessage(playerid, COLOR_GREY, "Урожай уже собран или собирается кем-то!");
			SendClientMessage(playerid, COLOR_YELLOW, "Следуйте на чекпоинт, чтобы собрать урожай");
			MafiaDrugs[full][3] = true;
			pPressed[playerid] = MafiaSeedPressed[full];
			SetPVarInt(playerid, "MafiaDrugsPlace", full);
			SetPVarInt(playerid, "MafiaDrugsPlace_", 1);
			new slot = full;
			if(slot == 1) SetPlayerRaceCheckpoint(playerid,0,MafDrugs1[pPressed[playerid]][0],MafDrugs1[pPressed[playerid]][1],MafDrugs1[pPressed[playerid]][2],MafDrugs1[pPressed[playerid]][3],MafDrugs1[pPressed[playerid]][4],MafDrugs1[pPressed[playerid]][5],5.0);
			if(slot == 2) SetPlayerRaceCheckpoint(playerid,0,MafDrugs2[pPressed[playerid]][0],MafDrugs2[pPressed[playerid]][1],MafDrugs2[pPressed[playerid]][2],MafDrugs2[pPressed[playerid]][3],MafDrugs2[pPressed[playerid]][4],MafDrugs2[pPressed[playerid]][5],5.0);
			if(slot == 3) SetPlayerRaceCheckpoint(playerid,0,MafDrugs3[pPressed[playerid]][0],MafDrugs3[pPressed[playerid]][1],MafDrugs3[pPressed[playerid]][2],MafDrugs3[pPressed[playerid]][3],MafDrugs4[pPressed[playerid]][4],MafDrugs3[pPressed[playerid]][5],5.0);
			if(slot == 4) SetPlayerRaceCheckpoint(playerid,0,MafDrugs4[pPressed[playerid]][0],MafDrugs4[pPressed[playerid]][1],MafDrugs4[pPressed[playerid]][2],MafDrugs4[pPressed[playerid]][3],MafDrugs4[pPressed[playerid]][4],MafDrugs4[pPressed[playerid]][5],5.0);
		}*/
	case dRestoran:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						ShowPlayerDialog(playerid,dRestoranMenu1,2,"{ffcf00}Меню ресторана: Напитки","1 » Сок\n2 » Шампанское\n3 » Вино\n4 » Виски\n5 » Мартини","Купить","Назад");
					}
				case 1:
					{
						ShowPlayerDialog(playerid,dRestoranMenu2,2,"{ffcf00}Меню ресторана: Салаты","1 » Салат из крабовых палочек\n2 » Оливье\n3 » Курица с ананасами\n4 » Греческий салат","Купить","Назад");
					}
				case 2:
					{
						ShowPlayerDialog(playerid,dRestoranMenu3,2,"{ffcf00}Меню ресторана: Горячие блюда","1 » Фуа-Гра с цитрусовым перцем\n2 » Ризотто\n3 » Свинная отбивная\n4 » Плов\n5 » Макароны по-флотски","Купить","Назад");
					}
				case 3:
					{
						ShowPlayerDialog(playerid,dRestoranMenu4,2,"{ffcf00}Меню ресторана: Десерты","1 » Тирамиссу\n2 » Фруктовое мороженное\n3 » Клубника со сливками","Купить","Назад");
					}
				}
			}
			else
			{
				return 1;
			}
		}
	case dRestoranMenu1:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						pTemp[playerid][pEat] = 8;
						TransferMoney(playerid,-1,5,"buysok");
						SendClientMessage(playerid, -1, "Введите {"#cORANGE"}/eat{"#cWHITE"}, чтобы употребить купленное.");
						SendClientMessage(playerid, -1, "Чтобы положить продукт, введите {"#cORANGE"}/put{"#cWHITE"}.");
						SetPlayerAttachedObject(playerid,0,1546,5,0.126999,0.044999,-0.027000,15.999998,-175.499862,1.400000,1.000000,1.000000,1.000000);
					}
				case 1:
					{
						pTemp[playerid][pEat] = 9;
						TransferMoney(playerid,-1,5,"buyshampanskoe");
						SendClientMessage(playerid, -1, "Введите {"#cORANGE"}/eat{"#cWHITE"}, чтобы употребить купленное.");
						SendClientMessage(playerid, -1, "Чтобы положить продукт, введите {"#cORANGE"}/put{"#cWHITE"}.");
						SetPlayerAttachedObject(playerid,0,1669,5,0.126999,0.044999,-0.027000,15.999998,-175.499862,1.400000,1.000000,1.000000,1.000000);
					}
				case 2:
					{
						pTemp[playerid][pEat] = 10;
						TransferMoney(playerid,-1,5,"buyvino");
						SendClientMessage(playerid, -1, "Введите {"#cORANGE"}/eat{"#cWHITE"}, чтобы употребить купленное.");
						SendClientMessage(playerid, -1, "Чтобы положить продукт, введите {"#cORANGE"}/put{"#cWHITE"}.");
						SetPlayerAttachedObject(playerid,0,1664,5,0.126999,0.044999,-0.027000,15.999998,-175.499862,1.400000,1.000000,1.000000,1.000000);
					}
				case 3:
					{
						pTemp[playerid][pEat] = 11;
						TransferMoney(playerid,-1,5,"buyviski");
						SendClientMessage(playerid, -1, "Введите {"#cORANGE"}/eat{"#cWHITE"}, чтобы употребить купленное.");
						SendClientMessage(playerid, -1, "Чтобы положить продукт, введите {"#cORANGE"}/put{"#cWHITE"}.");
						SetPlayerAttachedObject(playerid,0,1668,5,0.126999,0.044999,-0.027000,15.999998,-175.499862,1.400000,1.000000,1.000000,1.000000);
					}
				case 4:
					{
						pTemp[playerid][pEat] = 12;
						TransferMoney(playerid,-1,5,"buymartini");
						SendClientMessage(playerid, -1, "Введите {"#cORANGE"}/eat{"#cWHITE"}, чтобы употребить купленное.");
						SendClientMessage(playerid, -1, "Чтобы положить продукт, введите {"#cORANGE"}/put{"#cWHITE"}.");
						SetPlayerAttachedObject(playerid,0,1551,5,0.126999,0.044999,-0.027000,15.999998,-175.499862,1.400000,1.000000,1.000000,1.000000);
					}
				}
			}
			else
			{
				ShowPlayerDialog(playerid,dRestoran,2,"{ffcf00}Меню ресторана","1 » Напитки\n2 » Салаты\n3 » Горячие блюда\n4 » Десерты","Выбрать","Выход");
				return 1;
			}
		}
	case dRestoranMenu2:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{

					}
				case 1:
					{

					}
				case 2:
					{

					}
				case 3:
					{

					}
				}
			}
			else
			{
				ShowPlayerDialog(playerid,dRestoran,2,"{ffcf00}Меню ресторана","1 » Напитки\n2 » Салаты\n3 » Горячие блюда\n4 » Десерты","Выбрать","Выход");
				return 1;
			}
		}
	case dRestoranMenu3:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{

					}
				case 1:
					{

					}
				case 2:
					{

					}
				case 3:
					{

					}
				case 4:
					{

					}
				}
			}
			else
			{
				ShowPlayerDialog(playerid,dRestoran,2,"{ffcf00}Меню ресторана","1 » Напитки\n2 » Салаты\n3 » Горячие блюда\n4 » Десерты","Выбрать","Выход");
				return 1;
			}
		}
	case dRestoranMenu4:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{

					}
				case 1:
					{

					}
				}
			}
			else
			{
				ShowPlayerDialog(playerid,dRestoran,2,"{ffcf00}Меню ресторана","1 » Напитки\n2 » Салаты\n3 » Горячие блюда\n4 » Десерты","Выбрать","Выход");
				return 1;
			}
		}
	case dGun:
		{
			if(response)
			{
				new id = pTemp[playerid][pSelectedBusinessID];
				if(id < 0) return 1;
				switch(listitem)
				{
				case 0:
					{
						new price = 50;
						if(GetPlayerMoneyEx(playerid) < price) return ShowMenuAmmo(playerid);
						new string[256];
						format(string, sizeof(string), "Вы купили кастет за %d$", price);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						gBusiness[id][busiProduct] -= price/3;
						gBusiness[id][busiBank] += price;
						UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
						UpdateBusinessText(id);
						TransferMoney(-1,playerid,-price,"ammunation");
						GivePlayerWeaponEx(playerid, 1, 1);
						ShowMenuAmmo(playerid);
					}
				case 1:
					{
						new price = 100;
						if(GetPlayerMoneyEx(playerid) < price) return ShowMenuAmmo(playerid);
						new string[256];
						format(string, sizeof(string), "Вы купили бейсбольную биту с за %d$", price);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						gBusiness[id][busiProduct] -= price/3;
						gBusiness[id][busiBank] += price;
						UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
						UpdateBusinessText(id);
						TransferMoney(-1,playerid,-price,"ammunation");
						GivePlayerWeaponEx(playerid, 5, 1);
						ShowMenuAmmo(playerid);
						return 1;
					}
				case 2:
					{
						ShowPlayerDialog(playerid, dGun1, 1, "{FF7000}Покупка оружия", "Укажите число десятков патронов для Дробовика \nЦена одного патрона - 70$", "Купить", "Назад");
					}
				case 3:
					{
						ShowPlayerDialog(playerid, dGun2, 1, "{FF7000}Покупка оружия", "Укажите число обойм Пустынного орла \nЦена одного патрона 60$", "Купить", "Назад");
					}
				case 4:
					{
						ShowPlayerDialog(playerid, dGun3, 1, "{FF7000}Покупка оружия", "Укажите число патронов Полуавтомата МР5 \nЦена одного патрона 30$", "Купить", "Назад");
					}
				case 5:
					{
						ShowPlayerDialog(playerid, dGun4, 1, "{FF7000}Покупка оружия", "Укажите число обойм Автомата АК47 \nЦена одной обоймы 60$", "Купить", "Назад");
					}
				case 6:
					{
						ShowPlayerDialog(playerid, dGun5, 1, "{FF7000}Покупка оружия", "Укажите число десятков патронов Винтовки \nЦена одного патрона - 70$", "Купить", "Назад");
					}
				case 7:
					{
						ShowPlayerDialog(playerid, dGun6, 1, "{FF7000}Покупка оружия", "Укажите число обойм Автомата M4 \nЦена одного патрона - 60$", "Купить", "Назад");
					}
				}
			}
			else
			{
				return 1;
			}
		}

	case dGun1:
		{
			if(response)
			{
				new id = pTemp[playerid][pSelectedBusinessID];
				if(!strlen(inputtext)) return ShowMenuAmmo(playerid);
				new ammo = strval(inputtext);
				new price = ammo * 70;
				if(ammo < 1 || ammo > 100)
				{
					SendClientMessage(playerid, COLOR_FADE1, "Укажите значение патронов от 1 до 100");
					ShowPlayerDialog(playerid, dGun1, 1, "{FF7000}Покупка оружия", "Укажите число патронов для Дробовика \nЦена одного патрона 70$", "Купить", "Назад");
					return 1;
				}
				if(GetPlayerMoneyEx(playerid) < price)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "У Вас недостаточно денег");
					ShowPlayerDialog(playerid, dGun1, 1, "{FF7000}Покупка оружия", "Укажите число патронов для Дробовика \nЦена одного патрона 70$", "Купить", "Назад");
					return 1;
				}
				new string[256];
				format(string, sizeof(string), "Вы купили дробовик с %d патронами за %d$", ammo, price);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				gBusiness[id][busiProduct] -= price/3;
				gBusiness[id][busiBank] += price;
				UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
				UpdateBusinessText(id);
				TransferMoney(-1,playerid,-price,"ammunation");
				GivePlayerWeaponEx(playerid, 25, ammo);
				ShowMenuAmmo(playerid);
				return 1;
			}
			else
			{
				ShowMenuAmmo(playerid);
				return 1;
			}
		}
	case dGun2:
		{
			if(response)
			{
				new id = pTemp[playerid][pSelectedBusinessID];
				if(!strlen(inputtext)) return ShowMenuAmmo(playerid);
				new ammo = strval(inputtext);
				if(ammo < 1 || ammo > 100)
				{
					SendClientMessage(playerid, COLOR_FADE1, "Укажите значение патронов от 1 до 100");
					ShowPlayerDialog(playerid, dGun2, 1, "{FF7000}Покупка оружия", "Укажите число патронов Пустынного орла \nЦена одного патрона - 60$", "Купить", "Назад");
					return 1;
				}
				new price = ammo * 60;
				if(GetPlayerMoneyEx(playerid) < price)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "У Вас недостаточно денег");
					ShowPlayerDialog(playerid, dGun2, 1, "{FF7000}Покупка оружия", "Укажите число патронов Пустынного орла \nЦена одного патрона - 60$", "Купить", "Назад");
					return 1;
				}
				new string[256];
				format(string, sizeof(string), "Вы купили Пустынный орел с %d патронами за %d$", ammo, price);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				gBusiness[id][busiProduct] -= price/3;
				gBusiness[id][busiBank] += price;
				UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
				UpdateBusinessText(id);
				TransferMoney(-1,playerid,-price,"ammunation");
				GivePlayerWeaponEx(playerid, 24, ammo);
				ShowMenuAmmo(playerid);
				return 1;
			}
			else
			{
				ShowMenuAmmo(playerid);
				return 1;
			}
		}
	case dGun3:
		{
			if(response)
			{
				new id = pTemp[playerid][pSelectedBusinessID];
				if(!strlen(inputtext)) return ShowMenuAmmo(playerid);
				new ammo = strval(inputtext);
				new price = ammo * 30;
				if(ammo < 1 || ammo > 200)
				{
					SendClientMessage(playerid, COLOR_FADE1, "Укажите значение обойм от 1 до 200");
					ShowPlayerDialog(playerid, dGun3, 1, "{FF7000}Покупка оружия", "Укажите число патронов Полуавтомата МР5 \nЦена одного патрона - 30$", "Купить", "Назад");
					return 1;
				}
				if(GetPlayerMoneyEx(playerid) < price)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "У Вас недостаточно денег");
					ShowPlayerDialog(playerid, dGun3, 1, "{FF7000}Покупка оружия", "Укажите число патронов Полуавтомата МР5 \nЦена одного патрона - 30$", "Купить", "Назад");
					return 1;
				}
				new string[256];
				format(string, sizeof(string), "Вы купили полуавтомат МР5 с %d патронами за %d$", ammo, price);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				gBusiness[id][busiProduct] -= price/3;
				gBusiness[id][busiBank] += price;
				UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
				UpdateBusinessText(id);
				TransferMoney(-1,playerid,-price,"ammunation");
				GivePlayerWeaponEx(playerid, 29, ammo);
				ShowMenuAmmo(playerid);
				return 1;
			}
			else
			{
				ShowMenuAmmo(playerid);
				return 1;
			}
		}
	case dGun4:
		{
			if(response)
			{
				new id = pTemp[playerid][pSelectedBusinessID];
				if(!strlen(inputtext)) return ShowMenuAmmo(playerid);
				new ammo = strval(inputtext);
				new price = ammo * 60;
				if(ammo < 1 || ammo > 100)
				{
					SendClientMessage(playerid, COLOR_FADE1, "Укажите значение обойм от 1 до 100");
					ShowPlayerDialog(playerid, dGun4, 1, "{FF7000}Покупка оружия", "Укажите число обойм Автомата АК47 \nЦена одного патрона - 60$", "Купить", "Назад");
					return 1;
				}
				if(GetPlayerMoneyEx(playerid) < price)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "У Вас недостаточно денег");
					ShowPlayerDialog(playerid, dGun4, 1, "{FF7000}Покупка оружия", "Укажите число обойм Автомата АК47 \nЦена одного патрона - 60$", "Купить", "Назад");
					return 1;
				}
				new string[256];
				format(string, sizeof(string), "Вы купили автомат АК47 с %d патронами за %d$", ammo, price);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				gBusiness[id][busiProduct] -= price/3;
				gBusiness[id][busiBank] += price;
				UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
				UpdateBusinessText(id);
				TransferMoney(-1,playerid,-price,"ammunation");
				GivePlayerWeaponEx(playerid, 30, ammo);
				ShowMenuAmmo(playerid);
				return 1;
			}
			else
			{
				ShowMenuAmmo(playerid);
				return 1;
			}
		}
	case dGun5:
		{
			if(response)
			{
				new id = pTemp[playerid][pSelectedBusinessID];
				if(!strlen(inputtext))
				{
					ShowPlayerDialog(playerid, dGun5, 1, "{FF7000}Покупка оружия", "Укажите число десятков патронов Винтовки \nЦена одного патрона - 70$", "Купить", "Назад");
					return 1;
				}
				new ammo = strval(inputtext);
				new price = ammo * 70;
				if(ammo < 1 || ammo > 100)
				{
					SendClientMessage(playerid, COLOR_FADE1, "Укажите значение обойм от 1 до 100");
					ShowPlayerDialog(playerid, dGun5, 1, "{FF7000}Покупка оружия", "Укажите число десятков патронов Винтовки \nЦена одного патрона - 70$", "Купить", "Назад");
					return 1;
				}
				if(GetPlayerMoneyEx(playerid) < price)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "У Вас недостаточно денег");
					ShowPlayerDialog(playerid, dGun5, 1, "{FF7000}Покупка оружия", "Укажите число десятков патронов Винтовки \nЦена одного патрона - 70$", "Купить", "Назад");
					return 1;
				}
				new string[256];
				format(string, sizeof(string), "Вы купили винтовку с %d патронами за %d$", ammo, price);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				gBusiness[id][busiProduct] -= price/3;
				gBusiness[id][busiBank] += price;
				UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
				UpdateBusinessText(id);
				TransferMoney(-1,playerid,-price,"ammunation");
				GivePlayerWeaponEx(playerid, 33, ammo);
				ShowMenuAmmo(playerid);
				return 1;
			}
			else
			{
				ShowMenuAmmo(playerid);
				return 1;
			}
		}
	case dGun6:
		{
			if(response)
			{
				new id = pTemp[playerid][pSelectedBusinessID];
				if(!strlen(inputtext))
				{
					ShowPlayerDialog(playerid, dGun4, 1, "{FF7000}Покупка оружия", "Укажите число обойм Автомата M4 \nЦена одного патрона - 60$", "Купить", "Назад");
					return 1;
				}
				new ammo = strval(inputtext);
				new price = ammo * 60;
				if(ammo < 1 || ammo > 100)
				{
					SendClientMessage(playerid, COLOR_FADE1, "Укажите значение обойм от 1 до 100");
					ShowPlayerDialog(playerid, dGun4, 1, "{FF7000}Покупка оружия", "Укажите число обойм Автомата M4 \nЦена одного патрона - 60$", "Купить", "Назад");
					return 1;
				}
				if(GetPlayerMoneyEx(playerid) < price)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "У Вас недостаточно денег");
					ShowPlayerDialog(playerid, dGun4, 1, "{FF7000}Покупка оружия", "Укажите число обойм Автомата M4 \nЦена одного патрона - 60$", "Купить", "Назад");
					return 1;
				}
				new string[256];
				format(string, sizeof(string), "Вы купили автомат M4 с %d патронами за %d$", ammo, price);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				gBusiness[id][busiProduct] -= price/3;
				gBusiness[id][busiBank] += price;
				UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
				UpdateBusinessText(id);
				TransferMoney(-1,playerid,-price,"ammunation");
				GivePlayerWeaponEx(playerid, 31, ammo);
				ShowMenuAmmo(playerid);
				return 1;
			}
			else
			{
				ShowMenuAmmo(playerid);
				return 1;
			}
		}
	case dDutyGun:
		{
			if(!response) return true;
			new weapon,ammo;
			switch(listitem)
			{
			case 0:
				{
					GetPlayerWeaponData(playerid,GetWeaponSlot(3),weapon,ammo);
					if(weapon == 3 && ammo != 0) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть это оружие"),ShowPlayerDialog(playerid, dDutyGun, 2, "{ffcf00}Что-то еще ...", "{FFFFFF}Дубинка\nDesert Eagle\nSD Pistol\nБронежелет\nMP5\nЩит", "Принять", "Отмена");
					GivePlayerWeaponEx(playerid, 3, 1);
					ShowPlayerDialog(playerid, dDutyGun, 2, "{ffcf00}Что-то еще ...", "{FFFFFF}Дубинка\nDesert Eagle\nSD Pistol\nБронежелет\nMP5\nЩит", "Принять", "Отмена");
				}
			case 1:
				{
					GetPlayerWeaponData(playerid,GetWeaponSlot(24),weapon,ammo);
					if(weapon == 24 && ammo != 0) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть это оружие"),ShowPlayerDialog(playerid, dDutyGun, 2, "{ffcf00}Что-то еще ...", "{FFFFFF}Дубинка\nDesert Eagle\nSD Pistol\nБронежелет\nMP5\nЩит", "Принять", "Отмена");
					GivePlayerWeaponEx(playerid, 24, 100);
					ShowPlayerDialog(playerid, dDutyGun, 2, "{ffcf00}Что-то еще ...", "{FFFFFF}Дубинка\nDesert Eagle\nSD Pistol\nБронежелет\nMP5\nЩит", "Принять", "Отмена");
				}
			case 2:
				{
					GetPlayerWeaponData(playerid,GetWeaponSlot(23),weapon,ammo);
					if(weapon == 23 && ammo != 0) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть это оружие"),ShowPlayerDialog(playerid, dDutyGun, 2, "{ffcf00}Что-то еще ...", "{FFFFFF}Дубинка\nDesert Eagle\nSD Pistol\nБронежелет\nMP5\nЩит", "Принять", "Отмена");
					GivePlayerWeaponEx(playerid,23,30);
					pTemp[playerid][pTazerGun] = true;
					ShowPlayerDialog(playerid, dDutyGun, 2, "{ffcf00}Что-то еще ...", "{FFFFFF}Дубинка\nDesert Eagle\nSD Pistol\nБронежелет\nMP5\nЩит", "Принять", "Отмена");
				}
			case 3:
				{
					new Float:zarm; GetPlayerArmour(playerid,zarm);
					SetPlayerArmourEx(playerid, 100);
					ShowPlayerDialog(playerid, dDutyGun, 2, "{ffcf00}Что-то еще ...", "{FFFFFF}Дубинка\nDesert Eagle\nSD Pistol\nБронежелет\nMP5\nЩит", "Принять", "Отмена");
				}
			case 4:
				{
					GetPlayerWeaponData(playerid,GetWeaponSlot(29),weapon,ammo);
					if(weapon == 29 && ammo != 0) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть это оружие"), ShowPlayerDialog(playerid, dDutyGun, 2, "{ffcf00}Что-то еще ...", "{FFFFFF}Дубинка\nDesert Eagle\nSD Pistol\nБронежелет\nMP5\nЩит", "Принять", "Отмена");
					GivePlayerWeaponEx(playerid, 29, 150);
					ShowPlayerDialog(playerid, dDutyGun, 2, "{ffcf00}Что-то еще ...", "{FFFFFF}Дубинка\nDesert Eagle\nSD Pistol\nБронежелет\nMP5\nЩит", "Принять", "Отмена");
				}
			case 5:
				{
					SetPlayerAttachedObject(playerid, 1, 18637, 14, 0.0, 0.0, 0.0, 0.0, 180.0, 180.0);
					SendClientMessage(playerid,0x7FC0E3FF,"Снять щит можно командой: {FFFFFF}/shieldoff");
					ShowPlayerDialog(playerid, dDutyGun, 2, "{ffcf00}Что-то еще ...", "{FFFFFF}Дубинка\nDesert Eagle\nSD Pistol\nБронежелет\nMP5\nЩит", "Принять", "Отмена");
				}
			}
		}
	case dDutyGunFbi:
		{
			if(!response) return true;
			new weapon,ammo;
			switch(listitem)
			{
			case 0:
				{
					GetPlayerWeaponData(playerid,GetWeaponSlot(3),weapon,ammo);
					GivePlayerWeaponEx(playerid, 3, 1);
					SendClientMessage(playerid,0x7FC0E3FF,"Вы взяли Дубинку");
				}
			case 1:
				{
					GetPlayerWeaponData(playerid,GetWeaponSlot(24),weapon,ammo);
					GivePlayerWeaponEx(playerid, 24, 100);
					SendClientMessage(playerid,0x7FC0E3FF,"Вы взяли Desert Eagle");
				}
			case 2:
				{
					GetPlayerWeaponData(playerid,GetWeaponSlot(23),weapon,ammo);
					GivePlayerWeaponEx(playerid,23,30);
					pTemp[playerid][pTazerGun] = true;
					SendClientMessage(playerid,0x7FC0E3FF,"Вы взяли SD Pistol");
				}
			case 3:
				{
					new Float:zarm; GetPlayerArmour(playerid,zarm);
					SetPlayerArmourEx(playerid, 100);
					SendClientMessage(playerid,0x7FC0E3FF,"Вы надели Бронежилет");
				}
			case 4:
				{
					GetPlayerWeaponData(playerid,GetWeaponSlot(29),weapon,ammo);
					GivePlayerWeaponEx(playerid, 29, 150);
					SendClientMessage(playerid,0x7FC0E3FF,"Вы взяли MP-5");
				}
			case 5:
				{
					GetPlayerWeaponData(playerid,GetWeaponSlot(31),weapon,ammo);
					GivePlayerWeaponEx(playerid, 31, 150);
					SendClientMessage(playerid,0x7FC0E3FF,"Вы взяли M4");
				}
			case 6:
				{
					GetPlayerWeaponData(playerid,GetWeaponSlot(17),weapon,ammo);
					GivePlayerWeaponEx(playerid, 17, 3);
					SendClientMessage(playerid,0x7FC0E3FF,"Вы взяли дымовые шашки");
				}
			case 7:
				{
					SetPlayerAttachedObject(playerid, 1, 18637, 14, 0.0, 0.0, 0.0, 0.0, 180.0, 180.0);
					SendClientMessage(playerid,0x7FC0E3FF,"Снять щит можно командой: /shieldoff");
				}
			}
			ShowPlayerDialog(playerid, dDutyGunFbi, 2, "{ffcf00}Снаряжение", "{FFFFFF}Дубинка\nDesert Eagle\nSD Pistol\nБронежелет\nMP5\nM4\nДымовые шашки (3 шт.)\nЩит", "Принять", "Отмена");
		}
	case dHeal:
		{
			new price = GetPVarInt(playerid,"healprice");
			new doctorid = GetPVarInt(playerid,"doctorid");
			if(!response) return SendClientMessage(doctorid,CWHITE,"» Пациент отказался от лечения");
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
			SetPlayerHealth(playerid,100.0);
			pData[playerid][pHealth] = 100.0;
			TransferMoney(playerid,doctorid,price,"heal");
			SendClientMessage(doctorid,0x7FC0E3FF,"Пациент согласился на лечение");
		}
	case dReport:
		{
			if(!response) return _menu(playerid, "");
			if(pData[playerid][pMut]) return SendClientMessage(playerid,CWHITE,"» У Вас молчанка, ожидайте снятия.");
			//if(pTemp[playerid][pNotReport]) return SendClientMessage(playerid,CWHITE,"» Нельзя писать сообщение чаще чем 1 раз в минуту");
			if(strlen(inputtext) < 4)
			{
				_menu(playerid, "");
				SendClientMessage(playerid,-1,"Слишком короткий запрос");
				return 1;
			}
			if(strfind(inputtext,"{") != -1) return ShowPlayerDialog(playerid,dReport,1,"{ffcf00}{ffcf00}Связь с Администрацией","{FFFFFF}Введите своё сообщение для администрации сервера\nОно должно быть кратким и ясным\n\n{66CC66}Если вы хотите подать жалобу на игрока,\nобязательно укажите его ID и причину жалобы","ОК","Отмена");
			pTemp[playerid][pNotReport] = 1;

			format(mes, 128, "Репорт: {66CC00}%s[%d]: {FFCD00}%s",pData[playerid][pNickname],playerid,inputtext);
			AdminChat(-1, mes);
			format(mes, 128, "Репорт: {66CC00}%s[%d]: {FFCD00}%s",pData[playerid][pNickname],playerid,inputtext);
			SendClientMessage(playerid, -1, mes);
			SendClientMessage(playerid,-1,"Ожидайте, в ближайшее время Вам ответит администратор.");
		}
	case dNameChange1:
		{
			if(!response)
			{
                new sendername[32],giveplayer[32];
				new giveplayerid = WeddingTwo[playerid];
				GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				GetPlayerName(giveplayerid, giveplayer, MAX_PLAYER_NAME);
				strmid(pData[playerid][pDivorce], giveplayer, 0, strlen(giveplayer), 32);
				strmid(pData[giveplayerid][pDivorce], sendername, 0, strlen(sendername), 32);
				mes = "";
				f(mes, "UPDATE `accounts` SET divorce = '%s',married = 1 WHERE id = '%d'",sendername,pData[giveplayerid][pMysqlID]);
				sql_query(zConn, mes); mes = "";
				f(mes, "UPDATE `accounts` SET divorce = '%s',married = 1 WHERE id = '%d'",giveplayer,pData[playerid][pMysqlID]);
				sql_query(zConn, mes); mes = "";
				pData[giveplayerid][pMarried] = 1;
				pData[playerid][pMarried] = 1;
				predlojbrak = 0;
			}
			if(strlen(inputtext) < 3 || strlen(inputtext) > 20) return SendClientMessage(playerid,CWHITE,"» Длина ника не может быть меньше трех и больше 20 символов"), ShowPlayerDialog(playerid,dNameChange,1,"{ffcf00}Смена ника","{FFFFFF}Вы можете изменить имя своего персонажа, если оно не соответствует RP правилам\n\nRP ник имеет формат Имя_Фамилия.\nНапример: Andrey_Ivanov, Nikolas_Rayn, Katy_Valante и т.п\n\nВведите новое имя в поле ниже. Допустимы только латинские символы:","ОК","Отмена");
			if(strfind(inputtext,"|") != -1) return SendClientMessage(playerid,CWHITE,"» В нике не может содержаться симовл \"|\""), ShowPlayerDialog(playerid,dNameChange,1,"{ffcf00}Смена ника","{FFFFFF}Вы можете изменить имя своего персонажа, если оно не соответствует RP правилам\n\nRP ник имеет формат Имя_Фамилия.\nНапример: Andrey_Ivanov, Nikolas_Rayn, Katy_Valante и т.п\n\nВведите новое имя в поле ниже. Допустимы только латинские символы:","ОК","Отмена");
			sql_escape_string(zConn, inputtext,inputtext,24);
			mes = "";	f(mes, "SELECT `nickname` FROM `accounts` WHERE `nickname` = '%s'",inputtext);
			new Result:r = sql_query(zConn, mes, QUERY_CACHED);
			if(sql_num_rows(r))
			{
				sql_free_result(r);
				SendClientMessage(playerid,CWHITE,"» Этот никнейм уже используется");
				return sql_free_result(r);
			}
			sql_free_result(r);
			SetPVarString(playerid,"nnick",inputtext);
			f(mes, "[Брак] %s желает сменить нонРП имя на %s {28C778}[Подтвердить: /okay %d]",pData[playerid][pNickname],inputtext,playerid);
			AdminChat(-1,mes);

		}
	case dNameChange:
		{
			if(!response) return _menu(playerid, "");
			if(strlen(inputtext) < 3 || strlen(inputtext) > 20) return SendClientMessage(playerid,CWHITE,"» Длина ника не может быть меньше трех и больше 20 символов"), ShowPlayerDialog(playerid,dNameChange,1,"{ffcf00}Смена ника","{FFFFFF}Вы можете изменить имя своего персонажа, если оно не соответствует RP правилам\n\nRP ник имеет формат Имя_Фамилия.\nНапример: Andrey_Ivanov, Nikolas_Rayn, Katy_Valante и т.п\n\nВведите новое имя в поле ниже. Допустимы только латинские символы:","ОК","Отмена");
			if(strfind(inputtext,"|") != -1) return SendClientMessage(playerid,CWHITE,"» В нике не может содержаться симовл \"|\""), ShowPlayerDialog(playerid,dNameChange,1,"{ffcf00}Смена ника","{FFFFFF}Вы можете изменить имя своего персонажа, если оно не соответствует RP правилам\n\nRP ник имеет формат Имя_Фамилия.\nНапример: Andrey_Ivanov, Nikolas_Rayn, Katy_Valante и т.п\n\nВведите новое имя в поле ниже. Допустимы только латинские символы:","ОК","Отмена");
			sql_escape_string(zConn, inputtext,inputtext,24);
			mes = "";	f(mes, "SELECT `nickname` FROM `accounts` WHERE `nickname` = '%s'",inputtext);
			new Result:r = sql_query(zConn, mes, QUERY_CACHED);
			if(sql_num_rows(r))
			{
				sql_free_result(r);
				SendClientMessage(playerid,CWHITE,"» Этот никнейм уже используется");
				return sql_free_result(r);
			}
			sql_free_result(r);
			SetPVarString(playerid,"nnick",inputtext);
  	 		f(mes, "[Смена ника] %s желает сменить нонРП имя на %s {28C778}[Подтвердить: /okay %d]",pData[playerid][pNickname],inputtext,playerid);
			AdminChat(-1,mes);
			SendClientMessage(playerid,0x7FC0E3FF,"Ваша заявка на смену ника отправлена Администрации.");
		}
	case dKiosk:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					SetPlayerHealth(playerid,100.0);
					pData[playerid][pHealth] = 100.0;
				}
			case 1:
				{
				}
			}
		}
	case dATM:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					mes = "";
					f(mes, "{FFFFFF}На Вашем банковском счету: {00FF00}%d$",pData[playerid][pBank]);
					ShowPlayerDialog(playerid,dATMWatch,0,"Банкомат",mes,"OK","");
					PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
				}
			case 1:
				{
					ShowPlayerDialog(playerid,dATMGet,1,"{ffcf00}Банкомат","{"#cWHITE"}Введите сумму которую хотите снять со счета:","Снять","Выход");
					PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
				}
			case 2:
				{
					ShowPlayerDialog(playerid,dATMPut,1,"{ffcf00}Банкомат","{"#cWHITE"}Введите сумму которую хотите положить на счет:","Положить","Выход");
					PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
				}
			case 3:
				{
					ShowPlayerDialog(playerid,dATMPhone,1,"{ffcf00}Банкомат","{"#cWHITE"}Укажите номер телефона в формате [xxxxxx]\nНапример: 123321","Продолжить","Выход");
					PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
				}
			}
		}
	case dOBankMenu:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(pData[playerid][pHouse] == 0) return SendMes(playerid,-1,"У вас нет дома");
					ShowPlayerDialog(playerid,dOBankMenu2,1,"{ffcf00}Оплата за дом","{"#cWHITE"}Введите количество дней на которое\nжелаете оплатить квартплату за дом","Принять","Назад");
				}
			case 1:
				{
					if(pData[playerid][pBusiness] == 0) return SendMes(playerid,-1,"У вас нет бизнеса");
					ShowPlayerDialog(playerid,dOBankMenu3,1,"{ffcf00}Оплата за бизнес","{"#cWHITE"}Введите количество дней на которое\nжелаете оплатить аренду за бизнес","Принять","Назад");
				}
			case 2:
				{
					if(pData[playerid][pBusiness] < FILLING_ID_OFFSET) return SendMes(playerid,-1,"У вас нет АЗС");
					ShowPlayerDialog(playerid,dOBankMenu4,1,"{ffcf00}Оплата за бизнес","{"#cWHITE"}Введите количество дней на которое\nжелаете оплатить аренду за бизнес","Принять","Назад");
				}
			}
		}
	case dOBankMenu2:
		{
			if(!response) return 1;
			if(!strlen(inputtext))
			{
				SendClientMessage(playerid,CWHITE,"» Количество дней введено неверно");
				ShowPlayerDialog(playerid,dOBankMenu2,2,"{ffcf00}{ffcf00}Оплата за дом","{"#cWHITE"}Введите количество дней на которое\nжелаете оплатить кварплату за дом","Принять","Назад");
			}
			else
			{
				mes = "";
				new odays = strval(inputtext);
				new houseid = pData[playerid][pHouse] - 1;
				new subsidia = floatround(gHouses[houseid][housePrice] * 0.005);
				if(gHouses[houseid][houseImprove][4]) subsidia = subsidia / 2;
				new oplata = subsidia * odays;
				if(odays < 1 || odays > 30) return SendClientMessage(playerid,CWHITE,"» От 1 до 30");

				if(oplata > pData[playerid][pBank]) return SendClientMessage(playerid,-1,"У вас на банковском счёте не хватает денег");
				if(gHouses[houseid][houseDays] + odays > 30) return SendClientMessage(playerid, -1,"Максимальное клиество оплаченных дней 30");
				f(mes, "UPDATE `houses` SET `days` = '%d' WHERE id = '%d'",gHouses[houseid][houseDays]+odays,houseid+1);
				sql_query(zConn, mes); mes = "";
				gHouses[houseid][houseDays] += odays;
				pData[playerid][pBank] -= oplata;
				UpdatePlayerData(playerid,"bank",pData[playerid][pBank]);
				SendClientMessage(playerid, COLOR_GREEN, "Вы успешно продлили аренду недвижимости.Средства были сняты с банк. счёта. Спасибо!");
			}
		}
	case dOBankMenu3:
		{
			if(!response) return 1;
			if(!strlen(inputtext))
			{
				SendClientMessage(playerid,CWHITE,"» Количество дней введено неверно");
				ShowPlayerDialog(playerid,dOBankMenu3,2,"{ffcf00}{ffcf00}Оплата за бизнес","{"#cWHITE"}Введите количество дней на которое\nжелаете оплатить кварплату за бизнес","Принять","Назад");
			}
			else
			{
//				mes = "";
				new days = strval(inputtext);
				new businessid = pData[playerid][pBusiness] - 1;
				new subsidia = floatround(gBusiness[businessid][busiPrice] * 0.02);
				new oplata = subsidia * days;
				if(days < 1 || days > 30) return SendClientMessage(playerid,CWHITE,"» От 1 до 30");
				if(oplata > pData[playerid][pBank]) return SendClientMessage(playerid,-1,"У вас на банковском счёте не хватает денег");
				if(gBusiness[businessid][busiDay] + days > 30) return SendClientMessage(playerid, -1,"Максимальное клиество оплаченных дней 30");

				new id = pData[playerid][pBusiness] - 1;
				UpdateBusinessData(id+1,"day", gBusiness[id][busiDay]+days);
				gBusiness[id][busiDay] += days;
				pData[playerid][pBank] -= oplata;
				UpdatePlayerData(playerid,"bank",pData[playerid][pBank]);
				SendClientMessage(playerid, COLOR_GREEN, "Вы успешно продлили аренду помещения. Средства были сняты с банк. счёта. Спасибо!");
			}
		}
	case dOBankMenu4:
		{
			if(!response) return 1;
			if(!strlen(inputtext))
			{
				SendClientMessage(playerid,CWHITE,"» Количество дней введено неверно");
				ShowPlayerDialog(playerid,dOBankMenu4,2,"{ffcf00}{ffcf00}Оплата за АЗС","{"#cWHITE"}Введите количество дней на которое\nжелаете оплатить кварплату за бизнес","Принять","Назад");
			}
			else
			{
				mes = "";
				new days = strval(inputtext);
				new fillingid1 = -1;
				for(new i;i<FILLING_COUNT;i++)
				{
					if(pData[playerid][pMysqlID] == gFillings[i][fillOwnerID]) fillingid1 = i;
				}
				if(fillingid1 == -1) return SendClientMessage(playerid,CRED,"Програмная ошибка (не найдена АЗС)");
				new subsidia = floatround(gFillings[fillingid1][fillPrice] * 0.02);
				new oplata = subsidia * days;
				if(days < 1 || days > 30) return SendClientMessage(playerid,CWHITE,"» От 1 до 30");
				if(oplata > pData[playerid][pBank]) return SendClientMessage(playerid,-1,"У вас на банковском счёте не хватает денег");
				if(gFillings[fillingid1][fillDay] + days > 30) return SendClientMessage(playerid, -1,"Максимальное клиество оплаченных дней 30");
				f(mes, "UPDATE `fillings` SET `day` = '%d' WHERE id = '%d'",gFillings[fillingid1][fillDay]+days,fillingid1);
				sql_query(zConn, mes); mes = "";
				gFillings[fillingid1][fillDay] += days;
				pData[playerid][pBank] -= oplata;
				UpdatePlayerData(playerid,"bank",pData[playerid][pBank]);

				SendClientMessage(playerid, -1, "Временно не работает, мы уже работаем над данной системой");
			}
		}
		case dMafia:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, dMafia3, 1, "Положить деньги", "Введите кол-во денег:", "Принять", "Отмена");
				case 1: ShowPlayerDialog(playerid, dMafia8, 1, "Положить наркотики", "Введите количество наркотиков:","Принять","Отмена");
				case 2: ShowPlayerDialog(playerid, dMafia4, 1, "Взять наркотики", "Введите кол-во грамм наркотиков:", "Принять", "Отмена");
				case 3: ShowPlayerDialog(playerid, dMafia7, 1, "Взять деньги", "Введите кол-во денег:", "Принять", "Отмена");
			}
		}
		/*case dMafia1:
		{
			if(!response) return 1;
			new string[90];
			new till = 0, i;
			if(sscanf(inputtext, "i",till)) return ShowPlayerDialog(playerid, dMafia1, 1, "Единицы оружия", "Введите кол-во материалы:", "Принять", "Отмена");
			switch(pData[playerid][pFraction])
			{
				case F_RM: i = 2;
				case F_LCN: i = 1;
				case F_YAK: i = 0;
				default: return 1;
			}
			if(till < 0) return ShowPlayerDialog(playerid, dMafia1, 1, "Материалы", "Введите кол-во материалы:", "Принять", "Отмена");
			if(pData[playerid][pAmmo] < till) return SendClientMessage(playerid, CWHITE,"» У Вас нет столько Материалы");
			pData[playerid][pAmmo] -= till;
			UpdatePlayerData(playerid, "ammo", pData[playerid][pAmmo]);
			MafiaPatr[i] += till;
			SaveServerData();
			SendMes(playerid, COLOR_BLUE, "Вы положили на склад мафии патроны(+%i)", till);
			format(string, 90, "{3399FF}%s [id %d] положил(а) на склад мафии {66CC00}%i патрон", pData[playerid][pNickname], playerid, till);
			SendFMes(pData[playerid][pFraction], -1, string);
			return true;
		}*/
		case dMafia8:
		{
			if(!response) return 1;
			new string[90];
			new till = 0, i;
			if(sscanf(inputtext, "i",till)) return ShowPlayerDialog(playerid, dMafia8, 1, "Положить наркотики", "Введите количество наркотиков:", "Принять", "Отмена");
			switch(pData[playerid][pFraction])
			{
				case F_RM: i = 2;
				case F_LCN: i = 1;
				case F_YAK: i = 0;
				default: return 1;
			}
			if(till < 0) return ShowPlayerDialog(playerid, dMafia8, 1, "Положить наркотики", "Введите количество наркотиков:", "Принять", "Отмена");
			if(pData[playerid][pDrugs] < till) return SendClientMessage(playerid, CWHITE,"» У Вас нет столько наркотиков");
			pData[playerid][pDrugs] -= till;
			UpdatePlayerData(playerid, "drugs", pData[playerid][pDrugs]);
			MafiaDrug[i] += till;
			SaveServerData();
			SendMes(playerid, COLOR_BLUE, "Вы положили на склад мафии наркотики(+%i)", till);
			format(string, 90, "{3399FF}%s [id %d] положил(а) на склад мафии {66CC00}%i грамм наркотиков", pData[playerid][pNickname], playerid, till);
			SendFMes(pData[playerid][pFraction], -1, string);
			return true;
		}
		case dMafia2:
		{
			if(!response) return 1;
			new string[90];
			new till = 0, i;
			if(sscanf(inputtext, "i",till)) return ShowPlayerDialog(playerid, dMafia2, 1, "Единицы оружия", "Введите кол-во материалы:", "Принять", "Отмена");
			switch(pData[playerid][pFraction])
			{
				case F_RM: i = 2;
				case F_LCN: i = 1;
				case F_YAK: i = 0;
				default: return 1;
			}
			if(till < 0) return ShowPlayerDialog(playerid, dMafia2, 1, "Материалы", "Введите кол-во материалы:", "Принять", "Отмена");
			if(pData[playerid][pGunAmount] < till) return SendClientMessage(playerid, CWHITE,"» У Вас нет столько Материалы");
			pData[playerid][pGunAmount] -= till;
			UpdatePlayerData(playerid, "gunamount", pData[playerid][pGunAmount]);
			MafiaEd[i] += till;
			SaveServerData();
			SendMes(playerid, COLOR_BLUE, "Вы положили на склад мафии Материалы(+%i)", till);
			format(string, 90, "{3399FF}%s [id %d] положил(а) на склад мафии {66CC00}%i Материалы", pData[playerid][pNickname], playerid, till);
			SendFMes(pData[playerid][pFraction], -1, string);
			return true;
		}
		case dMafia3:
		{
			if(!response) return true;
			new till = 0,i;
			if(sscanf(inputtext, "i",till)) return ShowPlayerDialog(playerid, dMafia3, 1, "Положить деньги", "У вас недостаточно денег!\n\nВведите количество денег:", "Принять", "Отмена");
			switch(pData[playerid][pFraction])
			{
				case F_RM: i = 2;
				case F_LCN: i = 1;
				case F_YAK: i = 0;
				default: return 1;
			}
			new string[90];
			if(till > GetPlayerMoneyEx(playerid) || till < 0) return ShowPlayerDialog(playerid, dMafia3, 1, "Положить деньги", "У вас недостаточно денег!\n\nВведите количество денег:", "Принять", "Отмена");
			TransferMoney(playerid,-1,till,"Sklad");
			MafiaMoney[i] += till;
			SaveServerData();
			SendMes(playerid, COLOR_BLUE, "Вы положили на склад мафии %d$", till);
			format(string, 90, "{3399FF}%s [id %d] положил(а) на склад мафии {66CC00}%i$", pData[playerid][pNickname], playerid, till);
			SendFMes(pData[playerid][pFraction], -1, string);
			return true;
		}
		case dMafia4:
		{
			if(!response) return 1;
			if(pData[playerid][pRank] < 7) return SendClientMessage(playerid, -1, "» Брать со склада могут люди высше 7 ранга");
			new string[90];
			new till = 0, i;
			if(sscanf(inputtext, "i",till)) return ShowPlayerDialog(playerid, dMafia4, 1, "Наркотики", "Введите кол-во грамм наркотиков:", "Принять", "Отмена");
			switch(pData[playerid][pFraction])
			{
				case F_RM: i = 2;
				case F_LCN: i = 1;
				case F_YAK: i = 0;
				default: return 1;
			}
			if(till < 0 || till > MafiaDrug[i]) return ShowPlayerDialog(playerid, dMafia4, 1, "Наркотики", "Введите кол-во грамм наркотиков:", "Принять", "Отмена");
			if(pData[playerid][pDrugs]+till > 2000) return SendClientMessage(playerid, CWHITE,"» У Вас не может быть более 2 кг наркотиков");
			pData[playerid][pDrugs] += till;
			UpdatePlayerData(playerid, "drugs", pData[playerid][pDrugs]);
			MafiaDrug[i] -= till;
			SaveServerData();
			SendMes(playerid, COLOR_BLUE, "Вы взяли со склада мафии наркотики (+%i)", till);
			format(string, 90, "{3399FF}%s [id %d] взял(а) со склада мафии {66CC00}%i гр. наркотиков", pData[playerid][pNickname], playerid, till);
			SendFMes(pData[playerid][pFraction], -1, string);
			return true;
		}
		case dMafia6:
		{
			if(!response) return 1;
			if(pData[playerid][pRank] < 7) return SendClientMessage(playerid, -1, "» Брать со склада могут люди высше 7 ранга");
			new string[90];
			new till = 0, i;
			if(sscanf(inputtext, "i",till)) return ShowPlayerDialog(playerid, dMafia6, 1, "материалы", "Введите кол-во материалы:", "Принять", "Отмена");
			switch(pData[playerid][pFraction])
			{
				case F_RM: i = 2;
				case F_LCN: i = 1;
				case F_YAK: i = 0;
				default: return 1;
			}
			if(till < 0 || till > MafiaEd[i]) return ShowPlayerDialog(playerid, dMafia6, 1, "материалы", "Введите кол-во материалы:", "Принять", "Отмена");
			if(pData[playerid][pGunAmount]+till > 500) return SendClientMessage(playerid, CWHITE,"» У Вас не может быть более 500 Материалы");
			pData[playerid][pGunAmount] += till;
			UpdatePlayerData(playerid, "gunamount", pData[playerid][pGunAmount]);
			MafiaEd[i] -= till;
			SaveServerData();
			SendMes(playerid, COLOR_BLUE, "Вы взяли со склада мафии Материалы(+%i)", till);
			format(string, 90, "{3399FF}%s [id %d] взял(а) со склада {66CC00}%i Материалы", pData[playerid][pNickname], playerid, till);
			SendFMes(pData[playerid][pFraction], -1, string);
			return true;
		}
		case dMafia7:
		{
			if(!response) return true;
			if(pData[playerid][pRank] < 7) return SendClientMessage(playerid, -1, "» Брать со склада могут люди высше 7 ранга");
			new till = 0,i;
			if(sscanf(inputtext, "i",till)) return ShowPlayerDialog(playerid, dMafia7, 1, "Снять деньги", "Введите количество денег:", "Принять", "Отмена");
			switch(pData[playerid][pFraction])
			{
				case F_RM: i = 2;
				case F_LCN: i = 1;
				case F_YAK: i = 0;
				default: return 1;
			}
			new string[90];
			if(till > MafiaMoney[i] || till < 0) return ShowPlayerDialog(playerid, dMafia7, 1, "Снять деньги", "Введите количество денег:", "Принять", "Отмена");
			TransferMoney(-1,playerid,till,"Sklad");
			MafiaMoney[i] -= till;
			SaveServerData();
			SendMes(playerid, COLOR_BLUE, "Вы взяли со склада мафии %d$", till);
			format(string, 90, "{3399FF}%s [id %d] взял(а) со склада мафии {66CC00}%i$", pData[playerid][pNickname], playerid, till);
			SendFMes(pData[playerid][pFraction], -1, string);
			return true;
		}

	case dRadio:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					PlayAudioStreamForPlayer(playerid, "http://Dallas-rp.ru/Radio.m3u");
					SendClientMessage(playerid, -1, "{66CC00}Онлайн радио включено");
					pTemp[playerid][pRadioOnline] = 1;
				}
			case 1:
				{
					PlayAudioStreamForPlayer(playerid, "http://radio02-cn03.akadostream.ru:8108/shanson128.mp3");
					SendClientMessage(playerid, -1, "{66CC00}Онлайн радио включено");
					pTemp[playerid][pRadioOnline] = 1;
				}
			case 2:
				{
					PlayAudioStreamForPlayer(playerid, "http://online.radiorecord.ru:8101/rr_128");
					SendClientMessage(playerid, -1, "{66CC00}Онлайн радио включено");
					pTemp[playerid][pRadioOnline] = 1;
				}
			case 3:
				{
					PlayAudioStreamForPlayer(playerid, "http://stream05.akaver.com/skyradio_hi.mp3");
					SendClientMessage(playerid, -1, "{66CC00}Онлайн радио включено");
					pTemp[playerid][pRadioOnline] = 1;
				}
			case 4:
				{
					PlayAudioStreamForPlayer(playerid, "http://striiming.trio.ee/dfm64.mp3.m3u");
					SendClientMessage(playerid, -1, "{66CC00}Онлайн радио включено");
					pTemp[playerid][pRadioOnline] = 1;
				}
			case 5:
				{
					PlayAudioStreamForPlayer(playerid, "http://webcast.emg.fm:55655/europaplus128.mp3");
					SendClientMessage(playerid, -1, "{66CC00}Онлайн радио включено");
					pTemp[playerid][pRadioOnline] = 1;
				}
			}
		}

		/*case dDebtorHouse:
		{
			if(!response) return 1;
			SetPlayerCheckpoint(playerid,DebtorInfo[listitem+1][0][hX],DebtorInfo[listitem+1][0][hY],DebtorInfo[listitem+1][0][hZ],2.0);
			pTemp[playerid][pDebtor] = true;
		}
		case dDebtorHouse1:
		{
			if(!response) return 1;
			SetPlayerCheckpoint(playerid,DebtorInfo[listitem+1][1][hX],DebtorInfo[listitem+1][1][hY],DebtorInfo[listitem+1][1][hZ],2.0);
			pTemp[playerid][pDebtor] = true;
		}
		case dDebtorHouse2:
		{
			if(!response) return 1;
			SetPlayerCheckpoint(playerid,DebtorInfo[listitem+1][2][hX],DebtorInfo[listitem+1][2][hY],DebtorInfo[listitem+1][2][hZ],2.0);
			pTemp[playerid][pDebtor] = true;
		}*/
		/*case dDebtor:
		{
			if(!response) return 1;
			new str2[1024];
			switch(listitem)
			{
				case 0:
				{
					new debtor = -1;
					for(new j = 1; j < Dolzen+1; j++)
					{
						format(str2, sizeof(str2), "%s{FFFFFF}Владелец: %s - Номер Дома: %i\n",str2,DebtorInfo[j][0][aName],DebtorInfo[j][0][aid]);
						debtor = j;
					}
					if(debtor == -1) return SendClientMessage(playerid, CINFO, "Должников по Домам нет");
					ShowPlayerDialog(playerid, dDebtorHouse, 2, "Дома", str2, "Принять", "Отмена");
				}
				case 1:
				{
					new debtor1 = -1;
					for(new i = 1; i <= Dolzen1; i++)
					{
						format(str2, sizeof(str2), "%s{FFFFFF}Владелец: %s - Номер Бизнеса: %i\n",str2,DebtorInfo[i][1][aName],DebtorInfo[i][1][aid]);
						debtor1 = i;
					}
					if(debtor1 == -1) return SendClientMessage(playerid, CINFO, "Должников по Бизнесам нет");
					ShowPlayerDialog(playerid, dDebtorHouse1, 2, "Бизы", str2, "Принять", "Отмена");
				}
				case 2:
				{
					new debtor2 = -1;
					for(new i = 1; i <= Dolzen2; i++)
					{
						format(str2, sizeof(str2), "%s{FFFFFF}Владелец: %s - Номер АЗС: %i\n",str2,4[i][2][aName],DebtorInfo[i][2][aid]);
						debtor2 = i;
					}
					if(debtor2 == -1) return SendClientMessage(playerid, CINFO, "Должников по АЗС нет");
					ShowPlayerDialog(playerid, dDebtorHouse2, 2, "АЗС", str2, "Принять", "Отмена");
				}
			}
		}*/
	case dBankMenu:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					mes = "";
					f(mes, "» {"#cWHITE"}На счету: {"#cBLUE"}%d$",pData[playerid][pBank]);
					ShowPlayerDialog(playerid,0000,0,"{ffcf00}Информация о счёте",mes,"OK","");
				}
				/*		case 1:
				{
					if(pData[playerid][pBank1] == 0) ShowPlayerDialog(playerid,dBankMenu1,3,"{ffcf00}Меню банка","{"#cWHITE"}Введите ваш PIN код\nПомните!! Его должны знать только вы!\nНе кому не передавайте пароль\nОн может состоятять не более 32 символов","ОК","Назад");
					else ShowPlayerDialog(playerid,dBankMenu2,3,"{ffcf00}Меню банка","{"#cWHITE"}Введите ваш PIN код","ОК","Назад");
				}*/
			case 1:
				{
					ShowPlayerDialog(playerid,dATMGet,1,"{ffcf00}Снять деньги","{"#cWHITE"}Укажите сумму которую хотите снять","Снять","Выход");
				}
			case 2:
				{
					ShowPlayerDialog(playerid,dATMPut,1,"{ffcf00}Положить деньги","{"#cWHITE"}Укажите сумму которую хотите положить на счет","Положить","Выход");
				}
			}
		}
	case dBankMenuATM:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
					mes = "";
					f(mes, "{FFFFFF}На Вашем банковском счету: {00FF00}%d$",pData[playerid][pBank]);
					ShowPlayerDialog(playerid,0000,0,"{ffcf00}Баланс банковского счета",mes,"OK","");
					PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
				}
			case 1:
				{
					ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
					ShowPlayerDialog(playerid,dATMGet,1,"{ffcf00}Снять деньги","{"#cWHITE"}Введите сумму которую хотите снять со счета:","Снять","Выход");
					PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
				}
			case 2:
				{
					ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
					ShowPlayerDialog(playerid,dATMPut,1,"{ffcf00}Положить деньги","{"#cWHITE"}Введите сумму которую хотите положить на счет:","Положить","Выход");
					PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
				}
			case 3:
				{
					ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
					PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
					ShowPlayerDialog(playerid,dATMPhone,1,"{ffcf00}Банкомат","{"#cWHITE"}Укажите номер телефона в формате [xxxxxx]\nНапример: 123321","Положить","Выход");

				}
			}
		}
	case dBankMenu2:
		{
			if(!response) return 1;
			if(!strcmp(inputtext,pData[playerid][pBankPin],false) && strlen(inputtext))
			{
				ShowPlayerDialog(playerid,dBankMenu3,2,"{ffcf00}{ffcf00}Меню банка","Установка счета\nСнятие денег\nПополнение счета\nПеревод денег\nУдаление пинкода","ОК","Назад");
			}
			else SendClientMessage(playerid,CWHITE,"» Код введен неверно");
		}
	case dBankMenu3:
		{
			switch(listitem)
			{
			case 0:
				{
					if(pData[playerid][pBankNomer] == 0)
					{
						new nomerbanka = RandomEx(1000,9999);
						pData[playerid][pBankNomer] = nomerbanka;
						SendMes(playerid, COLOR_GREEN, "Номер вашего счета: {FFFFFF} %i",pData[playerid][pBankNomer]);
						SendClientMessage(playerid,-1,"Не забудьте его записать!");
						UpdatePlayerData(playerid,"banknomer",pData[playerid][pBankNomer]);
					}
					else
					{
						SendClientMessage(playerid,-1,"У Вас уже имеется счёт");
					}
				}
			case 1:
				{
					ShowPlayerDialog(playerid,dATMGet,1,"{ffcf00}Меню банка","{"#cWHITE"}Укажите сумму которую хотите снять:","Снять","Выход");
				}
			case 2:
				{
					ShowPlayerDialog(playerid,dATMPut,1,"{ffcf00}Меню банка","{"#cWHITE"}Укажите сумму которую хотите положить на счет:","Положить","Выход");
				}
			case 3:
				{
					ShowPlayerDialog(playerid,dBankMenu5,1,"{ffcf00}Меню банка","{"#cWHITE"}Введите номер счета игрока, сумму через [,]\nНапример: 1111, 500","ОК","Назад");
				}
			case 4:
				{
					ShowPlayerDialog(playerid,dBankMenu4,1,"{ffcf00}Меню банка","{"#cWHITE"}Вы потверждаете данную операцию ?","Да","Нет");
				}
			}
		}
	case dBankMenu5:
		{
			if(!response) return ShowPlayerDialog(playerid,dBankMenu3,2,"{ffcf00}{ffcf00}Меню банка","Установка счета\nСнятие денег\nПополнение счета\nПеревод денег\nУдаление пинкода","ОК","Назад");
			new bank, price;
			if(sscanf(inputtext, "p<,>ii",bank, price)) return ShowPlayerDialog(playerid,dBankMenu2,3,"{ffcf00}Меню банка","{"#cWHITE"}Введите номер счета игрока, сумму через [,]\nНапример: 1111, 500","ОК","Назад");
			if(price < 1 || price > 100000000) return SendClientMessage(playerid,CWHITE,"» Можно передавать от $1 до $100000000");
			if(pData[playerid][pBank] < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточено денег на счету");
			//
			mes = "";
			new banknow, nicker[32];
			f(mes, "SELECT `bank`,`nickname` FROM `accounts` WHERE `banknomer` = '%i'", bank);
			new Result:r = sql_query(zConn, mes, QUERY_CACHED);
			if(!sql_num_rows(r)) return SendClientMessage(playerid,CWHITE,"» Указанного номера не существует");
			banknow = sql_get_field_int(r, 0);
			sql_get_field(r, 1, nicker);
			sql_free_result(r);
			f(mes, "UPDATE `accounts` SET `bank` = '%i' WHERE `banknomer` = '%i'", banknow+price, bank);
			sql_query(zConn, mes); mes = "";
			pData[playerid][pBank] -= price;
			UpdatePlayerData(playerid,"bank",pData[playerid][pBank]);
			SendMes(playerid, COLOR_GREEN, "Вы перевели на %i номер, %i$", bank, price);
			if(GetPlayerID(nicker) != -1) {
				new fid = GetPlayerID(nicker);
				pData[fid][pBank] += price;
				UpdatePlayerData(fid,"bank",pData[fid][pBank]);
				SendMes(fid, CYELLOW, "Вам пришли деньги, проверьте счет");
			}
		}
	case dBankMenu1:
		{
			if(!response) return ShowPlayerDialog(playerid,dBankMenu3,2,"{ffcf00}{ffcf00}Меню банка","Установка счета\nСнятие денег\nПополнение счета\nПеревод денег\nУдаление пинкода","ОК","Назад");
			if(strfind(inputtext,"|") != -1)
			{
				return SendClientMessage(playerid,CWHITE,"» У вас в пароле пристуствут запрещенные символы");
			}
			sql_escape_string(zConn, inputtext,inputtext,24);
			mes = "";
			f(mes, "UPDATE `accounts` SET bankpink = '%s' WHERE id = '%d'",inputtext,pData[playerid][pMysqlID]);
			sql_query(zConn, mes); mes = "";
			format(pData[playerid][pBankPin],MAX_PLAYER_NAME,"%s",inputtext);
			pData[playerid][pBank1] = 1;
			UpdatePlayerData(playerid,"bank1",pData[playerid][pBank1]);
			SendClientMessage(playerid,0x7FC0E3FF,"Код банковского счета установлен. Пожалуйста запишите его.");
		}
	case dBankMenu4:
		{
			if(!response) return ShowPlayerDialog(playerid,dBankMenu3,2,"{ffcf00}{ffcf00}Меню банка","Установка счета\nСнятие денег\nПополнение счета\nПеревод денег\nУдаление пинкода","ОК","Назад");
			sql_escape_string(zConn, inputtext,inputtext,24);
			mes = "";
			f(mes, "UPDATE `accounts` SET bankpink = '' WHERE id = '%d'",pData[playerid][pMysqlID]);
			sql_query(zConn, mes); mes = "";
			pData[playerid][pBank1] = 0;
			UpdatePlayerData(playerid,"bank1",pData[playerid][pBank1]);
			SendClientMessage(playerid,0x7FC0E3FF,"Ваш код был успешно удален.");
		}
	case dATMWatch:
		{
			ShowPlayerDialog(playerid,dATM,2,"{ffcf00}Банкомат","Проверить счет\nСнять деньги со счета\nПоложить деньги на счет\nПополнить баланс мобильного","OK","Отмена");
		}
	case dATMGet:
		{
			if(!response) return 1;
			new amount = strval(inputtext);
			if(amount < 1 || amount > 100000) return SendClientMessage(playerid,CWHITE,"» Можно снимать от $1 до $100000");
			if(pData[playerid][pBank] < amount) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточено денег на счету");
			pData[playerid][pBank] -= amount;
			UpdatePlayerData(playerid,"bank",pData[playerid][pBank]);
			TransferMoney(-1,playerid,amount,"atmget");
			SendClientMessage(playerid,0x7FC0E3FF,"Вы сняли деньги со счета");
		}
	case dATMPut:
		{
			if(!response) return 1;
			new amount = strval(inputtext);
			if(amount < 1 || amount > 100000) return SendClientMessage(playerid,CWHITE,"» Можно ложить от $1 до $100000");
			if(GetPlayerMoneyEx(playerid) < amount) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточено денег на руках");
			pData[playerid][pBank] += amount;
			UpdatePlayerData(playerid,"bank",pData[playerid][pBank]);
			TransferMoney(playerid,-1,amount,"atmput");
			SendClientMessage(playerid,0x7FC0E3FF,"Вы положили деньги на счет в банке");
		}
	case dATMPhone:
		{
		    new amount = strval(inputtext);
			if(!response) return 1;
			mes = "";
			f(mes, "SELECT `nickname` FROM `accounts` WHERE `phone` = '%d'", amount);
			new Result:r = sql_query(zConn, mes); mes = "";
   			if(sql_num_rows(r))
			{
			    for(new i; i < sql_num_rows(r); i++)
				{
				    sql_get_field_ex(r, i, 0, IDPhoneMoney[playerid]);
					mes = "";
					f(mes, "{ffffff}Введите сумму\nУказанный телефонный номер: %d", amount);
					ShowPlayerDialog(playerid, dATMPhone1,1,"{ffcf00}Сумма",mes,"Купить","Отмена");
					break;
				}
			}
			else
			{
			    SendClientMessage(playerid,CWHITE,"» Такого номера не существует");
			    return sql_free_result(r);
			}

			/*new amount = strval(inputtext);
			if(amount < 5 || amount > 10000) return SendClientMessage(playerid,CWHITE,"» Можно ложить от $5 до $10000");
			if(GetPlayerMoneyEx(playerid) < amount) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточено денег на руках");
			pData[playerid][pPhoneMoney] += amount;
			TransferMoney(playerid,-1,amount,"atmput");
			UpdatePlayerData(playerid,"phonemoney",pData[playerid][pPhoneMoney]);
			SendClientMessage(playerid,0x7FC0E3FF,"Вы успешно пополнили баланс мобильного телефона");
			*/
		}
	case dATMPhone1:
		{
		    new amount = strval(inputtext);
			if(amount < 5 || amount > 10000) return SendClientMessage(playerid,CWHITE,"» Можно ложить от $5 до $10000");
			if(GetPlayerMoneyEx(playerid) < amount) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточено денег на руках");
			TransferMoney(playerid,-1,amount,"atmput");

			mes = "";
			f(mes, "UPDATE `accounts` SET `phonemoney` = '+%d' WHERE `nickname` = '%s'", amount, IDPhoneMoney[playerid]);
			sql_query(zConn, mes); mes = "";
			if(GetPlayerID(IDPhoneMoney[playerid]) != -1) {
				new fid = GetPlayerID(IDPhoneMoney[playerid]);
				pData[fid][pPhoneMoney] += amount;
				UpdatePlayerData(fid,"phonemoney",pData[fid][pPhoneMoney]);
				SendMes(fid, CYELLOW, "Вам пополнили счет мобильного телефона");
			}
  			IDPhoneMoney[playerid] = "";
			SendClientMessage(playerid,0x7FC0E3FF,"Вы успешно пополнили баланс мобильного телефона");
		}
	case dBuyPhoneSot1:
		{
		    if(!response) return 1;
			new id = pTemp[playerid][pSelectedBusinessID];
			if(id < 0) return 1;
			new price = 200;
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У вас не достаточно денег в кормане");
			if(!pData[playerid][pPhone]) return SendClientMessage(playerid,CWHITE,"» У Вас нет телефона");
			switch(listitem)
			{
			    case 0: return ShowPlayerDialog(playerid,dBuyPhoneSot1,2,"{ffcf00}Магазин Телефонов","Телефон стоит 200${FFFFFF}\n1 » Белый\n2 » Желтый\n3 » Черный\n4 » Зеленый\n5 » Красный\n6 » Розовый","Выбрать","Выход");
			    case 1:
				{
					if(pData[playerid][pPhoneModel] == 18874) return SendClientMessage(playerid,CWHITE,"» У Вас уже есть такой телефон");
					pData[playerid][pPhoneModel] = 18874;
					UpdatePlayerData(playerid, "phonemodel", 18874);
					SendClientMessage(playerid,0x7FC0E3FF,"Вы купили белый телефон");
				}
				case 2:
				{
				    if(pData[playerid][pPhoneModel] == 18873) return SendClientMessage(playerid,CWHITE,"» У Вас уже есть такой телефон");
					pData[playerid][pPhoneModel] = 18873;
					UpdatePlayerData(playerid, "phonemodel", 18873);
					SendClientMessage(playerid,0x7FC0E3FF,"Вы купили желтый телефон");
				}
				case 3:
				{
				    if(pData[playerid][pPhoneModel] == 18872) return SendClientMessage(playerid,CWHITE,"» У Вас уже есть такой телефон");
					pData[playerid][pPhoneModel] = 18872;
					UpdatePlayerData(playerid, "phonemodel", 18872);
					SendClientMessage(playerid,0x7FC0E3FF,"Вы купили черный телефон");
				}
				case 4:
				{
				    if(pData[playerid][pPhoneModel] == 18871) return SendClientMessage(playerid,CWHITE,"» У Вас уже есть такой телефон");
					pData[playerid][pPhoneModel] = 18871;
					UpdatePlayerData(playerid, "phonemodel", 18871);
					SendClientMessage(playerid,0x7FC0E3FF,"Вы купили зеленый телефон");
				}
				case 5:
				{
				    if(pData[playerid][pPhoneModel] == 18870) return SendClientMessage(playerid,CWHITE,"» У Вас уже есть такой телефон");
					pData[playerid][pPhoneModel] = 18870;
					UpdatePlayerData(playerid, "phonemodel", 18870);
					SendClientMessage(playerid,0x7FC0E3FF,"Вы купили красный телефон");
				}
				case 6:
				{
				    if(pData[playerid][pPhoneModel] == 18869) return SendClientMessage(playerid,CWHITE,"» У Вас уже есть такой телефон");
					pData[playerid][pPhoneModel] = 18869;
					UpdatePlayerData(playerid, "phonemodel", 18869);
					SendClientMessage(playerid,0x7FC0E3FF,"Вы купили розовый телефон");
				}
			}
			gBusiness[id][busiProduct] -= 3;
			TransferMoney(playerid,-1,price,"buyphone");
			gBusiness[id][busiBank] += price;
		}
	case dBuyObjectPlayer:
	    {
	        if(!response) return 1;
            new id = pTemp[playerid][pSelectedBusinessID];
			if(id < 0) return 1;
			switch(listitem)
			{
   				case 0: _guper123(playerid, "");
   				case 1: _guper1234(playerid, "");
			}

	    }
	case dBuyPhoneSot:
	    {
	        if(!response) return 1;
			new id = pTemp[playerid][pSelectedBusinessID];
			if(id < 0) return 1;
			switch(listitem)
			{
			    case 0:
				{
					if(pData[playerid][pPhone]) return SendClientMessage(playerid,CWHITE,"» У Вас уже есть телефон");
					new price = 350;
					if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
					if(gBusiness[id][busiOwnerID])
					{
						if(3 > gBusiness[id][busiProduct]) return SendClientMessage(playerid,CWHITE,"» В этом магазине не осталось товара");
					}
					new number,count;
					new Result:r;
					do
					{
						sql_free_result(r);
						count++;
						if(count >= 20) return SendClientMessage(playerid,CWHITE,"» Произошла ошибка, попробуйте еще раз");
						number = RandomEx(100000,999999);
						mes = "";
						f(mes, "SELECT `id` FROM `accounts` WHERE `phone` = '%d'",number);
						r = sql_query(zConn, mes); mes = "";
					}
					while(sql_num_rows(r) > 0);
					sql_free_result(r);
					pData[playerid][pPhone] = number;
					UpdatePlayerData(playerid,"phone",number);
					gBusiness[id][busiProduct] -= 3;
					TransferMoney(playerid,-1,price,"buyphone");
					gBusiness[id][busiBank] += price;
					pData[playerid][pPhoneModel] = 18874;
					UpdatePlayerData(playerid, "phonemodel", 18874);
					UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
					//UpdateBusinessText(id);
					mes = "";
					f(mes, "» Поздравляем Вы купили телефон. Ваш номер: {FFFFFF}%d",number);
					SendClientMessage(playerid,COLOR_GREEN,mes);
				}
			case 1:
				{
					if(!pData[playerid][pPhone]) return SendClientMessage(playerid,CWHITE,"» У вас нету телефона");
					new price = 10;
					if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
					if(gBusiness[id][busiOwnerID])
					{
						if(gShopPriceEx[1] > gBusiness[id][busiProduct]) return SendClientMessage(playerid,CWHITE,"» В этом магазине не осталось товара");
					}
					SetPVarInt(playerid,"pokuppr",price);

					gBusiness[id][busiProduct] -= 3;
					gBusiness[id][busiBank] += price;
					UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);

					ShowPlayerDialog(playerid,dNumberPhone,1,"{ffcf00}Смена номера SIM-карты","{ffffff}Введите новый шестизначный номер телефона","Купить","Отмена");
				}
			case 2: ShowPlayerDialog(playerid,dBuyPhoneSot1,2,"{ffcf00}Магазин Телефонов","Телефон стоит 200${FFFFFF}\n1 » Белый\n2 » Желтый\n3 » Черный\n4 » Зеленый\n5 » Красный\n6 » Розовый","Выбрать","Выход");
			}
	    }
	case dShop:
		{
			if(!response) return 1;
			new id = pTemp[playerid][pSelectedBusinessID];
			if(id < 0) return 1;
			switch(listitem)
			{
			/*case 0:
				{
					if(pData[playerid][pPhone]) return SendClientMessage(playerid,CWHITE,"» У Вас уже есть телефон");
					new price = gShopPrice[0];
					if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
					if(gBusiness[id][busiOwnerID])
					{
						if(gShopPriceEx[0] > gBusiness[id][busiProduct]) return SendClientMessage(playerid,CWHITE,"» В этом магазине не осталось товара");
					}
					new number,count;
					new Result:r;
					do
					{
						sql_free_result(r);
						count++;
						if(count >= 20) return SendClientMessage(playerid,CWHITE,"» Произошла ошибка, попробуйте еще раз");
						number = RandomEx(100000,999999);
						mes = "";
						f(mes, "SELECT `id` FROM `accounts` WHERE `phone` = '%d'",number);
						r = sql_query(zConn, mes); mes = "";
					}
					while(sql_num_rows(r) > 0);
					sql_free_result(r);
					pData[playerid][pPhone] = number;
					UpdatePlayerData(playerid,"phone",number);
					gBusiness[id][busiProduct] -= gShopPriceEx[0];
					TransferMoney(playerid,-1,price,"buyphone");
					gBusiness[id][busiBank] += price;
					UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
					//UpdateBusinessText(id);
					mes = "";
					f(mes, "» Поздравляем Вы купили телефон. Ваш номер: {FFFFFF}%d",number);
					SendClientMessage(playerid,COLOR_GREEN,mes);
				}
			case 1:
				{
					if(!pData[playerid][pPhone]) return SendClientMessage(playerid,CWHITE,"» У вас нету телефона");
					new price = gShopPrice[1];
					if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
					if(gBusiness[id][busiOwnerID])
					{
						if(gShopPriceEx[1] > gBusiness[id][busiProduct]) return SendClientMessage(playerid,CWHITE,"» В этом магазине не осталось товара");
					}
					SetPVarInt(playerid,"pokuppr",price);

					gBusiness[id][busiProduct] -= gShopPriceEx[1];
					gBusiness[id][busiBank] += price;
					UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);

					ShowPlayerDialog(playerid,dNumberPhone,1,"{ffcf00}Смена номера SIM-карты","{ffffff}Введите новый шестизначный номер телефона","Купить","Отмена");
				}
			*/
			case 0:
				{
					if(pTemp[playerid][pHealing] >= 2) return SendClientMessage(playerid,CWHITE,"» У Вас уже есть аптечка");
					new price = gShopPrice[0];
					if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
					if(gBusiness[id][busiOwnerID])
					{
						if(gBusiness[id][busiProduct] <= 0) return SendClientMessage(playerid,CWHITE,"» В этом магазине не осталось товара");
					}
					gBusiness[id][busiProduct] -= gShopPriceEx[0];
					gBusiness[id][busiBank] += price;
					UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
					//UpdateBusinessText(id);
					TransferMoney(playerid,-1,price,"aptechka");
					pTemp[playerid][pHealing] = 2;
					SendClientMessage(playerid,0x7FC0E3FF,"Вы купили 2 аптечки, используйте /healme");
				}
				/*case 3:
				{
					if(pData[playerid][pWatch]) return SendClientMessage(playerid,CWHITE,"» У Вас уже есть часы");
					new price = gShopPrice[3]*1;
					if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
					if(gBusiness[id][busiOwnerID])
					{
						if(gShopPriceEx[3] > gBusiness[id][busiProduct]) return SendClientMessage(playerid,CWHITE,"» В этом магазине не осталось товара");
					}
					gBusiness[id][busiProduct] -= gShopPriceEx[3];
					gBusiness[id][busiBank] += price;
					UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
					UpdateBusinessText(id);
					TransferMoney(playerid,-1,price,"buywatch");
					pData[playerid][pWatch] = 1;
					UpdatePlayerData(playerid,"watch",1);
					SendClientMessage(playerid,0x7FC0E3FF,"Вы купили часы. /time - Посмотреть время");
				}*/
			case 1:
				{
					new price = gShopPrice[1];
					if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
					if(gBusiness[id][busiOwnerID])
					{
						if(gBusiness[id][busiProduct] <= 0) return SendClientMessage(playerid,CWHITE,"» В этом магазине не осталось товара");
					}
					gBusiness[id][busiProduct] -= gShopPriceEx[1];
					gBusiness[id][busiBank] += price;
					UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
					//UpdateBusinessText(id);
					TransferMoney(playerid,-1,price,"buycveti");
					GivePlayerWeaponEx(playerid,14,1);
					SendClientMessage(playerid,0x7FC0E3FF,"Вы купили букет цветов");
				}
			case 2:
				{
					new price = gShopPrice[2];
					if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
					if(gBusiness[id][busiOwnerID])
					{
						if(gBusiness[id][busiProduct] <= 0) return SendClientMessage(playerid,CWHITE,"» В этом магазине не осталось товара");
					}
					gBusiness[id][busiProduct] -= gShopPriceEx[2];
					gBusiness[id][busiBank] += price;
					UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
					//UpdateBusinessText(id);
					TransferMoney(playerid,-1,price,"buytrost");
					GivePlayerWeaponEx(playerid,15,1);
					SendClientMessage(playerid,0x7FC0E3FF,"Вы купили трость");
				}
			case 3:
				{
					new price = gShopPrice[3];
					if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
					if(gBusiness[id][busiOwnerID])
					{
						if(gBusiness[id][busiProduct] <= 0) return SendClientMessage(playerid,CWHITE,"» В этом магазине не осталось товара");
					}
					gBusiness[id][busiProduct] -= gShopPriceEx[3];
					gBusiness[id][busiBank] += price;
					UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
					//UpdateBusinessText(id);
					TransferMoney(playerid,-1,price,"buyparashut");
					GivePlayerWeaponEx(playerid,46,1);
					SendClientMessage(playerid,0x7FC0E3FF,"Вы купили парашют");
				}
			case 4:
				{
					new price = gShopPrice[4];
					if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
					if(gBusiness[id][busiOwnerID])
					{
						if(gBusiness[id][busiProduct] <= 0) return SendClientMessage(playerid,CWHITE,"» В этом магазине не осталось товара");
					}
					gBusiness[id][busiProduct] -= gShopPriceEx[4];
					gBusiness[id][busiBank] += price;
					UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
					//UpdateBusinessText(id);
					TransferMoney(playerid,-1,price,"buymask");
					pData[playerid][pMask] = 1;
					SendClientMessage(playerid,0x7FC0E3FF,"Вы купили маску. Введите /mask, чтобы использовать её");
				}
			case 5:
				{
					new price = gShopPrice[5];
					if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
					if(gBusiness[id][busiOwnerID])
					{
						if(gBusiness[id][busiProduct] <= 0) return SendClientMessage(playerid,CWHITE,"» В этом магазине не осталось товара");
					}
					gBusiness[id][busiProduct] -= gShopPriceEx[5];
					gBusiness[id][busiBank] += price;
					UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
					//UpdateBusinessText(id);
					TransferMoney(playerid,-1,price,"buyphoto");
					GivePlayerWeaponEx(playerid, 43, 50);
					SendClientMessage(playerid,0x7FC0E3FF,"Вы купили фотоаппарат.");
				}
			case 6:
			    {
			        if(!pData[playerid][pHouse]) return SendClientMessage(playerid,CWHITE,"» У Вас нет дома");
					new houseid = pData[playerid][pHouse]-1;
					if(!gHouses[houseid][houseImprove][2]) return SendClientMessage(playerid,CWHITE,"» У Вас дома нет холодильника");
					if(pTemp[playerid][pCarryProducts]) return SendClientMessage(playerid,CWHITE,"» Вы уже купили продукты");
					ShowPlayerDialog(playerid,dGrocer,1,"{ffcf00}Магазин продуктов","{"#cWHITE"}Здесь Вы можете купить продукты которые будут храниться в вашем холодильнике\nУкажите количество продуктов которое Вы хотите купить:","ОК","Отмена");
			    }

  		 	case 7:
  		 	    {
  		 	        new price = gShopPrice[7];
  		 	        if(1 == pData[playerid][pSumka]) return SendClientMessage(playerid,CWHITE,"» Вы покупали сумку этого класса");
					if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
					if(gBusiness[id][busiOwnerID])
					{
						if(gBusiness[id][busiProduct] <= 0) return SendClientMessage(playerid,CWHITE,"» В этом магазине не осталось товара");
					}
					TransferMoney(playerid,-1,price,"sumki");
					gBusiness[id][busiProduct] -= gShopPriceEx[7];
					gBusiness[id][busiBank] += price;
					UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
					pData[playerid][pSumka] = 1;
					UpdatePlayerData(playerid, "sumka", 1);

  		 	    }
            case 8:
  		 	    {
  		 	        new price = gShopPrice[8];
  		 	        if(2 == pData[playerid][pSumka]) return SendClientMessage(playerid,CWHITE,"» Вы покупали сумку этого класса");
					if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
					if(gBusiness[id][busiOwnerID])
					{
						if(gBusiness[id][busiProduct] <= 0) return SendClientMessage(playerid,CWHITE,"» В этом магазине не осталось товара");
					}
					TransferMoney(playerid,-1,price,"sumki");
					gBusiness[id][busiProduct] -= gShopPriceEx[8];
					gBusiness[id][busiBank] += price;
					UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
					pData[playerid][pSumka] = 2;
					UpdatePlayerData(playerid, "sumka", 2);
  		 	    }

            case 9:
  		 	    {
  		 	        new price = gShopPrice[9];
  		 	        if(3 == pData[playerid][pSumka]) return SendClientMessage(playerid,CWHITE,"» Вы покупали сумку этого класса");
					if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
					if(gBusiness[id][busiOwnerID])
					{
						if(gBusiness[id][busiProduct] <= 0) return SendClientMessage(playerid,CWHITE,"» В этом магазине не осталось товара");
					}
					TransferMoney(playerid,-1,price,"sumki");
					gBusiness[id][busiProduct] -= gShopPriceEx[9];
					gBusiness[id][busiBank] += price;
					UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
					pData[playerid][pSumka] = 3;
					UpdatePlayerData(playerid, "sumka", 3);

  		 	    }

			/*case 8:
				{
					new price = gShopPrice[8];
					if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
					if(gBusiness[id][busiOwnerID])
					{
						if(gShopPriceEx[8] > gBusiness[id][busiProduct]) return SendClientMessage(playerid,CWHITE,"» В этом магазине не осталось товара");
					}
					TransferMoney(playerid,-1,price,"buyloterya");
					gBusiness[id][busiProduct] -= gShopPriceEx[8];
					gBusiness[id][busiBank] += price;
					UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
					LOTEREYA(playerid);
				}*/
			}
		}
	case dBuyFood:
		{
			if(!response) { ShowPlayerEateryTD(playerid); return 1; }
			new sel = GetPVarInt(playerid, "eatery_sel");
			new id = pTemp[playerid][pSelectedBusinessID];
			new price = gEateryCosts[sel];
			if(id < 0) return 1;
			new money = GetPlayerMoneyEx(playerid);
			if(!money) return SendClientMessage(playerid,CWHITE,"» К сожалению, у Вас нет денег даже на еду");
			if(money < price)
			{
			    SendClientMessage(playerid,CWHITE,"» К сожалению, у Вас не достаточно денег даже на еду");
				//new amount = money / gBusiness[id][busiPrice];
				//SetPVarInt(playerid,"eatprice",money);
				//SPFDD(playerid,dBuyFood,0,"Закусочная","Да","Нет","{"#cWHITE"}У Вас хватает денег только для того,\n чтобы наполнить свой желудок на %d процентов.\nВы согласны потратить все деньги на еду?",pData[playerid][pHealth] + amount);
				return 1;
			}
			new amount = gEateryCosts[sel];
			if(amount > gBusiness[id][busiProduct] && gBusiness[id][busiOwnerID]) return SendClientMessage(playerid,CWHITE,"» К сожалению, всю еду в этой закусочной уже съели");
			gBusiness[id][busiProduct] -= amount;
			TransferMoney(playerid,-1,price,"buyfood");
			gBusiness[id][busiBank] += price;
			pTemp[playerid][pEat] = sel + 4;
			UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
			UpdateBusinessText(id);
			SendClientMessage(playerid, -1, "Введите {"#cORANGE"}/eat{"#cWHITE"}, чтобы употребить купленное.");
			SendClientMessage(playerid, -1, "Чтобы положить продукт, введите {"#cORANGE"}/put{"#cWHITE"}.");
			if(sel == 3) SetPlayerAttachedObject(playerid,0,1546,5,0.126999,0.044999,-0.027000,15.999998,-175.499862,1.400000,1.000000,1.000000,1.000000);
			else SetPlayerSpecialAction(playerid, 25), SetPlayerAttachedObject(playerid,0,gEateryObj[sel],3,0.232999,-0.376998,-0.408999,54.199886,-35.700153,-35.000019,1.000000,1.000000,1.000000);
		}
	case dGrocer:
		{
			if(!response) return 1;
			new id = pTemp[playerid][pSelectedBusinessID];
			if(id < 0) return 1;
			new products = strval(inputtext);
			if(products < 1 || products > 200) return SendClientMessage(playerid,CWHITE,"» Вы можете купить не менее 1 и не более 200 продуктов за раз");
			SetPVarInt(playerid,"grocerproducts",products);
			new price = products * gBusiness[id][busiPrice];
			mes = "";
			f(mes, "» {"#cWHITE"}Вы хотите купить %d продуктов за {"#cRED"}%d$",products,price);
			ShowPlayerDialog(playerid,dGrocer2,0,"Продуктвоый магазин",mes,"Да","Нет");
		}
	case dGrocer2:
		{
			if(!response) return ShowPlayerDialog(playerid,dGrocer,1,"{ffcf00}Магазин продуктов","{"#cWHITE"}Здесь Вы можете купить продукты которые будут храниться в вашем холодильнике\nУкажите количество продуктов которое Вы хотите купить:","ОК","Отмена");
			new products = GetPVarInt(playerid,"grocerproducts");
			new id = pTemp[playerid][pSelectedBusinessID];
			if(id < 0) return 1;
			new price = products * gBusiness[id][busiPrice];
			new houseid = pData[playerid][pHouse]-1;
			if(houseid < 0) return 1;
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно денег");
			if(gBusiness[id][busiProduct] < products) return SendClientMessage(playerid,CWHITE,"» В магазине недостаточно продуктов");
			if(gHouses[houseid][houseProducts] + products > 400) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно места в холодильнике");
			gBusiness[id][busiProduct] -= products;
			gBusiness[id][busiBank] += price;
			UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
			UpdateBusinessText(id);
			pTemp[playerid][pCarryProducts] = products;
			TransferMoney(playerid,-1,price,"buyhomeproducts");
			SendClientMessage(playerid,0x7FC0E3FF,"Вы купили продукты. Теперь отнесите их домой и положите в холодильник.");
		}
	case dGangLeader:
		{
			if(!response) return 1;
			new fractionid = pData[playerid][pFraction] - 1;
			switch(listitem)
			{
			case 0:
				{
					mes = "";
					strcat(mes,"{"#cWHITE"}");
					for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
					{
					    i = cvector_get(PLAYERS, idx);
						if(!IsPlayerConnected(i)) continue;
						if(pData[i][pFraction] != fractionid+1) continue;
						new rankid = pData[i][pRank] - 1;
						if(pData[i][pPhone]) f(mes, "» %s%s [%d] (%s) Тел: %d\n",mes,pData[i][pNickname],i,gFractionRankName[fractionid][rankid],pData[i][pPhone]);
						else f(mes, "» %s%s [%d] (%s)\n",mes,pData[i][pNickname],i,gFractionRankName[fractionid][rankid]);
					}
					ShowPlayerDialog(playerid,dMes,0,"Члены банды онлайн",mes,"OK","");
				}
			case 1:
				{
					mes = "";
					for(new i;i<10;i++)
					{
						f(mes, "» %s%d.%s\n",mes,i+1,gFractionRankName[fractionid][i]);
					}
					ShowPlayerDialog(playerid,dGangRank,2,"{ffcf00}Выберите ранг",mes,"Изменить","Отмена");
				}
			case 2:
				{
					new rankid1 = gGangAccess[fractionid-2][0]-1;
					new rankid2 = gGangAccess[fractionid-2][1]-1;
					new rankid3 = gGangAccess[fractionid-2][2]-1;
					new rankid4 = gGangAccess[fractionid-2][3]-1;
					mes = "";
					f(mes, "» 1 » Доступ к общаку [{ffcf00}%s{"#cWHITE"}]\n2 » Принимать во фракцию [{ffcf00}%s{"#cWHITE"}] {ffffff}(врем.недоступно)\n3 » Увольнять из фракции [{ffcf00}%s{"#cWHITE"}]\n4 » Изменять ранг игроков [{ffcf00}%s{"#cWHITE"}]",gFractionRankName[fractionid][rankid1],gFractionRankName[fractionid][rankid2],gFractionRankName[fractionid][rankid3],gFractionRankName[fractionid][rankid4]);
					ShowPlayerDialog(playerid,dCredentials,2,"{ffcf00}Выберите возможность.",mes,"Изменить","Отмена");
				}
			case 3:
				{
					ShowPlayerDialog(playerid,dGangCode,1,"{ffcf00}Сейф банды","{"#cWHITE"}Введите новый код от сейфа с деньгами:","OK","Отмена");
				}
			}
		}
	case dGobGun:
		{
			if(!response) return 1;
			new amount = strval(inputtext);
			if(amount < 0) return SendClientMessage(playerid,CWHITE,"» Неверное количество");
			SetPVarInt(playerid,"getgobgun",amount);
			ShowPlayerDialog(playerid,dGobAmmo,1,"{ffcf00}Общак","Укажите, сколько хотите взять патронов:","Взять","Отмена");
		}
	case dGobAmmo:
		{
			if(!response) return 1;
			new amount = strval(inputtext);
			if(amount < 0) return SendClientMessage(playerid,CWHITE,"» Неверное количество");
			//new mes[56];
			//f(mes, "» /takegun %d %d",GetPVarInt(playerid,"getgobgun"),amount);
			//OnPlayerCommandText(playerid,mes);
		}
	case dGangCode:
		{
			if(!response) return 1;
			if(strlen(inputtext) != 6)
			{
				SendClientMessage(playerid,CWHITE,"» Код должен содержать 6 цифр");
				ShowPlayerDialog(playerid,dGangCode,1,"{ffcf00}Сейф банды","{"#cWHITE"}Введите новый код от сейфа с деньгами:","OK","Отмена");
			}
			new gangid = pData[playerid][pFraction] - 3;
			new code = strval(inputtext);
			mes = "";
			f(mes, "UPDATE `gangs` SET `code` = '%d' WHERE `id` = '%d'",code,gangid);
			sql_query(zConn, mes); mes = "";
			SendClientMessage(playerid,0x7FC0E3FF,"Код от сейфа сменен");
		}
	case dGangRank:
		{

			if(!response) return 1;
			new fractionid = pData[playerid][pFraction] - 1;
			SetPVarInt(playerid,"selectedrank",listitem+1);
			SPFDD(playerid,dGangRank2,1,"{ffcf00}Название ранга","Сменить","Отмена","{"#cWHITE"}Введите новое название ранга '%s [%d]'",gFractionRankName[fractionid][listitem],listitem+1);
		}
	case dGangRank2:
		{
			if(!response) return 1;
			new fractionid = pData[playerid][pFraction] - 1;
			new rankid = GetPVarInt(playerid,"selectedrank") - 1;
			if(rankid < 0) return 1;
			if(strlen(inputtext) < 1 || strlen(inputtext) > 20)
			{
				SendClientMessage(playerid,CWHITE,"» Название ранга должно содержать от 1 до 20 символов");
				SPFDD(playerid,dGangRank2,1,"{ffcf00}Название ранга","Сменить","Отмена","{"#cWHITE"}Введите новое название ранга '%s [%d]'",gFractionRankName[fractionid][rankid],rankid+1);
			}
			if(strfind(inputtext,"|") != -1) return SendClientMessage(playerid,CWHITE,"» Найдены запрещенные символы");
			format(gFractionRankName[fractionid][rankid],24,"%s",inputtext);
			mes = "";
			new data[220];
			for(new i;i<10;i++)
			{
				if(!i) format(data,sizeof(data),"%s",gFractionRankName[fractionid][i]);
				else format(data,sizeof(data),"%s,%s",data,gFractionRankName[fractionid][i]);
			}
			f(mes, "UPDATE `gangs` SET `ranks` = '%s' WHERE `id` = '%d'",data,fractionid-1);
			sql_query(zConn, mes); mes = "";
			SendClientMessage(playerid,0x7FC0E3FF,"Вы сменили название ранга");

			for(new i;i<10;i++)
			{
				f(mes, "» %s%d.%s\n",mes,i+1,gFractionRankName[fractionid][i]);
			}
			ShowPlayerDialog(playerid,dGangRank,2,"{ffcf00}Выберите ранг",mes,"Изменить","Отмена");
		}
	case dCredentials:
		{
			if(!response) return 1;
			new fractionid = pData[playerid][pFraction] - 1;
			SetPVarInt(playerid,"credentialid",listitem);

			for(new i;i<10;i++)
			{
				if(i+1 < gGangAccess[fractionid-2][listitem]) f(mes, "» %s%d.%s\n",mes,i+1,gFractionRankName[fractionid][i]);
				else f(mes, "» %s{ffcf00}%d.%s\n",mes,i+1,gFractionRankName[fractionid][i]);
			}
			ShowPlayerDialog(playerid,dCredentials2,2,"{ffcf00}Выберите минимальный ранг",mes,"Изменить","Отмена");
		}
	case dCredentials2:
		{
			if(!response) return 1;
			new fractionid = pData[playerid][pFraction] - 1;
			new credentialid = GetPVarInt(playerid,"credentialid");
			new field[24];
			switch(credentialid)
			{
			case 0: field = "dorma";
			case 1: field = "invite";
			case 2: field = "uninvite";
			case 3: field = "giverank";
			}
			new rankid = listitem;
			mes = "";
			f(mes, "UPDATE `gangs` SET `%s` = '%d' WHERE `id` = '%d'",field,rankid+1,fractionid-1);
			sql_query(zConn, mes); mes = "";
			gGangAccess[fractionid-2][credentialid] = rankid + 1;
			SendClientMessage(playerid,0x7FC0E3FF,"Полномочия изменены");
			new rankid1 = gGangAccess[fractionid-2][0]-1;
			new rankid2 = gGangAccess[fractionid-2][1]-1;
			new rankid3 = gGangAccess[fractionid-2][2]-1;
			new rankid4 = gGangAccess[fractionid-2][3]-1;

			f(mes, "» 1 » Доступ к общаку [{ffcf00}%s{"#cWHITE"}]\n2 » Принимать во фракцию [{ffcf00}%s{"#cWHITE"}]\n3 » Увольнять из фракции [{ffcf00}%s{"#cWHITE"}]\n4 » Изменять ранг игроков [{ffcf00}%s{"#cWHITE"}]",gFractionRankName[fractionid][rankid1],gFractionRankName[fractionid][rankid2],gFractionRankName[fractionid][rankid3],gFractionRankName[fractionid][rankid4]);
			ShowPlayerDialog(playerid,dCredentials,2,"{ffcf00}Выберите возможность.",mes,"Изменить","Отмена");
		}
	case dMakeGun:
		{
			if(!response) return 1;
			SetPVarInt(playerid,"makegunid",listitem);
			new needgun = gGunAmount[listitem];
			new bool:noneedgun;
			SetPVarInt(playerid,"noneedgun",0);
			for(new i;i<12;i++)
			{
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == gGunID[listitem]) {noneedgun = true; SetPVarInt(playerid,"noneedgun",1); break;}
			}
			if(pData[playerid][pGunAmount] < needgun && !noneedgun)
			{
				SFCM(playerid,COLOR_GREEN,"» Вам нужно %d материалов для сборки этого оружия",needgun);
				ShowMakeGunList(playerid);
				return 1;
			}
			ShowPlayerDialog(playerid,dMakeGun2,1,"{ffcf00}Сборка оружия","{"#cWHITE"}10 патронов = 1 материалу + материалы за оружие\nВведите кол-во материалов из расчета выше:","Собрать","Отмена");
		}
	case dMakeGun2:
		{
			if(!response) return 1;
			new ammo = strval(inputtext);
			if(ammo < 1 || ammo > 500)
			{
				SendClientMessage(playerid,CWHITE,"» Неверное к-во патронов");
				ShowMakeGunList(playerid);
				return 1;
			}
			new stvl = ammo+10;
			new gunid = GetPVarInt(playerid,"makegunid");
			new needgun = gGunAmount[gunid];
			new weaponid = gGunID[gunid];
			if(pData[playerid][pGunAmount] < ammo) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно материалов");
			if(!GetPVarInt(playerid,"noneedgun")) pData[playerid][pGunAmount] -= needgun;
			SetPVarInt(playerid,"noneedgun",0);
			pData[playerid][pGunAmount] -= ammo;
			mes = "";
			f(mes, "UPDATE `accounts` SET `gunamount` = '%d' WHERE `id` = '%d'",pData[playerid][pGunAmount],pData[playerid][pMysqlID]);
			sql_query(zConn, mes); mes = "";
			GivePlayerWeaponEx(playerid,weaponid,stvl);
			format(mes,100,"собрал %s из заготовок", gGunName[gunid]);
			MeAction(playerid,mes);
		}
	case dBuyGangCar:
		{
			if(!response) return 1;
			new model = gGangCarModelID[listitem];
			new modelid = model - 400;
			new price = gTransport[modelid][trPrice];
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег");
			new fractionid = pData[playerid][pFraction] - 1;
			new gangid = fractionid - 2;
			new slot = -1;
			for(new i;i<5;i++)
			{
				if(!gGangCars[gangid][i] || gGangCars[gangid][i] == 481) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid,CWHITE,"» У вас нет свободных слотов под авто");
			gGangCars[gangid][slot] = model;
			mes = "";
			new data[64];
			for(new i;i<5;i++)
			{
				if(!i) format(data,sizeof(data),"%d",gGangCars[gangid][i]);
				else format(data,sizeof(data),"%s|%d",data,gGangCars[gangid][i]);
			}
			f(mes, "UPDATE `gangs` SET `cars` = '%s' WHERE `id` = '%d'",data,gangid+1);
			sql_query(zConn, mes); mes = "";
			TransferMoney(playerid,-1,price,"buygangauto");
			SendClientMessage(playerid,0x7FC0E3FF,"Авто для банды куплено. Используйте /grespawn");
		}
	/*case dSellGangCar:
		{
			if(!response) return 1;
			new idx;
			new slot = strval(strtok(inputtext,idx)) - 1;
			if(slot < 0 || slot > 4) return SendClientMessage(playerid,CWHITE,"» Внутренняя ошибка");
			if(!IsGang(pData[playerid][pFraction])) return SendClientMessage(playerid,CWHITE,"» Внутренняя ошибка 2");
			new gangid = pData[playerid][pFraction] - 3;
			if(!gGangCars[gangid][slot] || gGangCars[gangid][slot] == 481) return SendClientMessage(playerid,CWHITE,"» В этом слоте нет автомобиля, который можно продать");
			SetPVarInt(playerid,"gangsellcarslot",slot);
			new mes[128],modelid = gGangCars[gangid][slot] - 400;
			new price = floatround(gTransport[modelid][trPrice]*0.2);
			SetPVarInt(playerid,"gangsellcarprice",price);
			f(mes, "» {"#cWHITE"}Вы действительно хотите продать %s за {ffcf00}%d$?",gTransport[modelid][trName],price);
			ShowPlayerDialog(playerid,dSellGangCar2,0,"Продажа автомобиля банды",mes,"Да","Нет");
		}*/
	case dSellGangCar2:
		{
			if(!response) return 1;
			new slot = GetPVarInt(playerid,"gangsellcarslot");
			new price = GetPVarInt(playerid,"gangsellcarprice");
			if(slot < 0 || slot > 4) return SendClientMessage(playerid,CWHITE,"» Внутренняя ошибка");
			if(!IsGang(pData[playerid][pFraction])) return SendClientMessage(playerid,CWHITE,"» Внутренняя ошибка 2");
			new gangid = pData[playerid][pFraction] - 3;
			if(!gGangCars[gangid][slot] || gGangCars[gangid][slot] == 481) return SendClientMessage(playerid,CWHITE,"» В этом слоте нет автомобиля, который можно продать");
			gGangCars[gangid][slot] = 481;
			new data[64];
			mes = "";
			for(new i;i<5;i++)
			{
				if(!i) format(data,sizeof(data),"%d",gGangCars[gangid][i]);
				else format(data,sizeof(data),"%s|%d",data,gGangCars[gangid][i]);
			}
			f(mes, "UPDATE `gangs` SET `cars` = '%s' WHERE `id` = '%d'",data,gangid+1);
			sql_query(zConn, mes); mes = "";
			TransferMoney(-1,playerid,price,"sellgangauto");
			SendClientMessage(playerid,0x7FC0E3FF,"Автомобиль продан. Используйте /grespawn");
		}
	case dBank:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					mes = "";
					f(mes, "{FFFFFF}На Вашем банковском счету: {00FF00}%d$",pData[playerid][pBank]);
					ShowPlayerDialog(playerid,dATMWatch,0,"Банк",mes,"OK","");
				}
			case 1:
				{
					ShowPlayerDialog(playerid,dATMGet,1,"{ffcf00}Банк","{"#cWHITE"}Введите сумму которую хотите снять со счета:","Снять","Выход");
				}
			case 2:
				{
					ShowPlayerDialog(playerid,dATMPut,1,"{ffcf00}Банк","{"#cWHITE"}Введите сумму которую хотите положить на счет:","Снять","Выход");
				}
			}
		}
	case dInviteSkinLeader:
		{
			new id = GetPVarInt(playerid,"actsubleader");
			new fractionid = pTemp[id][pOfferFractionid];
			new skinid = gFractionSkin[fractionid][listitem];
			new subid = GetPVarInt(playerid,"subidleader");
			new frid = GetSubfractionID(fractionid);
			mes = "";
			new nn[MAX_PLAYER_NAME],ids;




			f(mes,  "SELECT `nickname`,`id` FROM `accounts` WHERE `rank` = '%d' AND `subfraction` = '%d'", gFractionRankCount[fractionid-1]-1, subid+1);
			new Result:r = sql_query(zConn, mes, QUERY_CACHED);
			if(sql_num_rows(r))
			{
				for(new i; i<sql_num_rows(r); i++)
				{
					sql_get_field_ex(r, i, 0, nn);
					ids = sql_get_field_int_ex(r, i, 1);
				}
				if(GetPlayerID(nn) != -1)
				{
				    auninviteplayer(GetPlayerID(nn));
					//mes = "";
					//f(mes, "%d",GetPlayerID(nn));
					//_aunfjihaosj(GetPlayerID(nn), mes);
				}
				else
				{
					f(mes, "UPDATE `accounts` SET `fraction` = '0', rank = '0', `fractionskin` = '0', `subfraction` = '0' WHERE `id` = '%s'", ids);
					sql_query(zConn, mes); mes = "";
				}
			}
			pData[id][pFraction] = pData[playerid][pFraction];
			pData[id][pRank] = gFractionRankCount[pData[playerid][pFraction]-1]-1;
			pData[id][pSubfraction] = subid + 1;

			pTemp[playerid][pInviteLeader1] = -1;

			pData[id][pSpawn] = 2;
			UpdatePlayerData(id, "spawn", 2);

			if(pData[id][pSubfraction] != 0 && pData[id][pRank] == gFractionRankCount[fractionid]-1 && pData[id][pFraction] && pTemp[id][pTempLeader] != 1)
			f(mes, "UPDATE `accounts` SET `fraction` = '%d', `rank` = '%d', `fractionskin` = '%d', `subfraction` = '%d' WHERE `id` = '%d'",pData[id][pFraction],pData[id][pRank],skinid,pData[id][pSubfraction],pData[id][pMysqlID]);
			sql_query(zConn, mes); mes = "";
			mes = "";
			f(mes, "» %s[%d] принял ваше предложение",pData[id][pNickname],id);
			SendClientMessage(playerid,COLOR_LIME,mes);
			SetPlayerColor(id,gFractionColor[fractionid]);
			SendMes(id,COLOR_LIME,"Поздравляем ! Вы стали лидером организации \"%s\"", gSubfractionName[frid][subid]);
			SendClientMessage(id, -1, "{3399FF}Используйте {FFCD00}/menu »» команды {3399FF}, чтобы узнать о новых возможностях");
			SendClientMessage(id, -1,"Предыдущий лидер был автоматически снят с лидерства");
		}
	case dInviteLeader:
		{
			if(!response) return 1;
			new fractionid = pTemp[playerid][pOfferFractionid];
			new offer = pTemp[playerid][pOfferFraction];
			//			if(!IsPlayerConnected(offer) || !IsAbleToHire(offer)) return SendClientMessage(playerid,CWHITE,"» Лидер вышел из игры");
			mes = "";
			for(new i;i<8;i++)
			{
				new skinid = gFractionSkin[fractionid][i];
				if(!skinid) break;
				if(!i) f(mes, "» {FFFFFF}Скин %d (%d)",i+1,skinid);
				else f(mes, "%s\n» Скин %d (%d)",mes,i+1,skinid);
			}
			SendClientMessage(playerid,CINFO,"Ждите, пока лидер выберет одежду для Вас");
			ShowPlayerDialog(offer,dInviteSkinLeader,2,pData[playerid][pNickname],mes,"Принять","");
		}
	case dSubleader:
		{
			if(!response) return 1;
			if(!listitem) return 1;
			if(listitem == 0) pTemp[playerid][pInviteLeader1] = -1;
			new id = GetPVarInt(playerid,"actsubleader");
			new subid = listitem-1;
			SetPVarInt(playerid,"subidleader",subid);
			new fractionid = pData[playerid][pFraction] - 1;
			new frid = GetSubfractionID(fractionid);
			if(!IsPlayerConnected(id) || !pData[id][pMysqlID]) return SendClientMessage(playerid,CWHITE,"» Неверный ID / игрок не зарегестрирован");


			SendMes(pTemp[playerid][pInviteLeader1], COLOR_GREEN, "» {FFCD00}%s %s {33AAFF}предлагает Вам стать лидером организации {FFCD00}%s", gFractionName[fractionid], pData[playerid][pNickname], gSubfractionName[frid][subid]);
			SendMes(pTemp[playerid][pInviteLeader1], COLOR_GREEN, "{33AAFF}Нажмите {f6ff00}[ Y ] {33AAFF}что-бы принять предложение или {c54d13}[ N ] {33AAFF}для отказа");

			pTemp[pTemp[playerid][pInviteLeader1]][pInviteSubLeader] = pTemp[playerid][pInviteLeader1];
			pTemp[pTemp[playerid][pInviteLeader1]][pInviteSubLeader1] = playerid;
			mes = "";
			f(mes, "{33AAFF}» Вы предложили {FFCD00}%s {33AAFF}статать лидером организации",pData[id][pNickname]);
			SendClientMessage(playerid,-1,mes);


			/*f(mes, "» %s предложил Вам стать лидером \"%s\"",pData[playerid][pNickname],gSubfractionName[frid][subid]);
			ShowPlayerDialog(pTemp[playerid][pInviteLeader1],dInviteLeader,0,"Лидерство",mes,"Вступить","Отмена");
			*/
		}
	case dService:
		{
			if(!response) return 1;
			new job,jobname[24];
			switch(listitem)
			{
			case 0: {job = 3; jobname = "таксисты";}
			case 1: {job = 4; jobname = "механики";}
			}
			SFCM(playerid,0x7FC0E3FF,"Ближайшие %s:",jobname);
			mes = "";
			for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
			{
			    i = cvector_get(PLAYERS, idx);
				if(!IsPlayerConnected(i) || !pData[i][pMysqlID] || pData[i][pJob] != job) continue;
				if(pData[i][pPhone]) f(mes, "» %s тел. %d ( %.0fm )",pData[i][pNickname],pData[i][pPhone],GetPlayerDistanceToPlayer(playerid,i));
				else f(mes, "» %s тел. Нет ( %.0fm )",pData[i][pNickname],GetPlayerDistanceToPlayer(playerid,i));
				SendClientMessage(playerid,CWHITE,mes);
			}
		}
	case dEmergencyCall:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:ShowPlayerDialog(playerid,dEmergencyPolice1,1,"{ffcf00}Полиция","{"#cWHITE"}Здравствуйте. Что случилось ?:","ОК","Отмена");
			case 1:ShowPlayerDialog(playerid,dEmergencyMedic1,1,"{ffcf00}Скороя помощь","{"#cWHITE"}Здравствуйте. Опишите ситуацию:","ОК","Отмена");
			case 2:
				{
					if(gEmCall[2] != INVALID_PLAYER_ID)
					{
						SendClientMessage(playerid,CWHITE,"» Линия занята");
						return _call(playerid, "911");
					}
					ShowPlayerDialog(playerid,dEmergencyMechanic1,1,"{ffcf00}Буксир / механик","{"#cWHITE"}Здравствуйте. Опишите ситуацию:","ОК","Отмена");
				}
			}
		}
	case dEmergencyPolice1:
		{
			if(!response) return 1;
			new Float:x, Float:y, Float:z,pos[5];
			GetPlayerPos(playerid,x,y,z);
			if(x < 0) strcat(pos,"San Fierro");
			else if(y > 100.0) strcat(pos,"Las Venturas");
			else strcat(pos,"Los Santos");
			for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
			{
			    i = cvector_get(PLAYERS, idx);
				if(!IsPlayerConnected(i) || !pData[i][pMysqlID]) continue;
				if(!IsACop(i)) continue;
				mes = "";
				f(mes, "» %s {33AAFF}обратился в полицию. {FFFFFF}\"/pc\" {33AAFF}для принятия вызова",pData[playerid][pNickname],playerid);
				SendClientMessage(i,COLOR_GREEN,mes);
				f(mes, "» {33AAFF}Сообщение: {FFFFFF}%s. {33AAFF}Местоположение: {FFCD00}%s, %s",inputtext,GetPlayerZone(playerid, 0),pos);
				SendClientMessage(i,COLOR_GREEN,mes);
			}
			gEmCall[0] = playerid;
			ShowPlayerDialog(playerid,dMes,0,"Полиция","{"#cWHITE"}Ваш вызов принят. Ожидайте, полиция скоро будет","ОК","");
		}
	case dEmergencyMedic1:
		{
			if(!response) return 1;
			new Float:x, Float:y, Float:z,pos[5];
			GetPlayerPos(playerid,x,y,z);
			if(x < 0) strcat(pos,"SF");
			else if(y > 100.0) strcat(pos,"LV");
			else strcat(pos,"LS");
			mes = "";
			for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
			{
			    i = cvector_get(PLAYERS, idx);
				if(!IsPlayerConnected(i) || !pData[i][pMysqlID]) continue;
				if(pData[i][pFraction] != 2) continue;

				f(mes, "» [Внимание] %s вызывает скорую помощь (%s). Чтобы принять вызов введите {"#cWHITE"}/mc",pData[playerid][pNickname],pos);
				SendClientMessage(i,CDEPARTMENT,mes);
				f(mes, "» [Внимание] Причина: %s",inputtext);
				SendClientMessage(i,CDEPARTMENT,mes);

			}
			gEmCall[1] = playerid;
			ShowPlayerDialog(playerid,dMes,0,"Скорая помощь","{"#cWHITE"}Вызов принят. Ждите","ОК","");
		}
	case dEmergencyMechanic1:
		{
			if(!response) return 1;
			if(gEmCall[2] != INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid,CWHITE,"» Линия занята");
				return _call(playerid, "911");
			}
			new Float:x, Float:y, Float:z,pos[5];
			GetPlayerPos(playerid,x,y,z);
			if(x < 0) strcat(pos,"SF");
			else if(y > 100.0) strcat(pos,"LV");
			else strcat(pos,"LS");
			mes = "";
			for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
			{
			    i = cvector_get(PLAYERS, idx);
				if(!IsPlayerConnected(i) || !pData[i][pMysqlID]) continue;
				if(pData[i][pJob] != 4 || pTemp[i][pMechID] == INVALID_VEHICLE_ID) continue;

				f(mes, "» [Диспечер] %s вызывает механика (%s). Чтобы принять вызов введите {"#cWHITE"}/rc",pData[playerid][pNickname],pos);
				SendClientMessage(i,CDEPARTMENT,mes);
				f(mes, "» [Диспечер] Причина: %s",inputtext);
				SendClientMessage(i,CDEPARTMENT,mes);

			}
			gEmCall[2] = playerid;
			ShowPlayerDialog(playerid,dMes,0,"Буксир","{"#cWHITE"}Вызов принят. Ждите","ОК","");
		}
	case dMechRent:
		{
			if(!response)
			{
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
			new vehicleid = GetPlayerVehicleID(playerid);
			SendClientMessage(playerid,0x7FC0E3FF,"Вы арендовали буксир.");
			SendClientMessage(playerid,CYELLOW,"/tow {"#cWHITE"} - предложить водителю отбуксировать его т.с.");
			SendClientMessage(playerid,CYELLOW,"/unfill {"#cWHITE"} - предложить водителю слить все топливо");
			TransferMoney(playerid,-1,70,"mechrent");
			pTemp[playerid][pMechID] = vehicleid;
		}
	case dDFTRent:
		{
			if(!response)
			{
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
			if(GetPlayerMoneyEx(playerid) < 500)
			{
				SendClientMessage(playerid,CWHITE,"» Вам нужно $500 чтобы арендовать этот DFT");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			new vehicleid = GetPlayerVehicleID(playerid);
			SendClientMessage(playerid,0x7FC0E3FF,"Вы арендовали DFT.");
			TransferMoney(playerid,-1,500,"dafrent");
			pTemp[playerid][pDFTID] = vehicleid;
		}
	case dTow:
		{
			if(!response) return 1;
			new trailer = GetPlayerVehicleID(playerid);
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || !trailer) return 1;
			new towcode = GetPVarInt(playerid,"towcode");
			new offer = GetPVarInt(playerid,"towoffer");
			new offee = GetPVarInt(playerid,"towoffee");
			if(offee != playerid) return SendClientMessage(playerid,CWHITE,"» Ошибка");
			if(strlen(inputtext) != 5 || strval(inputtext) != towcode) return SendClientMessage(playerid,CWHITE,"» Код введен неверно");
			if(GetPlayerDistanceToPlayer(playerid,offer) > 10.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(offer)) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
			RemovePlayerFromVehicle(playerid);
			new vehicleid = pTemp[offer][pMechID];
			//PutPlayerInVehicle(playerid,vehicleid,1);
			SetTimerEx("AttachTrailerToVehicleEx",3000,false,"ii",trailer,vehicleid);
			SetPVarInt(playerid,"towvid",vehicleid);
			SetPVarInt(playerid,"towactvid",trailer);
			SendClientMessage(playerid,CINFO,"Т.С. будет прицеплено через 3 секунды. Чтобы отцепить, используйте {"#cWHITE"}/untow");
		}
	case dUnfill:
		{
			if(!response) return 1;
			new trailer = GetPlayerVehicleID(playerid);
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || !trailer) return 1;
			new towcode = GetPVarInt(playerid,"towcode");
			new offer = GetPVarInt(playerid,"towoffer");
			new offee = GetPVarInt(playerid,"towoffee");
			if(offee != playerid) return SendClientMessage(playerid,CWHITE,"» Ошибка");
			if(strlen(inputtext) != 5 || strval(inputtext) != towcode) return SendClientMessage(playerid,CWHITE,"» Код введен неверно");
			if(GetPlayerDistanceToPlayer(playerid,offer) > 10.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(offer)) return SendClientMessage(playerid,CWHITE,"» Вы далеко друг от друга");
			gVehicles[trailer - 1][vFuel] = 0.0;
			gVehicles[trailer - 1][vProbability] = 0;
			SendClientMessage(playerid,CINFO,"Топливо было слито с вашего бензобака");
			SendClientMessage(offer,CINFO,"Вы слили топливо с бензобака вашего клиента");
		}
	case dDissolution:
		{
			if(!response) return 1;
			new fractionid = pData[playerid][pFraction] - 1;
			new subfraction = GetSubfractionID(fractionid);
			for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
			{
			    i = cvector_get(PLAYERS, idx);
				if(!IsPlayerConnected(i)) continue;
				if(pData[i][pFraction] != fractionid + 1) continue;
				if(subfraction != -1 && (pData[playerid][pSubfraction] != pData[i][pSubfraction] || pData[i][pRank] >= pData[playerid][pRank])) continue;
				else if(pData[i][pRank] >= gFractionRankCount[fractionid]) continue;
				new command[56];
				format(command,56,"%d",i);
				_uninvite(playerid, command);
			}
			mes = "";
			if(subfraction <= 0) f(mes, "UPDATE `accounts` SET `fraction` = '0', `rank` = '0', `fractionskin` = '0', `subfraction` = '0' WHERE `fraction` = '%d' AND `rank` < '%d'",fractionid + 1,gFractionRankCount[fractionid]);
			else f(mes, "UPDATE `accounts` SET `fraction` = '0', `rank` = '0', `fractionskin` = '0', `subfraction` = '0' WHERE `fraction` = '%d' AND `rank` < '%d' AND `subfraction` = '%d'",fractionid + 1,gFractionRankCount[fractionid],subfraction);
			new Result:r = sql_query(zConn, mes); mes = "";
			f(mes, "%d игроков, которые оффлайн, были уволены",sql_affected_rows(r));
			sql_free_result(r);
			SendClientMessage(playerid,CINFO,mes);
		}
	case dBuyBusiness1:
		{
			new businessid = pTemp[playerid][pSelectedBusinessID];
			if(!response)
			{
				if(businessid < 0) return 1;
				if(gBusiness[businessid][busiOwnerID]) return SendClientMessage(playerid, -1, "{fe0000}Ошибка:{ffffff} Этот бизнес уже кто-то купил.");
				if(pData[playerid][pAdmin]) return SendClientMessage(playerid, -1, "Вы Администратор бизнес купить нельзя");
				mes = "";
				f(mes, "» {"#cWHITE"}Вы действительно хотите купить этот бизнес за {"#cRED"}%d$?",gBusiness[businessid][busiSellPrice]);
				ShowPlayerDialog(playerid,dBuyBusiness2,0,"Бизнес",mes,"Нет","Да");
			}
			else
			{
				new bint = gBusiness[businessid][busiBint]-1;
				if(bint < 0 || bint >= BINT_COUNT) return SendClientMessage(playerid,CWHITE,"» Ошибка (#99)");
				pTemp[playerid][pJustTP] = true;
				SetPlayerInterior(playerid,gBints[bint][bintInterior]);
				SetPlayerVirtualWorld(playerid,businessid+1);
				SetPlayerPos(playerid,gBints[bint][bintX],gBints[bint][bintY],gBints[bint][bintZ]);
				SetPlayerFacingAngle(playerid,gBints[bint][bintR]);
				if(bint == 21)
				{
					//TogglePlayerControllable(playerid,0);
					//SetTimerEx("Unfreez",2000,false,"i",playerid);
				}
			}
		}
	case dBuyBusiness2:
		{
			if(response) return 1;
			new businessid = pTemp[playerid][pSelectedBusinessID];
			if(businessid < 0) return 1;
			if(gBusiness[businessid][busiOwnerID]) return SendClientMessage(playerid, -1, "{fe0000}Ошибка:{ffffff} Этот бизнес уже кто-то купил.");
			new price = gBusiness[businessid][busiSellPrice];
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег для покупки этого бизнеса");
			if(pData[playerid][pBusiness]) return SendClientMessage(playerid,CWHITE,"» У вас уже есть бизнес");
			mes = "";
			f(mes, "UPDATE `business` SET `ownerid` = '%d' WHERE `id` = '%d'",pData[playerid][pMysqlID],businessid+1);
			sql_query(zConn, mes); mes = "";
			gBusiness[businessid][busiOwnerID] = pData[playerid][pMysqlID];
			SendClientMessage(playerid,-1,"{1d92ff}Поздравляем, Вы купили {ffd200}бизнес.");
			SendClientMessage(playerid,-1,"/business - {1d92ff}панель управления {ffd200}бизнесом");


		    if(pData[playerid][pLicenses][LIC_VISKA])
			{
			    gBusiness[businessid][busiLic] = 1;
			}
			UpdateBusinessData(businessid, "busiLic", 1);

			gBusiness[businessid][busiBank] = 0;
			gBusiness[businessid][busiDay] = 3;
			gBusiness[businessid][busiProduct] = 100;
			UpdateBusinessText(businessid);
			UpdateBusinessDataEx(businessid+1,"product",gBusiness[businessid][busiProduct],"bank",gBusiness[businessid][busiBank]);
			PlayerPlaySound(playerid,1185,0.0,0.0,0.0);
			SetTimerEx("PlayerPlaySoundDelay",6900,false,"ii",playerid,1186);
			UpdateBusinessText(businessid);
			UpdatePlayerData(playerid,"bussiness",businessid+1);
			pData[playerid][pBusiness] = gBusiness[businessid][busiID];
			TransferMoney(playerid,-1,price,"buybusiness");
		}
	case dBusiness:
		{
			if(!response) return 1;
			new id = pData[playerid][pBusiness] - 1;
			//new id = pTemp[playerid][pSelectedBusinessID];
			if(id < 0) return 1;
			switch(listitem)
			{
			case 0: ShowPlayerDialog(playerid,dBusinessBank,2,"{ffcf00}Бизнес","1 » Посмотреть сумму в кассе\n2 » Положить деньги в кассу\n3 » Снять деньги с кассы","Далее","Назад");
			case 1: ShowPlayerDialog(playerid,dBusinessOrder1,1,"{ffcf00}Бизнес","{"#cWHITE"}Введите к-во товара, которое хотите заказать:\n{"#cGRAY"}(1ед. = {"#cRED"}$1{"#cGRAY"})","Заказать","Отмена");
			case 2: ShowBusinessInformation(playerid,id,dBusinessStat);
				/*			case 3:
				{
					ShowPlayerDialog(playerid,dBusinessPrice,1,"{ffcf00}Бизнес","{"#cWHITE"}Введите цену за 1 ед. товара (от 1 до 10)","ОК","Отмена");
				}
	*/			/*case 3: //Закр - откр
				{
					if(gBusiness[id][busiStatus])
					{
						gBusiness[id][busiStatus] = 0;
						SendClientMessage(playerid,CINFO,"Бизнес закрыт");
					}
					else
					{
						gBusiness[id][busiStatus] = 1;
						SendClientMessage(playerid,CINFO,"Бизнес открыт");
					}
					UpdateBusinessData(id+1,"status",gBusiness[id][busiStatus]);
					UpdateBusinessText(id);
				}*/
			case 3: //Продажа
				{
					mes = "";
					f(mes, "» {"#cWHITE"}Вы действительно хотите продать свой бизнес государству за {ffcf00}%d$",gBusiness[id][busiSellPrice]);
					ShowPlayerDialog(playerid,dBusinessSell,0,"Бизнес",mes,"Да","Нет");
				}
			case 4: ShowPlayerDialog(playerid,dBusinessEnter,1,"{ffcf00}Бизнес","{"#cWHITE"}Введите цену за вход, которую хотите установить:","Принять","Отмена");
			case 5: ShowPlayerDialog(playerid,dBusinessPrice,1,"{ffcf00}Бизнес","{"#cWHITE"}Введите цену за 1 ед. товара (от 1 до 500)","ОК","Отмена");
			}
		}
	case dBusinessOrder1:
		{
			if(!response) _business(playerid, "");
			//SendClientMessage(playerid,CWHITE,"» Чтобы заказать продукты, следуйте на склад продуктов.");
			new id = pData[playerid][pBusiness] - 1;
			//if(id < 0) return 1;
			new prod = strval(inputtext);
			if(prod < 1 || prod > 30000) return SendClientMessage(playerid,CWHITE,"» Неверное к-во товара (30 тыс)");
			if(prod + gBusiness[id][busiProduct] > 30000) return SendClientMessage(playerid,CWHITE,"» Вы не можете хранить больше 30 тыс. ед. товара");
			new price = prod;
			if(GetPlayerMoneyEx(playerid) < price)
			{
				SFCM(playerid,CWHITE,"» Вам нужно %d$ для того чтобы заказать %d ед. товара",price,prod);
				return 1;
			}
			SetPVarInt(playerid,"orderprod",prod);
			SPFDD(playerid,dBusinessOrder2,0,"Бизнес","Да","Нет","{"#cWHITE"}Вы действительно хотите заказать %d ед. товара за %d$?",prod,price);
		}
	case dBusinessOrder2:
		{
			if(!response) _business(playerid, "");
			new id = pData[playerid][pBusiness] - 1;
			if(id < 0) return 1;
			new prod = GetPVarInt(playerid,"orderprod");
			if(prod < 1 || prod > 30000) return SendClientMessage(playerid,CWHITE,"» Неверное к-во товара");
			if(prod + gBusiness[id][busiProduct] > 5000) return SendClientMessage(playerid,CWHITE,"» Вы не можете хранить больше 5 тыс. ед. товара");
			new price = prod;
			if(GetPlayerMoneyEx(playerid) < price)
			{
				SFCM(playerid,CWHITE,"» Вам нужно %d$ для того чтобы заказать %d ед. товара",price,prod);
				return 1;
			}
			TransferMoney(playerid,-1,price,"orderbusiprod");
			gBusiness[id][busiProduct] += prod;
			UpdateBusinessData(id+1,"product",gBusiness[id][busiProduct]);
			UpdateBusinessText(id);
			SendClientMessage(playerid,-1,"{1d92ff}Товар был доставлен в Ваш {ffd200}бизнес{ffffff} с помошью технологии телепортации");

		}
	case dBusinessStat:
		{
			_business(playerid, "");
		}
	case dBusinessBank:
		{
			if(!response) return _business(playerid, "");
			new id = pData[playerid][pBusiness] - 1;
			switch(listitem)
			{
			case 0:
				{
					mes = "";
					f(mes, "» {"#cWHITE"}В кассе: {ffcf00}%d$",gBusiness[id][busiBank]);
					ShowPlayerDialog(playerid,dBusinessStat,0,"Бизнес",mes,"OK","");
				}
			case 1:
				{
					ShowPlayerDialog(playerid,dBusinessPut,1,"{ffcf00}Бизнес","Укажите сумму, которую вы хотите положить в кассу","Положить","Отмена");
				}
			case 2:
				{
					ShowPlayerDialog(playerid,dBusinessGet,1,"{ffcf00}Бизнес","Укажите сумму, которую вы хотите взять из кассы","Взять","Отмена");
				}
			}
		}
	case dBusinessPut:
		{
			if(!response) return _business(playerid, "");
			new id = pData[playerid][pBusiness] - 1;
			new sum = strval(inputtext);
			if(sum < 1) return SendClientMessage(playerid,CWHITE,"» Неверная сумма");
			if(GetPlayerMoneyEx(playerid) < sum) return SendClientMessage(playerid,CWHITE,"» Недостаточно денег на руках");
			UpdateBusinessData(id+1,"bank",gBusiness[id][busiBank] + sum);
			gBusiness[id][busiBank] += sum;
			TransferMoney(playerid,-1,sum,"businessput");
			MeAction(playerid,"положил деньги в кассу");
			_business(playerid, "");
		}
	case dBusinessGet:
		{
			if(!response) return _business(playerid, "");
			new id = pData[playerid][pBusiness] - 1;
			new sum = strval(inputtext);
			if(sum < 1) return SendClientMessage(playerid,CWHITE,"» Неверная сумма");
			if(gBusiness[id][busiBank] < sum) return SendClientMessage(playerid,CWHITE,"» Недостаточно денег в кассе");
			UpdateBusinessData(id+1,"bank",gBusiness[id][busiBank] - sum);
			gBusiness[id][busiBank] -= sum;
			TransferMoney(-1,playerid,sum,"businessget");
			MeAction(playerid,"взял деньги с кассы");
			_business(playerid, "");
		}
	case dBusinessSell:
		{
			if(!response) return _business(playerid, "");
			new id = pData[playerid][pBusiness] - 1;
			new sum = gBusiness[id][busiSellPrice];
			gBusiness[id][busiOwnerID] = 0;
			gBusiness[id][busiStatus] = 1;
			mes = "";
			f(mes, "UPDATE `business` SET `ownerid` = '0', `status` = '1' WHERE `id` = '%d'",id+1);
			sql_query(zConn, mes); mes = "";
			UpdateBusinessText(id);
			UpdatePlayerData(playerid,"bussiness",0);
			pData[playerid][pBusiness] = 0;
			TransferMoney(-1,playerid,sum,"gossellbusiness");
			SendClientMessage(playerid,0x7FC0E3FF,"Бизнес продан государству");
		}
	case dBusinessEnter:
		{
			if(!response) return _business(playerid, "");
			new id = pData[playerid][pBusiness] - 1;
			new sum = strval(inputtext);
			if(sum < 0 || sum > 50) return SendClientMessage(playerid,CWHITE,"» Неверная сумма (0$-50$)");
			gBusiness[id][busiEnterPrice] = sum;
			UpdateBusinessData(id+1,"enter", sum);
			SendClientMessage(playerid, COLOR_GREEN, "Цена за вход успешно установлена.");
			UpdateBusinessText(id);
		}
	case dBusinessPrice:
		{
			if(!response) _business(playerid, "");
			new id = pData[playerid][pBusiness] - 1;
			if(id < 0) return 1;
			new price = strval(inputtext);
			if(price < 1 || price > 500) return SendClientMessage(playerid,CWHITE,"» Неверная цена (1-500)");
			gBusiness[id][busiPrice] = price;
			UpdateBusinessData(id+1,"price",price);
			UpdateBusinessText(id);
			SendClientMessage(playerid,0x7FC0E3FF,"{baff00}Новая {ffffff}цена {1d92ff}товара {ffffff}установлена");
		}
	case dBusinessBuyProd1:
		{
			if(!response) return 1;
			//new h,m,s;
			//gettime(h,m,s);
			//if(h > 22 && h < 4) return SendClientMessage(playerid,CWHITE,"» Заказывать товары c 22:00 до 4:00 нельзя.");
			ShowPlayerDialog(playerid,dBusinessBuyProd2,1,"{ffcf00}Заказ товара","{"#cWHITE"}Укажите, сколько единиц товара вы хотите заказать (1ед. = {"#cRED"}$10{"#cWHITE"}):","Далее","Отмена");
		}
	case dBusinessBuyProd2:
		{
			if(!response) return 1;
			if(!isNumeric(inputtext) || !strval(inputtext)) return ShowPlayerDialog(playerid,dBusinessBuyProd2,1,"{ffcf00}Заказ товара","{"#cWHITE"}Укажите, сколько единиц товара вы хотите заказать (1ед. = {"#cRED"}$10{"#cWHITE"}):","Далее","Отмена");
			new businessid = pData[playerid][pBusiness] - 1;
			new order = gBusiness[businessid][busiOrder];
			new amount = strval(inputtext);
			new deliving = gBusiness[businessid][busiDeliving];
			if(gBusiness[businessid][busiOrder] > 0) return SendClientMessage(playerid,CWHITE,"» Вы не можете заказать новую партию, пока не развезут уже заказанную");
			if(amount < 1 || amount > 5000) return SendClientMessage(playerid,CWHITE,"» К-во товара должно быть от 1 до 5000");
			if(GetPlayerMoneyEx(playerid) < amount) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег");
			if(gBusiness[businessid][busiProduct] + amount + order + deliving > 5000)
			{
				SendClientMessage(playerid,CWHITE,"» На складе вашего бизнеса недостаточно места");
				new sum = gBusiness[businessid][busiProduct]+order+deliving;
				SFCM(playerid,CWHITE,"» (Склад: %d, Заказано: %d, Доставляется: %d, Итого: %d, Свободно:{ffcf00}%d)",gBusiness[businessid][busiProduct],order,deliving,sum,30000-sum);
			}
			gBusiness[businessid][busiProduct] += amount;
			SendClientMessage(playerid,0x7FC0E3FF,"Товар был доставлен в ваш бизнес с помошью технологии телепортации");
			SendClientMessage(playerid,CWHITE,"» (Это временно. Скоро появятся развозчики товаров)");
			TransferMoney(playerid,-1,amount,"businessbuyprod");
			//gBusiness[businessid][busiOrder] += amount;
			//SendClientMessage(playerid,0x7FC0E3FF,"Товар заказан. Теперь следуйте к базе развозчиков товара, чтобы заказать доставку");
			//f(mes, "» \t\t\t{"#cYELLOW"}Услуги доставки\n{"#cWHITE"}К-во товара:\t\t{ffcf00}%d\n{"#cWHITE"}К-во рейсов:\t\t{ffcf00}%d\n{"#cWHITE"}Цена за рейс:\t\t{ffcf00}%d$\n\n{"#cWHITE"}ИТОГО:\t\t\t{"#cLIGHTGREEN"}%d$",order,count,price,amount);
			//ShowPlayerDialog(playerid,dBusinessDelivery2,0,"Доставка",mes,"Оплатить","Отмена");
		}
	case dBusinessDelivery1:
		{
			if(!response) return 1;
			if(!isNumeric(inputtext) || !strval(inputtext)) ShowPlayerDialog(playerid,dBusinessDelivery1,1,"{ffcf00}Доставка товара","{"#cWHITE"}Укажите сумму, которую вы готовы заплатить за доставку к вашему бизнесу:","Далее","Отмена");
			new businessid = pData[playerid][pBusiness] - 1;
			new order = gBusiness[businessid][busiOrder];
			new price = strval(inputtext);
			if(price < 1000 || price > 15000) return SendClientMessage(playerid,CWHITE,"» Цена должны быть от $1000 до $15000 за рейс");
			new count = floatround(order/5000.0,floatround_ceil);
			//new count = del(order,5000);
			new amount = price * count;
			SetPVarInt(playerid,"orderprice",price);
			mes = "";
			f(mes, "» \t\t\t{"#cYELLOW"}Услуги доставки\n{"#cWHITE"}К-во товара:\t\t{ffcf00}%d\n{"#cWHITE"}К-во рейсов:\t\t{ffcf00}%d\n{"#cWHITE"}Цена за рейс:\t\t{ffcf00}%d$\n\n{"#cWHITE"}ИТОГО:\t\t\t{"#cLIGHTGREEN"}%d$",order,count,price,amount);
			ShowPlayerDialog(playerid,dBusinessDelivery2,0,"Доставка",mes,"Оплатить","Отмена");
		}
	/*case dBusinessDelivery2:
		{
			if(!response) return 1;
			new businessid = pData[playerid][pBusiness] - 1;
			new order = gBusiness[businessid][busiOrder];
			new price = GetPVarInt(playerid,"orderprice");
			if(price < 1000 || price > 15000) return SendClientMessage(playerid,CWHITE,"» Цена должны быть от $1000 до $15000 за рейс");
			new count = floatround(order/5000.0,floatround_ceil);
			if(count < 1) return SendClientMessage(playerid,CWHITE,"» Ошибка (#117)");
			new amount = price * count;
			if(GetPlayerMoneyEx(playerid) < amount) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег на руках");
			for(new i;i<DELIVERY_COUNT;i++)
			{
				if(gDelivery[i][deliBusy] && gDelivery[i][deliBusinessid] == businessid) return SendClientMessage(playerid,CWHITE,"» Вы не можете заказать доставку, пока не завершится ваш предыдущий заказ");
			}
			new slot = -1;
			for(new i;i<DELIVERY_COUNT;i++)
			{
				if(gDelivery[i][deliBusy] == false) {slot = i; break;}
			}
			if(slot == -1) return SendClientMessage(playerid,CWHITE,"» К сожалению, нет места в очереди. Попробуйте позже");
			gDelivery[slot][deliBusinessid] = businessid;
			format(gDelivery[slot][deliCustomer],MAX_PLAYER_NAME,"%s",pData[playerid][pNickname]);
			for(new i;i<6;i++)
			{
				gDelivery[slot][deliPerformerid][i] = INVALID_PLAYER_ID;
				gDelivery[slot][deliProduct][i] = 0;
			}
			gDelivery[slot][deliPrice] = price;
			gDelivery[slot][deliCount] = count;
			gDelivery[slot][deliPerforming] = 0;
			gDelivery[slot][deliBusy] = true;
			TransferMoney(playerid,-1,amount,"businessdeliverypay");
			SendClientMessage(playerid,0x7FC0E3FF,"Ваш заказ поставлен в очередь.");
			SaveDeliveryData(slot);
		}*/
	/*case dDeliveryList:
		{
			if(!response) return 1;
			if(pTemp[playerid][pDeliving]) return SendClientMessage(playerid,CWHITE,"» Вы уже выполняете заказ");
			if(!gDelivery[listitem][deliBusy]) return ShowDeliveryList(playerid);
			if(gDelivery[listitem][deliCount] <= gDelivery[listitem][deliPerforming])
			{
				SendClientMessage(playerid,CWHITE,"» Все рейсы этого заказа уже выполняются");
				ShowDeliveryList(playerid);
				return 1;
			}
			new number = -1;
			for(new i;i<6;i++)
			{
				if(gDelivery[listitem][deliPerformerid][i] == INVALID_PLAYER_ID) {number = i; break;}
			}
			if(number == -1)
			{
				SendClientMessage(playerid,CWHITE,"» Все рейсы этого заказа уже выполняются");
				return ShowDeliveryList(playerid);
			}
			pTemp[playerid][pDeliving] = true;
			pTemp[playerid][pDeliveryid] = listitem;
			pTemp[playerid][pDeliveryNumber] = number;
			gDelivery[listitem][deliPerformerid][number] = playerid;
			gDelivery[listitem][deliPerforming]++;
			SendClientMessage(playerid,0x7FC0E3FF,"Заказ принят. Вам необходимо загрузиться товаром.");
			SaveDeliveryData(listitem);
		}*/
	case dBints:
		{
			if(!response) return 1;
			new Float:x,Float:y, Float:z;
			GetPlayerPos(playerid,x,y,z);
			SetPVarFloat(playerid,"oldx",x);
			SetPVarFloat(playerid,"oldy",y);
			SetPVarFloat(playerid,"oldz",z);
			SetPVarInt(playerid,"oldint",GetPlayerInterior(playerid));
			SetPVarInt(playerid,"oldworld",GetPlayerVirtualWorld(playerid));
			SetPlayerInterior(playerid,gBints[listitem][bintInterior]);
			SetPlayerPosEx(playerid,gBints[listitem][bintX],gBints[listitem][bintY],gBints[listitem][bintZ]);
		}
	case dBar:
		{
			if(!response) { ShowPlayerBarTD(playerid); return 1; }
			new id = pTemp[playerid][pSelectedBusinessID];
			listitem = GetPVarInt(playerid, "bar_sel");
			if(id < 0) return 1;
			new price = gBarCosts[listitem];
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка:{ffffff} У вас недостаточно денег.");
			if(gBusiness[id][busiOwnerID])
			{
				if(gBusiness[id][busiProduct] < gBarCosts[listitem]) return SendClientMessage(playerid,CWHITE,"{fe0000}Ошибка:{ffffff} В баре недостаточно продуктов");
			}
			mes = "";
			f(mes, "» купил %s",gBarNames[listitem]);
			MeAction(playerid,mes);
			TransferMoney(playerid,-1,price,"barbuydrink");
			gBusiness[id][busiProduct] -= gBarCosts[listitem];
			gBusiness[id][busiBank] += price;
			UpdateBusinessDataEx(id+1,"product",gBusiness[id][busiProduct],"bank",gBusiness[id][busiBank]);
			UpdateBusinessText(id);
			if(listitem != sizeof(gBarObj) - 1)
			{
				if(listitem == 1) SetPlayerSpecialAction(playerid, 22);
				else SetPlayerSpecialAction(playerid, 20);
			}
			else
			{
				SetPlayerAttachedObject(playerid,0,2769,6,0.095999,0.073999,0.049000,-156.000030,-81.899986,12.599999,1.000000,1.000000,1.000000);
				ApplyAnimation(playerid,"FOOD","EAT_Burger", 2.0,0,0,0,0,5000,1);
				SetTimerEx("RemovePlayerAttachedObjectDelay",4000,false,"ii",playerid,0);
			}
			DeletePVar(playerid, "bar_sel");
		}
	case dAdvertSend:
		{
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return SendClientMessage(playerid,CWHITE,"» К сожалению, очередь на объявления занята, попробуйте позже");
			new text[100];
			GetPVarString(playerid,"advert",text,100);
			DeletePVar(playerid,"advert");
			new price = strlen(text) * gAdvertPrice;
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег");
			gAdvertCount ++;
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++)
			{
				if(!gAdvert[i][adBusy])
				{
					slot = i;
					break;
				}
			}
			if(slot == -1) return SendClientMessage(playerid,CWHITE,"» Нет места в очереди ожидайте");
			TransferMoney(playerid,-1,price,"advert");
			gAdvert[slot][adMoney] = price;
			format(gAdvert[slot][adSender],24,"%s",pData[playerid][pNickname]);
			gAdvert[slot][adSenderID] = playerid;
			gAdvert[slot][adPhone] = pData[playerid][pPhone];
			format(gAdvert[slot][adText],100,"%s",text);
			gAdvert[slot][adBusy] = true;
			gAdvert[slot][adEditoAndCheck] = false;
			pTemp[playerid][pAdvertTime] = 60;
			SendClientMessage(playerid,-1,"Ваше объявление успешно отправлено {ff5b01}сотрудникам. {FFFFFF}Ожидайте проверки");
			f(mes,"{FFFFFF}%s {ff7e00}отправил объявление, пожалуйста проверьте", pData[playerid][pNickname]);
			SendFMes(10,COLOR_GREEN, mes);
			SetPlayerChatBubble(playerid, "Отправляет объявление", COLOR_LIME, 20.0, 10000);
		}
	case dAdvertList:
		{
			if(!response) return 1;
			if(listitem != 0)
			{
				if(gAdvert[listitem-1][adBusy]) return SendClientMessage(playerid,-1,"Объявление проверяем в порядке очереди"), ShowAdvertList(playerid);
			}
			if(!gAdvert[listitem][adBusy] || gAdvert[listitem][adCheked] || gAdvert[listitem][adCheking]) return ShowAdvertList(playerid);
			SetPVarInt(playerid,"editadvert",listitem);
			gAdvert[listitem][adCheking] = true;
			pTemp[playerid][pCheckAD] = listitem;
			mes = "";
			f(mes, "» {fde910}%s{FFFFFF}\n1 » Отправить\n2 » Редактировать\n3 » Удалить и отправить администрации\n4 » Удалить",gAdvert[listitem][adText]);
			ShowPlayerDialog(playerid,dAdvertAction,2,gAdvert[listitem][adSender],mes,"ОК","Отмена");
		}
	case dAdvertAction:
		{
			new id = GetPVarInt(playerid,"editadvert");
			if(!response)
			{
				gAdvert[id][adCheking] = false;
				return ShowAdvertList(playerid);
			}
			switch(listitem)
			{
			case 1:
				{
					//SendClientMessage(playerid,CSYSTEM,"Объявление будет подано, когда подойдет его очередь");
					gAdvert[id][adTime] = gAdvertTime;
					gAdvertTime += 30;
					format(gAdvert[id][adCheker],MAX_PLAYER_NAME,"%s",pData[playerid][pNickname]);
					new rank = pData[playerid][pRank];
					new fractionid = pData[playerid][pFraction]-1;
					format(gAdvert[id][adRang],MAX_PLAYER_NAME,"%s",gFractionRankName[fractionid][rank-1]);
					gAdvert[id][adCheking] = false;
					gAdvert[id][adCheked] = true;

					gAdvert[id][adChekerID] = playerid;
					ShowAdvertList(playerid);
					pTemp[playerid][pCheckAD] = -1;
					GameTextForPlayer(playerid, "~y~EDITED~n~~g~ +30$", 5000, 1);
					TransferMoney(-1,playerid,3,"adedit");
				}
			case 2:
				{
					ShowPlayerDialog(playerid,dAdvertEdit,1,gAdvert[id][adSender],gAdvert[id][adText],"OK","Отмена");
				}
			case 3:
				{
					new rank = pData[playerid][pRank];
					new fractionid = pData[playerid][pFraction]-1;
					mes = "";
					f(mes, "» [NEWS REPORT] %s[%d] => %s | Сотрудник СМИ: %s %s[%d]",gAdvert[id][adSender],gAdvert[id][adSenderID],gAdvert[id][adText], gFractionRankName[fractionid][rank-1], pData[playerid][pNickname], playerid);
					AdminChat(CYELLOW,mes);
					SendClientMessage(playerid,CYELLOW,mes);
					strdel(gAdvert[id][adSender],0,24);
					gAdvert[id][adSenderID] = 0;
					gAdvert[id][adPhone] = 0;
					gAdvert[id][adChekerID] = 0;
					strdel(gAdvert[id][adText],0,100);
					strdel(gAdvert[id][adCheker],0,24);
					strdel(gAdvert[id][adRang],0,24);
					gAdvert[id][adBusy] = false;
					gAdvert[id][adSlot] = -1;
					gAdvert[id][adCheked] = false;
					gAdvert[id][adCheking] = false;
					gAdvert[id][adEditoAndCheck] = false;
					gAdvert[id][adTime] = 0;
					if(gAdvertCount > 0) gAdvertCount--;
					ShowAdvertList(playerid);
					pTemp[playerid][pCheckAD] = -1;
				}
			case 4:
				{
					strdel(gAdvert[id][adSender],0,24);
					gAdvert[id][adPhone] = 0;
					gAdvert[id][adChekerID] = 0;
					gAdvert[id][adSenderID] = 0;
					strdel(gAdvert[id][adText],0,100);
					strdel(gAdvert[id][adCheker],0,24);
					strdel(gAdvert[id][adRang],0,24);
					gAdvert[id][adBusy] = false;
					gAdvert[id][adSlot] = -1;
					gAdvert[id][adCheked] = false;
					gAdvert[id][adCheking] = false;
					gAdvert[id][adTime] = 0;
					gAdvert[id][adEditoAndCheck] = false;
					if(gAdvertCount > 0) gAdvertCount--;
					ShowAdvertList(playerid);
					pTemp[playerid][pCheckAD] = -1;
				}
			default: {gAdvert[id][adCheking] = false; ShowAdvertList(playerid);}
			}
		}
	case dAdvertEdit:
		{
			new id = GetPVarInt(playerid,"editadvert");
			if(!response)
			{
				gAdvert[id][adCheking] = false;
				return ShowAdvertList(playerid);
			}
			format(gAdvert[id][adText],100,"%s",inputtext);
			gAdvert[id][adEditoAndCheck] = true;
			mes = "";
			f(mes, "» {fde910}%s{FFFFFF}\n1 » Отправить\n2 » Редактировать\n3 » Удалить и отправить администрации\n4 » Удалить",gAdvert[id][adText]);
			ShowPlayerDialog(playerid,dAdvertAction,2,gAdvert[id][adSender],mes,"ОК","Отмена");
		}
	case dNumberPhone:
		{
			if(!response) return 1;
			if(inputtext[0] == '0')
			{
				mes = "";
				new rndphone = RandomEx(100000, 999999);
				f(mes, "SELECT `id` FROM `accounts` WHERE `phone` = '%s'",rndphone);
				new Result:r = sql_query(zConn, mes); mes = "";
				if(sql_num_rows(r))
				{
					SendClientMessage(playerid,CWHITE,"» Такой номер уже используется");
					ShowPlayerDialog(playerid,dNumberPhone,1,"{ffcf00}Смена номера SIM-карты","{ffffff}Введите новый шестизначный номер телефона","Купить","Отмена");
					return sql_free_result(r);
				}
				pData[playerid][pPhone] = rndphone;
				mes = "";
				f(mes, "» Ваш новый номер телефона: %d.",pData[playerid][pPhone]);
				SendClientMessage(playerid,CLIGHTGREEN,mes);
				UpdatePlayerData(playerid,"phone",pData[playerid][pPhone]);
				return 1;
			}
			if(!isNumeric(inputtext) || strlen(inputtext) != 6)
			{
				SendClientMessage(playerid,CWHITE,"» Номер должен состоять из 6 цифр.");
				ShowPlayerDialog(playerid,dNumberPhone,1,"{ffcf00}Смена номера SIM-карты","{ffffff}Введите новый шестизначный номер телефона","Купить","Отмена");
				return 1;
			}
			mes = "";
			f(mes, "SELECT `id` FROM `accounts` WHERE `phone` = '%s'",inputtext);
			new Result:r = sql_query(zConn, mes); mes = "";
			if(sql_num_rows(r))
			{
				SendClientMessage(playerid,CWHITE,"» Такой номер уже используется");
				ShowPlayerDialog(playerid,dNumberPhone,1,"{ffcf00}Смена номера SIM-карты","{ffffff}Введите новый шестизначный номер телефона","Купить","Отмена");
				return sql_free_result(r);
			}
			sql_free_result(r);
			pData[playerid][pPhone] = strval(inputtext);
			mes = "";
			f(mes, "» Ваш новый номер телефона: %d.",pData[playerid][pPhone]);
			SendClientMessage(playerid,CLIGHTGREEN,mes);
			UpdatePlayerData(playerid,"phone",pData[playerid][pPhone]);
			new bsim = GetPVarInt(playerid,"pokuppr");
			TransferMoney(playerid,-1,bsim,"simcard");

		}
	case dPresentPhone:
		{
			if(!response)
			{
				MeAction(playerid,"выбросил подарок");
				return 1;
			}
			if(!isNumeric(inputtext) || strlen(inputtext) != 6 || inputtext[0] == '0')
			{
				SendClientMessage(playerid,CWHITE,"» Номер должен состоять из 6 цифр. Первая цифра не должны быть \"ноль\"");
				ShowPlayerDialog(playerid,dPresentPhone,1,"{ffcf00}Подарок от Санты.","Вы получили сим карту с открытым номером.\nНомер вы можете выбрать сами {"#cGRAY"}(6 цифр):","OK","Выбросить");
				return 1;
			}
			mes = "";
			f(mes, "SELECT `id` FROM `accounts` WHERE `phone` = '%s'",inputtext);
			new Result:r = sql_query(zConn, mes); mes = "";
			if(sql_num_rows(r))
			{
				SendClientMessage(playerid,CWHITE,"» Такой номер уже используется");
				ShowPlayerDialog(playerid,dPresentPhone,1,"{ffcf00}Подарок от Санты.","{"#cLIGHTGREEN"}Вы получили сим карту с открытым номером.\nНомер вы можете выбрать сами {"#cGRAY"}(6 цифр):","OK","Выбросить");
				return sql_free_result(r);
			}
			sql_free_result(r);
			pData[playerid][pPhone] = strval(inputtext);
			mes = "";
			f(mes, "» Ваш новый номер телефона: {"#cWHITE"}%d. {"#cLIGHTGREEN"}С новым годом!!!",pData[playerid][pPhone]);
			SendClientMessage(playerid,CLIGHTGREEN,mes);
			UpdatePlayerData(playerid,"phone",pData[playerid][pPhone]);
		}
	case dNewsDial:
		{
			if(!response) return 1;
			new ndial = GetPVarInt(playerid, "newsdial");
			if(GetPlayerMoneyEx(playerid) < gNewsDialPrice[ndial]) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег");
			if(!gNewsDialing[ndial]) return SendClientMessage(playerid,CWHITE,"» Звонки не принимаются");
			if(gNewsDialee[ndial] != INVALID_PLAYER_ID) return SendClientMessage(playerid,CWHITE,"» Линия занята");
			pData[playerid][pPhoneMoney] -= gNewsDialPrice[ndial];
			UpdatePlayerData(playerid,"phonemoney",pData[playerid][pPhoneMoney]);
			gNewsDialMoney[ndial] += gNewsDialPrice[ndial];
			if(random(3)) return SendClientMessage(playerid,CWHITE,"» Дозвониться не получилось");
			SendClientMessage(playerid,0x7FC0E3FF,"Вы в эфире");
			SendClientMessage(gNewsDialer[ndial],0x7FC0E3FF,"Игрок дозвонился");
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
			SetPlayerAttachedObject(playerid,0,330,6);
			gNewsDialee[ndial] = playerid;
		}
	case dUnemplyment:
		{
			if(!response) return 1;
			if((pData[playerid][pFraction] < 3 && pData[playerid][pFraction] != 0) || pData[playerid][pFraction] > 7) return SendClientMessage(playerid,CWHITE,"» Нельзя получать пособие, находясь во фракции");
			if(pData[playerid][pJob]) return SendClientMessage(playerid,CWHITE,"» Вы не безработный");
			pData[playerid][pUnemployment] = 1;
			UpdatePlayerData(playerid,"unemployment",1);
			SendClientMessage(playerid,CWHITE,"Теперь вы будете получать пособие по безработице");
		}
	case dDonate:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: //Игровая валюта
				{
					ShowPlayerDialog(playerid,dDonateMoney1,1,"{ffcf00}Донат","{"#cWHITE"}Введите сумму, которую вы хотите получить (в игровых долларах).\n{ffcf00}$1200 {"#cWHITE"}- {"#cRED"}1р.","Далее","Отмена");
				}
			case 1: //Смена ника
				{
					if(pData[playerid][pDonate] < 10)
					{

						return SendClientMessage(playerid,CWHITE,"» Вам нужно иметь 10 рублей на донат счете, чтобы поменять ник");
					}
					ShowPlayerDialog(playerid,dDonateNickname1,1,"{ffcf00}Смена ника","{"#cWHITE"}Введите игровой ник, на который вы хотите поменять свой:","Далее","Отмена");
				}
				/*case 2: //Смена цвета кожи и национальности
				{
					if(pData[playerid][pDonate] < 75)
					{

						return SendClientMessage(playerid,CWHITE,"» Вам нужно иметь 75 рублей на донат счете, чтобы сменить национальность и цвет кожи");
					}
					ShowPlayerDialog(playerid,dDonateNation1,0,"Смена национальности","{"#cWHITE"}Выберите цвет кожи:","Темный","Светлый");
				}
				case 3: //Смена возраста
				{
					if(pData[playerid][pDonate] < 50)
					{

						return SendClientMessage(playerid,CWHITE,"» Вам нужно иметь 50 рублей на донат счете, чтобы сменить Ваш возраст.");
					}
					ShowPlayerDialog(playerid,dDonateAge1,1,"{ffcf00}Смена возраста","{"#cWHITE"}Введите желаемый возраст:","Далее","Отмена");
				}
				case 4: // пол
				{
					if(pData[playerid][pDonate] < 15)
					{

						return SendClientMessage(playerid,CWHITE,"» Вам нужно иметь 15 рублей на донат счете, чтобы сменить Ваш пол.");
					}
					ShowPlayerDialog(playerid,dDonateSex, DIALOG_STYLE_LIST,"Смена пола","{"#cWHITE"}Мужской\nЖенский","Далее","Отмена");
				}*/
			case 2: // варн
				{
					if(pData[playerid][pDonate] < 75)
					{

						return SendClientMessage(playerid,CWHITE,"» Вам нужно иметь 75 рублей на донат счете, чтобы снять Ваш варн.");
					}
					ShowPlayerDialog(playerid,dDonateWarn,0,"Снятие варна","{"#cWHITE"}Вы уверены, что хотите снять 1 варн за 75 рублей?","Да","Отмена");
				}
			case 3: //Баланс
				{
					mes = "";
					UpdateDonate(playerid);
					f(mes, "» У вас на донат счете: {"#cWHITE"}%d рублей",pData[playerid][pDonate]);
					SendClientMessage(playerid,CINFO,mes);

				}
			}
		}
	case dDonateSex:
		{
			if(!response) return 1;
			if(pData[playerid][pDonate] < 15)
			{

				return SendClientMessage(playerid,CWHITE,"» Вам нужно иметь 15 рублей на донат счете, чтобы поменять ник");
			}
			pData[playerid][pSex] = listitem+1;
			pData[playerid][pDonate] -= 15;
			new zS[35];
			switch(listitem)
			{
			case 0: format(zS,sizeof(zS), "Вы успешно изменили игровой пол на: Мужской");
			case 1: format(zS,sizeof(zS), "Вы успешно изменили игровой пол на: Женский");
			}
			SendClientMessage(playerid, CGRAY,zS);
			mes = "";
			f(mes, "UPDATE `accounts` SET `sex` = '%d', donate = '%d' WHERE `id` = '%d'",pData[playerid][pSex], pData[playerid][pDonate], pData[playerid][pMysqlID]);
			sql_query(zConn, mes); mes = "";
		}
	case dDonateWarn:
		{
			if(!response) return 1;
			if(pData[playerid][pDonate] < 75)
			{

				return SendClientMessage(playerid,CWHITE,"» Вам нужно иметь 75 рублей на донат счете, чтобы поменять ник");
			}
			if(!pData[playerid][pWarnc]) return SendClientMessage(playerid, CWHITE,"» У вас нет варнов");
			else if(pData[playerid][pWarn] > 7) {
				pData[playerid][pWarn] -= 7;
				pData[playerid][pWarnc]--;
			}
			else pData[playerid][pWarnc] = 0;
			SendClientMessage(playerid, CWHITE,"» Вы успешно сняли варн");
			mes = "";
			f(mes, "UPDATE `accounts` SET `warn` = '%d', warnc = '%d', donate = '%d' WHERE `id` = '%d'",pData[playerid][pWarn], pData[playerid][pWarnc], pData[playerid][pDonate], pData[playerid][pMysqlID]);
			sql_query(zConn, mes); mes = "";
		}
	case dDonateMoney1:
		{
			if(!response) return 1;
			if(!isNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialog(playerid,dDonateMoney1,1,"{ffcf00}Донат","{"#cWHITE"}Введите сумму, которую вы хотите получить (в игровых долларах).\n{ffcf00}$1200 {"#cWHITE"}= {"#cRED"}1р.","Далее","Отмена");
			new amount = strval(inputtext);
			if(amount < 1200)
			{
				ShowPlayerDialog(playerid,dDonateMoney1,1,"{ffcf00}Донат","{"#cWHITE"}Введите сумму, которую вы хотите получить (в игровых долларах).\n{ffcf00}$1200 {"#cWHITE"}- {"#cRED"}1р.","Далее","Отмена");
				return SendClientMessage(playerid,CWHITE,"» Минимальная сумма: $1200");
			}
			new money = floatround(amount / 1200.0,floatround_ceil) * 1;
			if(money < 1) return 1;
			if(pData[playerid][pDonate] < money)
			{
				ShowPlayerDialog(playerid,dDonateMoney1,1,"{ffcf00}Донат","{"#cWHITE"}Введите сумму, которую вы хотите получить (в игровых долларах).\n{ffcf00}$1200 {"#cWHITE"}- {"#cRED"}1р.","Далее","Отмена");
				return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег на донат счете");
			}
			SetPVarInt(playerid,"donatemoney",money);
			SetPVarInt(playerid,"donateamount",amount);
			mes = "";
			f(mes, "» {"#cWHITE"}Будет снято: %d рублей\nБудет зачислено: %d$\nОстанется на донат счете: %d рублей",money,amount,pData[playerid][pDonate] - money);
			ShowPlayerDialog(playerid,dDonateMoney2,0,"Донат",mes,"ОК","Отмена");
		}
	case dDonateMoney2:
		{
			if(!response) return 1;
			new money = GetPVarInt(playerid,"donatemoney");
			new amount = GetPVarInt(playerid,"donateamount");
			DeletePVar(playerid,"donatemoney");
			DeletePVar(playerid,"donateamount");
			if(money < 1 || amount < 1200)
			{
				ShowPlayerDialog(playerid,dDonateMoney1,1,"{ffcf00}Донат","{"#cWHITE"}Введите сумму, которую вы хотите получить (в игровых долларах).\n{ffcf00}$1200 {"#cWHITE"}- {"#cRED"}1р.","Далее","Отмена");
				return SendClientMessage(playerid,CWHITE,"» Минимальная сумма к оплате: 1 рубль");
			}
			UpdateDonate(playerid);
			if(pData[playerid][pDonate] < money) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег на донат счете");
			pData[playerid][pDonate] -= money;
			UpdatePlayerData(playerid,"donate",pData[playerid][pDonate]);
			TransferMoney(-1,playerid,amount,"donate");
			DonateLog(playerid,-money,7);
			mes = "";
			f(mes, "» %d рублей переведено в {"#cWHITE"}%d игровых доларов",money,amount);
			SendClientMessage(playerid,CWHITE,mes);

		}
	case dDonateNickname1:
		{
			if(!response) return 1;
			if(pData[playerid][pDonate] < 10)
			{

				return SendClientMessage(playerid,CWHITE,"» Вам нужно иметь 10 рублей на донат счете, чтобы поменять ник");
			}
			if(strlen(inputtext) < 3 || strlen(inputtext) > 20)
			{

				return SendClientMessage(playerid,CWHITE,"» Длина ника не может быть меньше трех и больше 20 символов");
			}
			if(strfind(inputtext,"|") != -1) return SendClientMessage(playerid,CWHITE,"» В нике не может содержаться симовл \"|\"");
			sql_escape_string(zConn, inputtext,inputtext,24);
			mes = "";
			f(mes, "SELECT `nickname` FROM `accounts` WHERE `nickname` = '%s'",inputtext);
			new Result:r = sql_query(zConn, mes); mes = "";
			if(sql_num_rows(r))
			{
				SendClientMessage(playerid,CWHITE,"» Этот никнейм уже используется");

				return sql_free_result(r);
			}
			sql_free_result(r);
			SetPVarString(playerid,"nnick",inputtext);
			mes = "";
			f(mes, "» {"#cWHITE"}Новый никнейм: {"#cBLUE"}%s{"#cWHITE"}.\nБудет снято: 10 рублей\nОстанется на донат счете: %d рублей\n\t\tПродолжить?",inputtext,pData[playerid][pDonate] - 10);
			ShowPlayerDialog(playerid,dDonateNickname2,0,"Смена ника",mes,"Да","Нет");
		}



	case dDonateNickname2:
		{
			if(!response) return 1;
			UpdateDonate(playerid);
			if(pData[playerid][pDonate] < 10)
			{

				return SendClientMessage(playerid,CWHITE,"» Вам нужно иметь 10 рублей на донат счете, чтобы поменять ник");
			}
			new nickname[24];
			GetPVarString(playerid,"nnick",nickname,24);
			DeletePVar(playerid,"nnick");
			if(strlen(nickname) < 3 || strlen(nickname) > 20)
			{

				return SendClientMessage(playerid,CWHITE,"» Длина ника не может быть меньше трех и больше 20 символов");
			}
			if(strfind(nickname,"|") != -1) return SendClientMessage(playerid,CWHITE,"» В нике не может содержаться симовл \"|\"");
			sql_escape_string(zConn, nickname,nickname,24);
			mes = "";
			f(mes, "SELECT `nickname` FROM `accounts` WHERE `nickname` = '%s'",nickname);
			new Result:r = sql_query(zConn, mes); mes = "";
			if(sql_num_rows(r))
			{
				SendClientMessage(playerid,CWHITE,"» Этот никнейм уже используется");

				return sql_free_result(r);
			}
			sql_free_result(r);
			if(pData[playerid][pDonate] < 10) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег на донат счете");
			if(SetPlayerName(playerid,nickname) == -1)
			{

				return SendClientMessage(playerid,CWHITE,"» У вас присутствуют запрещенные символы в никнейме");
			}
			if(pData[playerid][pHouse])
			{
				new houseid = pData[playerid][pHouse] - 1;
				if(gHouses[houseid][houseOwnerID] == pData[playerid][pMysqlID])
				{
					format(gHouses[houseid][houseOwner],MAX_PLAYER_NAME,"%s",nickname);
					f(mes, "UPDATE `houses` SET `owner` = '%s' WHERE `id` = '%d'",nickname,houseid+1);
					sql_query(zConn, mes); mes = "";
				}
				else
				{
					new slot = -1;
					if(gHouses[houseid][houseHabitID][0] == pData[playerid][pMysqlID]) slot = 0;
					else if(gHouses[houseid][houseHabitID][1] == pData[playerid][pMysqlID]) slot = 1;
					else if(gHouses[houseid][houseHabitID][2] == pData[playerid][pMysqlID]) slot = 2;
					else return SendClientMessage(playerid,CWHITE,"» Ошибка (#122)");
					format(gHouseHabits[houseid][slot],MAX_PLAYER_NAME,"%s",nickname);
					f(mes, "UPDATE `houses` SET `inhabit%d`='%s' WHERE `id`='%d'",slot+2,nickname,houseid+1);
					sql_query(zConn, mes); mes = "";
				}
			}
			pData[playerid][pDonate] -= 10;
			f(mes, "UPDATE `accounts` SET `nickname` = '%s', `donate` = '%d' WHERE `id` = '%d'",nickname,pData[playerid][pDonate],pData[playerid][pMysqlID]);
			sql_query(zConn, mes); mes = "";
			f(mes, "Ваш никнейм был изменен на: {"#cWHITE"}%s",nickname);
			SendClientMessage(playerid,COLOR_GREEN,mes);
			f(mes, "[A] %s => %s",pData[playerid][pNickname],nickname);
			format(pData[playerid][pNickname], MAX_PLAYER_NAME, "%s", nickname);
			AdminChat(CORANGE,mes);
			DonateLog(playerid,-10,8);
		}



	case dDonateNation1:
		{
			if(!response) return ShowPlayerDialog(playerid,dDonateNation2,2,"{ffcf00}Смена национальности","Выберите национальность:\nАмериканец\nЯпонец\nИтальянец\nМексиканец\nЛатиноамериканец\nИспанец\nРусский\nПортугалец\nФранцуз","Далее","Отмена"); //Белые
			else
			{
				SetPVarInt(playerid,"donatecolor",1);
				SetPVarInt(playerid,"donatenation",10);
				SetPVarInt(playerid,"donatelang",LANG_ENGLISH);
				mes = "";
				f(mes, "» {"#cWHITE"}\tСмена национальности\n\nЦвет кожи: Темный\nНациональность: Афроамериканец\nБудет снято: 150 рублей\nОстанется на донат счете: %d рублей\n\n\t{"#cYELLOW"}Продолжить?",pData[playerid][pDonate] - 150);
				ShowPlayerDialog(playerid,dDonateNation3,0,"Смена национальности",mes,"Да","Нет");
			}
		}
	case dDonateNation2:
		{
			if(!response) return 1;
			new language;
			switch(listitem)
			{
			case 1: language = LANG_ENGLISH;
			case 2: language = LANG_JAPAN;
			case 3: language = LANG_ITALIAN;
			case 4..6: language = LANG_SPAIN;
			case 7: language = LANG_RUSSIAN;
			case 8: language = LANG_PORTUGAL;
			case 9: language = LANG_FRENCH;
			default: language = LANG_ENGLISH;
			}
			SetPVarInt(playerid,"donatecolor",0);
			SetPVarInt(playerid,"donatenation",listitem);
			SetPVarInt(playerid,"donatelang",language);
			mes = "";
			f(mes, "» {"#cWHITE"}\tСмена национальности\n\nЦвет кожи: Светлый\nНациональность: %s\nБудет снято: 75 рублей\nОстанется на донат счете: %d рублей\n\n\t{"#cYELLOW"}Продолжить?",inputtext,pData[playerid][pDonate] - 75);
			ShowPlayerDialog(playerid,dDonateNation3,0,"Смена национальности",mes,"Да","Нет");
		}
	case dDonateNation3:
		{
			if(!response) return 1;
			UpdateDonate(playerid);
			if(pData[playerid][pDonate] < 75)
			{

				return SendClientMessage(playerid,CWHITE,"» Вам нужно иметь 75 рублей на донат счете, чтобы сменить национальность и цвет кожи");
			}
			new color = GetPVarInt(playerid,"donatecolor");
			new nation = GetPVarInt(playerid,"donatenation");
			new language = GetPVarInt(playerid,"donatelang");
			pData[playerid][pColor] = color;
			pData[playerid][pNation] = nation;
			format(pData[playerid][pLanguage], 7, "%s", LANG_NONE);
			pData[playerid][pLanguage][language] = 1;
			pData[playerid][pDonate] -= 75;
			mes = "";
			f(mes, "UPDATE `accounts` SET `color` = '%d', `nation` = '%d', `language` = '%s', `donate` = '%d' WHERE `id` = '%d'",color,nation,pData[playerid][pLanguage],pData[playerid][pDonate],pData[playerid][pMysqlID]);
			sql_query(zConn, mes); mes = "";
			DonateLog(playerid,-150,9);
			SendClientMessage(playerid,0x7FC0E3FF,"Национальность и цвет кожи изменены");
		}
	case dDonateAge1:
		{
			if(!response) return 1;
			UpdateDonate(playerid);
			if(pData[playerid][pDonate] < 50)
			{

				return SendClientMessage(playerid,CWHITE,"» Вам нужно иметь 50 рублей на донат счете, чтобы сменить игровой возраст");
			}
			if(!isNumeric(inputtext) || !strlen(inputtext)) ShowPlayerDialog(playerid,dDonateAge1,1,"{ffcf00}Смена возраста","{"#cWHITE"}Введите желаемый игровой возраст:","Далее","Отмена");
			new age = strval(inputtext);
			if(age < 16 || age > 110)
			{
				SendClientMessage(playerid,CWHITE,"» Возраст не может быть менее 16 и более 110");
				return 1;
			}
			SetPVarInt(playerid,"donateage",age);
			mes = "";
			f(mes, "» {"#cWHITE"}\tСмена возраста\n\nНовый игровой возраст: %d\nБудет снято: 50 рублей\nОстанется на донат счете: %d рублей\n\t{"#cYELLOW"}Продолжить?",age,pData[playerid][pDonate] - 50);
			ShowPlayerDialog(playerid,dDonateAge2,0,"Смена возраста",mes,"Да","Нет");
		}
	case dDonateAge2:
		{
			if(!response) return 1;
			UpdateDonate(playerid);
			if(pData[playerid][pDonate] < 50)
			{

				return SendClientMessage(playerid,CWHITE,"» Вам нужно иметь 100 рублей на донат счете, чтобы сменить игровой возраст");
			}
			new age = GetPVarInt(playerid,"donateage");
			if(age < 16 || age > 110)
			{
				SendClientMessage(playerid,CWHITE,"» Возраст не может быть менее 16 и более 110");
				return 1;
			}
			pData[playerid][pAge] = age;
			pData[playerid][pDonate] -= 50;
			mes = "";
			f(mes, "UPDATE `accounts` SET `age` = '%d', donate = '%d' WHERE `id` = '%d'",age,pData[playerid][pDonate],pData[playerid][pMysqlID]);
			sql_query(zConn, mes); mes = "";
			DonateLog(playerid,-100,10);
			SendClientMessage(playerid,0x7FC0E3FF,"Игровой возраст изменен");
		}
	case dRecolor:
		{
			if(!response) return 1;
			new repairid = GetPVarInt(playerid,"selectedrepair") - 1;
			if(repairid < 0 || repairid > 2) return SendClientMessage(playerid,CWHITE,"» Вы должны быть на эстакаде");
			new businessid = repairid + REPAIR_ID_OFFSET;
			if(gBusiness[businessid][busiType] != 8) return SendClientMessage(playerid,CWHITE,"» Внутренняя ошибка (#143)");
			if(gBusiness[businessid][busiProduct] < 250) return SendClientMessage(playerid,CWHITE,"» В СТО недостаточно краски");
			new price = floatround(1.7 * gBusiness[businessid][busiPrice]);
			if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег");
			if(!pData[playerid][pCar] || !IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,CWHITE,"» Перекрашивать можно только личный авто");
			new slot = GetCarSlot(pData[playerid][pCar]);
			new vehicleid = gCars[slot][carVid];
			if(GetPlayerVehicleID(playerid) != vehicleid) return SendClientMessage(playerid,CWHITE,"» Вы должны быть на своем личном авто");
			new c1 = GetPVarInt(playerid,"recolor1");
			new c2 = GetPVarInt(playerid,"recolor2");
			ChangeVehicleColor(vehicleid,c1,c2);
			gCars[slot][carColor1] = c1;
			gCars[slot][carColor2] = c2;
			mes = "";
			f(mes, "UPDATE `cars` SET `color1` = '%d' , `color2` = '%d' WHERE `id` = '%d'",c1,c2,pData[playerid][pCar]);
			sql_query(zConn, mes); mes = "";
			SendClientMessage(playerid,0x7FC0E3FF,"Т/с покрашено в новый цвет");
			TransferMoney(playerid,-1,price,"recolor");
			gBusiness[businessid][busiProduct] -= 250;
			gBusiness[businessid][busiBank] += price;
			UpdateBusinessText(businessid);
			UpdateBusinessDataEx(businessid+1,"product",gBusiness[businessid][busiProduct],"bank",gBusiness[businessid][busiBank]);
		}
	case 1916: return ShowPlayerDialog(playerid, 1216, DIALOG_STYLE_LIST, "Магазин пиротехники", "{ffffff}1 » Шумовые петарды (4 шт.)\t\t{9c65ff}1400$\n{ffffff}2 » Световые петарды (4 шт.)\t\t{9c65ff}2500$\n{ffffff}3 » Дымовая шашка (3 шт.)\t\t{9c65ff}3000$\n{ffffff}4 » Одиночная ракета (3 шт.)\t\t{9c65ff}4500$\n5 » Салют\t\t\t\t{9c65ff}11000$\n5 » Большой салют\t\t\t{9c65ff}15000$", "Выбрать", "Отмена");
	case 1219: return SetPVarInt(playerid, "PColor", listitem + 1);
	case 1216:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					new id = pTemp[playerid][pSelectedBusinessID];
					if(id < 0) return 1;
					if(GetPlayerMoney(playerid) < 1400) return SendClientMessage(playerid,-1,"{ffffff}У вас недостаточно денег");
					SetPVarInt(playerid, "pType", 1);
					num[playerid] = 4;
					TransferMoney(playerid,-1,1400,"buypitards");
					gBusiness[id][busiBank] += 1400;
					SendClientMessage(playerid,-1,"Вы купили набор шумовых петард");
					SendClientMessage(playerid, COLOR_GREEN, "Введите {FFCD00}/blow{33AAFF} для использования пиротехники");
				}
			case 1:
				{
					new id = pTemp[playerid][pSelectedBusinessID];
					if(id < 0) return 1;
					if(GetPlayerMoney(playerid) < 2500) return SendClientMessage(playerid,-1,"{ffffff}У вас недостаточно денег");
					SetPVarInt(playerid, "pType", 2);
					num[playerid] = 4;
					TransferMoney(playerid,-1,2500,"buysvetpitards");
					gBusiness[id][busiBank] += 2500;
     				SendClientMessage(playerid,-1,"Вы купили набор световых петард");
					SendClientMessage(playerid, COLOR_GREEN, "Введите {FFCD00}/blow{33AAFF} для использования пиротехники");
				}
			case 2:
				{
					new id = pTemp[playerid][pSelectedBusinessID];
					if(id < 0) return 1;
					if(GetPlayerMoney(playerid) < 3000) return SendClientMessage(playerid, -1, "{ffffff}У вас недостаточно денег");
					SetPVarInt(playerid, "pType", 3);
					num[playerid] = 3;
					TransferMoney(playerid,-1,300,"buydimshash");
					gBusiness[id][busiBank] += 300;
     				SendClientMessage(playerid,-1,"Вы купили набор дымовых шашек");
					SendClientMessage(playerid, COLOR_GREEN, "Введите {FFCD00}/blow{33AAFF} для использования пиротехники");
				}
			case 3:
				{
					new id = pTemp[playerid][pSelectedBusinessID];
					if(id < 0) return 1;
					if(GetPlayerMoney(playerid) < 4500) return SendClientMessage(playerid,-1,"{ffffff}У вас недостаточно денег");
					SetPVarInt(playerid, "pType", 4);
					num[playerid] = 3;
					TransferMoney(playerid,-1,450,"buyrakets");
					gBusiness[id][busiBank] += 450;
					SetPVarInt(playerid, "PColor", 1);
     				SendClientMessage(playerid,-1,"Вы купили набор одиночных ракет");
					SendClientMessage(playerid, COLOR_GREEN, "Введите {FFCD00}/blow{33AAFF} для использования пиротехники");
					ShowPlayerDialog(playerid, 1219, DIALOG_STYLE_LIST, "Выберите цвет", "{ffffff}Белый\n{0000ff}Синий\n{38ff00}Зеленый\n{ff0015}Красный\n{66ff00}Ярко-зеленый\n{00b2ff}Голубой\n{a900ff}Фиолетовый", "Выбрать", "");
				}
			case 4:
				{
					new id = pTemp[playerid][pSelectedBusinessID];
					if(id < 0) return 1;
					if(GetPlayerMoney(playerid) < 11000) return SendClientMessage(playerid,-1,"{ffffff}У вас недостаточно денег");
					SetPVarInt(playerid, "pType", 5);
					num[playerid] = 1;
					TransferMoney(playerid,-1,1100,"buysalut");
					gBusiness[id][busiBank] += 1100;
					SendClientMessage(playerid,-1,"Вы купили салют");
					SendClientMessage(playerid, COLOR_GREEN, "Введите {FFCD00}/blow{33AAFF} для использования пиротехники");
				}
			case 5:
				{
					new id = pTemp[playerid][pSelectedBusinessID];
					if(id < 0) return 1;
					if(GetPlayerMoney(playerid) < 1500) return SendClientMessage(playerid,-1,"{ffffff}У вас недостаточно денег");
					SetPVarInt(playerid, "pType", 6);
					num[playerid] = 1;
					TransferMoney(playerid,-1,15000,"buybigsalut");
					gBusiness[id][busiBank] += 15000;
					SendClientMessage(playerid,-1,"Вы купили большой салют");
					SendClientMessage(playerid, COLOR_GREEN, "Введите {FFCD00}/blow{33AAFF} для использования пиротехники");
				}
			}
		}
	case 1217:
		{
			if(response)
			{
				mes = "";
				f(mes, "UPDATE `accounts` SET divorce = '', married = 0 WHERE id = '%d'",pData[playerid][pMysqlID]);
				sql_query(zConn, mes, QUERY_THREADED);
				f(mes, "UPDATE `accounts` SET divorce = '', married = 0 WHERE nickname = '%s'",pData[playerid][pDivorce]);
				sql_query(zConn, mes, QUERY_THREADED);
				pData[playerid][pMarried] = 0;
				SendMes(playerid,0xff2400ff,"Вы успешно расторгнули брак");
			}
			return 1;
		}
	}
	return 0;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	return 1;
}

public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	GetVehicleDamageStatus(vehicleid,gVehicles[vehicleid-1][vDemages][0],gVehicles[vehicleid-1][vDemages][1],gVehicles[vehicleid-1][vDemages][2],gVehicles[vehicleid-1][vDemages][3]);
	if(vehicleid >= aBus[0] && vehicleid <= aBus[1])
	{
		for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
		{
		    i = cvector_get(PLAYERS, idx);
			if(pTemp[i][pBusID] == vehicleid) {GetVehicleHealth(vehicleid,pTemp[i][pBusDemage]); break;}
		}
	}
	return 1;
}




public OnDynamicObjectMoved(objectid)
{
	return 1;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
    if(clickedid == KostiKeyExit)
	{
		new g = GetPVarInt(playerid,"Crupe");
		new stolid = GetPVarInt(playerid,"GameStol");
		if(StolInfo[stolid][GameStart] == 1) return SendClientMessage(playerid,0xFF0000FF,"Игра запущена! Выйти нельзя!");
		if(GetPVarInt(playerid,"StolReg") != -1 && g != 1) return ShowPlayerDialog(playerid,EXIT_DIALOG,0,"Вы уверены?","На кону стоит Ваша ставка, при выходе она сгорит.\nВы уверены что хотите закончить игру?","Да","Отмена");
		if(StolInfo[stolid][Stavka] > 0 && StolInfo[stolid][GameStart] == 1 && g == 1) return SendClientMessage(playerid,0xFFCC00FF,"Вы не можете покинуть стол! Вы уже запустили игру!");
		TextDrawHideForPlayer(playerid,KostiBox[stolid]);
		TextDrawHideForPlayer(playerid,TableName[stolid]);
		TextDrawHideForPlayer(playerid,KostiInfo[stolid]);
		TextDrawHideForPlayer(playerid,KostiGameInfo[stolid]);
		TextDrawHideForPlayer(playerid,KostiKeyExit);
		TextDrawHideForPlayer(playerid,KostiKeyDone);
		TextDrawHideForPlayer(playerid,KostiKeyStavka);
		SetPVarInt(playerid,"GameStol",-1);
		SetPVarInt(playerid,"StolReg",-1);
		TogglePlayerControllable(playerid,1);
		CancelSelectTextDraw(playerid);
		DelName(playerid,stolid);
		SetPVarInt(playerid,"Ochki",-1);
		if(g == 1)
		{
			StolInfo[stolid][Crupe] = INVALID_PLAYER_ID;
			for(new idx=0, s=0; idx<cvector_size(PLAYERS); idx++)
			{
	    		s = cvector_get(PLAYERS, idx);
				if(GetPVarInt(s,"GameStol") == stolid && GetPVarInt(s, "RegCasino") == 1)
				{
    				TextDrawHideForPlayer(s,KostiBox[stolid]);
					TextDrawHideForPlayer(s,TableName[stolid]);
				  	TextDrawHideForPlayer(s,KostiInfo[stolid]);
				  	TextDrawHideForPlayer(s,KostiGameInfo[stolid]);
				  	TextDrawHideForPlayer(s,KostiKeyExit);
				  	TextDrawHideForPlayer(s,KostiKeyDone);
				  	TextDrawHideForPlayer(s,KostiKeyStavka);

				  	TransferMoney(-1, s, StolInfo[stolid][Stavka], "verndeng");
				  	SendClientMessage(s, -1, "Крупье покинул стол");
				  	SetPVarInt(s,"GameStol",-1);
					SetPVarInt(s,"StolReg",-1);
					SetPVarInt(s,"RegCasino",0);
					TogglePlayerControllable(s,1);
					CancelSelectTextDraw(s);
					DelName(s,stolid);
					SetPVarInt(s,"Ochki",-1);
					mes = "";
					format(mes,sizeof(mes),"Игровой стол %d", stolid+1);
					UpdateDynamic3DTextLabelText(StolCoorText[stolid], -1, mes);
				}
			}
			for(new i;i<5;i++) StolInfo[stolid][Gamer][i] = INVALID_PLAYER_ID;
			StolInfo[stolid][Stavka] = 0;
			StolInfo[stolid][Bank] = 0;
			StolInfo[stolid][Igrokov] = 0;
			StolInfo[stolid][GameStart] = 0;
		}
	}
	if(clickedid == KostiKeyStavka)
	{
		new g = GetPVarInt(playerid,"Crupe");
		if(g != 1) return SendClientMessage(playerid,-1,"Устанавливать ставку может только крупье");
        mes = "";
		format(mes,sizeof(mes),"{ffffff}Установить {03c03c}ставку {ffffff}для стола\nМинимальная ставка: {03c03c}%d$\n{ffffff}Максимальная ставка: {03c03c}%d$",MIN_STAVKA,MAX_STAVKA);
		if(g == 1) return ShowPlayerDialog(playerid,DIALOG_PAY,1,"Установка ставки для игры:",mes,"Далее","");
	}
	if(clickedid == KeyMoneyGang)
	{
	    mes = "";
		ShowPlayerDialog(playerid,DIALOG_PAY1,1,"Пополнение баланса","{FFFFFF}Введите количество денег для пополнения баланса\nЭти деньги на 1-ну игру\n\nПосле старта все деньги пропадут","Далее","Отмена");
	}
	if(clickedid == KeyStartGang)
	{
		if(Balance[playerid] <= 0) return SendClientMessage(playerid,-1,"У вас недостаточно денег на балансе");
	    mes = "";
	    f(mes, "Money: %d$", GetPlayerMoneyEx(playerid));
		PlayerTextDrawSetString(playerid, CasinoAllMoney, mes);
		PutPlayerInSlotMachine(playerid, Balance[playerid]);
	}
	if(clickedid == KeyExitGang)
	{
	    ExitPlayerFromSlotMachine(playerid);
	    if(Balance[playerid] > 0) TransferMoney(-1, playerid, Balance[playerid], "win");
	}
	if(clickedid == KostiKeyDone)
	{
		new stolid = GetPVarInt(playerid,"GameStol");
		new g = GetPVarInt(playerid,"Crupe");
		if(g == 1)
		{
			if(StolInfo[stolid][Igrokov] >= MIN_IGROKOV)
			{
				TimeStavka[stolid] = 11; StolInfo[stolid][GameStart] = 1;
			}
			else SendClientMessage(playerid,-1,"Не хватает игроков для старта!");
		}
		else
		{
			return SendClientMessage(playerid,-1,"Игру может начать только крупье");
		}
	}
    if(clickedid == TD[tdNextSkin])
	{
			printf("Выбор скина 6");
			new skinid = GetPVarInt(playerid,"skinid");
			new cat = 0;
			//new color = pData[playerid][pColor];
			if(pData[playerid][pSex] == 2) cat = 1;
			if(skinid + 1 > 6) skinid = 0;
			else skinid ++;
			SetPVarInt(playerid,"skinid",skinid);
			SetPlayerSkin(playerid,gRegSkins[cat][skinid]);
	}
	if(clickedid == TD[tdBackSkin])
	{
			printf("Выбор скина 7");
			new skinid = GetPVarInt(playerid,"skinid");
			new cat = 0;
			//new color = pData[playerid][pColor];
			if(pData[playerid][pSex] == 2) cat = 1;
			if(skinid < 0) skinid = 2;
			else skinid --;
			SetPVarInt(playerid,"skinid",skinid);
			SetPlayerSkin(playerid,gRegSkins[cat][skinid]);
	}
	if (clickedid == TD[tdSelSkin])
	{
			printf("Выбор скина 8");
			new skinid = GetPVarInt(playerid,"skinid");
			new cat = 0;
			//new color = pData[playerid][pColor];
			if(pData[playerid][pSex] == 2) cat = 1;
			DeletePVar(playerid,"skinid");
			new skin = gRegSkins[cat][skinid];
			pData[playerid][pSkin] = skin;
			pTemp[playerid][pChoosingSkin] = false;
			TextDrawHideForPlayer(playerid,TD[tdNextSkin]);
			TextDrawHideForPlayer(playerid,TD[tdBackSkin]);
			TextDrawHideForPlayer(playerid,TD[tdSelSkin]);
			CancelSelectTextDraw(playerid);
			TogglePlayerControllable(playerid,1);
			UpdatePlayerData(playerid,"skin",skin);
			SpawnPlayer(playerid);
	}
	if(clickedid >= gEateryTextDraw[5] && clickedid <= gEateryTextDraw[8]) {
		/*new bid = pTemp[playerid][pSelectedBusinessID],*/
		new id = _:clickedid - _:gEateryTextDraw[5];
		new cost = gEateryCosts[id];
		SetPVarInt(playerid, "eatery_sel", id);
		mes = "";
		f(mes, "» {33AAFF}Прием пищи обойдется Вам в {FFFFFF}%d$.",cost);
		ShowPlayerDialog(playerid,dBuyFood,0,"Закусочная",mes,"Купить","Отмена");
	}
	if(GetPVarInt(playerid, "eatery_td")) HidePlayerEateryTD(playerid), DeletePVar(playerid, "eatery_td");
	if(clickedid >= gBarTextDraw[6] && clickedid <= gBarTextDraw[10]) {
		/*new bid = pTemp[playerid][pSelectedBusinessID]*/
		new id = _:clickedid - _:gBarTextDraw[6];
		new cost = gBarCosts[id];
		SetPVarInt(playerid, "bar_sel", id);
		new str[64];
		if(id == 4) str = "закуски";
		else str = "выпивки";
		mes = "";
		f(mes, "» {33AAFF}Покупка этой %s обойдётся Вам в {FFFFFF}%d$.", str, cost);
		ShowPlayerDialog(playerid, dBar, 0, "Бар", mes, "Купить", "Отмена");
	}
	if(GetPVarInt(playerid, "bar_td")) HidePlayerBarTD(playerid), DeletePVar(playerid, "bar_td");
	if(clickedid == gSkinShopDraw[0]) {
		new
		b_skins[114][2],
		b_class = 1,
		b_sel = GetPVarInt(playerid, "clothes_sel"),
		b_skin,
		b_price,
		b_max = 0,
		b_str[32]
		;
		for(new x, z; x < sizeof(gSkins); x ++) {
			b_skin = GetSkinID(b_class, pData[playerid][pSex], x);
			b_price = GetSkinPrice(x);
			if(!b_skin) continue;
			b_skins[z][0] = b_skin;
			b_skins[z][1] = b_price;
			z ++;
		}
		for(new x; x < sizeof(b_skins) - 1; x ++) {
			if(!b_skins[x + 1][0]) {
				b_max = x;
				break;
			}
			else continue;
		}
		if(b_sel == b_max) b_sel = 0;
		else b_sel ++;
		SetPlayerSkin(playerid, b_skins[b_sel][0]);
		format(b_str, 32, "~y~$%i", b_skins[b_sel][1]);
		PlayerTextDrawSetString(playerid, gSkinShopPriceDraw[playerid], b_str);
		SetPVarInt(playerid, "clothes_sel", b_sel);
	}
	else if(clickedid == gSkinShopDraw[1]) {
		new
		b_skins2[114][2],
		b_class = 1,
		b_sel = GetPVarInt(playerid, "clothes_sel"),
		b_skin,
		b_price,
		b_max = 0,
		b_str[32]
		;
		for(new x, z; x < sizeof(gSkins); x ++) {
			b_skin = GetSkinID(b_class, pData[playerid][pSex], x);
			b_price = GetSkinPrice(x);
			if(!b_skin) continue;
			b_skins2[z][0] = b_skin;
			b_skins2[z][1] = b_price;
			z ++;
		}
		for(new x; x < sizeof(b_skins2) - 1; x ++) {
			if(!b_skins2[x + 1][0]) {
				b_max = x;
				break;
			}
			else continue;
		}
		if(b_sel - 1 < 0) b_sel = b_max;
		else b_sel --;
		SetPlayerSkin(playerid, b_skins2[b_sel][0]);
		format(b_str, 32, "~y~$%i", b_skins2[b_sel][1]);
		PlayerTextDrawSetString(playerid, gSkinShopPriceDraw[playerid], b_str);
		SetPVarInt(playerid, "clothes_sel", b_sel);
	}
	else if(clickedid == gSkinShopDraw[3]) {
		new
		b_skin = GetPlayerSkin(playerid),
		b_index = -15
		;
		for(new x; x < sizeof(gSkins); x ++) {
			if(gSkins[x][skinID] != b_skin) continue;
			b_index = x;
			break;
		}
		SetPVarInt(playerid, "clothes_select", b_index);
		SPFDD(playerid,dBuySkin,0,"Покупка одежды","Да","Нет","{33AAFF}Вы хотите купить эту одежду за {FFFFFF}%d$?",GetSkinPrice(b_index));
	}
	else if(clickedid == gSkinShopDraw[4] || (GetPVarInt(playerid, "clothes_td") && clickedid == Text:INVALID_TEXT_DRAW)) {
		HidePlayerClothesTD(playerid);
		pTemp[playerid][pJustTP] = true;
		SetPlayerPos(playerid, GetPVarFloat(playerid, "posx"), GetPVarFloat(playerid, "posy"), GetPVarFloat(playerid, "posz"));
		SetPlayerInterior(playerid, GetPVarInt(playerid, "interior"));
		SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "vw"));
		SetPlayerFacingAngle(playerid, GetPVarInt(playerid, "posa"));
		TogglePlayerControllable(playerid, 1);
		SetPlayerSkin(playerid, GetPVarInt(playerid, "curskin"));
		SetCameraBehindPlayer(playerid);
		DeletePVar(playerid, "posx");
		DeletePVar(playerid, "posy");
		DeletePVar(playerid, "posz");
		DeletePVar(playerid, "posa");
		DeletePVar(playerid, "interior");
		DeletePVar(playerid, "vw");
		DeletePVar(playerid, "clothes_sel");
		DeletePVar(playerid, "clothes_class");
		pTemp[playerid][pChangingSkin] = false;
	}
	return 0;
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if(GetPVarInt(playerid,"selectpoint") > 0 && GetPVarInt(playerid,"selectpoint") < 3)
	{
		SetPVarInt(playerid,"selectpoint",2);
		SetPVarFloat(playerid,"selectpointX",fX);
		SetPVarFloat(playerid,"selectpointY",fY);
		SetPlayerMapIcon(playerid,iconTaxi,fX,fY,fZ,0,CYELLOW,1);
		SendClientMessage(playerid,CINFO,"Вы установили {"#cYELLOW"}место назначения. Чтобы подтвердить, нажмите {"#cWHITE"}~k~~CONVERSATION_YES~");
	}
	return 1;
}

public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid)
{
	if(weaponid == 3 && pData[issuerid][pFraction] == 9)
	{
		new id = playerid;
		if(pData[id][pFraction] >= 8 && pData[id][pFraction] <= 11) return  SendClientMessage(issuerid, CGRAY, "Вы не можете ударить тазером законника");
		if(IsPlayerInAnyVehicle(id)) return SendClientMessage(issuerid, CGRAY, "Человек в машине!");
		if(pTemp[id][pTazer] || pTemp[id][pCuffee] == id) return SendClientMessage(issuerid,CWHITE,"» Игрок уже оглушен / в наручниках");
		SendMes(id, COLOR_GREEN, "{FFCD00}%s %s[%d] {33AAFF}оглушил Вас на {FFCD00}10 {33AAFF}секунд", gFractionRankName[pData[issuerid][pFraction]-1][pData[issuerid][pRank]-1], pData[issuerid][pNickname], issuerid);
		SendMes(issuerid, COLOR_GREEN, "Вы оглушили {FFCD00}%s[%d] {33AAFF}на {FFCD00}10 {33AAFF}секунд", pData[id][pNickname], id);
		TogglePlayerControllable(id, 0);
		SetPlayerSpecialAction(id,SPECIAL_ACTION_HANDSUP);
		pTemp[id][pTazer] = 15;
	}
	return 1;
}

public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid)
{
	if (damagedid >= MAX_PLAYERS) return 1;
	if(damagedid != INVALID_PLAYER_ID && !pTemp[damagedid][pControllable] && (pTemp[damagedid][pTazer] || pTemp[damagedid][pCuffee] == damagedid))
	{
	    new Float:health;
		SetPlayerHealth(damagedid,health);
		pData[playerid][pHealth] = health;
	}

	for(new i;i<sizeof(gAreas[arGreenZone]);i++)
	{
		if(IsPlayerInDynamicArea(playerid,gAreas[arGreenZone][i]))
		{
			pTemp[playerid][pDM] += 1;
			if(pTemp[playerid][pDM] >= 3)
			{
					SendClientMessage(playerid,CBADINFO,"Вы были кикнуты за ДМ");
					NewKick(playerid);
			}
			else
			{
				ShowPlayerDialog(playerid,dMes,DIALOG_STYLE_MSGBOX,"{FF9900}Предупреждение","{FFFFFF}В этом месте драться нельзя. При следующией попытке Вы будете кикнуты","Закрыть","");
			}

		}
	}
	return 1;
}


public AnimationDelay(playerid,id)
{
	switch(id)
	{
		case 1: SetPlayerSpecialAction(playerid, 25);
	}
}
public AbleToSelectCar(playerid)
{
	pTemp[playerid][pSellCarSelect] = true;
}

stock PayDayTimer()
{
    new newhour,newminute,newsecond;
    gettime(newhour, newminute, newsecond);
    if ((newhour > ghour) || (newhour == 0 && ghour == 23))
    {
        ghour = newhour;
		PayDay();
		SetWorldTime(newhour);
	}
}


task CarShotTimer[60000]()
{
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		pTemp[i][carshoter] = 0;
	}
	return 1;
}


task MainTimer[1000]()
{
	WHDataUpdate();
	PayDayTimer();
    mes = "";

    for(new l;l<8;l++)
	{
		if(TimeStavka[l] > 0)
		{
			TimeStavka[l]--;
			if(TimeStavka[l] == 1) ShowItog(l);
			for(new idx=0, g=0; idx<cvector_size(PLAYERS); idx++)
			{
	    		g = cvector_get(PLAYERS, idx);
				if(GetPVarInt(g, "GameStol") == l)
				{
				    if(GetPVarInt(g, "Crupe") != 1)
				    {
				        new vip = random(50)+5;
						SetPVarInt(g, "Ochki", vip);
						format(mes,sizeof(mes),"%d", vip);
						GameTextForPlayer(g,mes,500,4);
					}
					else
					{
					    format(mes,sizeof(mes),"LostTime: %d", TimeStavka[l]);
						GameTextForPlayer(g,mes,1000,4);
					}
				}
			}
		}
	}
	for(new s;s<8;s++)
	{
		new str[256],sstr[40];
		format(str,sizeof(str),"Bet: %d ~g~$~n~~w~Bank: %d ~g~$",StolInfo[s][Stavka],StolInfo[s][Bank]);
		TextDrawSetString(KostiGameInfo[s],str);
		format(str,sizeof(str),"");
		for(new i;i<5;i++)
		{
			new text[15];
			text = "~w~--";
			if(GetPVarInt(StolInfo[s][Gamer][i],"StolReg") == s) text = "~g~OK";
			if(GetPVarInt(StolInfo[s][Gamer][i],"Ochki") != -1) format(text,sizeof(text),"%d",GetPVarInt(StolInfo[s][Gamer][i],"Ochki"));
			format(sstr,sizeof(sstr),"~w~%d. %s%s~n~",i+1,GetCasinName(StolInfo[s][Gamer][i]),text);
			strcat(str,sstr,256);
		}
		TextDrawSetString(KostiInfo[s],str);
	}
	if(RestartTime)
	{
		RestartTime--;
		f(mes, "» ~w~RESTART ~r~%d ~w~SEC",RestartTime);
		GameTextForAll(mes,2000,3);
		if(!RestartTime)
		{
			SendRconCommand("gmx");
			RestartTime = 0;
		}
	}
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
	    if(IsKicked(i)) continue;
		OnUpdate(i);
		pTemp[i][pKick2] = 0;
		pTemp[i][pOff] = 0;
        if(pData[i][pAdmin] > 0) pData[i][pAdminOnline]++;
		if(GetPlayerMoney(i) > pData[i][pMoney] && !pTemp[i][pIsAFK] && !pData[i][pAdmin])
		{
			if(pTemp[i][pCheat])
			{
				ResetPlayerMoney(i);
				GivePlayerMoney(i,pData[i][pMoney]);
				pTemp[i][pCheat] = false;
			}
			else pTemp[i][pCheat] = true;
		}
		if(GetPlayerState(i) == PLAYER_STATE_PASSENGER && !pTemp[i][pAFK] && pTemp[i][checkcs] == 1)
		{
			new veher = GetPlayerVehicleID(i);
			new Float:xa, Float:ya, Float:za;
			new Float:b_x, Float:b_y, Float:b_z;
			GetPlayerPos(i, b_x, b_y, b_z);
			xa = b_x - pTemp[i][pX];
			ya = b_y - pTemp[i][pY];
			za = b_z - pTemp[i][pZ];
			new Float:distance;
			distance = floatsqroot(floatadd(floatadd(floatpower(xa,2),floatpower(ya,2)),floatpower(za,2)));
			if(distance > 55)
			{
				if(GetVehicleDriver(veher) != INVALID_PLAYER_ID) pTemp[i][pCarDriver] = 20;
				else if(pTemp[i][pCarDriver] <= 0)
				{
					pTemp[i][carshoter]++;
					if(pTemp[i][carshoter] > 2)
					{
						if(pData[i][pLevel] < 2)
						{
							SendClientMessage(i,CRED,"Вы были кикнуты по подозрению в читерстве (код 1)");
							NewKick(i);
						}
						if(pData[i][pLevel] > 3)
						{
							new mees[135];
							format(mees,sizeof(mees),"%s[%d] подозревается в CarShot",pData[i][pNickname],i);
							AdminChat(CORANGE,mees);
						}
					}
				}
				else pTemp[i][pCarDriver]--;
			}
		}


		pTemp[i][pGiveExp]++;
		if(pTemp[i][AntiCrack]) pTemp[i][AntiCrack]--;
		if(pTemp[i][PlayerStoned] >= 2)
		{
			pTemp[i][PlayerStoned] += 1;
			switch(pTemp[i][PlayerStoned])
			{
				case 10,20,25,30: {
					new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if(IsPlayerInAnyVehicle(i) && GetPlayerState(i) == 2) SetVehicleZAngle(GetPlayerVehicleID(i), angle + 25);
					else SetPlayerFacingAngle(i, angle + 90);
				}
				case 31: pTemp[i][PlayerStoned] = 0;
			}
		}
  		if(IsPlayerInRangeOfPoint(i, 2, 376.0814,1953.9209,17.7444)
		|| IsPlayerInRangeOfPoint(i, 2, -2111.5747,1883.5104,11.3047))
		{
		    new armsyid;
		    if(IsPlayerInRangeOfPoint(i, 2, 376.0814,1953.9209,17.7444)) armsyid = 0;
			if(IsPlayerInRangeOfPoint(i, 2, -2111.5747,1883.5104,11.3047)) armsyid = 1;
		    if(GetPVarInt(i,"AFK_Time") >= 5) return 1;
			StealMats(i,armsyid,0);
		}

		if(pData[i][pJail])
		{
			pData[i][pJail]--;
			UpdatePlayerData(i, "jail", pData[i][pJail]);
			if(pData[i][pJail] <= 0)
			{
				SendClientMessage(i,CWHITE,"» Вы были освобождены");
				UpdatePlayerData(i, "jail", 0);
				new prison = pData[i][pPrison];
				if(pData[i][pFraction] != 0 ) SetPlayerSkin(i,pData[i][pFractionSkin]);
				else SetPlayerSkin(i,pData[i][pSkin]);
				SetPlayerInterior(i,0);
				SetPlayerVirtualWorld(i,0);
				SetPlayerPos(i,camExit[prison][0],camExit[prison][1],camExit[prison][2]);
				SetPlayerFacingAngle(i,camExit[prison][3]);
				pData[i][pJail] = 0;
				pData[i][pPrison] = 0;
				UpdatePlayerData(i,"prison",pData[i][pPrison]);
				UpdatePlayerData(i,"jail",pData[i][pJail]);
			}
		}
		if(pTemp[i][pInHospital])
		{
			if(pTemp[i][pLec] == true)
			{
				if(poluch[i] > 4)
				{
					poluch[i] = 0;
				}
				new Float:health;
				GetPlayerHealth(i, health);
				if(health < 96.0)
				{
					if(poluch[i] < 1)
					{
						pData[i][pHealth] += 1.0;
						SetPlayerChatBubble(i, "+1HP", 0x66CC00AA, 20.0, 500);
						GameTextForPlayer(i, "~p~ +1hp", 500, 4);
						PlayerPlaySound(i, 17803, 0.0, 0.0, 0.0);
						SetPlayerHealth(i,pData[i][pHealth]+1);
					}
					poluch[i]++;
				}
				else
				{
					if(pTemp[i][pLec] == true)
					{
						new h = pTemp[i][pHospital];
						new v = pTemp[i][pHospitalVW];
						UpdateDynamic3DTextLabelText(hospital[h][v], -1, "{FFCD00}Больничная койка\n{FFFFFF}Занять: /hospital");
						Hospital_hStatus[h][v] = false;
						SendClientMessage(i, COLOR_GREEN,"Вы полностью здоровы. Можете покинуть {FFCD00}больницу");
						pTemp[i][pLec] = false;
						pTemp[i][pHospital] = 0;
						pTemp[i][pInHospital] = false;
					}
					pTemp[i][pInHospital] = false;
				}
			}
		}

		if(GetPlayerSurfingVehicleID(i) != INVALID_VEHICLE_ID)
		{
		    pTemp[i][pInCarLodka] = false;
			new cid = GetPlayerSurfingVehicleID(i);
			new cm = GetVehicleModel(cid); // получаем модель авто
			switch(cm)
			{
				case 430,446,452,453,454,472,473,484,493,595:
				{
					pTemp[i][pInCarLodka] = true;
					return 1;
				} // если это лодка, скидывать ненадо)
				default:{}
			}
			new Float:x, Float:y, Float:z;
			GetPlayerPos(i,x,y,z);
			x -= 1.5;
			SetPlayerPos(i,x,y,z);
		}
		if(pTemp[i][pTazer])
		{
			pTemp[i][pTazer]--;
			if(!pTemp[i][pTazer])
			{
				SetPlayerSpecialAction(i,SPECIAL_ACTION_NONE);
				TogglePlayerControllable(i,1);
			}
		}
		if(pTemp[i][pAdvertTime] > 0) pTemp[i][pAdvertTime]--;
	}
	//Объявления
	if(gAdvertTime > 0) gAdvertTime--;
	mes = "";
	for(new i;i<MAX_ADVERT_COUNT;i++)
	{
		if(gAdvert[i][adTime]) gAdvert[i][adTime]--;
		if(gAdvert[i][adCheked] && !gAdvert[i][adTime])
		{
			f(mes, "[Объявление]: %s: Тел. %d",gAdvert[i][adText], gAdvert[i][adPhone]);
			SendClientMessageToAll(CGREEN,mes);
			if(gAdvert[i][adEditoAndCheck] == true)
			f(mes, "\t\t\t\tОбъявление отредактировал сотрудник СМИ %s[%d]", gAdvert[i][adCheker], gAdvert[i][adChekerID]);
			else
			f(mes, "\t\t\t\tОбъявление проверил сотрудник СМИ %s[%d]", gAdvert[i][adCheker], gAdvert[i][adChekerID]);
			SendClientMessageToAll(CGREEN,mes);
			strdel(gAdvert[i][adSender],0,24);
			gAdvert[i][adSenderID] = 0;
			gAdvert[i][adPhone] = 0;
			gAdvert[i][adChekerID] = 0;
            PromoText = "";
			f(PromoText, "%s", gAdvert[i][adText]);
			strdel(gAdvert[i][adText],0,100);
			strdel(gAdvert[i][adCheker],0,24);
			gAdvert[i][adSlot] = -1;
			gAdvert[i][adBusy] = false;
			gAdvert[i][adCheked] = false;
			gAdvert[i][adCheking] = false;
			gAdvert[i][adEditoAndCheck] = false;
			gAdvert[i][adTime] = 0;
			if(gAdvertCount > 0) gAdvertCount--;
		}
	}
	return 1;
}

public BusStop(playerid)
{
	new string[32];
	SetPVarInt(playerid, "TimeBus", GetPVarInt(playerid, "TimeBus") - 1);
	if(GetPVarInt(playerid, "TimeBus") != 0)
	{
		format(string,32,"~r~%d",GetPVarInt(playerid, "TimeBus"));
		GameTextForPlayer(playerid, string, 2000, 6);
		SetTimerEx("BusStop",1000,false,"i",playerid);
	}
	else
	{
		new route = pTemp[playerid][pBusRoute];
		if(  pTemp[playerid][pBusPos] == sizeof(LS_001)-1 &&  route == 0
		||   pTemp[playerid][pBusPos] == sizeof(LS_002)-1 &&  route == 1
		||   pTemp[playerid][pBusPos] == sizeof(UNI_001)-1 && route == 2  )
		{
			pTemp[playerid][pBusPos] = 0;
			SendClientMessage(playerid,0x7FC0E3FF,"Вы закончили рейс");
		}
		else pTemp[playerid][pBusPos]++;
		new p = pTemp[playerid][pBusPos];
		if(route == 0) SetPlayerRaceCheckpoint(playerid,0,LS_001[p][0],LS_001[p][1],LS_001[p][2],LS_001[p][3],LS_001[p][4],LS_001[p][5],5.0);
		if(route == 1) SetPlayerRaceCheckpoint(playerid,0,LS_002[p][0],LS_002[p][1],LS_002[p][2],LS_002[p][3],LS_002[p][4],LS_002[p][5],5.0);
		if(route == 2) SetPlayerRaceCheckpoint(playerid,0,UNI_001[p][0],UNI_001[p][1],UNI_001[p][2],UNI_001[p][3],UNI_001[p][4],UNI_001[p][5],5.0);
	}
	return 1;
}

public BusSpawn(playerid)
{
	//if(GetPVarInt(playerid,"exitedtrans") != 1) return 1;
	new Float:health;
	health = pTemp[playerid][pBusDemage];
	new repairprice = floatround((1000.0-health));
	pData[playerid][pSalary] -= repairprice/100;
	//pTemp[playerid][pWorkSalary] -= repairprice/100;
	DisablePlayerRaceCheckpoint(playerid);
	pTemp[playerid][pBusID] = INVALID_VEHICLE_ID;
	pTemp[playerid][pBusRoute] = 0;
	pTemp[playerid][pBusPos] = 0;
	pTemp[playerid][pBusPrice] = 0;
	if(IsValid3DTextLabel(pTemp[playerid][pBusText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pBusText]);
	pTemp[playerid][pBusText] = Text3D:INVALID_3DTEXT_ID;
	SendClientMessage(playerid,CWHITE,"Рабочий день окончен");
	mes = "";
	f(mes, "» Заработано: {"#cWHITE"}%d$",pData[playerid][pSalary]);
	SendClientMessage(playerid,COLOR_GREEN,mes);
	f(mes, "» За ремонт: {"#cWHITE"}-%d$",repairprice);
	SendClientMessage(playerid,CRED,mes);
	f(mes, "» Итого: {"#cWHITE"}%d$",pData[playerid][pSalary] - repairprice);
	SendClientMessage(playerid,CYELLOW,mes);
	pTemp[playerid][pWorkSalary] = 0;
	UpdatePlayerData(playerid, "salary", pData[playerid][pSalary]);
	SetVehicleToRespawnEx(pTemp[playerid][pBusID]);
	SendClientMessage(playerid,CRED,"Рабочее т/с было отбуксировано.");
	KillTimer(pTemp[playerid][pBusSpawnTimer]);
	return 1;
}

//[--------------------------------------------------]
forward PesokSpawn(playerid);
public PesokSpawn(playerid)
{
    if(IsValid3DTextLabel(pTemp[playerid][pPesok3DText])) DestroyDynamic3DTextLabelEx(pTemp[playerid][pPesok3DText]);
	SetVehicleToRespawnEx(pTemp[playerid][pPesokID]);
	pTemp[playerid][pTaxiID] = INVALID_VEHICLE_ID;
	pTemp[playerid][pWork] = 0;
	SetPlayerSkin(playerid,pTemp[playerid][pCSkin]);
	mes = "";
	f(mes, "» Заработано: {"#cWHITE"}%d$",pTemp[playerid][pWorkSalary]);
	SendClientMessage(playerid,COLOR_GREEN,mes);
	TransferMoney(-1,playerid,pTemp[playerid][pWorkSalary],"arrested");
	pTemp[playerid][pWorkSalary] = 0;
	return 1;
}
//[--------------------------------------------------]
forward VingoSpawn(playerid);
public VingoSpawn(playerid)
{
	SetVehicleToRespawnEx(pTemp[playerid][pVinogradID]);
	if(pTemp[playerid][pVodka3DText] != Text3D:INVALID_3DTEXT_ID) DestroyDynamic3DTextLabelEx(pTemp[playerid][pVodka3DText]);
	pTemp[playerid][pVinogradID] = INVALID_VEHICLE_ID;
	pTemp[playerid][pWork] = 0;
	SetPlayerSkin(playerid,pTemp[playerid][pCSkin]);
	mes = "";
	f(mes, "» Заработано: {"#cWHITE"}%d$",pTemp[playerid][pWorkSalary]);
	SendClientMessage(playerid,COLOR_GREEN,mes);
	TransferMoney(-1,playerid,pTemp[playerid][pWorkSalary],"arrested");
	pTemp[playerid][pWorkSalary] = 0;
	return 1;
}
//[--------------------------------------------------]

forward TaxiSpawn(playerid);
public TaxiSpawn(playerid)
{
	DisablePlayerRaceCheckpoint(playerid);
	SetVehicleToRespawnEx(pTemp[playerid][pTaxiID]);
	if(pTemp[playerid][pTaxi3DText] != Text3D:INVALID_3DTEXT_ID) DestroyDynamic3DTextLabelEx(pTemp[playerid][pTaxi3DText]);
	pTemp[playerid][pTaxiID] = INVALID_VEHICLE_ID;
	pTemp[playerid][pTaxiPrice] = 0;
	pTemp[playerid][pTaxiTurn][0] = INVALID_PLAYER_ID;
	pTemp[playerid][pTaxiTurn][1] = INVALID_PLAYER_ID;
	return 1;
}

forward TruckerSpawn(playerid);
public TruckerSpawn(playerid)
{
	SetVehicleToRespawnEx(pTemp[playerid][pTruckID]);
	if(IsValid3DTextLabel(pTemp[playerid][pTruckWagonText])) DestroyDynamic3DTextLabel(pTemp[playerid][pTruckWagonText]);
	pTemp[playerid][pTruckID] = INVALID_VEHICLE_ID;
	pTemp[playerid][pWork] = 0;
	SetPlayerSkin(playerid,pTemp[playerid][pCSkin]);
	return 1;
}

public UpdateCarInfo(playerid,const vehicleid,speedonly)
{
	if(IsPlayerNPC(playerid)) return 1;
	if(!IsPlayerConnected(playerid) || IsKicked(playerid))
	{
		KillTimer(pTemp[playerid][pCarInfoTimer]);
		pTemp[playerid][pCarInfoTimer] = 0;
		return 1;
	}
	//	new info[256];
	new Float:X, Float:Y, Float:Z, Float:X2, Float:Y2, Float:Z2, marks[4], tick = GetTickCount();
	marks[0] = 'r';
	marks[1] = 'r';
	marks[2] = 'r';
	marks[3] = 'g';
	new lights,engine;
	engine = GetEngineStatL(vehicleid,lights);
	if(!speedonly)
	{
		X2 = gVehicles[vehicleid-1][vX];
		Y2 = gVehicles[vehicleid-1][vY];
		Z2 = gVehicles[vehicleid-1][vZ];
		GetVehiclePos(vehicleid, X, Y, Z);
		if(X > 10000.0 || Y > 10000.0 || Z > 10000.0 || X < -10000.0 || Y < -10000.0 || Z < -10000.0)
		{
			SendClientMessage(playerid,CWHITE,"» Ошибка 2");
			NewKick(playerid);
			SetVehicleToRespawnEx(vehicleid);
			return 1;
		}
		new Float:veloc;
		veloc = PointToPoint3D(X2,Y2,Z2,X,Y,Z)/1000;
		gVehicles[vehicleid-1][vDrived] += veloc;
		if(engine == 1)
		{
			marks[0] = 'g';
			gVehicles[vehicleid-1][vFuel] -= (veloc/100)*gTransport[GetVehicleModel(vehicleid)-400][trConsumption];
			if(gVehicles[vehicleid-1][vFuel] <= 0.0)
			{
				gVehicles[vehicleid-1][vFuel] = 0.0;
				ToggleEngine(vehicleid);
				SendClientMessage(playerid,CWHITE,"» Двигатель заглох");
			}
			else if(gVehicles[vehicleid-1][vHealth] <= 300.0)
			{
				gVehicles[vehicleid-1][vHealth] = 300.0;
				ToggleEngine(vehicleid);
				SendClientMessage(playerid,CWHITE,"» Двигатель заглох");
			}
		}
		gVehicles[vehicleid-1][vX] = X;
		gVehicles[vehicleid-1][vY] = Y;
		gVehicles[vehicleid-1][vZ] = Z;
	}
	GetVehicleVelocity(vehicleid,X,Y,Z);
	new Float:speed = floatsqroot(floatadd(floatadd(floatpower(X, 2), floatpower(Y, 2)),  floatpower(Z, 2))) * 126.31;

	new Float:acceleration;
	acceleration = (speed - pTemp[playerid][pSpeed0]) / 0.2;
	if(acceleration >= 160.0 && tick - pTemp[playerid][pLastTick2] < 400)
	{
	    SendClientMessage(playerid,COLOR_LIGHTRED,"» Вы кикнуты по подозрению в читерстве (#131)");
   		//NewKick(playerid);

	}
	if(!engine && speed != 0 && tick - pTemp[playerid][pLastTick2] < 400) {
		if(speed >= pTemp[playerid][pSpeed0] + 1) {
			pTemp[playerid][pKick5] ++;
			if(pTemp[playerid][pKick5] >= 10) {
			    SendClientMessage(playerid,COLOR_LIGHTRED,"» Вы кикнуты по подозрению в читерстве (#136)");
   				NewKick(playerid);
				//AddCheaterID(playerid,1);
			}
		}
		else pTemp[playerid][pKick5] = 0;
	}
	pTemp[playerid][pSpeed0] = speed;
	if(pTemp[playerid][pTaxiGoing])
	{
		if(pTemp[playerid][pTaxiTurn][0] != INVALID_PLAYER_ID)
		{
			new gig = pTemp[playerid][pTaxiTurn][0];
			if(!IsPlayerConnected(gig) || GetPlayerVehicleID(gig) != vehicleid) pTemp[playerid][pTaxiTurn][0] = INVALID_PLAYER_ID;
		}
		if(pTemp[playerid][pTaxiTurn][1] != INVALID_PLAYER_ID)
		{
			new gig = pTemp[playerid][pTaxiTurn][1];
			if(!IsPlayerConnected(gig) || GetPlayerVehicleID(gig) != vehicleid) pTemp[playerid][pTaxiTurn][1] = INVALID_PLAYER_ID;
		}
		new passid = pTemp[playerid][pTaxiPass];
		if(!IsPlayerConnected(passid) || passid == INVALID_PLAYER_ID)
		{
			pTemp[playerid][pTaxiGoing] = false;
			pTemp[playerid][pTaxiPass] = INVALID_PLAYER_ID;
			pTemp[playerid][pTaxiStart] = 0.0;
		}
		else
		{
			new sum = floatround((gVehicles[vehicleid-1][vDrived] - pTemp[playerid][pTaxiStart])*pTemp[playerid][pTaxiPrice]);
			if(GetPlayerState(passid) == PLAYER_STATE_PASSENGER && GetPlayerVehicleID(passid) == vehicleid)
			{
				mes = "";
				f(mes, "» ~g~%d$",sum);
				GameTextForPlayer(playerid,mes,300,4);
				f(mes, "» ~r~%d$",sum);
				GameTextForPlayer(passid,mes,300,4);
				if(GetPlayerMoneyEx(passid) < sum)
				{
					SendClientMessage(passid,CWHITE,"» Недостаточно денег для проезда на такси");
					if(GetPlayerMoneyEx(passid) - sum > -5 && sum > 0)
					{
						TransferMoney(passid,playerid,sum,"taxipay");
					}
					pTemp[playerid][pTaxiGoing] = false;
					pTemp[playerid][pTaxiPass] = INVALID_PLAYER_ID;
					passid = INVALID_PLAYER_ID;
					pTemp[playerid][pTaxiStart] = 0.0;
					RemovePlayerMapIcon(playerid,iconTaxi);
					RemovePlayerMapIcon(passid,iconTaxi);
					RemovePlayerFromVehicle(passid);
					return 1;
				}
			}
			else
			{
				pTemp[playerid][pTaxiGoing] = false;
				pTemp[playerid][pTaxiPass] = INVALID_PLAYER_ID;
				pTemp[playerid][pTaxiStart] = 0.0;
				RemovePlayerMapIcon(playerid,iconTaxi);
				RemovePlayerMapIcon(passid,iconTaxi);
				if(sum > 0)
				{
					TransferMoney(passid,playerid,sum,"taxipay");
				}
				passid = INVALID_PLAYER_ID;
			}
		}
		if(passid == INVALID_PLAYER_ID && pTemp[playerid][pTaxiTurn][0] != INVALID_PLAYER_ID)
		{
			passid = pTemp[playerid][pTaxiTurn][0];
			if(IsPlayerConnected(passid) && GetPlayerVehicleID(passid) == vehicleid)
			{
				if(GetPlayerMoneyEx(passid) < pTemp[playerid][pTaxiPrice])
				{
					SendClientMessage(passid,CWHITE,"» Недостаточно денег для проезда на такси");
					return RemovePlayerFromVehicle(passid);
				}
				pTemp[playerid][pTaxiStart] = gVehicles[vehicleid-1][vDrived];
				pTemp[playerid][pTaxiPass] = passid;
				pTemp[playerid][pTaxiGoing] = true;
				pTemp[playerid][pTaxiTurn][0] = INVALID_PLAYER_ID;
				mes = "";
				f(mes, "» Теперь за проезд будет платить {"#cWHITE"}%s",pData[passid][pNickname]);
				SendClientMessage(playerid,CINFO,mes);
				SendClientMessage(passid,CINFO,"Теперь Вы платите за проезд");
			}
			else pTemp[playerid][pTaxiTurn][0] = INVALID_PLAYER_ID;
		}
		if(pTemp[playerid][pTaxiTurn][1] != INVALID_PLAYER_ID && pTemp[playerid][pTaxiTurn][0] == INVALID_PLAYER_ID) {pTemp[playerid][pTaxiTurn][0] = pTemp[playerid][pTaxiTurn][1]; pTemp[playerid][pTaxiTurn][1] = INVALID_PLAYER_ID;}
	}
	if(speed >= 10 && !pTemp[playerid][pDialog] && !IsKicked(playerid)) {
		if(pTemp[playerid][pBusID] != vehicleid && vehicleid >= aBus[0] && vehicleid <= aBus[1]) {
            SendClientMessage(playerid,COLOR_LIGHTRED,"» Вы кикнуты по подозрению в читерстве (#225)");
			NewKick(playerid);
		}
		if(pTemp[playerid][pTaxiID] != vehicleid && vehicleid >= aTaxi[0] && vehicleid <= aTaxi[1]) {
            SendClientMessage(playerid,COLOR_LIGHTRED,"» Вы кикнуты по подозрению в читерстве (#226)");
			NewKick(playerid);
		}
		if(pTemp[playerid][pMechID] != vehicleid && vehicleid >= aMech[0] && vehicleid <= aMech[1]) {
		    SendClientMessage(playerid,COLOR_LIGHTRED,"» Вы кикнуты по подозрению в читерстве (#227)");
			NewKick(playerid);
		}
		if(pTemp[playerid][pDFTID] != vehicleid && vehicleid >= aProduct[0] && vehicleid <= aProduct[1]) {
			SendClientMessage(playerid,COLOR_LIGHTRED,"» Вы кикнуты по подозрению в читерстве (#228)");
			NewKick(playerid);
		}
	}
	pTemp[playerid][pLastTick2] = GetTickCount();
	return 1;
}

task FuelTmier[30000]()
{
	for(new i;i<MAX_VEHICLES;i++)
	{
		if(GetEngineStat(i+1) > 0)
		{
			if(gVehicles[i][vFuel] >= 1.0) gVehicles[i][vFuel] -= 1.0;
			else gVehicles[i][vFuel] = 0;
		}
	}
}

task MinuteTimer[60000]()
{
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(!IsPlayerConnected(i) || !pTemp[i][pLogined]) continue;

		if(pData[i][pMut])
		{
			pData[i][pMut]--;
			UpdatePlayerData(i,"mut",pData[i][pMut]);
			if(!pData[i][pMut]) SendClientMessage(i,0x7FC0E3FF,"Вы снова можете использовать чат");
		}
		if(ZavodInfo[3] > 0) ZavodInfo[3] -= 5;
	}
}

public PlayerPlaySoundDelay(playerid,soundid)
{
	PlayerPlaySound(playerid,soundid,0.0,0.0,0.0);
	return 1;
}

public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat)
{
 	if(passenger_seat)
	{
		new Float:x, Float:y, Float:z;
		GetVehiclePos(vehicleid,x,y,z);
		if(GetFloatDifference(x,gVehicles[vehicleid-1][vX]) > 10.0 || GetFloatDifference(y,gVehicles[vehicleid-1][vY]) > 10.0)
		{
			gVehicles[vehicleid-1][vX] = x;
			gVehicles[vehicleid-1][vY] = y;
			gVehicles[vehicleid-1][vZ] = z;
			SetPVarInt(playerid,"pKick4",GetPVarInt(playerid,"pKick4") + 1);
   			if(!IsKicked(playerid) && GetPVarInt(playerid,"pKick4") == 4)
	  		{
				SendClientMessage(playerid, 0xB85A1CFF, "Вы были кикнуты, в подозрении использования чит-программ. (#0016)"), NewKick(playerid);
			}
		}
	}
	return 1;
}


forward SelectStoreGun(playerid);
public SelectStoreGun(playerid)
{
	pTemp[playerid][pSelectStoreGun] = true;
}

forward SetCameraBehindPlayerDelay(playerid);
public SetCameraBehindPlayerDelay(playerid)
{
	SetCameraBehindPlayer(playerid);
}



forward GameModeExitDelay();
public GameModeExitDelay()
{
	GameModeExit();
}

forward ClearAnimationsDelay(playerid);
public ClearAnimationsDelay(playerid)
{
	ApplyAnimation(playerid,"ped","IDLE_chat",4.1,1,0,0,0,1,1);
	//ClearAnimations(playerid);
}

forward CarryDelay(playerid);
public CarryDelay(playerid)
{
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
}

forward CloseBarrier(id);
public CloseBarrier(id)
{
	switch(id)
	{
	case 0: MoveDynamicObject(gBarrier[0],346.70, 1799.90, 18.00,0.01,0.00, 269.00,34.00);
		//case 1: MoveDynamicObject(gBarrier[1],141.80, 1965.30, 19.30,0.01,0.00, 269.99,0.00);
	case 2:
		{
			MoveDynamicObject(gBarrier[2],462.21, 2540.05, 19.01, 1.0);
			MoveDynamicObject(gBarrier[3],466.81, 2546.64, 19.01, 1.0);
		}
	case 3:
		{
			MoveDynamicObject(gBarrier[4],1544.69, -1630.72, 13.07,0.001,0.00, 90.00, 90.00);
		}
	case 4: MoveDynamicObject(gBarrier[5],-1572.20, 658.76, 6.76,0.001,0.00, 90.00, 90.00);
	case 5: MoveDynamicObject(gBarrier[6],-1701.43, 687.70, 24.59,0.001,0.00, -90.00, 90.00);
	case 6: MoveDynamicObject(gBarrier[7],141.80, 1965.30, 19.30, 0.001,  0.00, 270.0, 0.00);
	case 7: MoveDynamicObject(gBarrier[8],-1526.3563, 481.3394, 6.9847,  0.001, 0.0000, -90.0000, 0.0000);
	case 8: MoveDynamicObject(gGateFBI[0],2487.1912, 2350.8020, 12.1700, 2, 0.0000, 0.0000, 90.0000);
	case 9: MoveDynamicObject(gGateFBI[1],2516.7427, 2343.4758, 10.5105, 0.02,0.0000, -90.0000, 269.0000);
	case 10: MoveDynamicObject(gGateMayor[0],2526.3623, 2423.7952, 10.6272, 0.02,0.0000, -90.0000, 360.0000);
	case 11: MoveDynamicObject(gGateMayor[1],2528.2886, 2423.8333, 10.6272, 0.02,0.0000, 90.0000, 360.0000);
	case 12: MoveDynamicObject(gGateMayor[2],2478.5649, 2515.6433, 10.6204, 0.02,0.0000, 90.0000, 271.0000);
	}
}
forward AntiCarShoter(playerid);
public AntiCarShoter(playerid)
{
	pTemp[playerid][checkcs] = 1;
	return 1;
}
forward CarHack(playerid, vehicleid);
public CarHack(playerid, vehicleid)
{
	if(!IsPlayerConnected(playerid)) return 0;
	if(IsPlayerInVehicle(playerid, vehicleid) && GetPVarInt(playerid,"AFK_Time") < 1)
	{
		//new model = GetVehicleModel(vehicleid);
		//if(model == 509 || model == 510) return 1;
		mes = "";
		f(mes, "» %s[%d] кикнут за антивыкидывание из транспорта",pData[playerid][pNickname],playerid);
		AdminChat(CRED,mes);
		NewKick(playerid);
	}
	return 1;
}

forward ClearPhone(playerid);
public ClearPhone(playerid)
{
	RemovePlayerAttachedObject(playerid, 3);
}

//

forward SetPlayerPosExA(playerid,Float:x,Float:y,Float:z);
public SetPlayerPosExA(playerid,Float:x,Float:y,Float:z)
{
	SetPlayerPos(playerid,x,y,z,0);
}

forward Unfreez(playerid);
public Unfreez(playerid)
{
	TogglePlayerControllable(playerid,1);
	ClearAnimations(playerid);
}

forward StealMats(playerid, armyid, type);
public StealMats(playerid, armyid, type)
{
//	new bool:dostup = false;
	switch(type)
	{
	case 0:
		{
		    	if(IsAMafia(playerid)) return SendClientMessage(playerid, CGRAY, "Вы не можете пользоваться этим складом");
		    	if(pData[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_LIGHTRED, "Вам нужен 2 уровень");
				new f = random(10)+15;
				if(gArmyWarehouse[armyid][0] < f) return SendClientMessage(playerid,CWHITE,"» На складе недостаточно материалов");
				new value = 40;
				switch(pData[playerid][pSumka])
				{
				    case 1: value = 60;
				    case 2: value = 80;
				    case 3: value = 100;
				}
				if(pData[playerid][pFraction] != 8)
				{
					if(pData[playerid][pMaterialN]+f >= value) return SendClientMessage(playerid,CWHITE,"» У вас нет места в инвентаре (#321)");
					pData[playerid][pMaterialN] += f;
					UpdatePlayerData(playerid,"materialn",pData[playerid][pMaterialN]);
				}
				else
				{
				    if(pData[playerid][pGunAmount]+f >= value) return SendClientMessage(playerid,CWHITE,"» У вас нет места в инвентаре (#321)");
					pData[playerid][pGunAmount] += f;
					UpdatePlayerData(playerid, "gunamount", pData[playerid][pGunAmount]);
				}
				gArmyWarehouse[armyid][0] -= f;
				new str[200];
				format(str, 200, "~y~material: +%d", f);
				GameTextForPlayer(playerid, str, 1500, 6);
		}
	}
	return 1;
}





forward AttachTrailerToVehicleEx(trailerid,vehicleid);
public AttachTrailerToVehicleEx(trailerid,vehicleid)
{
	AttachTrailerToVehicle(trailerid,vehicleid);
}

forward RemovePlayerAttachedObjectDelay(playerid,slot);
public RemovePlayerAttachedObjectDelay(playerid,slot)
{
	RemovePlayerAttachedObject(playerid,slot);
}


stock Debug(string[],va_args<>)
{
	mes = "";
	va_f(mes, string,va_start<1>);
	f(mes, "INSERT INTO `debug` VALUES ('','%s');",mes);
	sql_query(zConn, mes); mes = "";
}

stock ToggleEngine(vehicleid)
{
	if(IsNotDriving(vehicleid) == 1) return 1;
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	new Float:Health;
	GetVehicleHealth(vehicleid, Health);
	if(engine <= 0)
	{
		if(Health < 400 || gVehicles[vehicleid-1][vFuel] <= 0) return -1;
		else engine = 1;
		engine = 1;
	}
	else if (engine > 0) engine = 0;
	SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return engine;
}

stock GetEngineStat(vehicleid)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return engine;
}

stock GetEngineStatL(vehicleid,&lights)
{
	new engine, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return engine;
}

stock WHDataUpdate()
{
	new mess[270];
	f(mess,"Состояние склада: \nМатериалы: {FFFFFF}%d/500000 {FFCD00}ед.",gGunWorkWH[2]);
	UpdateDynamic3DTextLabelText(gGunWorkWHText,COLOR_AQUA,mess);
	f(mess,"Состояние склада: {FFFFFF}%d {FFCD00}литров",gWoodWH);
	UpdateDynamic3DTextLabelText(gWoodWHText,COLOR_AQUA,mess);
	f(mess,"Песок: {FFFFFF}%d/1000000 {FFCD00}кг\nВино: {FFFFFF}%d {FFCD00}л\nВиноград: {FFFFFF}%d/10000 {FFCD00}кг\nБензин: {FFFFFF}%d/100000 {FFCD00}л\n\n{FFCD00}Разгрузить песок или виноград: {FFFFFF}/unload\n{FFCD00}Разгрузить бензин: {FFFFFF}/pcc",ZavodInfo[0], gWoodWH, ZavodInfo[2], ZavodInfo[3]);
	UpdateDynamic3DTextLabelText(ZavodText[0],COLOR_AQUA,mess);
	UpdateDynamic3DTextLabelText(ZavodText[1],COLOR_AQUA,mess);




	f(mess,"Состояние склада: {FFFFFF}%d {FFCD00}кг\n\n{FFCD00}Загрузить: {FFFFFF}/load", ZavodInfo[4]);
	UpdateDynamic3DTextLabelText(gWoodWHText3,COLOR_AQUA,mess);

	f(mess,"Состояние завода: {FFFFFF}%d {FFCD00}литров\n\n{FFCD00}Загрузить: {FFFFFF}/pcc", FuelInfo[0]);
	UpdateDynamic3DTextLabelText(gWoodWHText33,COLOR_AQUA,mess);

	f(mess,"Песка на складе: {FFFFFF}%d {FFCD00}кг\n\n{FFCD00}Загрузить: {FFFFFF}/load", FuelInfo[1]);
	UpdateDynamic3DTextLabelText(gWoodWHText333,COLOR_AQUA,mess);


	f(mess,"Материалов на складе: {FFFFFF}%d/200000",gArmyWarehouse[0][0]);
	UpdateDynamic3DTextLabelText(gArmyWarehouseText[3],COLOR_AQUA,mess);

	f(mess,"Материалов на складе: {FFFFFF}%d/200000",gArmyWarehouse[1][0]);
	UpdateDynamic3DTextLabelText(gArmyWarehouseText[4],COLOR_AQUA,mess);


	TotalGz[0] = 0;
	TotalGz[1] = 0;
	TotalGz[2] = 0;
	TotalGz[3] = 0;
	TotalGz[4] = 0;
	for(new i = 0; i != MAX_GZONE;i++)
	{
		switch(GZMZ[i][gFrak])
		{
		case F_BALLAS: TotalGz[0]++;
		case F_GROVE: TotalGz[1]++;
		case F_AZTEC: TotalGz[2]++;
		case F_VAGOS: TotalGz[3]++;
		case F_RIFA: TotalGz[4]++;
		}
	}
 	for(new i;i<5;i++)
	{
		f(mess,"{%s}%s\n{FFFFFF}Количество территорий: {%s}%d\n{FFFFFF}Заготовки: {%s}%d/10000\n{FFFFFF}Наркотики: {%s}%d/30000\n{FFFFFF}Деньги: {%s}%d$\n{FFFFFF}Единицы оружия: {%s}%d",
		GetColor3DText(i),gGangName3D[i],
		GetColor3DText(i),TotalGz[i],
		GetColor3DText(i),gGangDorm[i][0],
		GetColor3DText(i),gGangDorm[i][2],
		GetColor3DText(i),gGangDorm[i][3],
		GetColor3DText(i),gGangDorm[i][1]);
		UpdateDynamic3DTextLabelText(gGangDormText[i],-1,mess);
	}
	TotalGz1[0] = 0;
	TotalGz1[1] = 0;
	TotalGz1[2] = 0;
	for(new jd; jd < 6; jd++)
	{
		switch(gNark[jd][nOwner])
		{
			case F_YAK: TotalGz1[0]++;
			case F_LCN: TotalGz1[1]++;
			case F_RM: TotalGz1[2]++;
		}
	}
	new atext[32];
	for(new i=0;i<3;i++)
	{
		switch(i)
		{
			case 0: atext = "Yakuza";
			case 1: atext = "La Cosa Nostra";
			case 2: atext = "Russian Mafia";
		}
		format(mes,sizeof(mes),"{FFFFFF}%s\n{%s}Количество наркоточек: {FFFFFF}%d\n{%s}Наркотики: {FFFFFF}%d\n{%s}Деньги: {FFFFFF}%d",
		atext,
		GetColor3DTextMafia(i), TotalGz1[i],
		GetColor3DTextMafia(i), MafiaDrug[i],
		GetColor3DTextMafia(i), MafiaMoney[i]);
		UpdateDynamic3DTextLabelText(Mafia3d[i],CWHITE,mes);

		mes = "";
		f(mes, "{FFFFFF}%s\n{%s}Заготовок материалов: {FFFFFF}%d\n{%s}Единицы оружия: {FFFFFF}%d\n\n{%s}9mm: {FFFFFF}%d\n{%s}Silenced 9mm: {FFFFFF}%d\n{%s}Desert Eagle: {FFFFFF}%d\n{%s}ShoutGun: {FFFFFF}%d\n{%s}MP5: {FFFFFF}%d\n{%s}AK47: {FFFFFF}%d\n{%s}M4: {FFFFFF}%d",
		atext,
		GetColor3DTextMafia(i), gMafiaInfo[i][mMaterial],
		GetColor3DTextMafia(i), gMafiaInfo[i][mEdenits],
		GetColor3DTextMafia(i), gMafiaInfo[i][mGun][0],
		GetColor3DTextMafia(i), gMafiaInfo[i][mGun][1],
		GetColor3DTextMafia(i), gMafiaInfo[i][mGun][2],
		GetColor3DTextMafia(i), gMafiaInfo[i][mGun][3],
		GetColor3DTextMafia(i), gMafiaInfo[i][mGun][4],
		GetColor3DTextMafia(i), gMafiaInfo[i][mGun][5],
		GetColor3DTextMafia(i), gMafiaInfo[i][mGun][6]);
		UpdateDynamic3DTextLabelText(gMafia3D[i],-1,mes);
	}
}


stock SetPlayerDataToDefault(playerid)
{
	SetPVarInt(playerid,"breaked",0);
	ShowPlayerDialog(playerid, -1, 0, "", "", "", "");
	pData[playerid][pMysqlID] = 0;
	strdel(pData[playerid][pNickname],0,MAX_PLAYER_NAME);
	strdel(pData[playerid][pPassword],0,MAX_PLAYER_NAME);
	strdel(pData[playerid][pEmail],0,MAX_PLAYER_NAME);
	pData[playerid][pMarried] = 0;
	strdel(pData[playerid][pDivorce],0,MAX_PLAYER_NAME);
	pData[playerid][pSex] = 0;
	pData[playerid][pWarn] = 0;
	pData[playerid][pMut] = 0;
	pData[playerid][pEConfirmed] = 0;
	pData[playerid][pAge] = 0;
	pData[playerid][pSkin] = 0;
	pData[playerid][pFractionSkin] = 0;
	pData[playerid][pHealth] = 100;
	pData[playerid][pColor] = 0;
	pData[playerid][pHouse] = 0;
	pData[playerid][pHotel] = 0;
	pData[playerid][pHotelRoom] = 0;
	pData[playerid][pJob] = 0;
	pData[playerid][pCar] = 0;
	pData[playerid][pSalary] = 0;
	pData[playerid][pMoney] = 0;
	pData[playerid][pRadio] = 0;
	pData[playerid][pSpawn] = 0;
	pData[playerid][pBank] = 0;
	pData[playerid][pLevel] = 1;
	pData[playerid][pExp] = 0;
	pData[playerid][pPhone] = 0;
	pData[playerid][pPhoneMoney] = 0;
	pData[playerid][pWanted] = 0;
	pData[playerid][pJail] = 0;
	pData[playerid][pPrison] = 0;
	pData[playerid][pDrugs] = 0;
	pData[playerid][pAmmo] = 0;
	pData[playerid][pGunAmount] = 0;
	pData[playerid][pSpouse] = 0;
	pData[playerid][pFraction] = 0;
	pData[playerid][pSubfraction] = 0;
	pData[playerid][pRank] = 0;
	pData[playerid][pWatch] = 0;
	pData[playerid][pBusiness] = 0;
	pData[playerid][pLevel] = 0;
	//strdel(pData[playerid][pCode],0,MAX_PLAYER_NAME);
	pData[playerid][pRequestCode] = 0;
	format(pData[playerid][pLanguage], 7,"%s", LANG_NONE);
	pData[playerid][pAdmin] = 0;
	pData[playerid][pLicenses] = {0,0,0,0,0};
	pData[playerid][pStatus] = 0;
	pData[playerid][pUnemployment] = 0;
	pData[playerid][pSettings] = 65535;
	pData[playerid][pDonate] = 0;
	pData[playerid][pVehicleKey] = 0;
	pData[playerid][pArmyTime] = 0;
	pData[playerid][pArmyRank] = 0;
	pData[playerid][pBankNomer] = 0;
	strdel(pData[playerid][pBankNomer],0,MAX_PLAYER_NAME);

	for(new i;i<13;i++) gGuns[playerid][i] = 0, gAmmos[playerid][i] = 0;



	pTemp[playerid][pJoined] = false;
	pTemp[playerid][pLogined] = false;
	pTemp[playerid][pLoginAttempt] = 0;
	pTemp[playerid][pChoosingSkin] = false;
	pTemp[playerid][pWork] = 0;
	pTemp[playerid][hotelEnter] = 0;
	pTemp[playerid][pWorkSalary] = 0;
	pTemp[playerid][pDozerText] = Text3D:INVALID_3DTEXT_ID;
	pTemp[playerid][pDozerID] = INVALID_VEHICLE_ID;
	pTemp[playerid][pJustTP] = false;
	pTemp[playerid][pBusID] = INVALID_VEHICLE_ID;
	pTemp[playerid][pBusRoute] = 0;
	pTemp[playerid][AntiCrack] = 0;
	pTemp[playerid][PlayerStoned] = 0;
	pTemp[playerid][FBISkip] = 0;
	pTemp[playerid][PDSkip] = 0;
	pTemp[playerid][pBusPos] = 0;
	pTemp[playerid][pBusPrice] = 0;
	pTemp[playerid][pBusSpawnTimer] = 0;
	pTemp[playerid][pBusDemage] = 0;
	pTemp[playerid][pBusText] = Text3D:INVALID_3DTEXT_ID;
	pTemp[playerid][pTruckID] = INVALID_VEHICLE_ID;
	pTemp[playerid][pTruckWagonID] = INVALID_VEHICLE_ID;
	pTemp[playerid][pTruckWagonText] = Text3D:INVALID_3DTEXT_ID;
	pTemp[playerid][pTruckWagonTime] = 0;
	pTemp[playerid][pTruckWeight] = 0;
	pTemp[playerid][pTruckLoadID] = 0;
	pTemp[playerid][pTaxiID] = INVALID_VEHICLE_ID;
	pTemp[playerid][pTaxiPrice] = 0;
	pTemp[playerid][pTaxi3DText] = Text3D:INVALID_3DTEXT_ID;
	pTemp[playerid][pRace3DText] = Text3D:INVALID_3DTEXT_ID;
	pTemp[playerid][pTaxiGoing] = false;
	pTemp[playerid][pTaxiPass] = INVALID_PLAYER_ID;
	pTemp[playerid][pTaxiStart] = 0.0;
	pTemp[playerid][pTaxiTurn][0] = INVALID_PLAYER_ID;
	pTemp[playerid][pTaxiTurn][1] = INVALID_PLAYER_ID;
	pTemp[playerid][pIsInHouse] = false;
	pTemp[playerid][pSelectedHouseID] = 0;
	pTemp[playerid][pSellHouseOffer] = INVALID_PLAYER_ID;
	pTemp[playerid][pSellHouseOffee] = INVALID_PLAYER_ID;
	pTemp[playerid][pSellHousePrice] = 0;
	pTemp[playerid][pSellFillingOffer] = INVALID_PLAYER_ID;
	pTemp[playerid][pSellFillingOffee] = INVALID_PLAYER_ID;
	pTemp[playerid][pSellFillingPrice] = 0;
	pTemp[playerid][pSellHouseID] = 0;
	pTemp[playerid][pSettleHouseOffer] = INVALID_PLAYER_ID;
	pTemp[playerid][pSettleHouseOffee] = INVALID_PLAYER_ID;
	pTemp[playerid][pSettleHouseID] = 0;
	pTemp[playerid][pSellCarSelect] = false;
	pTemp[playerid][pSellCarOffer] = INVALID_PLAYER_ID;
	pTemp[playerid][pSellCarOffee] = INVALID_PLAYER_ID;
	pTemp[playerid][pSellCarPrice] = 0;
	pTemp[playerid][pSellCarID] = 0;
	pTemp[playerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
	pTemp[playerid][pSellBusinessOffer] = INVALID_PLAYER_ID;
	pTemp[playerid][pSellBusinessOffee] = INVALID_PLAYER_ID;
	pTemp[playerid][pSellBusinessPrice] = 0;
	pTemp[playerid][pSellBusinessID] = 0;
	pTemp[playerid][pActPlayer] = INVALID_PLAYER_ID;
	pTemp[playerid][pCheckAD] = -1;
	pTemp[playerid][pAFK] = 0;
	pTemp[playerid][pAFKText] = Text3D:INVALID_3DTEXT_ID;
	pTemp[playerid][pIsAFK] = false;
	pTemp[playerid][pShowNicknames] = true;
	pTemp[playerid][pSelectStoreGun] = false;
	pTemp[playerid][pStoreGun] = 0;
	pTemp[playerid][pChangingSkin] = false;
	pTemp[playerid][pCarryProducts] = 0;
	pTemp[playerid][pEat] = 0;
	pTemp[playerid][pGPS] = false;
	pTemp[playerid][Marked] = false;
	pTemp[playerid][pUseButton] = true;
	pTemp[playerid][pWaitingExam] = false;
	pTemp[playerid][pExamType] = 0;
	pTemp[playerid][pExamCandidate] = INVALID_PLAYER_ID;
	pTemp[playerid][pOnExam] = false;
	pTemp[playerid][pTestQNumber] = 0;
	pTemp[playerid][pCheat] = false;
	pTemp[playerid][pX] = 0.0;
	pTemp[playerid][pY] = 0.0;
	pTemp[playerid][pZ] = 0.0;
	pTemp[playerid][pAbletoTP] = false;
	pTemp[playerid][pAbletoGun] = 0;
	pTemp[playerid][pAbletoHP] = false;
	pTemp[playerid][pArmour] = 0.0;
	pTemp[playerid][pOff] = false;
	pTemp[playerid][pLoginTime] = 100;
	pTemp[playerid][pAntiDM] = false;
	pTemp[playerid][pCall] = false;
	pTemp[playerid][pDM] = 0;
	pTemp[playerid][pKick] = 0;
	pTemp[playerid][pKick2] = 0;
	pTemp[playerid][pKick3] = 0;
	pTemp[playerid][pDarkAFK] = 0;
	pTemp[playerid][pCaller] = INVALID_PLAYER_ID;
	pTemp[playerid][pCallee] = INVALID_PLAYER_ID;
	pTemp[playerid][pInHospital] = false;
	pTemp[playerid][pDead] = false;
	pTemp[playerid][pGangKey] = false;
	pTemp[playerid][pEnterVehicle] = INVALID_VEHICLE_ID;
	pTemp[playerid][pTakeGun] = 0;
	pTemp[playerid][pMechID] = INVALID_VEHICLE_ID;
	pTemp[playerid][pMechOffer] = INVALID_PLAYER_ID;
	pTemp[playerid][pMechOffee] = INVALID_PLAYER_ID;
	pTemp[playerid][pMechTrailer] = 0;
	pTemp[playerid][pTazer] = 0;
	pTemp[playerid][pCuffer] = INVALID_PLAYER_ID;
	pTemp[playerid][pCuffee] = INVALID_PLAYER_ID;
	pTemp[playerid][pControllable] = 1;
	pTemp[playerid][pGiveExp] = 0;
	pTemp[playerid][pKick5] = 0;
	pTemp[playerid][pKick6] = 0;
	pTemp[playerid][pKick7] = 0;
	pTemp[playerid][pCoalmanTime] = 0;
	pTemp[playerid][pTPhone] = true;
	pTemp[playerid][pAngle] = 0.0;
	pTemp[playerid][pBangam] = true;
	pTemp[playerid][pSLimit] = 0;
	pTemp[playerid][pSelectedBusinessID] = -1;
	pTemp[playerid][pEconomicLog] = false;
	pTemp[playerid][pEther] = false;
	pTemp[playerid][pAntiCleoWood] = 0;
	pTemp[playerid][pAntiCleoWoodKick] = 0;
	pTemp[playerid][pPresentOn] = false;
	pTemp[playerid][pDeliving] = false;
	pTemp[playerid][pDeliveryid] = 0;
	pTemp[playerid][pDeliveryNumber] = 0;
	pTemp[playerid][pDFTID] = INVALID_VEHICLE_ID;
	pTemp[playerid][pDialog] = false;
	pTemp[playerid][pTazerGun] = false;
	pTemp[playerid][pWantedListIndex] = -1;
	pTemp[playerid][pLastTick] = 0;
	pTemp[playerid][pLastTick2] = 0;


	RemoveBuildingForPlayer(playerid,17325, -1109.0391, -1621.1016, 75.2656, 0.25);
	RemoveBuildingForPlayer(playerid,17324, -1109.0391, -1621.1016, 75.2656, 0.25);
	RemoveBuildingForPlayer(playerid,1676,-92.1016,-1161.7891,2.9609,20.0);
	RemoveBuildingForPlayer(playerid,1676,1941.6563,-1778.4531,14.1406,20.0);
	RemoveBuildingForPlayer(playerid,1686,655.6641,-571.2109,15.3594,20.0);
	RemoveBuildingForPlayer(playerid, 3345, 400.1172, 2543.5703, 15.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 149.9141, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 161.7891, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 123.0469, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 311.1328, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 176.7891, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 338.0078, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 323.0078, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 203.6563, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 230.5234, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 349.8750, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 269.2656, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 242.3984, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 188.6563, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 108.0469, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 176.7891, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 230.5234, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 257.3984, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 284.2656, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 284.2656, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 296.1406, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 215.5313, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 134.9141, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 16595, 419.3750, 2538.5000, 15.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 16596, 412.8281, 2542.8672, 15.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 16597, 437.3828, 2547.5156, 15.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 16598, 231.2813, 2545.7969, 20.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3296, 255.9844, 2549.3281, 20.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3295, 392.7109, 2596.4531, 17.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3296, 376.2969, 2606.3438, 20.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3295, 390.8203, 2604.0703, 20.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3295, 389.1328, 2611.0625, 20.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3295, 382.1875, 2609.4766, 19.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 16600, 435.6250, 2532.0859, 20.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 16602, 307.9531, 2543.4531, 20.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 16772, 404.7969, 2454.7188, 22.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 108.0469, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 161.7891, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3364, 77.3203, 2456.2500, 15.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 188.6563, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 134.9141, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 215.5313, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 242.3984, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3287, 255.9844, 2549.3281, 20.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 16599, 231.2813, 2545.7969, 20.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 269.2656, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 278.1484, 2555.1875, 15.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 16098, 307.9531, 2543.4531, 20.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 296.1406, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 123.0469, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 176.7891, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 230.5234, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 284.2656, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 149.9141, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 176.7891, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 230.5234, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 203.6563, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 257.3984, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 284.2656, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 323.0078, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 16101, 321.6719, 2463.4922, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 16368, 321.6719, 2463.4922, 25.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 349.8750, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 357.5938, 2449.6172, 15.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 364.2266, 2450.7578, 15.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 316.3984, 2570.3672, 15.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 361.3750, 2571.8125, 15.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 338.0078, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 311.1328, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3287, 376.2969, 2606.3438, 20.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3286, 382.1875, 2609.4766, 19.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 16771, 404.7969, 2454.7188, 22.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 16773, 397.4766, 2476.6328, 19.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 16775, 412.1172, 2476.6328, 19.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 3172, 400.1172, 2543.5703, 15.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 405.3594, 2563.0859, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 16370, 385.3438, 2598.6250, 17.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 3286, 390.8203, 2604.0703, 20.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3286, 392.7109, 2596.4531, 17.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3286, 389.1328, 2611.0625, 20.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 16326, 419.3750, 2538.5000, 15.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 16377, 416.1875, 2533.8281, 19.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 16378, 414.4063, 2536.5469, 18.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 2074, 419.3281, 2538.5391, 12.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 16408, 418.2266, 2538.8516, 11.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 1810, 418.7344, 2538.7578, 8.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2518, 414.8438, 2535.1172, 9.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 2147, 413.9688, 2538.2188, 8.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 16327, 412.8281, 2542.8672, 15.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 16407, 419.3828, 2540.5078, 9.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 1748, 418.2734, 2541.0625, 9.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1810, 417.6328, 2542.5000, 8.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1812, 416.2422, 2540.3359, 8.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 2115, 418.6875, 2539.5938, 8.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 1810, 418.2031, 2539.9063, 8.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1738, 420.1328, 2542.8750, 9.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 16374, 425.4688, 2531.0000, 22.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 16790, 425.4688, 2531.0000, 22.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1498, 422.8281, 2535.7344, 15.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 1498, 423.0234, 2535.7344, 8.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1763, 421.0781, 2540.8125, 8.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 16501, 429.9844, 2546.5156, 17.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 16409, 437.3828, 2547.5156, 15.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 16601, 435.6250, 2532.0859, 20.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 347.1953, 1799.2656, 18.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 342.9375, 1796.2891, 18.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1496, -1618.6016, 680.9141, 6.1719, 0.25);
	//Елки
	RemoveBuildingForPlayer(playerid, 729, -1806.6797, 558.9141, 34.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 728, -1815.7500, 564.3281, 34.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 728, -1799.2109, 563.5625, 34.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 728, -1806.5703, 549.9141, 34.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 728, -1812.7344, 556.2422, 34.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 728, -1799.6484, 556.3516, 34.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 728, -1807.6719, 565.8438, 34.0078, 0.25);


	//print("Player data was reseted");
	SetPVarInt(playerid,"repairoffee",-1);
	SetPVarInt(playerid,"repairoffer",-1);

	CancelSelectTextDraw(playerid);
	return 1;
}

stock RegisterPlayer(playerid,age)
{
	mes = "";
	new date[12],y,m,d,ip[15];
	GetPlayerIp(playerid,ip,15);
	getdate(y,m,d);
	format(date,12,"%d-%d-%d",y,m,d);
	f(mes, "INSERT INTO `accounts`(`nickname`,`password`,`email`,`ip`,`sex`,`color`,`age`,`language`,`last`,`status`,`money`,`bank`,`level`,`nation`,`skills`,`health`,`getip`)\
								VALUES('%s','%s','%s','%s','%d','%d','%d','%s','%s','1','10','100','1','%d','0,0,0,0,0,0','100.0','')",
	pData[playerid][pNickname],
	MD5_Hash(pData[playerid][pPassword]),
	pData[playerid][pEmail],
	ip,
	pData[playerid][pSex],
	pData[playerid][pColor],
	age,
	pData[playerid][pLanguage],
	date,
	pData[playerid][pNation]
	);
	if(!sql_query(zConn, mes)) Kick(playerid);
	else {
		LoadPlayerData(playerid);
		pTemp[playerid][pLogined] = true;
		pTemp[playerid][pREGISKL] = true;
		SpawnPlayer(playerid);
	}
	return 1;
}

stock UpdatePlayerData(playerid,field[],data)
{
	new query[300];
	f(query, "UPDATE `accounts` SET `%s` = '%d' WHERE `nickname` = '%s'",field,data,pData[playerid][pNickname]);
	sql_query(zConn, query);
	return 1;
}

stock LoadPlayerData(playerid)
{
	mes = "";
	f(mes, "SELECT * FROM `accounts` WHERE nickname = '%s'",pData[playerid][pNickname]);
	new Result:pldata = sql_query(zConn, mes, QUERY_CACHED);
	if(sql_num_rows(pldata)) {
		pData[playerid][pMysqlID] = sql_get_field_assoc_int_ex(pldata, 0, "id");
		sql_get_field_assoc_ex(pldata, 0, "nickname", pData[playerid][pNickname]);
		sql_get_field_assoc_ex(pldata, 0, "ip", pData[playerid][pRegIP]);
		sql_get_field_assoc_ex(pldata, 0, "email", pData[playerid][pEmail]);
		pData[playerid][pMarried] = sql_get_field_assoc_int_ex(pldata, 0, "married");
		sql_get_field_assoc_ex(pldata, 0, "divorce", pData[playerid][pDivorce]);
		pData[playerid][pWarn] = sql_get_field_assoc_int_ex(pldata, 0, "warn");
		pData[playerid][pWarnc] = sql_get_field_assoc_int_ex(pldata, 0, "warnc");
		pData[playerid][pMut] = sql_get_field_assoc_int_ex(pldata, 0, "mut");
		pData[playerid][pEConfirmed] = sql_get_field_assoc_int_ex(pldata, 0, "econfirmed");
		pData[playerid][pSex] = sql_get_field_assoc_int_ex(pldata, 0, "sex");
		pTemp[playerid][pGiveExp] = sql_get_field_assoc_int_ex(pldata, 0, "otigral");
		pData[playerid][pColor] = sql_get_field_assoc_int_ex(pldata, 0, "color");
		pData[playerid][pAge] = sql_get_field_assoc_int_ex(pldata, 0, "age");
		pData[playerid][pNation] = sql_get_field_assoc_int_ex(pldata, 0, "nation");
		pData[playerid][pSkin] = sql_get_field_assoc_int_ex(pldata, 0, "skin");
		pData[playerid][pFractionSkin] = sql_get_field_assoc_int_ex(pldata, 0, "fractionskin");
		pData[playerid][pHealth] = sql_get_field_assoc_float_ex(pldata, 0, "health");
		pData[playerid][pHouse] = sql_get_field_assoc_int_ex(pldata, 0, "house");
		pData[playerid][pHotel] = sql_get_field_assoc_int_ex(pldata, 0, "hotel");
		pData[playerid][pHotelRoom] = sql_get_field_assoc_int_ex(pldata, 0, "hotelroom");
		pData[playerid][pCar] = sql_get_field_assoc_int_ex(pldata, 0, "car");
		pData[playerid][pJob] = sql_get_field_assoc_int_ex(pldata, 0, "job");
		pData[playerid][pSalary] = sql_get_field_assoc_int_ex(pldata, 0, "salary");
		pData[playerid][pMoney] = sql_get_field_assoc_int_ex(pldata, 0, "money");
		pData[playerid][pBank] = sql_get_field_assoc_int_ex(pldata, 0, "bank");
		pData[playerid][pLevel] = sql_get_field_assoc_int_ex(pldata, 0, "level");
		pData[playerid][pExp] = sql_get_field_assoc_int_ex(pldata, 0, "exp");
		pData[playerid][pPhone] = sql_get_field_assoc_int_ex(pldata, 0, "phone");
		pData[playerid][pPhoneMoney] = sql_get_field_assoc_int_ex(pldata, 0, "phonemoney");
		pData[playerid][pWanted] = sql_get_field_assoc_int_ex(pldata, 0, "wanted");
		pData[playerid][pPrison] = sql_get_field_assoc_int_ex(pldata, 0, "prison");
		pData[playerid][pJail] = sql_get_field_assoc_int_ex(pldata, 0, "jail");
		pData[playerid][pDrugs] = sql_get_field_assoc_int_ex(pldata, 0, "drugs");
		pData[playerid][pRadio] = sql_get_field_assoc_int_ex(pldata, 0, "radio");
		pData[playerid][pSpawn] = sql_get_field_assoc_int_ex(pldata, 0, "spawn");
		pData[playerid][pAmmo] = sql_get_field_assoc_int_ex(pldata, 0, "ammo");
		pData[playerid][pGunAmount] = sql_get_field_assoc_int_ex(pldata, 0, "gunamount");
		pData[playerid][pSpouse] = sql_get_field_assoc_int_ex(pldata, 0, "spouse");
		pData[playerid][pFraction] = sql_get_field_assoc_int_ex(pldata, 0, "fraction");
		pData[playerid][pSubfraction] = sql_get_field_assoc_int_ex(pldata, 0, "subfraction");
		pData[playerid][pRank] = sql_get_field_assoc_int_ex(pldata, 0, "rank");
		pData[playerid][pBusiness] = sql_get_field_assoc_int_ex(pldata, 0, "bussiness");
		pData[playerid][pWatch] = sql_get_field_assoc_int_ex(pldata, 0, "watch");
		pData[playerid][pRequestCode] = sql_get_field_assoc_int_ex(pldata, 0, "requestcode");
		sql_get_field_assoc_ex(pldata, 0, "language", pData[playerid][pLanguage]);
		pData[playerid][pAdmin] = sql_get_field_assoc_int_ex(pldata, 0, "admin");
		pData[playerid][pLicenses][LIC_DRIVING] = sql_get_field_assoc_int_ex(pldata, 0, "licDrive");
		pData[playerid][pLicenses][LIC_FLY] = sql_get_field_assoc_int_ex(pldata, 0, "licFly");
		pData[playerid][pLicenses][LIC_BOAT] = sql_get_field_assoc_int_ex(pldata, 0, "licBoat");
		pData[playerid][pLicenses][LIC_WEAP] = sql_get_field_assoc_int_ex(pldata, 0, "licWeap");
		pData[playerid][pLicenses][LIC_VISKA] = sql_get_field_assoc_int_ex(pldata, 0, "licBusiness");
		pData[playerid][pSettings] = sql_get_field_assoc_int_ex(pldata, 0, "settings");
		pData[playerid][pSett] = sql_get_field_assoc_int_ex(pldata, 0, "settings");
		pData[playerid][pUnemployment] = sql_get_field_assoc_int_ex(pldata, 0, "unemployment");
		pData[playerid][pVehicleKey] = sql_get_field_assoc_int_ex(pldata, 0, "vehiclekey");
		pData[playerid][pTime] = sql_get_field_assoc_int_ex(pldata, 0, "time");
		pData[playerid][pArmyTime] = sql_get_field_assoc_int_ex(pldata, 0, "armytime");
		pData[playerid][pArmyRank] = sql_get_field_assoc_int_ex(pldata, 0, "armyrank");
		pData[playerid][pBankNomer] = sql_get_field_assoc_int_ex(pldata, 0, "banknomer");
		sql_get_field_assoc_ex(pldata, 0, "bankpink", pData[playerid][pBankPin]);
		pData[playerid][pBank1] = sql_get_field_assoc_int_ex(pldata, 0, "bank1");
		pData[playerid][pDrunk] = sql_get_field_assoc_int_ex(pldata, 0, "drunk");
		pData[playerid][pZakon] = sql_get_field_assoc_int_ex(pldata, 0, "zakon");
		pData[playerid][pPick] = sql_get_field_assoc_int_ex(pldata, 0, "pick");
		pData[playerid][pSkillGun] = sql_get_field_assoc_int_ex(pldata, 0, "skillgun");
		pData[playerid][pHouseVost] = sql_get_field_assoc_int_ex(pldata, 0, "hvost");
		pData[playerid][pBizzVost] = sql_get_field_assoc_int_ex(pldata, 0, "bvost");
		pData[playerid][pNarkZav] = sql_get_field_assoc_int_ex(pldata, 0, "narkzav");
        pData[playerid][pDiplom] = sql_get_field_assoc_int_ex(pldata, 0, "diplom");
        pData[playerid][pMath] = sql_get_field_assoc_int_ex(pldata, 0, "math");
        pData[playerid][pHistory] = sql_get_field_assoc_int_ex(pldata, 0, "history");
        pData[playerid][pBiology] = sql_get_field_assoc_int_ex(pldata, 0, "biology");
        pData[playerid][pInform] = sql_get_field_assoc_int_ex(pldata, 0, "inform");
        pData[playerid][pRussian] = sql_get_field_assoc_int_ex(pldata, 0, "russian");
        pData[playerid][pSumka] = sql_get_field_assoc_int_ex(pldata, 0, "sumka");
        pData[playerid][pPhoneModel] = sql_get_field_assoc_int_ex(pldata, 0, "phonemodel");
        pData[playerid][pAdminOnline] = sql_get_field_assoc_int_ex(pldata, 0, "adminonline");
        pData[playerid][pOnlineGame] = sql_get_field_assoc_int_ex(pldata, 0, "onlinegame");
        pData[playerid][pTicketForBussines] = sql_get_field_assoc_int_ex(pldata, 0, "ticketbussines");
        pData[playerid][pObjectHat] = sql_get_field_assoc_int_ex(pldata, 0, "objecthat");
        pData[playerid][pObjectGlasses] = sql_get_field_assoc_int_ex(pldata, 0, "objectglasses");
        pData[playerid][pObjectHouse] = sql_get_field_assoc_int_ex(pldata, 0, "objecthouse");
        pData[playerid][pMaterialN] = sql_get_field_assoc_int_ex(pldata, 0, "materialn");

        if(pData[playerid][pTicketForBussines])
        {
            SendClientMessage(playerid,COLOR_GREEN,"Вашему бизнесу был выписан штраф сотрудником FBI");
			SendClientMessage(playerid,COLOR_GREEN,"Чтобы оплатить используйте банкомат,или-же отделение полицейского департамента.");
			SendClientMessage(playerid,COLOR_GREEN,"Если не оплатить в течении одного дня,то правительство имеет право изъять Ваш бизнес.");
            pData[playerid][pTicketForBussines] = 0;
            UpdatePlayerData(playerid, "ticketbussines", 0);
        }
		pData[playerid][pCodeSet] = sql_get_field_assoc_int_ex(pldata, 0, "setcode");
        sql_get_field_assoc_ex(pldata, 0, "code", pData[playerid][pCode]);
        if(pData[playerid][pAdmin] > 0)
        {
			new Hour, Minute, Second;
			gettime(Hour, Minute, Second);
			SetPVarInt(playerid, "HourAdmin", Hour+Minute+Second);
		}
		pTemp[playerid][pLogined] = true;
		pData[playerid][pRadio] = 1;
		mes = "";
		sql_get_field_assoc_ex(pldata, 0, "getip", pData[playerid][pGetIP]);
		sql_get_field_assoc_ex(pldata, 0, "gun", mes);
		SetPVarString(playerid,"mysqlgun", mes);
		sql_free_result(pldata);
		pTemp[playerid][pLogin4] = false;
		pTemp[playerid][pHospital] = 0;
		pTemp[playerid][pHospitalVW] = -1;
		pTemp[playerid][pLec] = false;
		pTemp[playerid][pTempLeader] = 0;
		if(pData[playerid][pHouseVost] == 1)
		{
			SendClientMessage(playerid,COLOR_YELLOW,"Ваш дом был продан, деньги перечислены на Ваш счет в банке.");
			pData[playerid][pHouseVost] = 0;
            UpdatePlayerData(playerid,"hvost",0);
			pData[playerid][pSpawn] = 2;
		}
		if(pData[playerid][pBizzVost] == 1)
		{
			SendClientMessage(playerid,COLOR_YELLOW,"Ваш бизнес был продан, деньги перечислены на Ваш счет в банке.");
		 	pData[playerid][pBizzVost] = 0;
		 	UpdatePlayerData(playerid,"bvost",0);
		}
		if(pData[playerid][pAdmin])
		{
			ShowPlayerDialog(playerid, dLoginAdmins, DIALOG_STYLE_INPUT, "{33AAFF}Авторизация", "{ffffff}Введите пароль от администраторской панели\nЕсли вы не знаете пароля, обратитесь к Sem_Nicholson:", "Вход", "Отмена");
		}
		new warn = pData[playerid][pWarn];
		if(warn && warn <= gCurDay)
		{
			pData[playerid][pWarn] = 0;
			pData[playerid][pWarnc] = 0;
			UpdatePlayerData(playerid,"warn",0);
			UpdatePlayerData(playerid,"warnc",0);
			SendClientMessage(playerid,0x7FC0E3FF,"Срок всех варнов истёк");
		}
		ApplyAnimation(playerid,"BD_FIRE","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"BEACH","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"benchpress","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"BOMBER","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"CAR","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"COP_AMBIENT","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"CRACK","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"CARRY","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"DANCING","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"DEALER","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"FAT","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"FOOD","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"GANGS","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"GHANDS","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"GRAFFITI","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"GRAVEYARD","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"MISC","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"SNM","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"VENDING","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"OTB","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"SMOKING","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"SHOP","null",0.0,0,0,0,0,0);
		ApplyAnimation(playerid,"RIOT","null",0.0,0,0,0,0,0);
		//if(pData[playerid][pHouse]) AddObjectFromFile(playerid);
		UpdatePlayerData(playerid,"status",1);
		pData[playerid][pRadio] = 1;
		new ip[24];
		GetPlayerIp(playerid,ip,24);
		mes = "";
		f(mes, "UPDATE `accounts` SET `getip` = '%s' WHERE `nickname`='%s'", ip, pData[playerid][pNickname]);
		sql_query(zConn, mes); mes = "";
		SpawnPlayer(playerid);

	}
}


stock SaveServerData2(playerid, id)
{
    for(new i; i < sizeof(gCars); i++)
	{
 		if(gCars[i][carVid] != id) continue;
  		mes = "";
		new vehicleid = gCars[i][carVid];
		new querys[512];
		for(new i2;i2<14;i2++)
		{
			if(!i2) format(querys,sizeof(querys),"%d",gCars[i][carTuning][i2]);
			else format(querys,sizeof(querys),"%s|%d",querys,gCars[i][carTuning][i2]);
		}
		f(mes, "UPDATE `cars` SET `fuel` = '%.2f', `tuning` = '%s', `color1` = '%d', `color2` = '%d', `paintjob` = '%d' WHERE `owner` = '%d'",gVehicles[vehicleid-1][vFuel],querys,gCars[i][carColor1],gCars[i][carColor2],gCars[i][carPaintJob],pData[playerid][pMysqlID]);
		sql_query(zConn, mes); mes = "";
		break;
	}
	return 1;
}

stock SaveServerData()
{
	new fid = ini_openFile("warehouses.ini");
	ini_setInteger(fid,"coal",gCoalWH);
	ini_setInteger(fid,"wood",gWoodWH);
	ini_setInteger(fid,"guncoal",gGunWorkWH[0]);
	ini_setInteger(fid,"gunwood",gGunWorkWH[1]);
	ini_setInteger(fid,"gun",gGunWorkWH[2]);
	ini_getInteger(fid,"gunammo",gGunWorkWH[3]);
	ini_setInteger(fid,"army1gun",gArmyWarehouse[0][0]);
	ini_setInteger(fid,"army1ammo",gArmyWarehouse[0][1]);
	ini_setInteger(fid,"army2gun",gArmyWarehouse[1][0]);
	ini_setInteger(fid,"army2ammo",gArmyWarehouse[1][1]);
	ini_setInteger(fid,"army3gun",gArmyWarehouse[2][0]);
	ini_setInteger(fid,"army3ammo",gArmyWarehouse[2][1]);
	ini_setInteger(fid,"yakpat",MafiaPatr[0]);
	ini_setInteger(fid,"meciapat",MafiaPatr[1]);
	ini_setInteger(fid,"columpat",MafiaPatr[2]);
	ini_setInteger(fid,"yaked",MafiaEd[0]);
	ini_setInteger(fid,"meciaed",MafiaEd[1]);
	ini_setInteger(fid,"columed",MafiaEd[2]);
	ini_setInteger(fid,"yakdr",MafiaDrug[0]);
	ini_setInteger(fid,"meciadr",MafiaDrug[1]);
	ini_setInteger(fid,"columdr",MafiaDrug[2]);
	ini_setInteger(fid,"yakmn",MafiaMoney[0]);
	ini_setInteger(fid,"meciamn",MafiaMoney[1]);
	ini_setInteger(fid,"colummn",MafiaMoney[2]);
	ini_setInteger(fid,"ballas",WaitCapture[3]);
	ini_setInteger(fid,"grove",WaitCapture[4]);
	ini_setInteger(fid,"aztec",WaitCapture[5]);
	ini_setInteger(fid,"vagos",WaitCapture[6]);
	ini_setInteger(fid,"rifa",WaitCapture[7]);

	ini_setInteger(fid,"zavod1",ZavodInfo[0]);
	ini_setInteger(fid,"zavod2",ZavodInfo[1]);
	ini_setInteger(fid,"zavod3",ZavodInfo[2]);
	ini_setInteger(fid,"zavod4",ZavodInfo[3]);
	ini_setInteger(fid,"zavod5",ZavodInfo[4]);

	ini_setInteger(fid,"fuel",FuelInfo[0]);
	ini_setInteger(fid,"pesok",FuelInfo[1]);

	ini_closeFile(fid);
	return 1;
}

stock ShowHintsDialog(playerid,dialogid,button1[],button2[])
{
	new mess[3000];
	for(new i; i<HINTS_COUNT; i++)
	{
		f(mess,"%s\n{"#cLIGHTGREEN"}[%d] {"#cWHITE"}%s",mess,i+1,gHints[i][hintDescription]);
	}
	ShowPlayerDialog(playerid,dialogid,2,"{ffcf00}Hints",mess,button1,button2);
	return 1;
}

stock GetCarSlot(carID)
{
	for(new i3;i3<MAX_VEHICLES;i3++)
	{
		if(carID == gCars[i3][carMysqlID])
		{
			return i3;
		}
		//printf("(%d) %d != %d",i3,carID,gCars[i3][carMysqlID]);
	}
	return -1;
}

stock GetCarClassName(classid,classname[],size=sizeof(classname))
{
	switch(classid)
	{
	case 0: format(classname,size,"Эконом");
	case 1: format(classname,size,"Средний");
	case 2: format(classname,size,"Спорт");
	case 3: format(classname,size,"Мото");
	case 4: format(classname,size,"Воздушный");
	}
}

stock GetPlayerMoneyEx(playerid)
{
	//if(GetPlayerMoney(playerid) < pData[playerid][pMoney]) pData[playerid][pMoney] = GetPlayerMoney(playerid);
	return pData[playerid][pMoney];
}

stock GivePlayerMoneyEx(playerid,money,reason[])
{
	if(GetPlayerMoney(playerid) < 0) ResetPlayerMoney(playerid);
	pData[playerid][pMoney] = pData[playerid][pMoney] + money;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid,pData[playerid][pMoney]);
	UpdatePlayerData(playerid,"money",pData[playerid][pMoney]);
	return 1;
}

forward TransferMoney(playerid,toplayerid,money,reason[]);
public TransferMoney(playerid,toplayerid,money,reason[])
{
	if(GetPlayerMoney(playerid) < 0) ResetPlayerMoney(playerid);
	if(GetPlayerMoney(toplayerid) < 0) ResetPlayerMoney(toplayerid);
	new mesage[50];
	if(toplayerid >= 0)
	{
		pData[toplayerid][pMoney] = pData[toplayerid][pMoney] + money;
		GivePlayerMoney(toplayerid,money);
  		f(mesage, "~g~ +%d$", money);
		GameTextForPlayer(toplayerid, mesage, 5000, 1);
	}
	if(playerid >= 0)
	{
		GivePlayerMoney(playerid,-money);
		pData[playerid][pMoney] = pData[playerid][pMoney] - money;
  		f(mesage, "~r~ -%d$", money);
		GameTextForPlayer(playerid, mesage, 5000, 1);
	}
	if(playerid >= 0) UpdatePlayerData(playerid,"money",pData[playerid][pMoney]);
	if(toplayerid >= 0) UpdatePlayerData(toplayerid,"money",pData[toplayerid][pMoney]);
}

stock ShowPass(playerid,actplayerid)
{
	new jobname[50],jobstat[25],classname[12],nation[64];
	new houseid = pData[playerid][pHouse]-1;
	if(pData[playerid][pJob])
	{
		switch(pData[playerid][pJob])
		{
		case 1:
			{
				strcat(jobname,"Водитель автобуса");
			}
		case 2:
			{
				strcat(jobname,"Дальнобойщик");
			}
		case 3:
			{
				strcat(jobname,"Водитель такси");
				jobstat = "Водитель";
			}
		case 6:
			{
				strcat(jobname,"Развозчик топлива");
				jobstat = "Развозчик топлива";
			}
		}
	}
	else if(pData[playerid][pFraction])
	{
		new fractionid = pData[playerid][pFraction]-1;
		new rank = pData[playerid][pRank]-1;
		strcat(jobname,gFractionName[fractionid]);
		if(fractionid+1 == 11 && !pData[playerid][pSubfraction] && rank <= 9)
		strcat(jobstat, gPrezRankName[rank]);
		else strcat(jobstat,gFractionRankName[fractionid][rank]);
	}
	new housenumber[40];
	if(houseid >= 0)
	{
		format(housenumber,40,"{c6ff00}Имеется\n");
		switch(gHouses[houseid][houseClass])
		{
		case 0:classname = "Эконом";
		case 1:classname = "Cредний";
		case 2:classname = "Элитный";
		case 3:classname = "Особняк";
		default:classname = "Неизвестно";
		}
	}
	else
	{
		housenumber = "{ffcc00}Нет";
		classname = "__";
	}

	new sexy[15];
	switch(pData[playerid][pSex])
	{
	case 1: sexy = "Мужской\n";
	case 2: sexy = "Женский\n";
	}

	switch(pData[playerid][pNation])
	{
	case 1: strcat(nation,"Американец");
	case 2: strcat(nation,"Японец");
	case 3: strcat(nation,"Итальянец");
	case 4: strcat(nation,"Мексиканец");
	case 5: strcat(nation,"Латиноамериканец");
	case 6: strcat(nation,"Испанец");
	case 7: strcat(nation,"Русский");
	case 8: strcat(nation,"Португалец");
	case 9: strcat(nation,"Француз");
	case 10: strcat(nation,"Афроамериканец");
	}
	new divrc[71];
	if(!pData[playerid][pMarried]) format(divrc,70,"{db1d1d}Не в браке\n");
	else if(pData[playerid][pMarried] == 1) format(divrc,70,"{c6ff00}В браке: {ffffff}%s\n",pData[playerid][pDivorce]);
	mes = "";
	SendMes(actplayerid, COLOR_YELLOW, "Паспорт жителя штата {FFFFFF}%s", pData[playerid][pNickname]);
	SendMes(actplayerid, -1, "1. Имя(ник): {fff608}%s", pData[playerid][pNickname]);
	SendMes(actplayerid, -1, "2. Лет в штате: {0084ff}%d", pData[playerid][pLevel]);
	SendMes(actplayerid, -1, "3. Работа: {0084ff}%s | %s", jobname, jobstat);
	SendMes(actplayerid, -1, "4. Прописка: %s", housenumber);
	SendMes(actplayerid, -1, "5. Семейное положение: %s", divrc);
	SendMes(actplayerid, -1, "6. Диплом: %s", (pData[playerid][pDiplom]) ? ("{c6ff00}Есть") : ("{db1d1d}Нет"));
	return 1;
}

stock MeAction(playerid,action[],Float:distance = 13.0)
{
	if(pData[playerid][pMut]) return SendClientMessage(playerid,CWHITE,"» У Вас молчанка, ожидайте снятия.");
	mes = "";
	f(mes, "%s %s",pData[playerid][pNickname],action);
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(!IsPlayerConnected(i) || GetPlayerDistanceToPlayer(playerid,i) > distance || GetPlayerVirtualWorld(i) != GetPlayerVirtualWorld(playerid)) continue;
		SendClientMessage(i,CPINK,mes);
	}
	return 1;
}

stock DoAction(playerid,action[],Float:distance = 13.0)
{
	if(pData[playerid][pMut]) return SendClientMessage(playerid,CWHITE,"» У Вас молчанка, ожидайте снятия.");
	mes = "";
	f(mes, "%s (%s)",action,pData[playerid][pNickname]);
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(!IsPlayerConnected(i) ||  GetPlayerDistanceToPlayer(playerid,i) > distance || GetPlayerVirtualWorld(i) != GetPlayerVirtualWorld(playerid)) continue;
		SendClientMessage(i,CPINK,mes);
	}
	return 1;
}

stock TryAction(playerid,action[],Float:distance = 13.0)
{
	if(pData[playerid][pMut]) return SendClientMessage(playerid,CWHITE,"» У Вас молчанка, ожидайте снятия.");
	new luck[24];
	if(RandomEx(0,2) == 1) strcat(luck,"{ffcf00}Удачно");
	else strcat(luck,"{"#cRED"}Неудачно");
	mes = "";
	f(mes, "%s %s {FFFFFF}[%s{FFFFFF}]",pData[playerid][pNickname],action,luck);
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(!IsPlayerConnected(i) || GetPlayerDistanceToPlayer(playerid,i) > distance || GetPlayerVirtualWorld(i) != GetPlayerVirtualWorld(playerid)) continue;
		SendClientMessage(i,CPINK,mes);
	}
	return 1;
}

stock Speech(playerid,text[],language,Float:distance = 13.0,anim = 1,color = 1)
{
	new string[64];
	if(!pTemp[playerid][pLogined] || !pData[playerid][pMysqlID]) return 1;
	if(pData[playerid][pMut]) return SendClientMessage(playerid,CWHITE,"» У Вас молчанка, ожидайте снятия.");
	if(GetString(text,")"))
	{
		format(string,sizeof(string),"улыбается",pData[playerid][pNickname]);
		MeAction(playerid,string);
		return false;
	}
	if(GetString(text,"))"))
	{
		format(string,sizeof(string),"смеётся",pData[playerid][pNickname]);
		MeAction(playerid,string);
		return false;
	}
	if(GetString(text,"("))
	{
		format(string,sizeof(string),"расстроился",pData[playerid][pNickname]);
		MeAction(playerid,string);
		return false;
	}
	if(GetString(text,"(("))
	{
		format(string,sizeof(string),"сильно расстроился",pData[playerid][pNickname]);
		MeAction(playerid,string);
		return false;
	}
	if(pTemp[playerid][pControllable] && anim)
	{
		if(GetPVarInt(playerid,"Animation") == 0)
		{
			ApplyAnimation(playerid,"PED","IDLE_CHAT",8.1,0,1,1,1,1);
			SetTimerEx("ClearAnimText", 1400, false, "d", playerid);
		}
	}
	new mes2[64],langname[32];
	new mesid[250], mess[150];
	if(language != LANG_ENGLISH)
	{
		switch(language)
		{
		case LANG_JAPAN: strcat(langname,"Японский");
		case LANG_ITALIAN: strcat(langname,"Итальянский");
		case LANG_PORTUGAL: strcat(langname,"Португальский");
		case LANG_FRENCH: strcat(langname,"Французский");
		case LANG_SPAIN: strcat(langname,"Испанский");
		case LANG_RUSSIAN: strcat(langname,"Русский");
		}
		f(mess,"%s [%s]: %s",pData[playerid][pNickname],langname,text);
		format(mesid,sizeof(mesid),"%s [%d] [%s]: %s",pData[playerid][pNickname],playerid,langname,text);
	}
	else
	{
		if(pData[playerid][pFraction] > 0)
		{
			f(mess,"- %s {%s}[%s]",text,GetColor(playerid),pData[playerid][pNickname]);
			format(mesid,sizeof(mesid),"- %s {%s}[%s(%d)]",text,GetColor(playerid),pData[playerid][pNickname],playerid);
		}
		else
		{
		    f(mess,"- %s [{FFFFFF}%s]",text, pData[playerid][pNickname]);
			format(mesid,sizeof(mesid),"- %s {ffffff}[%s(%d)]",text,pData[playerid][pNickname],playerid);
		}
	}

	SetPlayerChatBubble(playerid,text,COLOR_LIGHTBLUE,20.0,5000);


	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(IsPlayerConnected(i) && pData[i][pMysqlID])
		{
			new Float:rdist,c;
			rdist = GetPlayerDistanceToPlayer(playerid,i);
			if (rdist > distance || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(i)) continue;
			if(color)
			{
				switch(floatround(rdist))
				{
					case 0..4: c = 0xCECFCEFF;
					case 5..8: c = 0x9C9A9CFF;
					case 9..14: c = 0x6B696BFF;
					default: c = 0xCECFCEFF;
				}
			}
			else c = 0xCECFCEFF;
			if(pData[i][pLanguage][language] || language == LANG_ENGLISH)
			{
				if(pData[i][pSettings] & setPlayerIDChat) SendClientMessage(i,c,mesid);
				else SendClientMessage(i,c,mess);
			}
			else SendClientMessage(i,CPINK,mes2);
		}
	}
	return 1;
}

forward ClearAnimText(playerid);
public ClearAnimText(playerid)
{
	//ClearAnimations(playerid);
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0);
	return true;
}



stock DepartmentChat(color, mess[], Medic = 1,DOD = 1, DOI = 1, FBI = 1, Mayor = 1)
{
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(!IsPlayerConnected(i) || !pData[i][pFraction] || pData[i][pJail]) continue;
		new fraction = pData[i][pFraction];
		if(Medic && fraction == 2 || DOD && fraction == 8 || DOI && fraction == 9 || FBI && fraction == 12 || Mayor && fraction == 11)
		{
			SendClientMessage(i,color,mess);
		}
	}
}



stock CopMes(color,mess[])
{
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(!IsPlayerConnected(i) || !pData[i][pFraction]) continue;
		if(IsACop(i))
		{
			SendClientMessage(i,color,mess);
		}
	}
}

stock SendAdminMessage(color,const message[],exc = -1)
{
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(IsPlayerConnected(i) && pData[i][pMysqlID])
		{
			if(pData[i][pSettings] & setAdminInfo || exc == i) SendClientMessage(i,color,message);
		}
	}
}

stock GetExp(playerid)
{
	pData[playerid][pExp]++;
	if(pData[playerid][pExp] >= pData[playerid][pLevel]*8)
	{
	    SendClientMessage(playerid, COLOR_GREEN, ">> У Вас новый уровень поздравляем !");
		pData[playerid][pLevel]++;
		pData[playerid][pExp] = 0;
		SetPlayerScore(playerid, pData[playerid][pLevel]);
        UpdatePlayerData(playerid,"level",pData[playerid][pLevel]);
	}
	UpdatePlayerData(playerid,"exp",pData[playerid][pExp]);
	return true;
}

stock PayDay()
{
	new h; gettime(h); SetWorldTime(h);
	mes = "";
	new str[126];
	for(new i; i < 10; i ++)
	{
	    if(gViska[i][vvStatus] == 1)
		    gViska[i][vvFuel] += random(375)+1125;
	}
	SendClientMessageToAll(-1, "____________________\n");
	SendClientMessageToAll(-1, "{ad7373}Dallas Role Play {FFFFFF}| {ad7373}Alpha {FFFFFF}[PayDay]\n\n");
	FuelInfo[1] += 5000;
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{

	    i = cvector_get(PLAYERS, idx);
		if(pTemp[i][pTempLeader] == 1)
		{
			SetPlayerArmourEx(i, 0);
			ResetPlayerWeaponsEx(i);
			pData[i][pFraction] = 0;
			pData[i][pRank] = 0;
			pData[i][pFractionSkin] = 0;
			pData[i][pSubfraction] = 0;
			ResetPlayerWeaponsEx(i);
			SetPlayerColor(i,0xFFFFFF11);
			SetPlayerSkin(i,pData[i][pSkin]);
			pTemp[i][pTempLeader] = 0;
		}
		new fractionid = pData[i][pFraction]-1;
		new rank = pData[i][pRank]-1;


		if(!pData[i][pDiplom])
		{
			if(
			pData[i][pMath]    >= 100 &&
			pData[i][pHistory] >= 100 &&
			pData[i][pBiology] >= 100 &&
			pData[i][pInform]  >= 100 &&
			pData[i][pRussian] >= 100)
			{
  				pData[i][pDiplom] = 1;
	    		UpdatePlayerData(i, "diplom", pData[i][pDiplom]);
		    	SendClientMessage(i,COLOR_YELLOW,"» Вы получили диплом о Высшем образовании!");
		    	SendClientMessage(i,COLOR_BLUE,">> Теперь Вас могут повысить выше 5 - ого ранга в Гос. Организациях!");
			}
		}
		if(GetPVarInt(i,"AFK_Time") >= 20) { SendClientMessage(i,CWHITE,"» Вы не получили PayDay, потому что были в АФК");  SendClientMessage(i,-1, "____________________\n"); continue; }
		if(IsAGang(i))
			pData[i][pSalary] += TotalGz[pData[i][pFraction]-3]*pData[i][pRank]*3;
		else if(pData[i][pFraction])
			pData[i][pSalary] += gFractionSalary[fractionid][rank];

		format(str,sizeof(str),"{fff000}Заработок за этот час: {FFFFFF}%d$", pData[i][pSalary]);
		SendClientMessage(i,-1, str);
		if(pData[i][pAdmin])
		{
			new moneyadm = 0;
			switch(pData[i][pAdmin])
			{
				case 1: moneyadm = 2000;
				case 2: moneyadm = 3000;
				case 3: moneyadm = 4000;
				case 4: moneyadm = 5000;
				case 5: moneyadm = 6000;
			}
			format(str,sizeof(str),"{f40b0b}Админ-{FFFFFF}Зарплата: {f40b0b}%d{FFFFFF}$", moneyadm);
			SendClientMessage(i,-1, str);
			pData[i][pSalary] += moneyadm;
		}
		if(pData[i][pSalary])
		{
			pData[i][pBank] += pData[i][pSalary];
			UpdatePlayerData(i,"bank",pData[i][pBank]);
			pData[i][pSalary] = 0;
			UpdatePlayerData(i,"salary",pData[i][pSalary]);
		}
		format(str,sizeof(str),"{97d323}Денег в банке: {FFFFFF}%d$", pData[i][pBank]);
		SendClientMessage(i,-1, str);


		GetExp(i);

		if(pData[i][pWanted]) pData[i][pWanted]--;
		SetPlayerWantedLevel(i, pData[i][pWanted]);
		UpdatePlayerData(i,"wanted",pData[i][pWanted]);
		//pTemp[i][pGiveExp] = 0;
		if(pData[i][pZakon] < 100) pData[i][pZakon]++;
		UpdatePlayerData(i,"zakon",pData[i][pZakon]);

		SendClientMessage(i,-1, "____________________\n");

		printf("PayDay -> Произошла зарплата на сервере");




	}
	new day = GetDayNumber();
	if(gCurDay != day)
	{
		gCurDay = day;

		for(new i; i < 10; i ++)
		{
			if(gViska[i][vvStatus] == 1)
			{
			    new price = random(9000)+30000;
				gViska[i][vvMoney] += price;
				mes = "";
				f(mes, "UPDATE `viska` SET `money` = '%d' WHERE id == '%d'", i, gViska[i][vvMoney]);
				sql_query(zConn, mes); mes = "";
			}
		}

		for(new i=3; i < 8; i++) WaitCapture[i] = 0;
		SaveServerData();


		f(mes, "UPDATE `accounts` SET `adminonline` = '0' WHERE `admin` > '0'");
  		sql_query(zConn, mes); mes = "";

		f(mes, "UPDATE `grabbank` SET `gang3` = '0', `gang4` = '0', `gang5` = '0', `gang6` = '0', `gang7` = '0'");
		sql_query(zConn, mes); mes = "";

		f(mes, "UPDATE `capturegang` SET `gang3` = '0', `gang4` = '0', `gang5` = '0', `gang6` = '0', `gang7` = '0'");
		sql_query(zConn, mes); mes = "";

		FuelInfo[0] += random(70000)+20000;
		// Наступил новый день
		printf("Наступил новый день Debag Monitor");
		for(new houseid; houseid < MAX_HOUSE_COUNT; houseid ++)
		{
			if(gHouses[houseid][houseDays] != 0 && gHouses[houseid][houseOwnerID] >= 1)
			{
				gHouses[houseid][houseDays] -= 1;
				f(mes, "UPDATE `houses` SET `days` = '%d' WHERE id = '%d'",gHouses[houseid][houseDays],houseid+1);
				sql_query(zConn, mes); mes = "";
			}
			else if(gHouses[houseid][houseDays] == 0 && gHouses[houseid][houseOwnerID] >= 1)
			{
				new bank, var[100], pricecars = 0, price = 0;
				new bool:dostuptocars = false;

				////////////////////////////////////////////////////////////////
				f(mes,  "SELECT * FROM `accounts` WHERE `id` = '%d'", gHouses[houseid][houseOwnerID]);
				new Result: housess = sql_query(zConn, mes, QUERY_CACHED);
				if(sql_num_rows(housess))
				{
					sql_get_field_assoc_ex(housess, 0, "bank", var); bank = strval(var);
				}
				////////////////////////////////////////////////////////////////
				f(mes,  "SELECT * FROM `cars` WHERE `owner` = '%d'", gHouses[houseid][houseOwnerID]);
				new Result: cars = sql_query(zConn, mes, QUERY_CACHED);
                if(sql_num_rows(cars))
    			{
    			    sql_get_field_assoc_ex(cars, 0, "price", var); pricecars = strval(var);
   					dostuptocars = true;
				}
				////////////////////////////////////////////////////////////////
				if(dostuptocars)
				{
	                f(mes, "DELETE FROM `cars` WHERE `owner` = '%d'", gHouses[houseid][houseOwnerID]);
					sql_query(zConn, mes); mes = "";
					price = bank+gHouses[houseid][housePrice]+pricecars;//Стоимость за все
				}
				else price = bank+gHouses[houseid][housePrice];//Стоимость за все
                ////////////////////////////////////////////////////////////////
				if(GetPlayerID(gHouses[houseid][houseOwner]) != -1)
                {
                    mes = "";
                    format(mes,sizeof(mes),"UPDATE `accounts` SET bank = '%d', hvost = '1', house = '0', spawn = '1', car = '0', `objecthouse` = '0' WHERE id = '%d'", price, gHouses[houseid][houseOwnerID]);
					sql_query(zConn, mes); mes = "";
                }
                else
                {
					pData[GetPlayerID(gHouses[houseid][houseOwner])][pHouse] = 0;
					pData[GetPlayerID(gHouses[houseid][houseOwner])][pSpawn] = 1;
					pData[GetPlayerID(gHouses[houseid][houseOwner])][pCar] = 0;
					pData[GetPlayerID(gHouses[houseid][houseOwner])][pBank] += price;
					SendClientMessage(GetPlayerID(gHouses[houseid][houseOwner]), COLOR_YELLOW,"Ваш дом был продан, деньги перечислены на Ваш счет в банке.");
				}
				mes = "";
				f(mes,"UPDATE `houses` SET `ownerid` = '0', `owner` = '', improve = '0|0|0|0|0|0|0', days = '3' WHERE `id` = '%d'",houseid+1);
				sql_query(zConn, mes); mes = "";

				gHouses[houseid][houseOwnerID] = 0;
				strdel(gHouses[houseid][houseOwner],0,24);
				strdel(gHouseHabits[houseid][0],0,24);
				strdel(gHouseHabits[houseid][1],0,24);
				strdel(gHouseHabits[houseid][2],0,24);
				gHouses[houseid][houseHabitID][0] = 0;
				gHouses[houseid][houseHabitID][1] = 0;
				gHouses[houseid][houseHabitID][2] = 0;
				for(new j;j<9;j++)
				{
					if(j < 7)
					{
						gHouses[houseid][houseImprove][j] = 0;
					}
					gHouses[houseid][houseGun][j] = 0;
				}
				gHouses[houseid][houseSafeCode] = 0;
				gHouses[houseid][houseSafeMoney] = 0;
				gHouses[houseid][houseDrugs] = 0;
				gHouses[houseid][houseDays] = 3;
				gHouses[houseid][houseProducts] = 0;
				DestroyDynamicPickup(gHousePickup[houseid]);
				gHousePickup[houseid] = CreateDynamicPickup(1273,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ]);
				DestroyDynamicMapIcon(gHouseIcon[houseid]);
				gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],31,CWHITE);





			}

		}
		for(new businessid; businessid < MAX_BUSINESS_COUNT; businessid++)
		{
			if(gBusiness[businessid][busiDay] == 0 && gBusiness[businessid][busiOwnerID] >= 1)
			{
				new sum = gBusiness[businessid][busiSellPrice];


				new bank, var[50];
				f(mes,  "SELECT * FROM `accounts` WHERE `id` = '%d'", gBusiness[businessid][busiOwnerID]);
				new Result: tt = sql_query(zConn, mes, QUERY_CACHED);
				if(sql_num_rows(tt))
				sql_get_field_assoc_ex(tt, 0, "bank", var); bank = strval(var);
				new price = bank+sum*100/80;

				new ownerid = gBusiness[businessid][busiOwnerID];
				new nickname[MAX_PLAYER_NAME];
				if(ownerid)	GetPlayerNameByID(ownerid,nickname);
				else strcat(nickname,"testingguper");

				if(GetPlayerID(nickname) != -1)
				{
					f(mes, "UPDATE `accounts` SET business = '0', bank = '%d', bvost = '1' WHERE id = '%i'", price, gBusiness[businessid][busiOwnerID]);
					sql_query(zConn, mes); mes = "";
				}
				else
				{
				    pData[GetPlayerID(nickname)][pBusiness] = 0;
				    pData[GetPlayerID(nickname)][pBank] += sum;
                    SendClientMessage(GetPlayerID(nickname), COLOR_YELLOW,"Ваш бизнес был продан, деньги перечислены на Ваш счет в банке.");
				}


				UpdateBusinessData(businessid+1,"ownerid",0);
				gBusiness[businessid][busiOwnerID] = 0;
				gBusiness[businessid][busiStatus] = 1;
				UpdateBusinessText(businessid);

				f(mes, "UPDATE `business` SET `ownerid` = '0', `status` = '1' WHERE `id` = '%d'",businessid+1);
				sql_query(zConn, mes); mes = "";
			}
			else if(gBusiness[businessid][busiDay] != 0 && gBusiness[businessid][busiOwnerID] >= 1)
			{
				gBusiness[businessid][busiDay] -= 1;
				f(mes, "UPDATE `business` SET `day` = '%d' WHERE id = '%d'",gBusiness[businessid][busiDay],businessid+1);
				sql_query(zConn, mes); mes = "";
			}
		}
		for(new fillingid; fillingid < FILLING_COUNT; fillingid++)
		{
		    if(gFillings[fillingid][fillDay] == 0 && gFillings[fillingid][fillOwnerID] >= 1)
		    {
		        new sum = gFillings[fillingid][fillPrice];

				new bank, var[50];
				f(mes,  "SELECT * FROM `accounts` WHERE `id` = '%d'", gFillings[fillingid][fillOwnerID]);
				new Result: tt = sql_query(zConn, mes, QUERY_CACHED);
				if(sql_num_rows(tt))
				sql_get_field_assoc_ex(tt, 0, "bank", var); bank = strval(var);
				new price = bank+sum*100/80;

				new ownerid = gFillings[fillingid][fillOwnerID];
				new nickname[MAX_PLAYER_NAME];
				if(ownerid)	GetPlayerNameByID(ownerid,nickname);
				else strcat(nickname,"testingguper");

				if(GetPlayerID(nickname) != -1)
				{
					f(mes, "UPDATE `accounts` SET business = '0', bank = '%d', bvost = '1' WHERE id = '%i'", price, gFillings[fillingid][fillOwnerID]);
					sql_query(zConn, mes); mes = "";
				}
				else
				{
				    pData[GetPlayerID(nickname)][pBusiness] = 0;
				    pData[GetPlayerID(nickname)][pBank] += sum;
                    SendClientMessage(GetPlayerID(nickname), COLOR_YELLOW, "Ваш бизнес был продан, деньги перечислены на Ваш счет в банке.");
				}



//				mes = "";
				f(mes, "UPDATE `fillings` SET `ownerid` = '0', `ownernick` = '', `working` = '0', bank = '0' WHERE `id` = '%d'",fillingid+1);
				sql_query(zConn, mes); mes = "";
				gFillings[fillingid][fillOwnerID] = 0;
				format(gFillings[fillingid][fillOwner],24,"");
				gFillings[fillingid][fillWorking] = true;
				gFillings[fillingid][fillBank] = 0;
				gFillings[fillingid][fillDay] = 3;
				UpdateFillingText(fillingid);
		    }
		    else if(gFillings[fillingid][fillDay] != 0 && gFillings[fillingid][fillOwnerID] >= 1)
		    {
		        gFillings[fillingid][fillDay] -= 1;
				f(mes, "UPDATE `business` SET `day` = '%d' WHERE id = '%d'",gFillings[fillingid][fillDay],fillingid+1);
				sql_query(zConn, mes); mes = "";
		    }
		}


	}
}

/*stock PayDay()
{
	new bool:newday;
	new day = GetDayNumber();
	if(gCurDay != day)	{gCurDay = day; newday = true;}
	new h,m,s; gettime(h,m,s);
	SetWorldTime(h);
	if(newday)
	{
		for(new i;i<HOTEL_COUNT;i++)
		{
			new bool:did;
			for(new k;k<8;k++)
			{
				if(gHotelEndurance[i][k] && gHotelEndurance[i][k] <= day)
				{
					new ownerid = gHotelResidents[i][k];
					mes = "";
					for(new l;l<MAX_VEHICLES;l++)
					{
						if(ownerid == gCars[l][carOwnerid])
						{
							new vehicleid = gCars[l][carVid];
							new price = floatround(gTransport[gCars[l][carModelid]][trPrice]*0.8);
							DestroyVehicle(vehicleid);
							f(mes, "DELETE FROM `cars` WHERE `id` = '%d'",gCars[l][carMysqlID]);
							mysql_query(query);
							f(mes, "UPDATE `accounts` SET `money` = `money` + '%d', `car` = '0' WHERE `id` = '%d'",price,ownerid);
							sql_query(zConn, mes); mes = "";
						}
					}
					did = true;
					gHotelResidents[i][k] = 0;
					gHotelEndurance[i][k] = 0;
				}
			}
			if(did) UpdateHotelResidents(i);
		}
		foreach (new i : Player)
		{
			new text[100];
			new houseid = pData[i][pHouse] - 1;
			mes = "";
			if(gHouses[houseid][houseDays] == 0 || gHouses[houseid][houseDays] < 0)
			{
				Dolzen++;
				new str[100];
				format(str, 100, "Дома: %i", Dolzen);
				SetObjectMaterialText(meria[0], str, 0, OBJECT_MATERIAL_SIZE_256x128, "Arial",24,1,0xFFFFFFFF,0x00, OBJECT_MATERIAL_TEXT_ALIGN_LEFT);
				format(text, 100, "%s", gHouses[houseid][houseOwner]);
				strmid(DebtorInfo[Dolzen][0][aName],text,0,strlen(text),100);
				DebtorInfo[Dolzen][0][aid] = gHouses[houseid][houseID];
				DebtorInfo[Dolzen][0][hX] = gHouses[houseid][houseX];
				DebtorInfo[Dolzen][0][hY] = gHouses[houseid][houseY];
				DebtorInfo[Dolzen][0][hZ] = gHouses[houseid][houseZ];
			}
			else
			{
				gHouses[houseid][houseDays] -= 1;
				f(mes, "UPDATE `houses` SET `days` = '%d' WHERE id = '%d'",gHouses[houseid][houseDays],houseid+1);
					sql_query(zConn, mes); mes = "";
			}
			//---------------------------------------------------------------------------
			new businessid = pData[i][pBusiness] - 1;
			if(gBusiness[businessid][busiDay] == 0 || gBusiness[businessid][busiDay] < 0)
			{
				Dolzen1++;
				new str[100];
				format(str, 100, "Бизнесы: %i", Dolzen1);
				SetObjectMaterialText(meria[1], str, 0, OBJECT_MATERIAL_SIZE_256x128, "Arial",24,1,0xFFFFFFFF,0x00, OBJECT_MATERIAL_TEXT_ALIGN_LEFT);
				format(text, 100, "%s", gBusiness[businessid][busiName]);
				strmid(DebtorInfo[Dolzen1][1][aName],text,0,strlen(text),100);
				DebtorInfo[Dolzen1][1][aid] = gBusiness[businessid][busiID];
				DebtorInfo[Dolzen1][1][hX] = gBusiness[businessid][busiX];
				DebtorInfo[Dolzen1][1][hY] = gBusiness[businessid][busiY];
				DebtorInfo[Dolzen1][1][hZ] = gBusiness[businessid][busiZ];
			}
			else
			{
				gBusiness[businessid][busiDay] -= 1;
				f(mes, "UPDATE `business` SET `day` = '%d' WHERE id = '%d'",gBusiness[businessid][busiDay],businessid);
					sql_query(zConn, mes); mes = "";
			}
			new fillingid2 = -1;
			for(new id;id<FILLING_COUNT;i++)
			{
				if(pData[i][pMysqlID] == gFillings[id][fillOwnerID]) fillingid2 = id;
			}
			if(fillingid2 == -1) return SendClientMessageToAll(CRED,"Програмная ошибка (не найдена АЗС)");
			if(gFillings[fillingid2][fillDay] == 0 || gFillings[fillingid2][fillDay] < 0)
			{
				Dolzen2++;
				new str[100];
				format(str, 100, "АЗС: %i", Dolzen2);
				SetObjectMaterialText(meria[2], str, 0, OBJECT_MATERIAL_SIZE_256x128, "Arial",24,1,0xFFFFFFFF,0x00, OBJECT_MATERIAL_TEXT_ALIGN_LEFT);
				format(text, 100, "%s", gFillings[fillingid2][fillOwner]);
				strmid(DebtorInfo[Dolzen2][2][aName],text,0,strlen(text),100);
				DebtorInfo[Dolzen2][2][aid] = gFillings[fillingid2][fillOwnerID];
				DebtorInfo[Dolzen2][2][hX] = gFillingBuy[fillingid2][0];
				DebtorInfo[Dolzen2][2][hY] = gFillingBuy[fillingid2][1];
				DebtorInfo[Dolzen2][2][hZ] = gFillingBuy[fillingid2][2];
			}
			else
			{
				gFillings[fillingid2][fillDay] -= 1;
				f(mes, "UPDATE `fillings` SET `day` = '%d' WHERE id = '%d'",gFillings[fillingid2][fillDay],fillingid2);
					sql_query(zConn, mes); mes = "";
			}
		}
	}
	foreach (new i : Player)
	{
		new fractionid = pData[i][pFraction]-1;
		new rank = pData[i][pRank];
		if(pTemp[i][pGiveExp] < 1200)
		{
			SendClientMessage(i,CWHITE,"» Вы не получили PayDay, потому что не отыграли 25 минут");
			pTemp[i][pGiveExp] = 0;
			continue;
		}
		if(pTemp[i][pAFK] >= 20)
		{
			SendClientMessage(i,CWHITE,"» Вы не получили PayDay, потому что были в АФК во время PayDay");
			pTemp[i][pGiveExp] = 0;
			continue;
		}
		if(IsAGang(i)) pData[i][pSalary] += TotalGz[IsAGang(i)]*70;
		if(pData[i][pFraction]) pData[i][pSalary] += gFractionSalary[fractionid][rank-1];
		if(pData[i][pSalary]) pData[i][pBank] += pData[i][pSalary];
		if(IsPlayerConnected(i))
		{
			new mes[64];
			f(mes, "»        Время: {ffcf00}%d:00",h);
			SendClientMessage(i,CWHITE,mes);
			SendClientMessage(i,CWHITE,"      Банковский чек");
			SendClientMessage(i,CWHITE,"---------------------------------");
			f(mes, "»      Зарплата: {c4f500}%d$",pData[i][pSalary]);
			SendClientMessage(i,CWHITE,mes);
			if(pData[i][pSalary]) { pData[i][pSalary] = 0; }
			if(pData[i][pUnemployment] && pTemp[i][pGiveExp])
			{
				if(pData[i][pJob] || (pData[i][pFraction] < 3 && pData[i][pFraction] != 0) || pData[i][pFraction] > 7)
				{
					pData[i][pUnemployment] = 0;
					UpdatePlayerData(i,"unemployment",0);
				}
				else
				{
					pData[i][pBank] += 125;
					UpdatePlayerData(i,"bank",pData[i][pBank]);
				}
			}
			f(mes, "»      Счёт: {c4f500}%d$",pData[i][pBank]);
			SendClientMessage(i,CWHITE,mes);
			SendClientMessage(i,CWHITE,"---------------------------------");
			pData[i][pExp]++;
			if(pData[i][pZakon] < 100) pData[i][pZakon]++;
			if(pData[i][pExp] >= pData[i][pLevel]*6)
			{
				SendClientMessage(i,0x7FC0E3FF,"Ваш игровой уровень и IC возраст повысился");
				pData[i][pLevel]++;
				pData[i][pAge]++;
				pData[i][pExp] = pData[i][pExp] - (pData[i][pLevel]-1)*6;
				SetPlayerScore(i,pData[i][pLevel]);
			}
			pTemp[i][pGiveExp] = 0;
			mes = "";
			f(mes, "UPDATE `accounts` SET `exp` = '%d', `level` = '%d', age='%d', zakon='%d' WHERE `id` = '%d'",pData[i][pExp],pData[i][pLevel],pData[i][pAge],pData[i][pZakon], pData[i][pMysqlID]);
			sql_query(zConn, query, QUERY_THREADED);
			if(pData[i][pHotel])
			{
				new room = pData[i][pHotelRoom];
				new hotelid = pData[i][pHotel] - 1;
				if(gHotelResidents[hotelid][room] == pData[i][pMysqlID])
				{
					new remain = gHotelEndurance[hotelid][room] - day;
					if(remain <= 2) SendClientMessage(i,CYELLOW,"ВНИМАНИЕ! У Вас осталось менее 2-х дней до того как Вас Выселят из отеля, если Вы не оплатите за проживание.");
				}
				else
				{
					SendClientMessage(i,CORANGE,"Вы были Выселены из отеля за неуплату");
					SendClientMessage(i,CORANGE,"Если у Вас было т/с, то оно было продано гос-у за 80 процентов от цены на рынке");
					pData[i][pHotel] = 0;
					pData[i][pHotelRoom] = 0;
					new slot = -1;
					for(new j = 0; j < 8; j++)
					{
						if(gHotelResidents[hotelid][j] == pData[i][pMysqlID])
						{
							slot = j;
							break;
						}
					}
					f(mes, "UPDATE `hotels` SET `name%d` = 'Свободно' WHERE `id`='%d'",slot,hotelid+1);
					sql_query(zConn, query, QUERY_THREADED);
					f(mes, "UPDATE `accounts` SET `hotel` = '0', `hotelroom` = '0' WHERE `id` = '%d'",pData[i][pMysqlID]);
					sql_query(zConn, query, QUERY_THREADED);
				}
			}
			UpdatePlayerData(i,"bank",pData[i][pBank]);
		}
	}
	return 1;
}*/



stock SetVehicleHealthEx(vehicleid, Float:health)
{
	gVehicles[vehicleid-1][vHealth] = health;
	SetVehicleHealth(vehicleid,health);
}

stock ShowInv(playerid)
{
    new mess[300] = "";
	for(new i = 0; i < 2;i++)
	{
	    new flag[25] = "{"#cRED"}Не показывать";
	    if(pData[playerid][pSett] & (1 << i)) flag = "{33AA33}Показывать";
	    f(mess,"%s%d.%s {ffffff}%s\n",mess,i+1,flag,gInv[i]);
	}
    ShowPlayerDialog(playerid,dPlayerMenuSettingsAction1,2,"{ffcf00}Выберите настройку",mess,"Изменить","Отмена");
}

stock ShowSettingsMafia(playerid)
{
	if(!IsAMafia(playerid)) return 1;
	mes = "";
	for(new i;i<5;i++)
	{
		new flag[25] = "{"#cRED"}Запрещен";
		if(gMafiaAcces[pData[playerid][pFraction]-13][i]) flag = "{33AA33}Разрешен";
		f(mes,"%s%d. %s {ffffff}%s\n",mes,i+1,flag,GetGangName(i+3));
	}
	f(mes, "%sЦена за 1 заготовку: %d$\n", mes,gMafiaValue[pData[playerid][pFraction]-13]);
	ShowPlayerDialog(playerid,dPlayerMenuSettingsMafia,2,"{ffcf00}Доступ к складу",mes,"Изменить","Отмена");
	return 1;
}

stock ShowSettings(playerid)
{
	new mess[300];
	for(new i;i<SETTINGS_COUNT;i++)
	{
		new flag[25] = "{"#cRED"}Не показывать";
		if(pData[playerid][pSettings] & (1 << i)) flag = "{33AA33}Показывать";
		f(mess,"%s%d.%s {ffffff}%s\n",mess,i+1,flag,gSettingName[i]);
	}
	ShowPlayerDialog(playerid,dPlayerMenuSettingsAction,2,"{ffcf00}Выберите настройку",mess,"Изменить","Отмена");
}

stock ShowCodeSettings(playerid)
{
    new mess[150];
	new data[2][25];
	if(!pData[playerid][pCodeSet]) strcat(data[0],"Установить");
	else strcat(data[0],"Изменить");

	if(!pData[playerid][pRequestCode]) strcat(data[1],"{"#cRED"}Выкл.");
	else strcat(data[1],"{ffcf00}Вкл.");

	f(mess,"1 » %s код безопасности\n2 » Запрашивать код безопасности при входе [%s{"#cWHITE"}]",data[0],data[1]);
	ShowPlayerDialog(playerid,dCode,2,"{ffcf00}Код безопасности",mess,"OK","Назад");
}

stock ShowFillingPrice(playerid,fillingid)
{
 	new mess[150];
	f(mess,"{"#cWHITE"}Укажите новую цену для топлива (от %d до %d)\n{"#cGRAY"}(текущая цена: %d)",3,5,gFillings[fillingid][fillFuelPrice]);
	ShowPlayerDialog(playerid,dFillingPrice2,1,"{ffcf00}Управление АЗС",mess,"OK","Отмена");
}

stock GetStoreGunSlot(gunid)
{
	switch(gunid)
	{
	case 34: return 0;
	case 33: return 1;
	case 31: return 2;
	case 30: return 3;
	case 29: return 4;
	case 25: return 5;
	case 24: return 6;
	case 23: return 7;
	case 5: return 8;
	}
	return -1;
}

stock GetStoreGunID(slot)
{
	switch(slot)
	{
	case 0: return 34;
	case 1: return 33;
	case 2: return 31;
	case 3: return 30;
	case 4: return 29;
	case 5: return 25;
	case 6: return 24;
	case 7: return 23;
	case 8: return 5;
	}
	return -1;
}

stock GetYearDayCount(year)
{
	if((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) return 366;
	else return 365;
}

stock GetDayNumber()
{
	new d,m,y,diff,daycount,cdaycount;
	getdate(y,m,d);
	diff = y - 2014;
	for(new i;i<diff;i++) daycount += GetYearDayCount(i+2014);
	cdaycount = GetYearDayCount(y);
	new Mon[12];
	if(cdaycount == 365) Mon = {0,31,59,90,120,151,181,212,243,273,304,334};
	else Mon = {0,31,60,91,121,152,182,213,244,274,305,335};
	m -= 1; //один минус переводим в индекс
	new result = daycount+Mon[m]+d;
	return result;
}
//{8,13,10,10,10,10,10,13,12,13,13,10,10,10,10};
stock IsAbleToHire(playerid)
{
	new rank = pData[playerid][pRank];
	switch(pData[playerid][pFraction])
	{
		case 1:	if(rank >= 10) return 1;
		case 2:	if(rank >= 10 && rank != 13) return 1;
		case 3..7: if(rank >= 9) return 1;
		case 8: if(rank >= 10 && rank != 13) return 1;
		case 9: if(rank >= 10 && rank != 13) return 1;
		case 10: if(rank >= 10 && rank != 13) return 1;
		case 11: if(rank >= 10 && rank != 13) return 1;
		case 12: if(rank >= 9) return 1;
		case 13: if(rank >= 10) return 1;
		case 14: if(rank >= 10) return 1;
		case 15: if(rank >= 10) return 1;
	}
	return 0;
}

stock IsAbleToUninvite(playerid)
{
	new fractionid = pData[playerid][pFraction];
	new rank = pData[playerid][pRank];
	switch(fractionid)
	{

	case 1: if(rank >= 10) return 1;
	case 2:	if(rank >= 10) return 1;
	case 3..7:
		{
			if(rank >= 8) return 1;
		}
	case 8: if(rank >= 10) return 1;
	case 9: if(rank >= 10) return 1;
	case 10: if(rank >= 10) return 1;
	case 11: if(rank >= 10) return 1;
	case 12: if(rank >= 8) return 1;
	case 13: if(rank >= 10) return 1;
	case 14: if(rank >= 10) return 1;
	case 15: if(rank >= 10) return 1;
	}
	return 0;
}

stock IsAbleToGiveRank(playerid)
{
	new fractionid = pData[playerid][pFraction];
	new rank = pData[playerid][pRank];
	switch(fractionid)
	{


	case 1: if(rank >= 10) return 1;
	case 2: if(rank >= 10) return 1;
	case 3..7:
		{
			if(rank >= 9) return 1;
		}
	case 8: if(rank >= 10) return 1;
	case 9: if(rank >= 10) return 1;
	case 10: if(rank >= 10) return 1;
	case 11: if(rank >= 10) return 1;
	case 12: if(rank >= 9) return 1;
	case 13: if(rank >= 10) return 1;
	case 14: if(rank >= 10) return 1;
	case 15: if(rank >= 10) return 1;
	}
	return 0;
}

stock IsAbleToGiveSkin(playerid)
{
	new fractionid = pData[playerid][pFraction];
	new rank = pData[playerid][pRank];
	switch(fractionid)
	{
	case 1: if(rank >= 11) return 1;
	case 2: if(rank >= 11) return 1;
	case 3: if(rank >= 9) return 1;
	case 4: if(rank >= 9) return 1;
	case 5: if(rank >= 9) return 1;
	case 6: if(rank >= 9) return 1;
	case 7: if(rank >= 9) return 1;
	case 8: if(rank >= 11) return 1;
	case 9: if(rank >= 11) return 1;
	case 10: if(rank >= 11) return 1;
	case 11: if(rank >= 11) return 1;
	case 12: if(rank >= 9) return 1;
	case 13: if(rank >= 11) return 1;
	case 14: if(rank >= 11) return 1;
	case 15: if(rank >= 11) return 1;
	}
	return 0;
}

stock ShowTestQuestion(playerid,begin,end,dialogid,q=-1)
{
	if(q == -1) q = RandomEx(begin,end);
	pTemp[playerid][pTestQNumber] = q;
	mes = "";
	f(mes, "» %s\n1.%s\n2.%s\n3.%s\n4.%s",gExamQuestions[q],gExamAnswers[q][0],gExamAnswers[q][1],gExamAnswers[q][2],gExamAnswers[q][3]);
	ShowPlayerDialog(playerid,dialogid,2,"{ffcf00}Школа вождения",mes,"Далее","Отмена");
	return 1;
}

GetWeaponSlot(weaponid) {
	switch(weaponid) {
	case 0, 1: return 0;
	case 2..9: return 1;
	case 22..24: return 2;
	case 25..27: return 3;
	case 28, 29, 32: return 4;
	case 30, 31: return 5;
	case 33, 34: return 6;
	case 35..38: return 7;
	case 16..18, 39: return 8;
	case 41..43: return 9;
	case 10..15: return 10;
	case 44..46: return 11;
	case 40: return 12;
	default: return 0;
	}
	return 0;
}


stock GivePlayerWeaponEx(playerid, weaponid, ammo)
{
	pTemp[playerid][pAbletoGun] = 2;
	if(weaponid == 23) pTemp[playerid][pTazerGun] = false;
	new slot = GetWeaponSlot(weaponid);
	gGuns[playerid][slot] = weaponid;
	gAmmos[playerid][slot] += ammo;
	GivePlayerWeapon(playerid, weaponid, ammo);
	pTemp[playerid][pAbletoGun] = 2;
	return 1;
}

stock SetPlayerAmmoEx(playerid, weapon, ammo) {
	pTemp[playerid][pAbletoGun] = 2;
	new slot = GetWeaponSlot(weapon);
	gAmmos[playerid][slot] = ammo;
	SetPlayerAmmo(playerid, weapon, ammo);
	pTemp[playerid][pAbletoGun] = 2;
	return 1;
}

stock SetPlayerArmourEx(playerid,Float:amount)
{
	pTemp[playerid][pAbletoHP] = true;
	pTemp[playerid][pArmour] = amount;
	SetPlayerArmour(playerid,amount);
}

stock ServerBan(playerid,actplayerid,time,reason[])
{
	mes = "";
	new days = time;
	time += gCurDay;
	if(!time) time += gCurDay + (365 * 99);
	if(playerid < 0) f(mes, "INSERT INTO `ban` VALUES ('','-1','%d','%d','%s','%s','%s','%d')",pData[actplayerid][pMysqlID],time,reason,pData[playerid][pNickname],pData[actplayerid][pNickname],days);
	else f(mes, "INSERT INTO `ban` VALUES ('','%d','%d','%d','%s','%s','%s','%d')",pData[playerid][pMysqlID],pData[actplayerid][pMysqlID],time,reason,pData[playerid][pNickname],pData[actplayerid][pNickname],days);
	sql_query(zConn, mes); mes = "";
	NewKick(actplayerid);
	return 1;
}

stock AdminChat(color,mess[])
{
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(!IsPlayerConnected(i) || !pData[i][pAdmin]) continue;
		SendClientMessage(i,color,mess);
	}
}
stock strreplace(string[], find, replace)
{
	for(new i=0; string[i]; i++)
	{
		//printf("%d %c %d %x",i,string[i],string[i],string[i]);
		if(string[i] == find)
		{
			string[i] = replace;
		}
	}
}

stock ToggleLock(vehicleid)
{
	if(gVehicles[vehicleid-1][vLock])
	{
		gVehicles[vehicleid-1][vLock] = 0;
		for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
		{
		    i = cvector_get(PLAYERS, idx);
			SetVehicleParamsForPlayer(vehicleid,i,0,0);
		}
		return 0;
	}
	else
	{
		gVehicles[vehicleid-1][vLock] = 1;
		for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
		{
		    i = cvector_get(PLAYERS, idx);
			SetVehicleParamsForPlayer(vehicleid,i,0,1);
		}
		return 1;
	}
}

stock ToggleLamp(vehicleid)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	if(lights <= 0) lights = 1;
	else lights = 0;
	SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
}

stock GetLamp(vehicleid)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return lights;
}

stock ShowMakeGunList(playerid)
{
	mes = "";
	new gunname[24];
 	for(new i; i < 7; i++)
	{
		GetWeaponName(gGunID[i],gunname,24);
		f(mes, "%s\n» {33AAFF}Оружие: {FFFFFF}\"%s\" | {33AAFF}Требуется заготовок: {FFFFFF}%d",mes,gunname, gGunAmount[i]);
	}
	ShowPlayerDialog(playerid,dMakeGun,2,"Скилл оружейника",mes,"Далее","Отмена");
	return 1;
}

GetFloatDifference(Float: Number1, Float: Number2) return floatround(Number1 > Number2 ? Number1 - Number2 : Number2 - Number1);

/*UpdateUnOccupiedVehicleCoords()
{
	for(new x; x < MAX_VEHICLES; x ++)
	{
		if(gVehicles[x][vCheckDelay]) { gVehicles[x][vCheckDelay] = false; continue; }
		if(gVehicles[x][vOccupied] || !gVehicles[x][vSpawned]) continue;
		GetVehiclePos(x + 1, gVehicles[x][vX], gVehicles[x][vY], gVehicles[x][vZ]);
		GetVehicleZAngle(x + 1, gVehicles[x][vA]);
	}
}*/

stock GetSubfractionID(fractionid)
{
	switch(fractionid)
	{
	case 1: return 0;
	case 7: return 1;
	case 8: return 2;
	case 10: return 3;
	case 9: return 4;
	case 11: return 3;
	}
	return -1;
}



stock GetClosestPlayer(playerid,&Float:distance)
{
	new world = GetPlayerVirtualWorld(playerid);
	distance = 5000.0;
	new id = -1;
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(!IsPlayerConnected(i) || i == playerid || !pData[i][pMysqlID] || GetPlayerVirtualWorld(i) != world) continue;
		new Float: dist;
		dist = GetPlayerDistanceToPlayer(playerid,i);
		if(dist < distance) {id = i; distance = dist;}
	}
	return id;
}

stock IsGang(fraction)
{
	if(fraction >= 3 && fraction <= 7) return 1;
	else return 0;
}

stock del(op1,op2)
{
	new result;
	result = op1/op2;
	if(op1%op2) result += 1;
	return result;
}

stock abs( value )
{
	return ((value < 0 ) ? (-value) : (value));
}

stock LoadMySQLSettings()
{
	new FileID = ini_openFile("mysql_settings.ini"),errCode;
	if(FileID < 0)
	{
		printf("Error while opening MySQL settings file. Error code: %d",FileID);
		return 0;
	}
	errCode = ini_getString(FileID,"host",MySQLSettings[HOST]);
	if(errCode < 0) printf("Error while reading MySQL settings file (host). Error code: %d",errCode);
	errCode = ini_getString(FileID,"username",MySQLSettings[USERNAME]);
	if(errCode < 0) printf("Error while reading MySQL settings file (username). Error code: %d",errCode);
	errCode = ini_getString(FileID,"password",MySQLSettings[PASSWORD]);
	if(errCode < 0) printf("Error while reading MySQL settings file (password). Error code: %d",errCode);
	errCode = ini_getString(FileID,"database",MySQLSettings[DATABASE]);
	if(errCode < 0) printf("Error while reading MySQL settings file (database). Error code: %d",errCode);
	ini_closeFile(FileID);
	return 1;
}

stock GetFreeSeat(vehicleid)
{
	if(!vehicleid) return -1;
	new model = GetVehicleModel(vehicleid);
	new maxs = GetMaxSeat(model) - 1;
	new bool:seat[3],cnt;
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(!IsPlayerConnected(i) || GetPlayerVehicleID(i) != vehicleid) continue;
		new pseat = GetPlayerVehicleSeat(i);
		if(pseat < 1 || pseat > 3) continue;
		seat[pseat-1] = true;
		cnt++;
		if(cnt >= maxs) return -1;
	}
	for(new i;i<3;i++) if(!seat[i]) return i+1;
	return -1;
}

stock GetMaxSeat(modelid)
{
	switch(modelid)
	{
	case 596..598,427,490: return 4;
	case 599,497,528: return 2;
	}
	return -1;
}

stock UpdateEconomic()
{
	if(!gWoodWH) gWoodWH = 1;
//	economicFactor = gCoalWH;
//	gWorkSalary[0] = 100;
//	gWorkSalary[1] = 100;
	/*	new wh = gGunWorkWH[2] / 1000;
	gWorkSalary[2] = floatround(gunFactor * wh + 50);
	if(gWorkSalary[2] < 20) gWorkSalary[2] = 20;
	if(gWorkSalary[0] < 20) gWorkSalary[0] = 20;
	if(gWorkSalary[1] < 20) gWorkSalary[1] = 20;
*/
}


CMD:sellbizlic(playerid, params[])
{
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /sellbizlic [id игрока]");
    if(pData[params[0]][pBusiness] < 1) return SendClientMessage(playerid,CWHITE,"» У вас нет бизнеса");
    if(playerid == params[0]) return SendClientMessage(playerid,CWHITE,"» Не верный ID");
    mes = "";
	f(mes, "» {FFCD00}%s {33AAFF}предлагает Вам купить лицензию на содержание бизнеса",pData[playerid][pNickname], params[2], params[1]);
	SendClientMessage(params[0],COLOR_GREEN,mes);
	f(mes, "» Вы предложили {FFCD00}%s {33AAFF} купить лицензию на содержание бизнеса",pData[params[0]][pNickname],params[2], params[1]);
	SendClientMessage(playerid,COLOR_GREEN,mes);
	SendClientMessage(params[0],COLOR_GREEN, "{33AAFF}Нажмите {f6ff00}[ Y ] {33AAFF}что-бы принять предложение или {c54d13}[ N ] {33AAFF}для отказа");
	SetPVarInt(params[0], "sellexamlic2", 1);
	SetPVarInt(params[0], "changelic2", 5000);//Тут стоимость
	SetPVarInt(params[0], "idselllic2", playerid);
	return 1;
}

CMD:addbizfine(playerid, params[])
{
	new bussinesid;
    if(sscanf(params, "dds[64]", bussinesid, params[1], params[2])) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /addbizfine [id бизенса] [Сумма штрафа] [причина]");
    //if(params[0]-1 < 0 || params[0]-1 >= MAX_BUSINESS_COUNT || !gBusiness[params[0]][busiID]-1) return SendClientMessage(playerid, -1, "Не существующее значение");
	if(gBusiness[bussinesid][busiStatus])
	{
        new owneridd = gBusiness[bussinesid][busiOwnerID];
        new nickname[MAX_PLAYER_NAME];
        if(owneridd)
		{
		    mes = "";
		    GetPlayerNameByID(owneridd,nickname);
            f(mes, "» {33CC00}Вы выписали штраф владельцу бизнеса %s на сумму %d$", nickname, params[1]);
			SendClientMessage(playerid,COLOR_GREEN,mes);
			if(GetPlayerID(nickname) != -1)
			{
			    f(mes, "» Вашему {ffd200}бизнесу {ffffff}был выписан {ff0000}штраф {5171ea}сотрудником FBI {ffffff}%s на сумму {baff00}%d$. {ff0000}Причина{ffffff}: {ff0000}%s", pData[playerid][pNickname], params[1], params[2]);
				SendClientMessage(GetPlayerID(nickname),-1,mes);
				SendClientMessage(GetPlayerID(nickname),-1,"Чтобы {baff00}оплатить {ffffff}используйте {ffd200}банкомат{ffffff}, или-же {5171ea}отделение полицейского департамента.");
				SendClientMessage(GetPlayerID(nickname),-1,"Если не {baff00}оплатите{ffffff} в течении {ff0000}3-ех дней, то {ffff00}правительство имеет право изъять Ваш {ffd200}бизнес.");
			}
			else
			{
			    mes = "";
				format(mes,sizeof(mes),"UPDATE `accounts` SET `ticketbussines` = '1' WHERE `id` = '%d'", owneridd);
				sql_query(zConn, mes); mes = "";
			}
			AddFBIBussines(bussinesid, params[1], params[2]);
		}
		else SendClientMessage(playerid, -1, "Владельца у данного бизнеса нет");
	}
	return 1;
}

CMD:fbibase(playerid, params[])
{
    if(FBI_TOTALY == 0) return SendClientMessage(playerid, -1, "Штрафов среди всех бизнесов нет");
	mes = "";
	new nickname[MAX_PLAYER_NAME];
	for(new i = NEWLIST[playerid][0]; i < FBI_TOTALY; i++)
	{
	    if(FBI_Info[i][FBI_BussinesID])
	    {
	        if(i >= FBI_TOTALY)
			{
			    NEWLIST[playerid][0] = 0;
			    NEWLIST[playerid][1] = 1;
		 		NEWLIST[playerid][2] = 0;
	  			break;
			}
			new ownerid = FBI_Info[i][FBI_BussinesOwner];
			new nicknames[MAX_PLAYER_NAME];
			GetPlayerNameByID(ownerid,nicknames);
			f(mes, "%sИмя должника: %s | Причина: %s | Кол-во штрафов: %d\n", mes, nickname, FBI_Info[i][FBI_ReasonTrue], FBI_Info[i][FBI_Ticket]);
			if(i == 16*NEWLIST[playerid][1])
			{
				f(mes, "%sДалее\n", mes);
				NEWLIST[playerid][2] = i+1;
   				break;
			}
		}
	}
	ShowPlayerDialog(playerid,dSearchBusines,2,"{ffcf00}Штрафы бизнесов",mes,"Далее","Отмена");
	return 1;
}

CMD:search(playerid, params[])
{
	if(pData[playerid][pFraction] == 12) return SendClientMessage(playerid, -1, "{CECFCE}");
    new bussinesid;
    if(sscanf(params, "d", bussinesid)) return SendClientMessage(playerid, -1, "{CECFCE}» Использование: /search [id бизенса]");
    if(gBusiness[bussinesid][busiOwnerID])
    {
   		new ownerids = gBusiness[bussinesid][busiOwnerID];
      	new nickname[MAX_PLAYER_NAME];
      	if(ownerids)
		{
   			mes = "";
   			GetPlayerNameByID(ownerids,nickname);
   			f(mes, "{FFFFFF}Бизнес %s | №%d\n\
   			Владелец: %s\n\
			Лицензия: %s\n\
			Штрафы бизнеса: %d", gBusiness[bussinesid][busiName], bussinesid, nickname, (gBusiness[bussinesid][busiLic]) ? ("{33AAFF}Есть") : ("{FF5030}Нет"), gBusiness[bussinesid][busiTicket]);
 			ShowPlayerDialog(playerid, dMes, DIALOG_STYLE_MSGBOX, "{ffcf00}Ифнормация о бизнесе", mes, "Закрыть", "");
		}
	}
	return 1;
}


stock AddFBIBussines(id, price, reason[])
{
    gBusiness[id][busiTicket]++;
	mes = "";
	f(mes, "UPDATE `business` SET `FBI_Status` = '1', `FBI_Reason` = '%s', `FBI_Ticket` = '%d', `ticket` = '%d' WHERE `id` = '%d'", reason, price, gBusiness[id][busiTicket], id+1);
	sql_query(zConn, mes); mes = "";
	FBI_TOTALY++;

	//FBI_Info[FBI_TOTALY][FBI_BussinesID] = 1;
	//FBI_Info[FBI_TOTALY][FBI_Ticket] = gBusiness[id][busiTicket];
	//FBI_Info[FBI_TOTALY][FBI_BussinesOwner] = gBusiness[id][busiOwnerID];

	strmid(FBI_Info[FBI_TOTALY][FBI_ReasonTrue],reason,0,strlen(reason),64);
 	FBI_Info[FBI_TOTALY][FBI_X] = gBusiness[id][busiX];
  	FBI_Info[FBI_TOTALY][FBI_Y] = gBusiness[id][busiY];
  	FBI_Info[FBI_TOTALY][FBI_Z] = gBusiness[id][busiZ];
  	FBI_Info[FBI_TOTALY][FBI_R] = gBusiness[id][busiR];
  	FBI_Info[FBI_TOTALY][FBI_BussinesID] = 1;
  	FBI_Info[FBI_TOTALY][FBI_Lic] = gBusiness[id][busiLic];
  	FBI_Info[FBI_TOTALY][FBI_BussinesOwner] = gBusiness[id][busiOwnerID];

	return 1;
}

stock UpdateBusinessText(id)
{
	if(id < 0 || id >= MAX_BUSINESS_COUNT || !gBusiness[id][busiID]) return -1;
	new mess[150];
	if(gBusiness[id][busiStatus])
	{
		new ownerid = gBusiness[id][busiOwnerID];
		new nickname[MAX_PLAYER_NAME];
		if(ownerid)
		{
			GetPlayerNameByID(ownerid,nickname);
			f(mess, "{ff9601}Бизнес: {FFFFFF}№%d\n{ff9601}Название: {FFFFFF}%s\n{ff9601}Владелец: {40c32b}%s\n{ff9601}Цена за вход: {0b8fff}%d$", id, gBusiness[id][busiName], nickname, gBusiness[id][busiEnterPrice]);
		}
		else
		{
		    f(mess, "{ff9601}Бизнес: {FFFFFF}№%d\n{ff9601}Название: {FFFFFF}%s\n{ff9601}Цена: {FFFFFF}%d$", id, gBusiness[id][busiName], gBusiness[id][busiSellPrice]);
		}
	}
	else strcat(mess,"{ff0000}БИЗНЕС НЕ РАБОТАЕТ [Закрыт]");
	UpdateDynamic3DTextLabelText(gBusinessText[id], -1, mess);
	return 1;
}

stock UpdateBusinessData(id,field[],data)
{
	mes = "";
	f(mes, "UPDATE `business` SET `%s` = '%d' WHERE `id` = '%d'",field,data,id);
	sql_query(zConn, mes); mes = "";
	return 1;
}

stock UpdateBusinessDataEx(id,field1[],data1,field2[],data2)
{
	mes = "";
	f(mes, "UPDATE `business` SET `%s` = '%d', `%s` = '%d' WHERE `id` = '%d'",field1,data1,field2,data2,id);
	sql_query(zConn, mes); mes = "";
	return 1;
}

stock ShowBusinessInformation(playerid,id,dialogid)
{
	mes = "";
	new ownerid = gBusiness[id][busiOwnerID];
	new nickname[MAX_PLAYER_NAME];
	if(ownerid)	GetPlayerNameByID(ownerid,nickname);
	else strcat(nickname,"нет");
	new status[24];
	if(gBusiness[id][busiStatus]) strcat(status,"{ffcf00}Открыт");
	else strcat(status,"{"#cRED"}Закрыт");
	f(mes, "» {"#cBLUE"}Название:\t{"#cWHITE"}%s\n{"#cBLUE"}Владелец:\t{"#cWHITE"}%s\n{"#cBLUE"}Кол-во дней:\t{"#cWHITE"}%i\n{"#cBLUE"}Гос. цена\t{"#cWHITE"}%d$\n{"#cBLUE"}Касса:\t\t{"#cWHITE"}%d$\n{"#cBLUE"}Цена товара:\t{"#cWHITE"}%d$\n{"#cBLUE"}К-во товара:\t{"#cWHITE"}%d ед.\n{"#cBLUE"}Состояние:\t{"#cWHITE"}%s",gBusiness[id][busiName],nickname,
	gBusiness[id][busiDay],gBusiness[id][busiSellPrice],gBusiness[id][busiBank],gBusiness[id][busiPrice],gBusiness[id][busiProduct],status);
	ShowPlayerDialog(playerid,dialogid,0,"Бизнес",mes,"OK","");
}

stock GetPlayerNameByID(id,nickname[])
{
	mes = "";
	f(mes, "SELECT `nickname` FROM `accounts` WHERE `id` = '%d'",id);
	new Result:r = sql_query(zConn, mes, QUERY_CACHED);
	if(sql_num_rows(r) <= 0) strcat(nickname,"Неизвестно",24);
	else sql_get_field(r, 0, nickname, 24);
	sql_free_result(r);
	return 1;
}

stock UpdateFillingFuel(fillingid)
{
	mes = "";
	f(mes, "UPDATE `fillings` SET `fuel` = '%d' WHERE id = '%d'",gFillings[fillingid][fillFuel],gFillings[fillingid][fillMysqlID]);
	sql_query(zConn, mes); mes = "";
	return 1;
}

stock GetVehicleType( model ) {
	// Returns: Car / Bike / Heli / Plane / Boat / RC
	switch ( model ) {
	case 446,452,454,484,493: return VEHICLE_TYPE_BOAT;
	case 17,25,47,69,87,88,148,163,60,111,112,113,119,120,153,157,192,193: return VEHICLE_TYPE_PLANE;
	case 448,462,481,509,510: return VEHICLE_TYPE_TWOWEELS;
	default: return VEHICLE_TYPE_CAR;
	}
	return VEHICLE_TYPE_CAR;
}

stock ShowAdvertList(playerid)
{
	new adlist[900];
	new data[3][30],index;
	format(data[0],30,"[{ffcf00}Проверено{"#cWHITE"}]");
	format(data[1],30,"[{ffcf00}Кто-то уже проверяет{"#cWHITE"}]");
	for(new i;i<MAX_ADVERT_COUNT;i++)
	{
		if(!gAdvert[i][adBusy]) format(adlist,sizeof(adlist),"%s%d. Пусто\n",adlist,i+1);
		else
		{
			if(gAdvert[i][adCheking]) index = 1;
			else if(gAdvert[i][adCheked]) index = 0;
			else index = 2;
			format(adlist,sizeof(adlist),"%s%d » %s %s\n",adlist,i+1,gAdvert[i][adSender],data[index]);
		}
	}
	ShowPlayerDialog(playerid,dAdvertList,2,"{ffcf00}Объявления",adlist,"OK","Отмена");
	return 1;
}

stock ShowDeliveryList(playerid)
{
	new list[900];
	for(new i;i<DELIVERY_COUNT;i++)
	{
		if(!gDelivery[i][deliBusy]) format(list,sizeof(list),"%s%d. -\n",list,i+1);
		else
		{
			format(list,sizeof(list),"%s%d » %s [%d$] (%d/%d)\n",list,i+1,gDelivery[i][deliCustomer],gDelivery[i][deliPrice],gDelivery[i][deliPerforming],gDelivery[i][deliCount]);
		}
	}
	ShowPlayerDialog(playerid,dDeliveryList,2,"{ffcf00}Заказы",list,"Принять","Отмена");
	return 11;
}

stock DonateLog(playerid,money,type)
{
	mes = "";
	new y,m,d,h,mi,s;
	getdate(y,m,d);
	gettime(h,mi,s);
	f(mes, "INSERT INTO `donate` VALUES('','%d-%d-%d %d:%d:%d','%d','%d','%d');",y,m,d,h,mi,s,pData[playerid][pMysqlID],money,type);
	sql_query(zConn, mes); mes = "";
}

stock GiveDN(Nick[],money)
{
	mes = "";
	f(mes, "INSERT INTO `donlog` VALUES('','%s','%d')",Nick,money);
	sql_query(zConn, mes); mes = "";
}

stock UpdateDonate(playerid)
{
	mes = "";
	f(mes, "SELECT `donate`,`newdonate` FROM `accounts` WHERE `id` = '%d'",pData[playerid][pMysqlID]);
	new Result:udon = sql_query(zConn, mes, QUERY_CACHED);
	pData[playerid][pDonate] = sql_get_field_int(udon, 0);
	new newdonate = sql_get_field_int(udon, 1);
	if(newdonate) {
		f(mes, "[ДОНАТ] Вам было зачислено %d рублей доната на счёт.",newdonate);
		SendClientMessage(playerid, COLOR_LIGHTRED, mes);
		f(mes, "UPDATE `accounts` SET `newdonate` =0 WHERE `id` = '%d'",pData[playerid][pMysqlID]);
		sql_query(zConn, mes, QUERY_THREADED);
	}
	sql_free_result(udon);
}

stock LoadNewsMoney() {
	new Result:nmon = sql_query(zConn, "SELECT `gnewsmoney`,`gnewsmoney1`,`gnewsmoney2` FROM `serverdata`", QUERY_CACHED);
	if(sql_num_fields(nmon) > 1) {
		for(new i; i<3; i++) gNewsMoney[i] = sql_get_field_int(nmon, i);
	}
	sql_free_result(nmon);
}

stock SaveNewsMoney() {
	mes = "";
	f(mes,  "UPDATE `serverdata` SET `gnewsmoney` = %d,`gnewsmoney1`=%d,`gnewsmoney2`=%d",
	gNewsMoney[0], gNewsMoney[1], gNewsMoney[2]);
	sql_query(zConn, mes); mes = "";
}

/*stock LoadDeliveryData() {
	new data[128], id;
	new Result:r = sql_query(zConn, "SELECT * FROM `delivery`", QUERY_CACHED);
	for(new i; i< sql_num_rows(r); i++) {
		sql_get_field_assoc_ex(r,i,"data", data);
		sscanf(data, "p<|>is[24]a<i>[6]iiia<i>[6]l",
		gDelivery[id][deliBusinessid],
		gDelivery[id][deliCustomer],
		gDelivery[id][deliPerformerid],
		gDelivery[id][deliPrice],
		gDelivery[id][deliCount],
		gDelivery[id][deliPerforming],
		gDelivery[id][deliProduct],
		gDelivery[id][deliBusy]
		);
		id ++;
	}
	sql_free_result(r);
	return 1;
}

stock SaveDeliveryData(id) {
	new query[256], data[128], str[2][64];
	for(new i; i < 6; i ++) {
		if(!i) format(str[0], sizeof(str[]), "%i", gDelivery[id][deliPerformerid][i]);
		else format(str[0], sizeof(str[]), "%s|%i", str[0], gDelivery[id][deliPerformerid][i]);
	}
	for(new i; i < 6; i ++) {
		if(!i) format(str[1], sizeof(str[]), "%i", gDelivery[id][deliProduct][i]);
		else format(str[1], sizeof(str[]), "%s|%i", str[1], gDelivery[id][deliProduct][i]);
	}
	format(data, sizeof(data), "%i|%s|%s|%i|%i|%i|%s|%d", gDelivery[id][deliBusinessid], gDelivery[id][deliCustomer], str[0], gDelivery[id][deliPrice], gDelivery[id][deliCount], gDelivery[id][deliPerforming], str[1], gDelivery[id][deliBusy]);
	f(mes,  "UPDATE `delivery` SET `data` = '%s' WHERE `id` = %i", data, id + 1);
	sql_query(zConn, mes); mes = "";
	for(new i;i<MAX_BUSINESS_COUNT;i++)
	{
		if(!gBusiness[i][busiID]) break;
		f(mes,  "UPDATE `business` SET `order` = '%d', `deliving` = '%d' WHERE `id` = %i",gBusiness[i][busiOrder],gBusiness[i][busiDeliving],gBusiness[i][busiID]);
		sql_query(zConn, mes); mes = "";
	}
}*/

stock NewKick(playerid) {
	SetTimerEx("KickPublic", 1000, false, "d", playerid);
	SetPVarInt(playerid, "kicked", 1);
	return 1;
}

forward KickPublic(playerid);
public KickPublic(playerid) {
	if(IsPlayerConnected(playerid)) {
		ResetPlayerWeaponsEx(playerid);
		DeletePVar(playerid, "kicked");
		Kick(playerid);
	}
}

stock GetVehicleRotation(vehicleid,&Float:x,&Float:y,&Float:z) {
	new Float:quat_w,Float:quat_x,Float:quat_y,Float:quat_z;
	GetVehicleRotationQuat(vehicleid,quat_w,quat_x,quat_y,quat_z);
	x = atan2(2*((quat_x*quat_y)+(quat_w+quat_z)),(quat_w*quat_w)+(quat_x*quat_x)-(quat_y*quat_y)-(quat_z*quat_z));
	y = atan2(2*((quat_y*quat_z)+(quat_w*quat_x)),(quat_w*quat_w)-(quat_x*quat_x)-(quat_y*quat_y)+(quat_z*quat_z));
	z = asin(-2*((quat_x*quat_z)+(quat_w*quat_y)));
	return 1;
}

stock ShowPlayerEateryTD(playerid) {
	for(new x; x < sizeof(gEateryTextDraw); x ++) {
		TextDrawHideForPlayer(playerid, gEateryTextDraw[x]);
		TextDrawShowForPlayer(playerid, gEateryTextDraw[x]);
	}
	SelectTextDraw(playerid, 0xAFAFAFAA);

	new str[16];
	for(new x; x < sizeof(gEateryCostTextDraw[]); x ++) {
		format(str, sizeof(str), "$%i", gEateryCosts[x]);
		PlayerTextDrawSetString(playerid, gEateryCostTextDraw[playerid][x], str);
		PlayerTextDrawShow(playerid, gEateryCostTextDraw[playerid][x]);
	}

	SetPVarInt(playerid, "eatery_td", 1);
}

stock HidePlayerEateryTD(playerid) {
	for(new x; x < sizeof(gEateryTextDraw); x ++) {
		TextDrawHideForPlayer(playerid, gEateryTextDraw[x]);
		if(x < sizeof(gEateryCostTextDraw[])) PlayerTextDrawHide(playerid, gEateryCostTextDraw[playerid][x]);
	}
	CancelSelectTextDraw(playerid);
}

stock ShowPlayerBarTD(playerid) {
	for(new x; x < sizeof(gBarTextDraw); x ++) {
		TextDrawHideForPlayer(playerid, gBarTextDraw[x]);
		TextDrawShowForPlayer(playerid, gBarTextDraw[x]);
	}
	SelectTextDraw(playerid, 0xAFAFAFAA);

	new str[16];
	for(new x; x < sizeof(gBarCostTextDraw[]); x ++) {
		format(str, sizeof(str), "$%i", gBarCosts[x]);
		PlayerTextDrawSetString(playerid, gBarCostTextDraw[playerid][x], str);
		PlayerTextDrawShow(playerid, gBarCostTextDraw[playerid][x]);
	}

	SetPVarInt(playerid, "bar_td", 1);
}

stock HidePlayerBarTD(playerid) {
	for(new x; x < sizeof(gBarTextDraw); x ++) {
		TextDrawHideForPlayer(playerid, gBarTextDraw[x]);
		if(x < sizeof(gBarCostTextDraw[])) PlayerTextDrawHide(playerid, gBarCostTextDraw[playerid][x]);
	}
	CancelSelectTextDraw(playerid);
}

stock ShowPlayerClothesTD(playerid) {
	for(new x; x < sizeof(gSkinShopDraw); x ++) {
		TextDrawHideForPlayer(playerid, gSkinShopDraw[x]);
		TextDrawShowForPlayer(playerid, gSkinShopDraw[x]);
	}
	new class = 1, skin, price, str[32];
	for(new x; x < sizeof(gSkins); x ++) {
		skin = GetSkinID(class, pData[playerid][pSex], x);
		price = GetSkinPrice(x);
		if(!skin) continue;
		else SetPlayerSkin(playerid, skin);
		format(str, 32, "~y~$%i", price);
		PlayerTextDrawSetString(playerid, gSkinShopPriceDraw[playerid], str);
		break;
	}
	PlayerTextDrawShow(playerid, gSkinShopPriceDraw[playerid]);
	SelectTextDraw(playerid, 0xAFAFAFAA);
	SetPVarInt(playerid, "clothes_td", 1);
}



stock HidePlayerClothesTD(playerid) {
	for(new x; x < sizeof(gSkinShopDraw); x ++) {
		TextDrawHideForPlayer(playerid, gSkinShopDraw[x]);
	}
	PlayerTextDrawHide(playerid, gSkinShopPriceDraw[playerid]);
	CancelSelectTextDraw(playerid);
	DeletePVar(playerid, "clothes_td");
}

stock GetSkinID(class, sex, index) {
	if(index < 0 || index > sizeof(gSkins) - 1) return 0;
	if(gSkins[index][skinClass] != class) return 0;
	if(gSkins[index][skinSex] != sex) return 0;
	return gSkins[index][skinID];
}

stock GetSkinPrice(index) {
	if(index < 0 || index > sizeof(gSkins) - 1) return 0;
	return gSkins[index][skinPrice];
}

forward LoadGZ();
public LoadGZ()
{
	new ololo[5][32];
	new File: file = fopen("zone.ini", io_read);
	if(file)
	{
		new string[256];
		new idx = 0;
		while (idx < MAX_GZONE)
		{
			fread(file, string);
			split(string, ololo, '|');
			GZMZ[idx][gCoords][0] = floatstr(ololo[0]);
			GZMZ[idx][gCoords][1] = floatstr(ololo[1]);
			GZMZ[idx][gCoords][2] = floatstr(ololo[2]);
			GZMZ[idx][gCoords][3] = floatstr(ololo[3]);
			GZMZ[idx][gFrak] = strval(ololo[4]);
			GZMZ[idx][idm] = GangZoneCreate(GZMZ[idx][gCoords][0],GZMZ[idx][gCoords][1],GZMZ[idx][gCoords][2],GZMZ[idx][gCoords][3]);
			ZoneOnBattle[idx] = 0;

			idx++;
			printf("%f | %f | %f | %f - %i - %i", floatstr(ololo[0]), floatstr(ololo[1]), floatstr(ololo[2]), floatstr(ololo[3]), idx, TOTALGZ);
		}
		fclose(file);
	}
}

forward SaveGZ();
public SaveGZ()
{
	new idx;
	new string[100];
	new File: file2;
	while (idx < sizeof(GZMZ))
	{
		format(string, sizeof(string),"%f|%f|%f|%f|%d\n",GZMZ[idx][gCoords][0],GZMZ[idx][gCoords][1],GZMZ[idx][gCoords][2],
		GZMZ[idx][gCoords][3],GZMZ[idx][gFrak]);
		if(idx == 0)
		{
			file2 = fopen("zone.ini", io_write);
		}
		else
		{
			file2 = fopen("zone.ini", io_append);
		}
		fwrite(file2,string);
		idx++;
		fclose(file2);
	}
	return 1;
}
/*stock LoadGraffity()
{
	new Result:gz = sql_query(zConn, "SELECT * FROM `graffity`", QUERY_CACHED);
	new i;
	for (new idx = 1; idx <=sql_num_rows(gz); idx++)
	{
		i = sql_get_field_int(gz, 0);
		GZMZ[i][gFrak] = sql_get_field_int(gz, 1);
		sql_next_row(gz);
	}
	sql_free_result(gz);
}
stock SaveGraffity(idx)
{
	new querys[1524];
	format(querys, sizeof(querys), "UPDATE `gangzone` SET `gFrak` = '%d' WHERE `id` = '%d'",
	GZMZ[idx][gFrak], idx);
	sql_query(zConn, querys, QUERY_CACHED);
	return 1;
}*/
/*
stock LoadGZ()
{
	new Result:gz = sql_query(zConn, "SELECT * FROM `gangzone`", QUERY_CACHED);
	new i;
	for (new idx = 1; idx<=sql_num_rows(gz); idx++) {
		i = sql_get_field_int(gz, 0);
		GZMZ[i][gCoords][0] = sql_get_field_float(gz, 1);
		GZMZ[i][gCoords][1] = sql_get_field_float(gz, 2);
		GZMZ[i][gCoords][2] = sql_get_field_float(gz, 3);
		GZMZ[i][gCoords][3] = sql_get_field_float(gz, 4);
		GZMZ[i][gFrak] = sql_get_field_int(gz, 5);
		TOTALGZ++;
		GZMZ[i][idm] = GangZoneCreate(GZMZ[i][gCoords][0],GZMZ[i][gCoords][1],GZMZ[i][gCoords][2],GZMZ[i][gCoords][3]);
		sql_next_row(gz);
	}
	sql_free_result(gz);
}
stock SaveGZ(idx)
{
	new querys[1524];
	format(querys, sizeof(querys), "UPDATE `gangzone` SET `ginfo1` = '%f', `ginfo2` = '%f', `ginfo3` = '%f', `ginfo4` = '%f', `fraction` = '%d' WHERE `id` = '%d'",
	GZMZ[idx][gCoords][0], GZMZ[idx][gCoords][1],GZMZ[idx][gCoords][2],GZMZ[idx][gCoords][3],GZMZ[idx][gFrak], idx);
	sql_query(zConn, querys, QUERY_CACHED);
	return 1;
}
*/
stock GetGangZoneColor(gangzonex)
{
	new zx;
	switch(GZMZ[gangzonex][gFrak])
	{
	case F_GROVE: zx = 0x009900AA;
	case F_BALLAS: zx = 0xCC00FFAA;
	case F_RIFA: zx = 0x6666FFAA;
	case F_AZTEC: zx = 0x00CCFFAA;
	case F_VAGOS: zx = 0xFBD400AA;
	case 0: zx = 0xffffffAA;
	}
	return zx;
}
stock SendMes(playerid, color, fstring[], {Float, _}:...)
{
	static const
	STATIC_ARGS = 3;
	new
	n = (numargs() - STATIC_ARGS) * BYTES_PER_CELL;
	if (n)
	{
		new
		message[128],
		arg_start,
		arg_end;
		#emit CONST.alt        fstring
		#emit LCTRL          5
		#emit ADD
		#emit STOR.S.pri        arg_start

		#emit LOAD.S.alt        n
		#emit ADD
		#emit STOR.S.pri        arg_end
		do
		{
			#emit LOAD.I
			#emit PUSH.pri
			arg_end -= BYTES_PER_CELL;
			#emit LOAD.S.pri      arg_end
		}
		while (arg_end > arg_start);

		// Push the static format parameters.
		#emit PUSH.S          fstring
		#emit PUSH.C          128
		#emit PUSH.ADR         message

		n += BYTES_PER_CELL * 3;
		#emit PUSH.S          n
		#emit SYSREQ.C         format

		n += BYTES_PER_CELL;
		#emit LCTRL          4
		#emit LOAD.S.alt        n
		#emit ADD
		#emit SCTRL          4

		return SendClientMessage(playerid, color, message);
	}
	else
	{
		return SendClientMessage(playerid, color, fstring);
	}
}



stock CaptureStart(familyone, familytwo)
{
 	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(IsAGang(i))
		{

		    CAPTU[i][Textdraw0] = TextDrawCreate(36.000049, 300.326019, "__________Times: %d~n~------------------------------------------~n~Los Santos Vagos: %d~n~Los Varios Aztecas: %d");
			TextDrawLetterSize(CAPTU[i][Textdraw0], 0.228333, 0.969481);
			TextDrawTextSize(CAPTU[i][Textdraw0], 160.999969, 65.955535);
			TextDrawAlignment(CAPTU[i][Textdraw0], 1);
			TextDrawColor(CAPTU[i][Textdraw0], -1);
			TextDrawUseBox(CAPTU[i][Textdraw0], true);
			TextDrawBoxColor(CAPTU[i][Textdraw0], 102);
			TextDrawSetShadow(CAPTU[i][Textdraw0], 0);
			TextDrawSetOutline(CAPTU[i][Textdraw0], 1);
			TextDrawBackgroundColor(CAPTU[i][Textdraw0], 51);
			TextDrawFont(CAPTU[i][Textdraw0], 2);
			TextDrawSetProportional(CAPTU[i][Textdraw0], 1);
		    /*CAPTU[i][Textdraw0] = TextDrawCreate(122.666572, 205.588912, "usebox");
			TextDrawLetterSize(CAPTU[i][Textdraw0], 0.000000, 9.682095);
			TextDrawTextSize(CAPTU[i][Textdraw0], 11.666673, 0.000000);
			TextDrawAlignment(CAPTU[i][Textdraw0], 1);
			TextDrawColor(CAPTU[i][Textdraw0], 0);
			TextDrawUseBox(CAPTU[i][Textdraw0], true);
			TextDrawBoxColor(CAPTU[i][Textdraw0], 102);
			TextDrawSetShadow(CAPTU[i][Textdraw0], 0);
			TextDrawSetOutline(CAPTU[i][Textdraw0], 0);
			TextDrawFont(CAPTU[i][Textdraw0], 0);

			CAPTU[i][Textdraw1] = TextDrawCreate(38.999992, 211.555603, "The Ballas");
			TextDrawLetterSize(CAPTU[i][Textdraw1], 0.287333, 1.143704);
			TextDrawAlignment(CAPTU[i][Textdraw1], 1);
			TextDrawColor(CAPTU[i][Textdraw1], -1);
			TextDrawSetShadow(CAPTU[i][Textdraw1], 0);
			TextDrawSetOutline(CAPTU[i][Textdraw1], 1);
			TextDrawBackgroundColor(CAPTU[i][Textdraw1], 51);
			TextDrawFont(CAPTU[i][Textdraw1], 3);
			TextDrawSetProportional(CAPTU[i][Textdraw1], 1);

			CAPTU[i][Textdraw2] = TextDrawCreate(26.666664, 272.289062, "Los Santos Vagos");
			TextDrawLetterSize(CAPTU[i][Textdraw2], 0.287333, 1.143704);
			TextDrawAlignment(CAPTU[i][Textdraw2], 1);
			TextDrawColor(CAPTU[i][Textdraw2], -1);
			TextDrawSetShadow(CAPTU[i][Textdraw2], 0);
			TextDrawSetOutline(CAPTU[i][Textdraw2], 1);
			TextDrawBackgroundColor(CAPTU[i][Textdraw2], 51);
			TextDrawFont(CAPTU[i][Textdraw2], 3);
			TextDrawSetProportional(CAPTU[i][Textdraw2], 1);

			CAPTU[i][Textdraw3] = TextDrawCreate(12.999995, 238.933273, "----------------");
			TextDrawLetterSize(CAPTU[i][Textdraw3], 0.449999, 1.600000);
			TextDrawAlignment(CAPTU[i][Textdraw3], 1);
			TextDrawColor(CAPTU[i][Textdraw3], -5963521);
			TextDrawSetShadow(CAPTU[i][Textdraw3], 0);
			TextDrawSetOutline(CAPTU[i][Textdraw3], 1);
			TextDrawBackgroundColor(CAPTU[i][Textdraw3], 51);
			TextDrawFont(CAPTU[i][Textdraw3], 1);
			TextDrawSetProportional(CAPTU[i][Textdraw3], 1);

			CAPTU[i][Textdraw4] = TextDrawCreate(63.000030, 227.318588, "0");
			TextDrawLetterSize(CAPTU[i][Textdraw4], 0.339000, 1.280592);
			TextDrawAlignment(CAPTU[i][Textdraw4], 1);
			TextDrawColor(CAPTU[i][Textdraw4], -1);
			TextDrawSetShadow(CAPTU[i][Textdraw4], 0);
			TextDrawSetOutline(CAPTU[i][Textdraw4], 1);
			TextDrawBackgroundColor(CAPTU[i][Textdraw4], 51);
			TextDrawFont(CAPTU[i][Textdraw4], 3);
			TextDrawSetProportional(CAPTU[i][Textdraw4], 1);

			CAPTU[i][Textdraw5] = TextDrawCreate(63.000030, 254.451965, "0");
			TextDrawLetterSize(CAPTU[i][Textdraw5], 0.339000, 1.280592);
			TextDrawAlignment(CAPTU[i][Textdraw5], 1);
			TextDrawColor(CAPTU[i][Textdraw5], -1);
			TextDrawSetShadow(CAPTU[i][Textdraw5], 0);
			TextDrawSetOutline(CAPTU[i][Textdraw5], 1);
			TextDrawBackgroundColor(CAPTU[i][Textdraw5], 51);
			TextDrawFont(CAPTU[i][Textdraw5], 3);
			TextDrawSetProportional(CAPTU[i][Textdraw5], 1);


			CaptTime[i] = TextDrawCreate(31.666700, 192.229660, "Time: 0:24");
			TextDrawLetterSize(CaptTime[i], 0.338999, 1.280591);
			TextDrawAlignment(CaptTime[i], 1);
			TextDrawColor(CaptTime[i], -1);
			TextDrawSetShadow(CaptTime[i], 0);
			TextDrawSetOutline(CaptTime[i], 1);
			TextDrawBackgroundColor(CaptTime[i], 51);
			TextDrawFont(CaptTime[i], 2);
			TextDrawSetProportional(CaptTime[i], 1);*/

			pTemp[i][pTextDrawCapture] = true;
		    stringText = "";
		    BANDAB = "";
		    BANDAA = "";
		    SCORE1 = "0";
		    SCORE2 = "0";

			TextDrawShowForPlayer(i, CAPTU[i][Textdraw0]);
			/*TextDrawShowForPlayer(i, CAPTU[i][Textdraw1]);
			TextDrawShowForPlayer(i, CAPTU[i][Textdraw2]);
			TextDrawShowForPlayer(i, CAPTU[i][Textdraw3]);
			TextDrawShowForPlayer(i, CaptTime[i]);
			TextDrawShowForPlayer(i, CAPTU[i][Textdraw4]);
			TextDrawShowForPlayer(i, CAPTU[i][Textdraw5]);*/
			if(familytwo > 0)
			{
			    format(BANDAA, sizeof(BANDAA), "%s", GetGangName(familyone));
			    format(BANDAB, sizeof(BANDAB), "%s", GetGangName(familytwo));
			    mes = "";
			    format(mes, sizeof(mes), "__________~y~Times:~w~ 0.00~n~------------------------------------------~n~%s: ~r~0~w~~n~%s: ~r~0~w~", BANDAA, BANDAB);
			    TextDrawSetString(CAPTU[i][Textdraw0], mes);

			}
			else
			{
				format(BANDAA, sizeof(BANDAA), "%s", GetGangName(familyone));
			    format(BANDAB, sizeof(BANDAB), "Other Gang's");
			    mes = "";
			    format(mes, sizeof(mes), "__________~y~Times:~w~ 0.00~n~------------------------------------------~n~%s: ~r~0~w~~n~%s: ~r~0~w~", BANDAA, BANDAB);
			    TextDrawSetString(CAPTU[i][Textdraw0], mes);
			}
		}
	}
}


stock CaptureUpd(bandkiller)
{
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(IsAGang(i) && pTemp[i][pTextDrawCapture])
		{
			if(GangInfo[bandkiller][gangnumber] == 1)
			{
				format(SCORE1, 150, "%d", GangInfo[bandkiller][score]);
				mes = "";
			    format(mes, sizeof(mes), "__________~y~Times:~w~ %s~n~------------------------------------------~n~%s: ~r~%s~w~~n~%s: ~r~%s~w~", stringText, BANDAA, SCORE1, BANDAB, SCORE2);
				TextDrawSetString(CAPTU[i][Textdraw0], mes);
			}
			else
			{
				format(SCORE2, 150, "%d", GangInfo[bandkiller][score]);
				mes = "";
			    format(mes, sizeof(mes), "__________~y~Times:~w~ %s~n~------------------------------------------~n~%s: ~r~%s~w~~n~%s: ~r~%s~w~", stringText, BANDAA, SCORE1, BANDAB, SCORE2);
				TextDrawSetString(CAPTU[i][Textdraw0], mes);
			}
		}
	}
}
stock CaptureEnd()
{
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(IsAGang(i) && pTemp[i][pTextDrawCapture])
		{
		    if(pTemp[i][pTextDrawCapture])
			{
			    TextDrawHideForPlayer(i, CAPTU[i][Textdraw0]);
				/*TextDrawHideForPlayer(i, CAPTU[i][Textdraw1]);
				TextDrawHideForPlayer(i, CAPTU[i][Textdraw2]);
				TextDrawHideForPlayer(i, CAPTU[i][Textdraw3]);
				TextDrawHideForPlayer(i, CaptTime[i]);
				TextDrawHideForPlayer(i, CAPTU[i][Textdraw4]);
				TextDrawHideForPlayer(i, CAPTU[i][Textdraw5]);*/

			 	TextDrawDestroy(CAPTU[i][Textdraw0]);
				/*TextDrawDestroy(CAPTU[i][Textdraw1]);
				TextDrawDestroy(CaptTime[i]);
				TextDrawDestroy(CAPTU[i][Textdraw2]);
				TextDrawDestroy(CAPTU[i][Textdraw3]);
			    TextDrawDestroy(CAPTU[i][Textdraw4]);
			    TextDrawDestroy(CAPTU[i][Textdraw5]);*/
		        pTemp[i][pTextDrawCapture] = false;
			}
			IsCapture = 0;
			PustZone = 0;
		}
	}
}
stock GzCheck()
{
	if(IsCapture == 0 && PustZone == 0) return -1;
	for(new i; i != MAX_GZONE; i++)
	{
		if(ZoneOnBattle[i] == 1 && GZSafeTime == 0)
		{
			if(IsCapture == 1 && PustZone == 0)
			{
    			if(GangInfo[GZMZ[i][gNapad]][score] == GangInfo[GZMZ[i][gFrak]][score])
				{
					new zx,zl;
					zx = GZMZ[i][gNapad];
					zl = i;
					new string[90];
					format(string,90,"%s выйгрывает захват территории у %s",GetGangName(zx), GetGangName(GZMZ[i][gFrak]));
					for(new d = 3; d < 8; d++)
					{
						SendFMes(d, -1, string);
					}
					ZoneOnBattle[zl] =0;
					CaptureEnd();
					GangInfo[GZMZ[zl][gNapad]][captureid] = 0;
					GangInfo[GZMZ[zl][gNapad]][capture] = 0;
					GangInfo[GZMZ[zl][gNapad]][score] = 0;
					GangInfo[GZMZ[zl][gFrak]][captureid] = 0;
					GangInfo[GZMZ[zl][gFrak]][capture] = 0;
					GangInfo[GZMZ[zl][gFrak]][score] = 0;
					GangInfo[GZMZ[zl][gNapad]][gangnumber] = 0;
					GangInfo[GZMZ[zl][gFrak]][gangnumber] = 0;
					GZMZ[zl][gFrak] = zx;
					GZMZ[zl][gNapad] = 0;
					GangZoneStopFlashForAll(GZMZ[zl][idm]);
					GangZoneHideForAll(GZMZ[zl][idm]);
					GangZoneShowForAll(GZMZ[zl][idm],GetGangZoneColor(zl));
					SaveGZ();
				}
				else if(GangInfo[GZMZ[i][gNapad]][score] > GangInfo[GZMZ[i][gFrak]][score])
				{
					new zx,zl;
					zx = GZMZ[i][gNapad];
					zl = i;
					new string[90];
					format(string,90,"%s выйгрывает захват территории у %s",GetGangName(zx), GetGangName(GZMZ[i][gFrak]));
					for(new d = 3; d < 8; d++)
					{
						SendFMes(d, -1, string);
					}
					ZoneOnBattle[zl] =0;
					CaptureEnd();
					GangInfo[GZMZ[zl][gNapad]][captureid] = 0;
					GangInfo[GZMZ[zl][gNapad]][capture] = 0;
					GangInfo[GZMZ[zl][gNapad]][score] = 0;
					GangInfo[GZMZ[zl][gFrak]][captureid] = 0;
					GangInfo[GZMZ[zl][gFrak]][capture] = 0;
					GangInfo[GZMZ[zl][gFrak]][score] = 0;
					GangInfo[GZMZ[zl][gNapad]][gangnumber] = 0;
					GangInfo[GZMZ[zl][gFrak]][gangnumber] = 0;
					GZMZ[zl][gFrak] = zx;
					GZMZ[zl][gNapad] = 0;
					GangZoneStopFlashForAll(GZMZ[zl][idm]);
					GangZoneHideForAll(GZMZ[zl][idm]);
					GangZoneShowForAll(GZMZ[zl][idm],GetGangZoneColor(zl));
					SaveGZ();
				}
				else if(GangInfo[GZMZ[i][gNapad]][score] < GangInfo[GZMZ[i][gFrak]][score])
				{
					new zx,zl;
					zx = GZMZ[i][gFrak];
					zl = i;
					new string[90];
					format(string,90,"Попытка %s захватить территорию %s провалилась",GetGangName(GZMZ[i][gNapad]),GetGangName(zx));
					//format(string,90,"Попытка %s захватить территорию %s провалилась",GetGangName(zx),GetGangName(GZMZ[i][gNapad]));
					for(new d = 3; d < 8; d++)
					{
						SendFMes(d, -1, string);
					}
					ZoneOnBattle[zl] =0;
					CaptureEnd();
					GangInfo[GZMZ[zl][gNapad]][captureid] = 0;
					GangInfo[GZMZ[zl][gNapad]][capture] = 0;
					GangInfo[GZMZ[zl][gNapad]][score] = 0;
					GangInfo[GZMZ[zl][gFrak]][captureid] = 0;
					GangInfo[GZMZ[zl][gFrak]][capture] = 0;
					GangInfo[GZMZ[zl][gFrak]][score] = 0;
					GangInfo[GZMZ[zl][gNapad]][gangnumber] = 0;
					GangInfo[GZMZ[zl][gFrak]][gangnumber] = 0;
					GZMZ[zl][gFrak] = zx;
					GZMZ[zl][gNapad] = 0;
					GangZoneStopFlashForAll(GZMZ[zl][idm]);
					GangZoneHideForAll(GZMZ[zl][idm]);
					GangZoneShowForAll(GZMZ[zl][idm],GetGangZoneColor(zl));
					SaveGZ();

				}
			}
			else
			{
				if(GangInfo[GZMZ[i][gNapad]][score] <= GangInfo[GZMZ[i][gFrak]][score])
				{
					new zl;
					zl = i;
					new string[90];
					format(string, 90, "Попытка %s захватить нейтральную территорию провалилась", GetGangName(GZMZ[i][gNapad]));
					for(new d = 3; d < 8; d++)
					{
						SendFMes(d, -1, string);
					}

					ZoneOnBattle[zl] = 0;
					CaptureEnd();
					GangInfo[GZMZ[zl][gNapad]][captureid] = 0;
					GangInfo[GZMZ[zl][gNapad]][capture] = 0;
					GangInfo[GZMZ[zl][gNapad]][score] = 0;
					GangInfo[GZMZ[zl][gFrak]][captureid] = 0;
					GangInfo[GZMZ[zl][gFrak]][capture] = 0;
					GangInfo[GZMZ[zl][gFrak]][score] = 0;
					GangInfo[GZMZ[zl][gNapad]][gangnumber] = 0;
					GangInfo[GZMZ[zl][gFrak]][gangnumber] = 0;
					GZMZ[zl][gFrak] = 0;
					GZMZ[zl][gNapad] = 0;
					GangZoneStopFlashForAll(GZMZ[zl][idm]);
					GangZoneHideForAll(GZMZ[zl][idm]);
					GangZoneShowForAll(GZMZ[zl][idm],GetGangZoneColor(zl));
					SaveGZ();
				}
				else
				{
					new zx,zl;
					zx = GZMZ[i][gNapad];
					zl = i;
					new string[90];
					format(string,90,"%s захватила нейтральную территорию", GetGangName(zx));
					for(new d = 3; d < 8; d++)
					{
						SendFMes(d, -1, string);
					}
					ZoneOnBattle[zl] = 0;
					CaptureEnd();
					GangInfo[GZMZ[zl][gNapad]][captureid] = 0;
					GangInfo[GZMZ[zl][gNapad]][capture] = 0;
					GangInfo[GZMZ[zl][gNapad]][score] = 0;
					GangInfo[GZMZ[zl][gFrak]][captureid] = 0;
					GangInfo[GZMZ[zl][gFrak]][capture] = 0;
					GangInfo[GZMZ[zl][gFrak]][score] = 0;
					GangInfo[GZMZ[zl][gNapad]][gangnumber] = 0;
					GangInfo[GZMZ[zl][gFrak]][gangnumber] = 0;
					GZMZ[zl][gFrak] = zx;
					GZMZ[zl][gNapad] = 0;
					GangZoneStopFlashForAll(GZMZ[zl][idm]);
					GangZoneHideForAll(GZMZ[zl][idm]);
					GangZoneShowForAll(GZMZ[zl][idm],GetGangZoneColor(zl));
					SaveGZ();
				}
			}
		}
	}
	return true;
}

stock GetMafiaName(fnumbwer)
{
	new string[34];
	switch(fnumbwer)
	{
		case F_RM: format(string,32,"Russian Mafia");
		case F_LCN: format(string,32,"La Cosa Nostra");
		case F_YAK: format(string,32,"Yakuza");
	}
	return string;
}

stock GetGangName(fnumbwer)
{
	new string[34];
	switch(fnumbwer)
	{
		case F_GROVE: format(string,32,"Grove Street");
		case F_BALLAS: format(string,32,"The Ballas");
		case F_RIFA: format(string,32,"The Rifa");
		case F_AZTEC: format(string,32,"Varios Los Aztecas");
		case F_VAGOS: format(string,32,"Los Santos Vagos");
	}
	return string;
}
stock IsPlayerInBandOnline(bandid)
{
	new np;
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(pData[i][pFraction] == bandid)
		{
			np++;
		}
	}
	return np;
}
stock PlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return true;
	return false;
}
stock IsAGang(playerid)
{
	new member = pData[playerid][pFraction];
	switch(member)
	{
	case F_GROVE, F_BALLAS, F_RIFA, F_AZTEC, F_VAGOS: return true;
	}
	return false;
}


stock IsInAllowed(playerid)
{
	new L = sizeof(allowedfactions);
	for(new i =0;i<L;i++)
	{
		if(pData[playerid][pFraction] == allowedfactions[i]) return true;
	}
	return false;
}

/*stock AddHotelBank(hotelid, price)
{
	gHotelData[hotelid][hotelBank] += price;
	mes = ""; f(mes, "UPDATE `hotels` SET `bank` = '%d' WHERE `id` = '%d'", price, hotelid+1);
	sql_query(zConn, mes); mes = "";

}

stock UpdateHotel3D(i)
{
	new zRes[126];
	if(!gHotelData[i][hotelOwnerid]) format(zRes,sizeof(zRes),"\t{"#cORANGE"}Отель\nВладелец: {"#cORANGE"}Нет\nЦена: {"#cORANGE"}$600.000");
	else {
		new cnt;
		for(new k;k<8;k++) {
			if(gHotelResidents[i][k]) cnt++;
		}
		format(zRes,sizeof(zRes),"\t{"#cORANGE"}Отель\nВладелец: %s\nЦена за номер (в сутки): %d$\nЖильцов: %d/8",gHotelData[i][hotelOwner],gHotelData[i][hotelPrice],cnt);
		if(gHotelData[i][hEnterPrice]) format(zRes, sizeof(zRes), "%s\n{FF0500}Цена за вход: %d$", zRes,gHotelData[i][hEnterPrice]);
	}
	gHotelText[i] = CreateDynamic3DTextLabel(zRes,CWHITE,gHotels[i][0],gHotels[i][1],gHotels[i][2]+1.0,20.0);
	return 1;
}*/

stock GetGZColorF(fnumber)
{
	new zx;
	switch(fnumber)
	{
	case F_GROVE: zx = 0x009900AA;
	case F_BALLAS: zx = 0xCC00FFAA;
	case F_RIFA: zx = 0x6666FFAA;
	case F_AZTEC: zx = 0x00CCFFAA;
	case F_VAGOS: zx = 0xFBD400AA;
	case 0: zx = 0xC0C0C0AA;
	}
	return zx;
}
task AntiCheat[1000]()
{
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
	    SpeedoUpdate(i);
		if(pTemp[i][pAbletoGun]) pTemp[i][pAbletoGun] --;
		new pstate = GetPlayerState(i);
		if(!pTemp[i][pAbletoTP] && !pTemp[i][pIsAFK] && pstate != PLAYER_STATE_SPECTATING && pstate != PLAYER_STATE_SPAWNED)
		{
			new Float:xa, Float:ya, Float:za, Float:x, Float:y, Float:z;
			GetPlayerPos(i,x,y,z);
			if(x > 15000.0 || y > 15000.0 || z > 15000.0 || x < -15000.0 || y < -15000.0 || z < -15000.0)
			{
				SendClientMessage(i,CWHITE,"» Ошибка");
				NewKick(i);
				continue;
			}
			if(x == 0.0 && y == 0.0) {}
			else
			{
				xa = x - pTemp[i][pX];
				ya = y - pTemp[i][pY];
				za = z - pTemp[i][pZ];
				new Float:distance;
				distance = floatsqroot(floatadd(floatadd(floatpower(xa,2),floatpower(ya,2)),floatpower(za,2)));
				new tick = GetTickCount();
				if(!distance && tick - pTemp[i][pLastTick] <= 1500) {pTemp[i][pDarkAFK]++; pTemp[i][pKick3] = 0;}
				else
				{
					if(!pTemp[i][pControllable] && !IsPlayerInAnyVehicle(i) && tick - pTemp[i][pLastTick] <= 1500) pTemp[i][pKick3]++;
					if(pTemp[i][pKick3] == 3)
					{
					    mes = "";
						new nname[24];
						GetPlayerName(i,nname,24);
						f(mes, "» [A] %s [%d] подозревается в антифризе",nname,i);
						AdminChat(CRED,mes);
						pTemp[i][pKick3] = 0;
						if(!pTemp[i][pLogined])
						{
							Kick(i);
						}
					}
					pTemp[i][pDarkAFK] = 0;
					if(distance > MAX_SPEED && tick - pTemp[i][pLastTick] <= 1500 && pData[i][pAdmin] < 1)
					{
					    if(!TunningGarages(i) && GetPlayerState(i) != PLAYER_STATE_SPECTATING)
					    {
					    	SendClientMessage(i,COLOR_LIGHTRED,"» Вы кикнуты по подозрению в читерстве (#2255)");
							NewKick(i);
						}

					}
					else if(GetPlayerState(i) == PLAYER_STATE_ONFOOT && distance > MAX_ONFOOT_SPEED && za > -10.0 && tick - pTemp[i][pLastTick] <= 1500 && pData[i][pAdmin] < 1)
					{
						pTemp[i][pKick]++;
						if(pTemp[i][pKick] == 4)
						{
						    if(pTemp[i][pInCarLodka] == false)
						    {
						    	SendClientMessage(i,COLOR_LIGHTRED,"» Вы кикнуты по подозрению в читерстве (#2256)");
								NewKick(i);
							}
						}
					}
					else if(distance > MAX_INCAR_SPEED && tick - pTemp[i][pLastTick] <= 1500 && pData[i][pAdmin] < 1)
					{
						pTemp[i][pKick]++;
						if(pTemp[i][pKick] == 3)
						{
						    if(!TunningGarages(i)&&GetPlayerState(i)!=PLAYER_STATE_SPECTATING)
						    {
						    	SendClientMessage(i,COLOR_LIGHTRED,"» Вы кикнуты по подозрению в читерстве (#2257)");
								NewKick(i);
							}
						}
					}
					else pTemp[i][pKick] = 0;
					pTemp[i][pX] = x;
					pTemp[i][pY] = y;
					pTemp[i][pZ] = z;
					pTemp[i][pLastTick] = GetTickCount();
					new Float:xw, Float:yw, Float:zw;
					GetPlayerVelocity(i,xw,yw,zw);
					if(xw > 2.0 || yw > 2.0)
					{
						pTemp[i][pKick8]++;
						if(pTemp[i][pKick8] >= 3)
						{
							SendClientMessage(i,CORANGE,"Вы были кикнуты по подозрению в читерстве (#118)");
							pTemp[i][pKick8] = 0;
							NewKick(i);
						}
						mes = "";
						f(mes, "» [A] %s [%d] подозревается в ****рванке (%d/3)",pData[i][pNickname],i,pTemp[i][pKick8]);
						AdminChat(CRED,mes);
					}
					else if(!pTemp[i][pLogined] && (xw > 0 || yw > 0 || zw > 0)) {
						mes = "";
						f(mes, "» [A] %s [%i] кикнут за игру без авторизации / регистрации. [NEW]", pData[i][pNickname], i);
						AdminChat(COLOR_LIGHTRED,mes);
						Kick(i);
					}
				}
			}
		}
		else pTemp[i][pAbletoTP] = false;
		
        new Float:HealtPlayer;
	    GetPlayerHealth(i, HealtPlayer);
	    if(HealtPlayer > pData[i][pHealth]) SetPlayerHealth(i, pData[i][pHealth]);
	}

}
task MainTimer5[1000]()
{
	if(GZSafeTime > 0)
	{
		GZSafeTime--;
		if(GZSafeTime <= 0) GzCheck();
		for(new idx=0, x=0; idx<cvector_size(PLAYERS); idx++)
		{
	    	x = cvector_get(PLAYERS, idx);
			if(IsAGang(x) && pTemp[x][pTextDrawCapture])
			{
			    stringText = "";
			    mes = "";
				f(stringText, "__________~y~Times: ~w~%s", Converts(GZSafeTime));//Convert(GZSafeTime, stringText));
			    format(mes, sizeof(mes), "%s~n~------------------------------------------~n~%s: ~r~%s~w~~n~%s: ~r~%s~w~", stringText, BANDAA, SCORE1, BANDAB, SCORE2);
				TextDrawSetString(CAPTU[x][Textdraw0], mes);
			}
		}
	}
	if(MAFIA_LOSTTIME > 0)
	{
	    MAFIA_LOSTTIME--;
	    if(MAFIA_LOSTTIME <= 0) MafiaStart();
	    for(new idx=0, x=0; idx<cvector_size(PLAYERS); idx++)
		{
		    x = cvector_get(PLAYERS, idx);
			if(IsAMafia(x) && pTemp[x][pTextDrawMafia])
			{
				mes = "";
				format(mes, sizeof(mes), "Losttime: %d~n~------------------~n~~r~%s~w~~n~~g~--------------~w~~n~__%d___vs___%d~n~~g~--------------~w~~n~%s", MAFIA_LOSTTIME, MAFIA_A, MAFIA_SCORE[0], MAFIA_SCORE2[0], MAFIA_B);
				PlayerTextDrawSetString(x, MafiaCapture, mes);
			}
		}
	}
	if(MAFIA_TIME > 0)
	{
	    MAFIA_TIME--;
		if(MAFIA_TIME <= 0) MafiaEnd();
	    for(new idx=0, x=0; idx<cvector_size(PLAYERS); idx++)
		{
		    x = cvector_get(PLAYERS, idx);
			if(IsAMafia(x) && pTemp[x][pTextDrawMafia])
			{
				mes = "";
				format(mes, sizeof(mes), "Time: %d~n~------------------~n~~r~%s~w~~n~~g~--------------~w~~n~__%d___vs___%d~n~~g~--------------~w~~n~%s", MAFIA_TIME, MAFIA_A, MAFIA_SCORE[0], MAFIA_SCORE2[0], MAFIA_B);
				PlayerTextDrawSetString(x, MafiaCapture, mes);
			}
		}
	}
}

stock MafiaStart()
{
    MAFIA_LOSTTIME = 0;
    MAFIA_TIME = 200;
    MAFIA_STARTZAXVAT = 1;
    for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
 		i = cvector_get(PLAYERS, idx);
		if(IsAMafia(i) && pTemp[i][pTextDrawMafia])
		{
			mes = "";
			format(mes, sizeof(mes), "Time: %d~n~------------------~n~~r~%s~w~~n~~g~--------------~w~~n~__%s___vs___%s~n~~g~--------------~w~~n~%s", MAFIA_TIME, MAFIA_A, MAFIA_SCORE[0], MAFIA_SCORE2[0], MAFIA_B);
			PlayerTextDrawSetString(i, MafiaCapture, mes);
		}
	}
}

stock MafiaEnd()
{

	mes = "";
	if(MAFIA_SCORE[0] > MAFIA_SCORE2[0])
	{
        gNark[MAFIA_ZONE][nOwner] = MAFIA_SCORE[1];
	 	format(mes, sizeof(mes), "Мафия %s захватила наркоточку у %s", GetMafiaName(MAFIA_SCORE[1]), GetMafiaName(MAFIA_SCORE2[1]));
	}
	if(MAFIA_SCORE[0] < MAFIA_SCORE2[0])
	{
	 	gNark[MAFIA_ZONE][nOwner] = MAFIA_SCORE2[1];
	 	format(mes, sizeof(mes), "Мафия %s отстояла свою наркоточку у %s", GetMafiaName(MAFIA_SCORE2[1]), GetMafiaName(MAFIA_SCORE[1]));
	}
	if(MAFIA_SCORE[0] == MAFIA_SCORE2[0])
	{
		gNark[MAFIA_ZONE][nOwner] = MAFIA_SCORE[1];
		format(mes, sizeof(mes), "Мафия %s не смогла отстоять наркоточку у %s", GetMafiaName(MAFIA_SCORE[1]), GetMafiaName(MAFIA_SCORE2[1]));
	}
    for(new idx=0, x=0; idx<cvector_size(PLAYERS); idx++)
	{
 		x = cvector_get(PLAYERS, idx);
		if(IsAMafia(x) && pTemp[x][pTextDrawMafia])
		{
 			PlayerTextDrawHide(x, MafiaCapture);
			PlayerTextDrawDestroy(x, MafiaCapture);
			pTemp[x][pTextDrawMafia] = false;

		}
	}
	for(new d = 13; d < 16; d++)
	{
		SendFMes(d, COLOR_LIME, mes);
	}
	GangZoneStopFlashForAll(gNark[MAFIA_ZONE][nID]);
	GangZoneHideForAll(gNark[MAFIA_ZONE][nID]);
	GangZoneShowForAll(gNark[MAFIA_ZONE][nID], GangZoneMafiasColor(gNark[MAFIA_ZONE][nOwner]));
	f(mes, "Наркоточка принадлежит {%s}%s", GetColor3DTextMafia(gNark[MAFIA_ZONE][nOwner]-13), GetMafiaName(gNark[MAFIA_ZONE][nOwner]));
	UpdateDynamic3DTextLabelText(gNark[MAFIA_ZONE][nText], -1, mes);
	mes = "";
	f(mes, "UPDATE `nark` SET `owner` = '%d' WHERE `id` = '%d'", gNark[MAFIA_ZONE][nOwner], MAFIA_ZONE+1);
	sql_query(zConn, mes); mes = "";
	MAFIA_A = "";
	MAFIA_B = "";
	MAFIA_SCORE[1] = 0;
	MAFIA_SCORE2[1] = 0;
	MAFIA_SCORE[0] = 0;
	MAFIA_SCORE2[0] = 0;
	MAFIA_ZONE = 0;
	MAFIA_LOSTTIME = 0;
	MAFIA_TIME = 0;
	MAFIA_STARTZAXVAT = 0;
	MAFIA_STARTZAXVAT2 = 0;
	MAFIA_NAPAD = 0;
}
/*task RaceUP[1000]()
{


	if(RaceStart == 1) GZRaceTime--;
	for(new idx=0, x=0; idx<cvector_size(PLAYERS); idx++)
	{
	    x = cvector_get(PLAYERS, idx);
		if(pTemp[x][pRaceIvite])
		{
			if(RaceStart1 == 1) GZRace[x]++;
			if(GZRaceTime > 0)
			{
				if(GZRaceTime == 6)
				{
	//				TextDrawHideForPlayer(x, RacerS[x][TD1]);
					//TextDrawHideForPlayer(x, RaceTime[x]);
					SetTimerEx("RaceStarting",1000,false,"i",x);
					SetPVarInt(x, "TimeRace", 6);
				}
				else
				{
					new stringText[30];
					format(stringText, sizeof(stringText), "Time: %s", Convert(GZRaceTime, stringText));
					TextDrawSetString(RacerS[x][TD1], stringText);
					format(stringText, sizeof(stringText), "MONEY: %d$", BRace);
					TextDrawSetString(RacerS[x][TD4], stringText);
					format(stringText, sizeof(stringText), "RACERS: %d/9", TotalRace);
					TextDrawSetString(RacerS[x][TD3], stringText);
					format(stringText, sizeof(stringText), "TOTALCP: %d/34", pPressed[x]);
					TextDrawSetString(RacerS[x][TD2], stringText);

				}
			}
			if(GZRace[x] > 2500)
			{
				TotalRace --;
				GZRace[x] = 0;
	//			TextDrawHideForPlayer(x, RacerS[x][TD1]);
	//			TextDrawHideForPlayer(x, RacerS[x][TD2]);
	////			TextDrawHideForPlayer(x, RacerS[x][TD3]);
	//			TextDrawHideForPlayer(x, RacerS[x][TD4]);
	//			TextDrawHideForPlayer(x, RacerS[x][TD5]);
				DestroyVehicle(pTemp[x][pRaceID]);
				SetPlayerInterior(x,0);
				SetPlayerVirtualWorld(x,0);
				SetPlayerPos(x, 781.2703,1864.3761,4.8064);
				SetVehicleToRespawn(GetVehicleModel(x));
				pTemp[x][pRaceIvite] = 0;
				pTemp[x][pRaceID] = 0;
				PlaceNumber[x] = -1;
				SendClientMessage(x, -1, "{FF9900}Слишком долго вы на гонке");
			}
			if(GZRace[x] != 0)
			{
				new stringText[30];
				format(stringText, sizeof(stringText), "Time: %s", Convert(GZRace[x], stringText));
				TextDrawSetString(RacerS[x][TD1], stringText);
				format(stringText, sizeof(stringText), "RACERS: %d/9", TotalRace);
				TextDrawSetString(RacerS[x][TD3], stringText);

			}
		}
	}
}
*/

stock Convertt(seconds, stringTo[], size = sizeof(stringTo))
{
	stringTo[0] = 0x0;
	new result[4];
	result[0] = floatround(seconds / (3600 * 24));
	result[1] = floatround(seconds / 3600);
	result[2] = floatround((seconds / 60) - (result[1] * 60));
	result[3] = floatround(seconds - ((result[1] * 3600) + (result[2] * 60)));
	switch(result[0])
	{
	case 0:
		{
			switch(result[1])
			{
			case 0: format(stringTo,size,"%02d:%02d",result[2],result[3]);
			default: format(stringTo,size,"%d:%d:%02d",result[1],result[2],result[3]);
			}
		}
	}
	return stringTo;
}
stock Convert(seconds, stringTos[], size = sizeof(stringTos))
{
	stringTos[0] = 0x0;
	new result[4];
	result[0] = floatround(seconds / (3600 * 24));
	result[1] = floatround(seconds / 3600);
	result[2] = floatround((seconds / 60) - (result[1] * 60));
	result[3] = floatround(seconds - ((result[1] * 3600) + (result[2] * 60)));
	switch(result[0])
	{
	case 0:
		{
			switch(result[1])
			{
			case 0: format(stringTos,size,"%d:%02d",result[2],result[3]);
			default: format(stringTos,size,"%d:%d:%02d",result[1],result[2],result[3]);
			}
		}
	}
	return stringTos;
}
stock SendFMes(fact, color, str[])
{
	if(fact == 12) fact = 9;
	else if(fact == 9) fact = 12;
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(pData[i][pFraction] == fact) SendClientMessage(i, color, str);
		else if((fact == 12 && pData[i][pFraction] == 9) || (fact == 9 && pData[i][pFraction] == 12)) SendClientMessage(i, color, str);
	}
	return true;
}
stock GetColor3DText(f)
{
	new str[8];
	format(str,8,"%06x",gColorGang[f] >>> 8);
	return str;
}
stock GetColor3DTextMafia(f)
{
    new str[8];
	format(str,8,"%06x",gColorMafia[f] >>> 8);
	return str;
}

stock GetColorF(playerid)
{
    new str[8];
	format(str,8,"%06x",gFunctionColorF[pData[playerid][pFraction] - 1] >>> 8);
	return str;
}
stock GetColor(playerid)
{
	new str[8];
	format(str,8,"%06x",gFunctionColorFract[pData[playerid][pFraction] - 1] >>> 8);
	return str;
}



stock IsACop(playerid)
{
	new member = pData[playerid][pFraction];
	switch(member)
	{
		case 9, 12: return true;
	}
	return false;
}

stock ConvertsAdmin(number)
{
	new hours = 0, mins = 0, secs = 0, string[30];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	format(string, 30, "%d:%02d:%02d", hours, mins, secs);
	return string;
}

stock Converts(number)
{
	new hours = 0, mins = 0, secs = 0, string[30];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0)
	{
		format(string, 30, "%d:%02d:%02d", hours, mins, secs);
	}
	else
	{
		format(string, 30, "%d:%02d", mins, secs);
	}
	return string;
}

IsNotDriving(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
		case 481, 462, 448, 530, 510, 571, 509: return 1;
	}
	return 0;
}

stock GetString(param1[],param2[])
{
	return !strcmp(param1, param2, false);
}
//салют
public svetstart(playerid)
{
	new Float:simx, Float:simy, Float:simz;
	GetObjectPos(object[playerid], simx, simy, simz);
	DestroyObject(object[playerid]);
	object[playerid] = CreateObject(354, simx, simy, simz+2, 0, 0, 0);
	SetTimerEx("destroyFlare",15000,0,"d",playerid);
}

public dimstart(playerid)
{
	new Float:dimx, Float:dimy, Float:dimz;
	GetObjectPos(object[playerid], dimx, dimy, dimz);
	DestroyObject(object[playerid]);
	object[playerid] = CreateObject(18715, dimx, dimy, dimz+2, 0, 0, 0);
	SetTimerEx("destroyFlare",500,0,"d",playerid);
	new Float:X, Float:Y, Float:Z; GetObjectPos(object[playerid], X, Y, Z);
}

public startone(playerid)
{
	new Float:objx, Float:objy, Float:objz;
	GetObjectPos(object[playerid], objx, objy, objz);
	MoveObject(object[playerid], objx, objy, objz+13,10);
	spark[playerid] = CreateObject(18718, objx, objy, objz, 0, 0, 0);
	dim[playerid] = CreateObject(18715, objx, objy, objz, 0, 0, 0);
	AttachObjectToObject(spark[playerid],object[playerid],0,0,-1,0,0,0,0);
	AttachObjectToObject(dim[playerid],object[playerid],0,0,0,0,0,0,0);
	SetTimerEx("startonex",1200,0,"d",playerid);
}

public startonex(playerid)
{
	new Float:oobjx, Float:oobjy, Float:oobjz;
	GetObjectPos(object[playerid], oobjx, oobjy, oobjz);
	CreateExplosion(oobjx, oobjy, oobjz, 0, 5);
	DestroyObject(object[playerid]);
	DestroyObject(spark[playerid]);
	DestroyObject(dim[playerid]);
	starts[playerid] = 0;
}

public destroyFlare(playerid)
{
	DestroyObject(object[playerid]);
	starts[playerid] = 0;
}

stock ShiftCords(style, &Float:x, &Float:y, &Float:z, Float:a, Float:distance)
{
	switch(style)
	{
	case 0:
		{
			x += (distance * floatsin(-a, degrees));
			y += (distance * floatcos(-a, degrees));
		}
	case 1:
		{
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
	default: return false;
	}
	return true;
}

public FireWorkStart(box_objectid, first_objectid, end_objectid, count, playerid)
{
	new Float:X, Float:Y, Float:Z, fobject, endobject;
	for(new i = first_objectid; i <= end_objectid; i ++)
	{
		new Float:rand_1 = -10.0 + float(random(20));
		new Float:rand_2 = -10.0 + float(random(20));
		GetDynamicObjectPos(i, X, Y, Z);
		MoveDynamicObject(i, X+rand_1, Y+rand_2, Z+20, 20);
		IsAFireWork[i] = true;
	}
	if(count < 20)
	{
		GetDynamicObjectPos(box_objectid, X, Y, Z);
		fobject = CreateDynamicObject( 19122 + random(6), X, Y, Z-0.5, 0, 0, 0 );
		for(new i; i < 9; i ++)
		{
			endobject = CreateDynamicObject( 19122 + random(6), X, Y, Z-0.5, 0, 0, 0 );
		}
		SetTimerEx("FireWorkStart", 200+random(300), 0, "iiii", box_objectid, fobject, endobject, count+1);
		starts[playerid] = 0;
	}
	else
	{
		SetTimerEx("destroyFlare",500,0,"d",playerid);
		DestroyDynamicObject(box_objectid);
		starts[playerid] = 0;
	}
	return true;
}

public BigFireWorkStart(box_objectidtwo, first_objectidtwo, end_objectidtwo, counttwo, playerid)
{
	new Float:X, Float:Y, Float:Z, fobjecttwo, endobjecttwo;
	for(new i = first_objectidtwo; i <= end_objectidtwo; i ++)
	{
		new Float:rand_1 = -10.0 + float(random(20));
		new Float:rand_2 = -10.0 + float(random(20));
		GetDynamicObjectPos(i, X, Y, Z);
		MoveDynamicObject(i, X+rand_1, Y+rand_2, Z+20, 20);
		IsAFireWorkTwo[i] = true;
	}
	if(counttwo < 70)//20
	{
		GetDynamicObjectPos(box_objectidtwo, X, Y, Z);
		fobjecttwo = CreateDynamicObject( 19122 + random(6), X, Y, Z-0.5, 0, 0, 0 );
		for(new i; i < 9; i ++)
		{
			endobjecttwo = CreateDynamicObject( 19122 + random(6), X, Y, Z-0.5, 0, 0, 0 );
		}
		SetTimerEx("BigFireWorkStart", 500+random(300), 0, "iiii", box_objectidtwo, fobjecttwo, endobjecttwo, counttwo+1);
		starts[playerid] = 0;
	}
	else
	{
		SetTimerEx("destroyFlare",500,0,"d",playerid);
		DestroyDynamicObject(box_objectidtwo);
		starts[playerid] = 0;
	}
	return true;
}

stock GetVehicleName(model)
{
	new name[32];
	switch(model)
	{
	case 400: name = "Landstalker";
	case 401: name = "Bravura";
	case 402: name = "Buffalo";
	case 403: name = "Linerunner";
	case 404: name = "Perenniel";
	case 405: name = "Sentinel";
	case 406: name = "Dumper";
	case 407: name = "Firetruck";
	case 408: name = "Trashmaster";
	case 409: name = "Stretch";
	case 410: name = "Manana";
	case 411: name = "Infernus";
	case 412: name = "Voodoo";
	case 413: name = "Pony";
	case 414: name = "Mule";
	case 415: name = "Cheetah";
	case 416: name = "Ambulance";
	case 417: name = "Leviathan";
	case 418: name = "Moonbeam";
	case 419: name = "Esperanto";
	case 420: name = "Taxi";
	case 421: name = "Washington";
	case 422: name = "Bobcat";
	case 423: name = "Mr Whoopee";
	case 424: name = "BF Injection";
	case 425: name = "Hunter";
	case 426: name = "Premier";
	case 427: name = "Enforcer";
	case 428: name = "Securicar";
	case 429: name = "Banshee";
	case 430: name = "Predator";
	case 431: name = "Bus";
	case 432: name = "Rhino";
	case 433: name = "Barracks";
	case 434: name = "Hotknife";
	case 435: name = "Article Trailer";
	case 436: name = "Previon";
	case 437: name = "Coach";
	case 438: name = "Cabbie";
	case 439: name = "Stallion";
	case 440: name = "Rumpo";
	case 441: name = "RC Bandit";
	case 442: name = "Romero";
	case 443: name = "Packer";
	case 444: name = "Monster";
	case 445: name = "Admiral";
	case 446: name = "Squallo";
	case 447: name = "Seasparrow";
	case 448: name = "Pizzaboy";
	case 449: name = "Tram";
	case 450: name = "Article Trailer 2";
	case 451: name = "Turismo";
	case 452: name = "Speeder";
	case 453: name = "Reefer";
	case 454: name = "Tropic";
	case 455: name = "Flatbed";
	case 456: name = "Yankee";
	case 457: name = "Caddy";
	case 458: name = "Solair";
	case 459: name = "Berkley's RC Van";
	case 460: name = "Skimmer";
	case 461: name = "PCJ-600";
	case 462: name = "Faggio";
	case 463: name = "Freeway";
	case 464: name = "RC Baron";
	case 465: name = "RC Raider";
	case 466: name = "Glendale";
	case 467: name = "Oceanic";
	case 468: name = "Sanchez";
	case 469: name = "Sparrow";
	case 470: name = "Patriot";
	case 471: name = "Quad";
	case 472: name = "Coastguard";
	case 473: name = "Dinghy";
	case 474: name = "Hermes";
	case 475: name = "Sabre";
	case 476: name = "Rustler";
	case 477: name = "ZR-350";
	case 478: name = "Walton";
	case 479: name = "Regina";
	case 480: name = "Comet";
	case 481: name = "BMX";
	case 482: name = "Burrito";
	case 483: name = "Camper";
	case 484: name = "Marquis";
	case 485: name = "Baggage";
	case 486: name = "Dozer";
	case 487: name = "Maverick";
	case 488: name = "SAN News Maverick";
	case 489: name = "Rancher";
	case 490: name = "FBI Rancher";
	case 491: name = "Virgo";
	case 492: name = "Greenwood";
	case 493: name = "Jetmax";
	case 494: name = "Hotring Racer";
	case 495: name = "Sandking";
	case 496: name = "Blista Compact";
	case 497: name = "Police Maverick";
	case 498: name = "Boxville";
	case 499: name = "Benson";
	case 500: name = "Mesa";
	case 501: name = "RC Goblin";
	case 502: name = "Hotring Racer";
	case 503: name = "Hotring Racer";
	case 504: name = "Bloodring Banger";
	case 505: name = "Rancher";
	case 506: name = "Super GT";
	case 507: name = "Elegant";
	case 508: name = "Journey";
	case 509: name = "Bike";
	case 510: name = "Mountain Bike";
	case 511: name = "Beagle";
	case 512: name = "Cropduster";
	case 513: name = "Stuntplane";
	case 514: name = "Tanker";
	case 515: name = "Roadtrain";
	case 516: name = "Nebula";
	case 517: name = "Majestic";
	case 518: name = "Buccaneer";
	case 519: name = "Shamal";
	case 520: name = "Hydra";
	case 521: name = "FCR-900";
	case 522: name = "NRG-500";
	case 523: name = "HPV1000";
	case 524: name = "Cement Truck";
	case 525: name = "Towtruck";
	case 526: name = "Fortune";
	case 527: name = "Cadrona";
	case 528: name = "FBI Truck";
	case 529: name = "Willard";
	case 530: name = "Forklift";
	case 531: name = "Tractor";
	case 532: name = "Combine Harvester";
	case 533: name = "Feltzer";
	case 534: name = "Remington";
	case 535: name = "Slamvan";
	case 536: name = "Blade";
	case 537: name = "Freight";
	case 538: name = "Brownstreak";
	case 539: name = "Vortex";
	case 540: name = "Vincent";
	case 541: name = "Bullet";
	case 542: name = "Clover";
	case 543: name = "Sadler";
	case 544: name = "Firetruck LA";
	case 545: name = "Hustler";
	case 546: name = "Intruder";
	case 547: name = "Primo";
	case 548: name = "Cargobob";
	case 549: name = "Tampa";
	case 550: name = "Sunrise";
	case 551: name = "Merit";
	case 552: name = "Utility Van";
	case 553: name = "Nevada";
	case 554: name = "Yosemite";
	case 555: name = "Windsor";
	case 556: name = "Monster A";
	case 557: name = "Monster B";
	case 558: name = "Uranus";
	case 559: name = "Jester";
	case 560: name = "Sultan";
	case 561: name = "Stratum";
	case 562: name = "Elegy";
	case 563: name = "Raindance";
	case 564: name = "RC Tiger";
	case 565: name = "Flash";
	case 566: name = "Tahoma";
	case 567: name = "Savanna";
	case 568: name = "Bandito";
	case 569: name = "Freight Flat Trailer";
	case 570: name = "Streak Trailer";
	case 571: name = "Kart";
	case 572: name = "Mower";
	case 573: name = "Dune";
	case 574: name = "Sweeper";
	case 575: name = "Broadway";
	case 576: name = "Tornado";
	case 577: name = "AT400";
	case 578: name = "DFT-30";
	case 579: name = "Huntley";
	case 580: name = "Stafford";
	case 581: name = "BF-400";
	case 582: name = "Newsvan";
	case 583: name = "Tug";
	case 584: name = "Petrol Trailer";
	case 585: name = "Emperor";
	case 586: name = "Wayfarer";
	case 587: name = "Euros";
	case 588: name = "Hotdog";
	case 589: name = "Club";
	case 590: name = "Freight Box Trailer";
	case 591: name = "Article Trailer 3";
	case 592: name = "Andromada";
	case 593: name = "Dodo";
	case 594: name = "RC Cam";
	case 595: name = "Launch";
	case 596: name = "Police Car (LSPD)";
	case 597: name = "Police Car (SFPD)";
	case 598: name = "Police Car (LVPD)";
	case 599: name = "Police Ranger";
	case 600: name = "Picador";
	case 601: name = "S.W.A.T.";
	case 602: name = "Alpha";
	case 603: name = "Phoenix";
	case 604: name = "Glendale Shit";
	case 605: name = "Sadler Shit";
	case 606: name = "Baggage Trailer A";
	case 607: name = "Baggage Trailer B";
	case 608: name = "Tug Stairs Trailer";
	case 609: name = "Boxville";
	case 610: name = "Farm Trailer";
	case 611: name = "Utility Trailer";
	default:  name = "No-ne";
	}
	return name;
}


public AntiBH(playerid)
{
	times[playerid] = true;
	ApplyAnimation(playerid,"PED","getup_front",4.0,0,0,0,0,0);
}



stock GetPlayerID(Name[])
{
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(!strcmp(Name, pData[i][pNickname])) return i;
	}
	return -1;
}



stock PreloadAnimLib(playerid, animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
	return false;
}
stock PreloadAllAnims(playerid)
{
	PreloadAnimLib(playerid,"DANCING");
	PreloadAnimLib(playerid,"PAULNMAC");
	PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"MISC");
	PreloadAnimLib(playerid,"SWEET");
	PreloadAnimLib(playerid,"SPRAYCAN");
	PreloadAnimLib(playerid,"SHOP");
	PreloadAnimLib(playerid,"RYDER");
	PreloadAnimLib(playerid,"RIOT");
	PreloadAnimLib(playerid,"BAR");
	PreloadAnimLib(playerid,"BEACH");
	PreloadAnimLib(playerid,"benchpress");
	PreloadAnimLib(playerid,"BSKTBALL");
	PreloadAnimLib(playerid,"CAMERA");
	PreloadAnimLib(playerid,"CAR");
	PreloadAnimLib(playerid,"CAR_CHAT");
	PreloadAnimLib(playerid,"COP_AMBIENT");
	PreloadAnimLib(playerid,"GHANDS");
	PreloadAnimLib(playerid,"GRAFFITI");
	PreloadAnimLib(playerid,"GRAVEYARD");
	PreloadAnimLib(playerid,"INT_HOUSE");
	PreloadAnimLib(playerid,"INT_OFFICE");
	PreloadAnimLib(playerid,"LOWRIDER");
	PreloadAnimLib(playerid,"MEDIC");
	PreloadAnimLib(playerid,"BOMBER");
	PreloadAnimLib(playerid,"RAPPING");
	PreloadAnimLib(playerid,"SHOP");
	PreloadAnimLib(playerid,"BEACH");
	PreloadAnimLib(playerid,"SMOKING");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"ON_LOOKERS");
	PreloadAnimLib(playerid,"DEALER");
	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"COP_AMBIENT");
	PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"INT_HOUSE");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"GANGS");
	PreloadAnimLib(playerid,"KISSING");
	PreloadAnimLib(playerid,"CAR_CHAT");
	PreloadAnimLib(playerid,"DODGE");
	PreloadAnimLib(playerid,"MD_END");
	PreloadAnimLib(playerid,"MUSCULAR");
	PreloadAnimLib(playerid,"MD_CHASE");
	PreloadAnimLib(playerid,"FAT");
	PreloadAnimLib(playerid,"DANCING");
	PreloadAnimLib(playerid,"SCRATCHING");
	PreloadAnimLib(playerid,"GYMNASIUM");
	PreloadAnimLib(playerid,"JST_BUISNESS");
	PreloadAnimLib(playerid,"OTB");
	PreloadAnimLib(playerid,"PLAYIDLES");
	PreloadAnimLib(playerid,"ROB_BANK");
	PreloadAnimLib(playerid,"PED");
}

GoAnim(playerid,alib[],aanim[],Float:atime,amove,ax,ay,az,af,ac)
{
	ApplyAnimation(playerid,alib,aanim,atime,amove,ax,ay,az,af,ac);
	return 1;
}




stock IsALeader(playerid)
{
	new rang = pData[playerid][pRank];
	new fact = pData[playerid][pFraction]-1;
	if(pData[playerid][pSubfraction] && rang >= gFractionRankCount[fact]-1) return 1;
	else if(!pData[playerid][pSubfraction] && rang == gFractionRankCount[fact]) return 1;
	else return 0;
}

stock GetBarrierID(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 6.0, 94.6438,1920.0112,18.0839)) return 0;
	if(IsPlayerInRangeOfPoint(playerid, 6.0, 344.9785, 1797.9651, 14.5576)) return 1;
	if(IsPlayerInRangeOfPoint(playerid, 6.0, 286.2100, 1834.0538, 19.7891)) return 2;
	if(IsPlayerInRangeOfPoint(playerid, 6.0, 1544.70, -1630.86, 13.00)) return 3;
	if(IsPlayerInRangeOfPoint(playerid, 6.0, -1572.21, 658.72, 6.77)) return 4;
	if(IsPlayerInRangeOfPoint(playerid, 6.0, -1701.44, 687.69, 24.65)) return 5;
	if(IsPlayerInRangeOfPoint(playerid, 6.0, 2238.20, 2450.40, 10.52)) return 6;
	if(IsPlayerInRangeOfPoint(playerid, 6.0, -1531.7875, 482.1791, 8.9441)) return 7;
	return -1;
}


stock OpenBarrier(id)
{
	switch(id)
	{
	case 0: MoveObject(barrier[id], 96.6580, 1916.1031, 18.9035, 5, 0.0000, 0.0000, 197.2799);
	case 1: MoveObject(barrier[id], 344.9785, 1797.9651, 14.5576, 5, 0.0000, 0.0000, 216.5380);
	case 2: MoveObject(barrier[id], 286.2100, 1834.0538, 19.7891, 5, 0.0000, 0.0000, 89.5303);
	case 3: MoveObject(barrier[id], 1544.70, -1630.73, 12.93, 0.05 , 0.00, 0.00, 270.08);
	case 4: MoveObject(barrier[id], -1572.20, 658.85, 6.70, 0.05,  0.00, 0.00, 270.00);
	case 5: MoveObject(barrier[id], -1701.44, 687.56, 24.58, 0.05,  0.00, 0.00, 90.00);
	case 6: MoveObject(barrier[id], 2238.19, 2450.52, 10.44, 0.05,  0.00, 0.00, 270.00);

	case 7: MoveObject(barrier[id], -1540.4766, 482.3572, 8.9441, 5,  0.0000, 0.0000, 358.8463);
	}
	return 1;
}


forward CloseBarrierex(id);
public CloseBarrierex(id)
{
	switch(id)
	{
	case 0: MoveObject(barrier[id], 96.6240, 1920.3663, 18.9035, 5, 0.0000, 0.0000, 197.2799);
	case 1: MoveObject(barrier[id], 344.9785, 1797.9651, 19.6898, 5, 0.0000, 0.0000, 216.5380);
	case 2: MoveObject(barrier[id], 286.1854, 1821.2990, 19.7891, 5, 0.0000, 0.0000, 89.5303);
	case 3: MoveObject(barrier[id], 1544.70, -1630.86, 13.00, 0.05, 0.00, 270.00, 270.08);
	case 4: MoveObject(barrier[id], -1572.21, 658.72, 6.77, 0.05, 0.00, 270.00, 269.96);
	case 5: MoveObject(barrier[id], -1701.44, 687.69, 24.65, 0.05, 0.00, 269.50, 90.02);
	case 6: MoveObject(barrier[id], 2238.20, 2450.40, 10.52, 0.05, 0.00, 270.00, 270.00);

	case 7: MoveObject(barrier[id], -1531.7875, 482.1791, 8.9441, 5,  0.0000, 0.0000, 358.8463);
	}
	return 1;
}

public UpdateVehiclePos(vehicleid, type)
{
	if(type == 1) BanCar[vehicleid] = false;
	GetVehiclePos(vehicleid, VehPos[vehicleid][0], VehPos[vehicleid][1], VehPos[vehicleid][2]);
	GetVehicleZAngle(vehicleid, VehPos[vehicleid][3]);
	return 1;
}
stock Difference(Float:Value1, Float:Value2)
{
	return floatround((Value1 > Value2) ? (Value1 - Value2) : (Value2 - Value1));
}

stock bool: UseCar(carid)
{
	for(new i; i != GetMaxPlayers(); i++)
	{
		if(!IsPlayerConnected(i)) continue;
		if(IsPlayerInVehicle(i, carid)) return true;
	}
	return false;
}

stock SetVehiclePosition(vehicleid, Float:X, Float:Y, Float:Z)
{
	SetVehiclePos(vehicleid ,X,Y,Z);
	UpdateVehiclePos(vehicleid, 0);
}

stock SetVehicleToRespawnEx(vehid)
{
	SetVehicleToRespawn(vehid);
	gVehicles[vehid-1][vFuel] = 50;
	gVehicles[vehid-1][vLock] = 0;
}

/*stock zFuelUpdate()
{
	new mess[150];
	f(mess,"{"#cRED"}Нефтезавод\n{"#cWHITE"}Доступно заказов: {"#cYELLOW"}%d{"#cWHITE"}\nДля выбора заказа введите команду {"#cYELLOW"}/fuellist",fuelOrders);
	UpdateDynamic3DTextLabelText(gFuelText,CWHITE,mess);
}*/

stock CreateTextDraws()
{
	TD[tdNextSkin] = TextDrawCreate(508.000000, 208.000000, "Next: ~g~ RIGHT");
	TextDrawAlignment(TD[tdNextSkin], 2);
	TextDrawBackgroundColor(TD[tdNextSkin], 255);
	TextDrawFont(TD[tdNextSkin], 2);
	TextDrawLetterSize(TD[tdNextSkin], 0.400000, 1.600000);
	TextDrawColor(TD[tdNextSkin], -1);
	TextDrawSetOutline(TD[tdNextSkin], 0);
	TextDrawSetProportional(TD[tdNextSkin], 1);
	TextDrawSetShadow(TD[tdNextSkin], 1);
	TextDrawUseBox(TD[tdNextSkin], 1);
	TextDrawBoxColor(TD[tdNextSkin], 153);
	TextDrawTextSize(TD[tdNextSkin], 0.000000, 120.000000);

	TD[tdBackSkin] = TextDrawCreate(108.000000, 208.000000, "Prev: ~r~ LEFT");
	TextDrawAlignment(TD[tdBackSkin], 2);
	TextDrawBackgroundColor(TD[tdBackSkin], 255);
	TextDrawFont(TD[tdBackSkin], 2);
	TextDrawLetterSize(TD[tdBackSkin], 0.400000, 1.600000);
	TextDrawColor(TD[tdBackSkin], -1);
	TextDrawSetOutline(TD[tdBackSkin], 0);
	TextDrawSetProportional(TD[tdBackSkin], 1);
	TextDrawSetShadow(TD[tdBackSkin], 1);
	TextDrawUseBox(TD[tdBackSkin], 1);
	TextDrawBoxColor(TD[tdBackSkin], 153);
	TextDrawTextSize(TD[tdBackSkin], 0.000000, 120.000000);

	TD[tdSelSkin] = TextDrawCreate(328.000000, 398.000000, "Select: ~y~~k~~PED_SPRINT~");
	TextDrawAlignment(TD[tdSelSkin], 2);
	TextDrawBackgroundColor(TD[tdSelSkin], 255);
	TextDrawFont(TD[tdSelSkin], 2);
	TextDrawLetterSize(TD[tdSelSkin], 0.400000, 1.600000);
	TextDrawColor(TD[tdSelSkin], -1);
	TextDrawSetOutline(TD[tdSelSkin], 0);
	TextDrawSetProportional(TD[tdSelSkin], 1);
	TextDrawSetShadow(TD[tdSelSkin], 1);
	TextDrawUseBox(TD[tdSelSkin], 1);
	TextDrawBoxColor(TD[tdSelSkin], 153);
	TextDrawTextSize(TD[tdSelSkin], 0.000000, 199.000000);

	TextDrawSetSelectable(TD[tdNextSkin], 1);
	TextDrawSetSelectable(TD[tdBackSkin], 1);
	TextDrawSetSelectable(TD[tdSelSkin], 1);
}

stock ShowMenuAmmo(playerid)
{
	ShowPlayerDialog(playerid, dGun, 2, "Меню аммо", "Кастет 50$\nБейсбольная бита 100$\nДробовик 70$ за 1 патрон\nПустынный орел 60$ за 1 патрон\nПолуавтомат MP5 30$ за 1 патрон\nАвтомат AK47 60$ за 1 патрон\nВинтовка 70$ за 1 патрон\nАвтомат M4 60$ за 1 патрон", "Далее", "Отмена");
	return 1;
}

stock GetPlayerZone(playerid, value)
{
	new zone[32],bool:getzone;
	new Float:x1,Float:y1,Float:z1;
	GetPlayerPos(playerid,x1,y1,z1);
	for(new i=0; i<sizeof(gSAZones); i++)
	{
	    switch(value)
	    {
	        case 0:
	        {
				if(x1 >= gSAZones[i][SAZONE_AREA][0] && x1 <= gSAZones[i][SAZONE_AREA][3]
						&& y1 >= gSAZones[i][SAZONE_AREA][1] && y1 <= gSAZones[i][SAZONE_AREA][4])
				{
					settext(zone, gSAZones[i][SAZONE_NAME]);
					getzone = true;
					break;
				}
			}
			case 1:
			{
				if(gHouses[playerid][houseX] >= gSAZones[i][SAZONE_AREA][0] && gHouses[playerid][houseX] <= gSAZones[i][SAZONE_AREA][3]
			   	&& gHouses[playerid][houseY] >= gSAZones[i][SAZONE_AREA][1] && gHouses[playerid][houseY] <= gSAZones[i][SAZONE_AREA][4])
		       	{
		        	settext(zone, gSAZones[i][SAZONE_NAME]);
		        	getzone = true;
		        	break;
		       	}
			}
		}
	}
	if(!getzone) zone = "Неизвестно";
	return zone;
}
stock settext(txtsring[], const text[])
{
	strmid(txtsring, text, 0, strlen(text), 255);
	return 1;
}
stock split(const strsrc[],strdest[][],delimiter) // известный скрипт написаный непомню кем.
{
	new i, li, aNum, len;
	while(i <= strlen(strsrc))
	{
		if(strsrc[i] == delimiter || i == strlen(strsrc))
		{
			len = strmid(strdest[aNum],strsrc,li,i,128);
			strdest[aNum][len] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return 1;
}
task GlobalAfkCheck[1000]()
{
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(IsPlayerNPC(i)) continue;
		if(pData[i][pAdmin] > 0)
		{
			new CB[30];
			Convert(GetPVarInt(i,"AFK_Time")-2,CB);
		}
		if(GetPVarInt(i,"AFK_Tick") > 10000)
		{
			SetPVarInt(i,"AFK_Tick",1);
			SetPVarInt(i,"AFK_Check",0);
		}
		if(GetPVarInt(i,"AFK_Check") < GetPVarInt(i,"AFK_Tick") && GetPlayerState(i))
		{
			SetPVarInt(i,"AFK_Check",GetPVarInt(i,"AFK_Tick"));
			SetPVarInt(i,"AFK_Time",0);
		}
		if(GetPVarInt(i,"AFK_Check") == GetPVarInt(i,"AFK_Tick") && GetPlayerState(i))
		{
			SetPVarInt(i,"AFK_Time",GetPVarInt(i,"AFK_Time") + 1);
			if(GetPVarInt(i, "AFK_Time") > 2)
			{
				new CB[30];
				Convertt(GetPVarInt(i,"AFK_Time")-2,CB);
				strins(CB,"Inactive: ", 0);
				SetPlayerChatBubble(i,CB,0x33CCFFAA,5.0,1200);
			}
		}
		if(GetPVarInt(i,"AFK_Time") >= 900)
		{
			SendClientMessage(i, -1, "Ваше время паузы истекло. Вы были {fe0000}кикнуты");
			NewKick(i);
		}
	}
}


stock isNumeric(const string[])
{
	new length=strlen(string);
	if (length<=0) return false;
	for (new i = 0; i < length; i++)
	{
		if (
				(string[i] > '9' || string[i] < '0' && string[i]!='-' && string[i]!='+') // Not a number,'+' or '-'
				|| (string[i]=='-' && i!=0)                                             // A '-' but not at first.
				|| (string[i]=='+' && i!=0)                                             // A '+' but not at first.
				) return false;
	}
	if (length==1 && (string[0]=='-' || string[0]=='+')) return false;
	return true;
}


public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
    if(pickupid >= PickUpVodka1[0] && pickupid <= PickUpVodka1[27-1])
	{
	    if(pTemp[playerid][pWork] != 6) return 1;
	    if(ZavodInfo[2] < 2 || ZavodInfo[0] < 2) return SendClientMessage(playerid, -1, "На заводе не достаточно винограда , песка");
	    if(GetPVarInt(playerid,"VODKADDD") > gettime()) return 1;
	    if(GetPVarInt(playerid, "loadid") == 1) return SendClientMessage(playerid, -1, "Вы уже взяли бутылку");
	    ApplyAnimation(playerid,"BAR","Barserve_glass",4.1,0,0,0,0,0,1);
		SetPlayerAttachedObject(playerid, 0, 1668, 6, 0.121096, 0.064425, 0.144569, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); // propvodkabotl1 - Vodka
  		SetTimerEx("Vodka", 3000, 0, "d", playerid);
	}
    if(pickupid >= gBintEnterArea[0] && pickupid <= gBintEnterArea[BINT_COUNT-1])
	{
		if(pTemp[playerid][pJustTP])
		{
			pTemp[playerid][pJustTP] = false;
			return 1;
		}
		new id = pTemp[playerid][pSelectedBusinessID];
		if(id < 0) return 1;
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid,0);
		pTemp[playerid][pJustTP] = true;
		SetPlayerPos(playerid,gBusiness[id][busiX],gBusiness[id][busiY],gBusiness[id][busiZ]);
		SetPlayerFacingAngle(playerid,gBusiness[id][busiR]);
	}
    if(pickupid >= gBusinessArea[0] && pickupid <= gBusinessArea[gBusinessCount - 1])
	{
		if(pTemp[playerid][pJustTP])
		{
			pTemp[playerid][pJustTP] = false;
			return 1;
		}
		new businessid = pickupid - gBusinessArea[0];

		if(businessid < 0) return SendClientMessage(playerid,CWHITE,"» Ошибка (#100)");
		if(!gBusiness[businessid][busiStatus] && pData[playerid][pMysqlID] != gBusiness[businessid][busiOwnerID]) return 1;
		pTemp[playerid][pSelectedBusinessID] = businessid;
		if(!gBusiness[businessid][busiOwnerID])
		{
			mes = "";
			f(mes, "{FFFFFF}Бизнес: №%d\nНазвание: %s\nСтоимость: %d$\nБизнес продается", businessid, gBusiness[businessid][busiName], gBusiness[businessid][busiSellPrice]);
			//else f(mes, "» {"#cWHITE"}Этот бизнес продается за {"#cRED"}%d$.\n{FFFFFF}ID Бизенса = {33AAFF}%d",gBusiness[businessid][busiSellPrice], businessid);
			ShowPlayerDialog(playerid,dBuyBusiness1,0,"{ffcf00}Бизнес",mes,"Войти","Купить");
		}
		else
		{
			if(gBusiness[businessid][busiEnterPrice])
			{
				mes = "";
                f(mes, "{FFFFFF}Бизнес: №%d\nНазвание: %s\nЦена за вход: %d$", businessid, gBusiness[businessid][busiName], gBusiness[businessid][busiEnterPrice]);
				//format(mess,sizeof(mess),"{"#cWHITE"}Стоимость входа {"#cRED"}%d$.",gBusiness[businessid][busiEnterPrice]);
				ShowPlayerDialog(playerid,dBuyBusinessentpr,0,"{ffcf00}Бизнес",mes,"Войти","Отмена");
				SetPVarInt(playerid,"atbiz",businessid);
			}
			else
			{
				new bint = gBusiness[businessid][busiBint]-1;
				if(bint < 0 || bint >= BINT_COUNT) return SendClientMessage(playerid,CWHITE,"» Ошибка (#99)");
				pTemp[playerid][pJustTP] = true;
				SetPlayerInterior(playerid,gBints[bint][bintInterior]);
				SetPlayerVirtualWorld(playerid,businessid+1);
				SetPlayerPos(playerid,gBints[bint][bintX],gBints[bint][bintY],gBints[bint][bintZ]);
				SetPlayerFacingAngle(playerid,gBints[bint][bintR]);
			}
		}
	}
    if(pickupid >= gBintBuyArea[0] && pickupid <= gBintBuyArea[BINT_COUNT-1])
	{
		new id = pTemp[playerid][pSelectedBusinessID];
		if(id < 0) return 1;
		new products = gBusiness[id][busiProduct];
		if(gBusiness[id][busiOwnerID])
		{
			if(!products) return SendClientMessage(playerid,CWHITE,"» К сожалению, товара не осталось");
		}
		new type = gBusiness[id][busiType];
		switch(type)
		{
		case 1: // Прод. магазин
			{
				if(!pData[playerid][pHouse]) return SendClientMessage(playerid,CWHITE,"» У Вас нет дома");
				new houseid = pData[playerid][pHouse]-1;
				if(!gHouses[houseid][houseImprove][2]) return SendClientMessage(playerid,CWHITE,"» У Вас дома нет холодильника");
				if(pTemp[playerid][pCarryProducts]) return SendClientMessage(playerid,CWHITE,"» Вы уже купили продукты");
				ShowPlayerDialog(playerid,dGrocer,1,"{ffcf00}Магазин продуктов","{"#cWHITE"}Здесь Вы можете купить продукты которые будут храниться в вашем холодильнике\nУкажите количество продуктов которое Вы хотите купить:","ОК","Отмена");
			}
		case 2: //Закусочная
			{
			    if(GetPVarInt(playerid,"EATSSSS") > gettime()) return 1;
			    SetPVarInt(playerid,"EATSSSS",gettime() + 10);
				//if(pData[playerid][pHealth] > 95.0) return SendClientMessage(playerid,CWHITE,"» Ошибка: У Вас достаточный уровень сытости.");
				ShowPlayerEateryTD(playerid);
			}
		case 3: //24/7
			{
				mes = "";
			 	if(GetPVarInt(playerid,"BUY24") > gettime()) return 1;
				for(new i;i<SHOP_OBJECTS;i++)
				{
				    if(i == 6) f(mes, "%s » {33AAFF}%s\n",mes, gShopObject[i]);
					else f(mes, "%s » {33AAFF}%s {FFFFFF}%d$\n",mes,gShopObject[i],gShopPrice[i]);
				}
				ShowPlayerDialog(playerid,dShop,2,"{009AFF}Магазин 24/7",mes,"Купить","Выход");
				SetPVarInt(playerid,"BUY24",gettime() + 30);
			}
		case 4..5: //Бар, клуб
			{
				ShowPlayerBarTD(playerid);
			}
		case 7:
			{
			    if(GetPVarInt(playerid, "OfferInviteSubLeader") == 1
				|| GetPVarInt(playerid, "OfferInviteLeader") == 1) return 1;
				if(pData[playerid][pFraction]) return SendClientMessage(playerid, CGRAY, "Вы состоите во фракции скин купить нельзя");
				if(pTemp[playerid][pJustTP])
				{
					pTemp[playerid][pJustTP] = false;
				}
				else
				{
					if(!pTemp[playerid][pChangingSkin])
					{
						pTemp[playerid][pChangingSkin] = true;
						new Float: pos[4];
						GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
						GetPlayerFacingAngle(playerid, pos[3]);
						SetPVarFloat(playerid, "posx", pos[0]);
						SetPVarFloat(playerid, "posy", pos[1]);
						SetPVarFloat(playerid, "posz", pos[2]);
						SetPVarFloat(playerid, "posa", pos[3]);
						SetPVarInt(playerid, "interior", GetPlayerInterior(playerid));
						SetPVarInt(playerid, "vw", GetPlayerVirtualWorld(playerid));
						TogglePlayerControllable(playerid, 0);
						SetPlayerInterior(playerid, 14);
						SetPlayerVirtualWorld(playerid, playerid + 1);
						SetPlayerPos(playerid, 258.7497, -41.3828, 1002.0234);
						SetPlayerFacingAngle(playerid, 70.0);
						SetPlayerCameraPos(playerid, 258.7498 + (2.5 * floatsin(-70.0, degrees)), -41.3828 + (2.5 * floatcos(-70.0, degrees)), 1002.5);
						SetPlayerCameraLookAt(playerid, 258.7497, -41.3828, 1002.0234);
						SetPVarInt(playerid, "clothes_class", 1);
						SetPVarInt(playerid, "clothes_sel", 0);
						SetPVarInt(playerid, "curskin", GetPlayerSkin(playerid));
						ShowPlayerClothesTD(playerid);
					}
				}
			}
		case 8: //Автомастерская
			{
				ShowPlayerDialog(playerid,dMes,0,"Автомастерская","{"#cWHITE"}Чтобы использовать функции СТО, заедьте на эстакаду и введите /rvs","OK","");
			}
		case 9:
			{
				if(!(pData[playerid][pLicenses][LIC_WEAP])) return SendClientMessage(playerid,CWHITE,"» У Вас нет лицензии на оружие!");
				ShowMenuAmmo(playerid);
			}
		case 10:
			{
				if(num[playerid] == 0) ShowPlayerDialog(playerid, 1216, DIALOG_STYLE_LIST, "Магазин пиротехники", "{ffffff}1 » Шумовые петарды (4 шт.)\t\t{9c65ff}140$\n{ffffff}2 » Световые петарды (4 шт.)\t\t{9c65ff}250$\n{ffffff}3 » Дымовая шашка (3 шт.)\t\t{9c65ff}300$\n{ffffff}4 » Одиночная ракета (3 шт.)\t\t{9c65ff}450$\n5 » Салют\t\t\t\t{9c65ff}1100$\n5 » Большой салют\t\t\t{9c65ff}1500$", "Выбрать", "Отмена");
				else ShowPlayerDialog(playerid, 1916, DIALOG_STYLE_MSGBOX, "Магазин пиротехники", "У Вас с собой уже есть пиротехнические изделия, покупка новых заменит их\nВы уверены что хотите продолжить?", "Да", "Нет");
			}
		case 11:
			{
				ShowPlayerDialog(playerid,dRestoran,2,"{ffcf00}Меню ресторана","1 » Напитки\n2 » Салаты\n3 » Горячие блюда\n4 » Десерты","Выбрать","Выход");
			}
		case 12:
			{
				if(!(pData[playerid][pLicenses][LIC_WEAP])) return SendClientMessage(playerid,CWHITE,"» У Вас нет лицензии на оружие!");
				ShowPlayerDialog(playerid, dDutyGun, 2, "Пейнтбольное снаряжение", "{FFFFFF}Бронежилет\nDesert Eagle\nM4", "Принять", "Отмена");
			}
		case 13:
		    {
		        ShowPlayerDialog(playerid,dBuyPhoneSot,2,"{ffcf00}Магазин Телефонов","1 » {33AAFF}Сотовый телефон {FFFFFF}100$\n2 » {33AAFF}Сим-Карта {FFFFFF}100$\n3 » {33AAFF} Модель телефона","Выбрать","Выход");

		    }
		case 14:
		    {
		        ShowPlayerDialog(playerid,dBuyObjectPlayer,2,"{ffcf00}Магазин Аксессуаров","1 » Очки\n2 » Шляпы","Выбрать","Выход");
		    }
        case 15:
		    {
		        _guperbuy(playerid, "");
			}
		case 16:
		    {
		        _guperbuyy(playerid, "");
		    }
		}
	}
    if(pickupid >= gHousePickup[0] && pickupid <= gHousePickup[gHouseCount-1])
	{
	    SendClientMessage(playerid, -1, "На время ЗБТ дома закрыты");
	    /*if(GetPVarInt(playerid,"ATPP") > gettime()) return 1;
	    SetPVarInt(playerid,"ATPP",gettime() + 2);
		new houseid = pickupid - gHousePickup[0];
		if(houseid == -1) return 1;
		pTemp[playerid][pSelectedHouseID] = houseid;
        new classname[20],Float:x, Float:y, Float:z, pos[15], mes2[200];
		GetPlayerPos(playerid,x,y,z);
		if(x < 0) strcat(pos,"San Fiero");
		else if(y > 100.0) strcat(pos,"Las Venturas");
		else strcat(pos,"Los Santos");
		switch(gHouses[houseid][houseClass])
		{
			case 0:classname = "Эконом";
			case 1:classname = "Cредний";
			case 2:classname = "Элитный";
			case 3:classname = "Особняк";
			default: classname = "Неизвестно";
		}
		if(!gHouses[houseid][houseOwnerID])
		{
			format(mes2,sizeof(mes2),"{FFFFFF}Стоимость дома: {2D6323}%d$\n{FFFFFF}Класс дома: %s\n\n{FFFFFF}Адрес: {628A89}г. %s, %s, дом №%d",gHouses[houseid][housePrice]*10,classname,pos,GetPlayerZone(houseid, 1),gHouses[houseid][houseID]);
			ShowPlayerDialog(playerid,dHouseInfo,0,"{C79200}Дом: {1B750B}Продается",mes2,"Купить","Закрыть");
		}
		else
		{
			format(mes2,sizeof(mes2),"{FFFFFF}Собственник: {CFCF63}%s\n{FFFFFF}Стоимость дома: {2D6323}%d$\n{FFFFFF}Класс дома: %s\n\n{FFFFFF}Адрес: {628A89}г.%s, %s, дом №%d",gHouses[houseid][houseOwner],gHouses[houseid][housePrice]*10,classname,pos,GetPlayerZone(houseid, 1),gHouses[houseid][houseID]);
			ShowPlayerDialog(playerid,dHouseInfo,0,"{C79200}Дом: {BD0016}Куплен",mes2,"Войти","Закрыть");
		}*/
	}
	if(pickupid == gBreakDoorPickup[0])
	{
	    if(GetPVarInt(playerid,"ATP") > gettime()) return 1;
	    SetPVarInt(playerid,"ATP",gettime() + 2);
        new Float:x,Float:y,Float:z;
    	GetPlayerPos(playerid,x,y,z);
		SetPVarFloat(playerid,"BREAKDOOR_X",x);
    	SetPVarFloat(playerid,"BREAKDOOR_Y",y);
    	SetPVarFloat(playerid,"BREAKDOOR_Z",z);
		SetPVarInt(playerid,"BREAKDOOR_INT", GetPlayerInterior(playerid));
		SetPVarInt(playerid,"BREAKDOOR_VV", GetPlayerVirtualWorld(playerid));
	    SetPlayerPos(playerid, 2144.2314,1607.9331,993.6882);
	    CPForID[playerid][0] = CreateDynamicCP(2152.7122,1613.7625,993.6882, 1.0, -1, -1, playerid);
	    CPForID[playerid][1] = CreateDynamicCP(2152.8494,1618.7600,993.6882, 1.0, -1, -1, playerid);
	    CPForID[playerid][2] = CreateDynamicCP(2134.1304,1613.4900,993.6882, 1.0, -1, -1, playerid);
	    CPForID[playerid][3] = CreateDynamicCP(2133.9019,1618.7555,993.6882, 1.0, -1, -1, playerid);
	    SetPVarInt(playerid, "CPForID", 1);
	    SetPlayerInterior(playerid, 1);
	}
	if(pickupid == gOtmiv[2])
	{
	    if(GetPVarInt(playerid,"BombaBuy")) return SendClientMessage(playerid, -1, "Вы уже купили взрывчатку");
	    ShowPlayerDialog(playerid,dBuyBomb,0,"Покупка взрывчатки","Вы хотите купить взрывчатку\nСтоимость: 2000$","Да","Нет");
	}
	if(pickupid == gBreakDoorPickup[1])
	{
	    if(GetPVarInt(playerid,"ATP") > gettime()) return 1;
	    SetPVarInt(playerid,"ATP",gettime() + 2);
        SetPlayerPos(playerid, GetPVarFloat(playerid, "BREAKDOOR_X"), GetPVarFloat(playerid, "BREAKDOOR_Y"), GetPVarFloat(playerid, "BREAKDOOR_Z"));
		SetPlayerInterior(playerid, GetPVarInt(playerid, "BREAKDOOR_INT"));
		SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "BREAKDOOR_VV"));
		if(GetPVarInt(playerid, "CPForID") == 1)
		{
            DestroyDynamicCP(CPForID[playerid][0]);
            DestroyDynamicCP(CPForID[playerid][1]);
            DestroyDynamicCP(CPForID[playerid][2]);
            DestroyDynamicCP(CPForID[playerid][3]);
			CPForID[playerid][0] = 0;
    		CPForID[playerid][1] = 0;
    		CPForID[playerid][2] = 0;
    		CPForID[playerid][3] = 0;
		}
	}


	if(pickupid >= gTeleportAreas[0][0] && pickupid <= gTeleportAreas[TELEPORTS_COUNT-1][1] && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		if(GetPVarInt(playerid,"ATP") > gettime()) return 1;
		SetPVarInt(playerid,"ATP",gettime() + 2);
		new id, subid;
		for(new i; i < TELEPORTS_COUNT;i++)
		{
			if(pickupid == gTeleportAreas[i][0]) {id = i; subid = 1;}
			if(pickupid == gTeleportAreas[i][1]) {id = i; subid = 0;}
		}
		if(id == 1 && pTemp[playerid][pChangingSkin])
		{
			pTemp[playerid][pChangingSkin] = false;
			SetPlayerSkin(playerid,pData[playerid][pSkin]);
		}
		if(id == 2 && subid == 0
		|| id == 3 && subid == 0
		|| id == 4 && subid == 0)
		{
		    new Float:health;
    		GetPlayerHealth(playerid, health);
			if(health < 60.0 && pTemp[playerid][pInHospital] != true) return SendClientMessage(playerid,CWHITE,"» Вы не можете выйти из больницы, пока не вылечитесь.");
			if(pTemp[playerid][pLec] == true) return SendClientMessage(playerid,CWHITE,"» Освободите койку, чтобы выйти из больницы.");
		}
		if( (id == 2 || id == 3 || id == 4) && subid == 1)
		{
			pTemp[playerid][pInHospital] = true;
		}
		if( (id == 43) && subid == 1)
		{
			if(pData[playerid][pFraction] != 13) return SendClientMessage(playerid,CWHITE,"» Вы не из Yakuza.");
		}
		if( (id == 42) && subid == 1)
		{
            if(pData[playerid][pFraction] != 15) return SendClientMessage(playerid,CWHITE,"» Вы не из Russian Mafia.");
		}
		if( (id == 47) && subid == 1)
		{
            if(pData[playerid][pFraction] != 14) return SendClientMessage(playerid,CWHITE,"» Вы не из La Cosa Nostra.");
		}
		if( (id == 44) && subid == 0 )
		{
		    if(pTemp[playerid][pWork] == 11)
			{
			    pTemp[playerid][pWork] = 0;
				SetPlayerSkin(playerid,pTemp[playerid][pCSkin]);
			}
		}

		if( (id == 48) && subid == 1 )
		{
		    if(pData[playerid][pFraction] != 2) return SendClientMessage(playerid,CWHITE,"» Вы не из Больницы ЛС");
		}
		if( (id == 49) && subid == 1 )
		{
		    if(pData[playerid][pFraction] != 2) return SendClientMessage(playerid,CWHITE,"» Вы не из Больницы СФ.");
		}
		if( (id == 50) && subid == 1 )
		{
		    if(pData[playerid][pFraction] != 2) return SendClientMessage(playerid,CWHITE,"» Вы не из Больницы ЛВ.");
		}

		pTemp[playerid][pJustTP] = true;
		SetPlayerVirtualWorld(playerid,gTeleportData[id][subid][0]);
		SetPlayerInterior(playerid,gTeleportData[id][subid][1]);
		SetPlayerPos(playerid,gTeleports[id][subid][0],gTeleports[id][subid][1],gTeleports[id][subid][2],0);
		SetPlayerFacingAngle(playerid,gTeleports[id][subid][3]);
		SetCameraBehindPlayer(playerid);
	}





	if(pickupid == arGangExit[0]
			|| pickupid == arGangExit[1]
			|| pickupid == arGangExit[2]
			|| pickupid == arGangExit[3]
			|| pickupid == arGangExit[4])
	{
		if(GetPVarInt(playerid,"ATP") > gettime()) return 1;
		new gangid = GetPlayerVirtualWorld(playerid)-2003;
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerPos(playerid,gGangEnter[gangid][0],gGangEnter[gangid][1],gGangEnter[gangid][2]);
		SetPlayerFacingAngle(playerid,gGangEnter[gangid][3]);
		SetCameraBehindPlayer(playerid);
		SetPVarInt(playerid,"ATP",gettime() + 2);
	}
	if (pickupid == arGang[0]
			|| pickupid == arGang[1]
			|| pickupid == arGang[2]
			|| pickupid == arGang[3]
			|| pickupid == arGang[4])
	{
		if(GetPVarInt(playerid,"ATP") > gettime()) return 1;
		new gangid = -1;
		for(new i;i<5;i++)
		{
			if(arGang[i] == pickupid)
			{
				gangid = i;
				break;
			}
		}
		if(gangid == -1) return SendClientMessage(playerid, CGRAY, "Ошибка #088");
		SetPlayerInterior(playerid,gGangInterior[gangid][0]);
		SetPlayerVirtualWorld(playerid,gangid+2003);
		SetPlayerPos(playerid,gGangExit[gangid][0],gGangExit[gangid][1],gGangExit[gangid][2]);
		SetPlayerFacingAngle(playerid,gGangExit[gangid][3]);
		SetCameraBehindPlayer(playerid);
		SetPVarInt(playerid,"ATP",gettime() + 2);
	}
	if(pickupid == pickup)
	{
		ShowPlayerDialog(playerid,DIALOG_CRP,0,"Работа","Вы хотите устроиться работать крупье",
		"Начать","Закончить");
	}


	if(pickupid == CasinoInfo[0] || pickupid == CasinoInfo[1])
	{
	    gInfoCasino[0] = CreateInfoCasino(playerid, 196.666656, 338.074096, "LD_SLOT:cherry");
	    PlayerTextDrawShow(playerid, gInfoCasino[0]);
	   	gInfoCasino[1] = CreateInfoCasino(playerid, 196.666656, 365.622314, "LD_SLOT:grapes");
	   	PlayerTextDrawShow(playerid, gInfoCasino[1]);
	   	gInfoCasino[2] = CreateInfoCasino(playerid, 196.666671, 391.511322, "LD_SLOT:r_69");
	   	PlayerTextDrawShow(playerid, gInfoCasino[2]);
	   	gInfoCasino[3] = CreateInfoCasino(playerid, 315.666748, 337.829681, "LD_SLOT:cherry");
	   	PlayerTextDrawShow(playerid, gInfoCasino[3]);
	   	gInfoCasino[4] = CreateInfoCasino(playerid, 247.666748, 337.829528, "LD_SLOT:bell");
	   	PlayerTextDrawShow(playerid, gInfoCasino[4]);
	   	gInfoCasino[5] = CreateInfoCasino(playerid, 247.333267, 364.548095, "LD_SLOT:bar1_o");
	   	PlayerTextDrawShow(playerid, gInfoCasino[5]);
	   	gInfoCasino[6] = CreateInfoCasino(playerid, 247.333251, 390.022186, "LD_SLOT:bar2_o");
	   	PlayerTextDrawShow(playerid, gInfoCasino[6]);
	   	gInfoCasino[7] = CreateInfoCasino(playerid, 339.999877, 337.925872, "LD_SLOT:bar2_o");
	   	PlayerTextDrawShow(playerid, gInfoCasino[7]);
	   	gInfoCasino[8] = CreateInfoCasino(playerid, 363.333404, 337.585083, "LD_SLOT:bell");
	   	PlayerTextDrawShow(playerid, gInfoCasino[8]);
	   	gInfoCasino[9] = CreateInfoCasino(playerid, 364.333374, 362.059356, "LD_SLOT:cherry");
	   	PlayerTextDrawShow(playerid, gInfoCasino[9]);
	   	gInfoCasino[10] = CreateInfoCasino(playerid, 340.666809, 362.059173, "LD_SLOT:bell");
	   	PlayerTextDrawShow(playerid, gInfoCasino[10]);
	   	gInfoCasino[11] = CreateInfoCasino(playerid, 316.000122, 363.059173, "LD_SLOT:bell");
	   	PlayerTextDrawShow(playerid, gInfoCasino[11]);

	   	gInfoCasino[12] = CreatePlayerTextDraw(playerid, 220.666687, 335.585113, "x2____x5______________x1~n~~n~x3____x6______________x3~n~~n~x4____x7");
		PlayerTextDrawLetterSize(playerid, gInfoCasino[12], 0.449999, 1.600000);
		PlayerTextDrawAlignment(playerid, gInfoCasino[12], 1);
		PlayerTextDrawColor(playerid, gInfoCasino[12], -1);
		PlayerTextDrawSetShadow(playerid, gInfoCasino[12], 0);
		PlayerTextDrawSetOutline(playerid, gInfoCasino[12], 1);
		PlayerTextDrawBackgroundColor(playerid, gInfoCasino[12], 51);
		PlayerTextDrawFont(playerid, gInfoCasino[12], 1);
		PlayerTextDrawSetProportional(playerid, gInfoCasino[12], 1);
		PlayerTextDrawShow(playerid, gInfoCasino[12]);

		gInfoCasino[13] = CreatePlayerTextDraw(playerid, 412.666748, 329.203674, "usebox");
		PlayerTextDrawLetterSize(playerid, gInfoCasino[13], 0.000000, 10.261528);
		PlayerTextDrawTextSize(playerid, gInfoCasino[13], 182.666671, 0.000000);
		PlayerTextDrawAlignment(playerid, gInfoCasino[13], 1);
		PlayerTextDrawColor(playerid, gInfoCasino[13], 0);
		PlayerTextDrawUseBox(playerid, gInfoCasino[13], true);
		PlayerTextDrawBoxColor(playerid, gInfoCasino[13], 102);
		PlayerTextDrawSetShadow(playerid, gInfoCasino[13], 0);
		PlayerTextDrawSetOutline(playerid, gInfoCasino[13], 0);
		PlayerTextDrawFont(playerid, gInfoCasino[13], 0);
        PlayerTextDrawShow(playerid, gInfoCasino[13]);

        SetPVarInt(playerid, "dCancelInfoCasino1", 1);

        mes = "";
		new str[650];
		f(mes, "\
		{ffffff}Представляем Вашему вниманию комбинацию совпадений:\n\n\
		Если у Вас выпала {fef501}1-я{ffffff} группа, то вложенная сумма увеличится на {baff00}2x{FFFFFF}\n\
		Если у Вас выпала {fef501}2-я{ffffff} группа, то вложенная сумма увеличится на {baff00}3x{FFFFFF}\n\
		Если у Вас выпала {fef501}3-я{ffffff} группа, то вложенная сумма увеличится на {baff00}4x{FFFFFF}\n");
		strcat(str, mes);
		f(mes, "\
		Если у Вас выпала {fef501}4-я{ffffff} группа, то вложенная сумма увеличится на {baff00}5x{ffffff}\n\
		Если у Вас выпала {fef501}5-я{ffffff} группа, то вложенная сумма увеличится на {baff00}6x{ffffff}\n\
		Если у Вас выпала {fef501}6-я{ffffff} группа, то вложенная сумма увеличится на {baff00}7x{ffffff}\n\
		Если у Вас выпала {fef501}6-я{ffffff} группа, то вложенная сумма увеличится на {baff00}7x{ffffff}");
		strcat(str, mes);
		ShowPlayerDialog(playerid, dCancelInfoCasino, DIALOG_STYLE_MSGBOX, "{ffcf00}Информация", str, "Закрыть", "");



	}
	if(pickupid == UniversetyPickup1[0]
	|| pickupid == UniversetyPickup1[1]
	|| pickupid == UniversetyPickup1[2]
	|| pickupid == UniversetyPickup1[3])
	{
	    if(GetPVarInt(playerid, "learnobject") == 1) return 1;
		if(pTemp[playerid][pWork] != 11) return SendClientMessage(playerid, -1, "Для начала обучения Вам необходимо переодеться!");
	    SetPVarInt(playerid, "learn", 1);
		ShowPlayerDialog(playerid,dLearn,0,"{FFFF00}Кабинет Математики","{FFFFFF}Хотите начать обучение предмета ?","Да","Нет");
	}
	if(pickupid == UniversetyPickup1[4]
	|| pickupid == UniversetyPickup1[5]
	|| pickupid == UniversetyPickup1[6]
	|| pickupid == UniversetyPickup1[7])
	{
	    if(GetPVarInt(playerid, "learnobject") == 1) return 1;
	    if(pTemp[playerid][pWork] != 11) return SendClientMessage(playerid, -1, "Для начала обучения Вам необходимо переодеться!");
	    SetPVarInt(playerid, "learn", 2);
	   	ShowPlayerDialog(playerid,dLearn,0,"{FFFF00}Кабинет Информатики","{FFFFFF}Хотите начать обучение предмета ?","Да","Нет");
	}
	if(pickupid == UniversetyPickup1[8]
	|| pickupid == UniversetyPickup1[9]
	|| pickupid == UniversetyPickup1[10]
	|| pickupid == UniversetyPickup1[11])
	{
	    if(GetPVarInt(playerid, "learnobject") == 1) return 1;
	    if(pTemp[playerid][pWork] != 11) return SendClientMessage(playerid, -1, "Для начала обучения Вам необходимо переодеться!");
	    SetPVarInt(playerid, "learn", 3);
	    ShowPlayerDialog(playerid,dLearn,0,"{FFFF00}Кабинет Истории","{FFFFFF}Хотите начать обучение предмета ?","Да","Нет");
	}
	if(pickupid == UniversetyPickup1[12]
	|| pickupid == UniversetyPickup1[13]
	|| pickupid == UniversetyPickup1[14]
	|| pickupid == UniversetyPickup1[15])
	{
	    if(GetPVarInt(playerid, "learnobject") == 1) return 1;
	    if(pTemp[playerid][pWork] != 11) return SendClientMessage(playerid, -1, "Для начала обучения Вам необходимо переодеться!");
	    SetPVarInt(playerid, "learn", 4);
	    ShowPlayerDialog(playerid,dLearn,0,"{FFFF00}Кабинет Русского языка","{FFFFFF}Хотите начать обучение предмета ?","Да","Нет");
	}
	if(pickupid == UniversetyPickup1[16]
	|| pickupid == UniversetyPickup1[17]
	|| pickupid == UniversetyPickup1[18]
	|| pickupid == UniversetyPickup1[19]
	|| pickupid == UniversetyPickup1[20])
	{
	    if(GetPVarInt(playerid, "learnobject") == 1) return 1;
	    if(pTemp[playerid][pWork] != 11) return SendClientMessage(playerid, -1, "Для начала обучения Вам необходимо переодеться!");
	    SetPVarInt(playerid, "learn", 5);
	    ShowPlayerDialog(playerid,dLearn,0,"{FFFF00}Кабинет Биологии","{FFFFFF}Хотите начать обучение предмета ?","Да","Нет");
	}
	return 1;
}


stock IsAdminOnline()
{
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	    i = cvector_get(PLAYERS, idx);
		if(IsPlayerConnected(i) && pData[i][pAdmin] > 1) return 1;
	}
	return 0;
}

forward Float:GetDistBetweenVehiclePlayer(v1, p2);
public Float:GetDistBetweenVehiclePlayer(v1, p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetVehiclePos(v1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

stock DisableGPSForPlayer(playerid)
{
	if(pTemp[playerid][GPSON])
	{
		RemovePlayerMapIcon(playerid, 99);
		TextDrawHideForPlayer(playerid,GPSDraw[playerid]);
		if(pTemp[playerid][GPS_CP] != -1)
		{
			DestroyDynamicCP(pTemp[playerid][GPS_CP]);
		}
		pTemp[playerid][GPSON] = false;
		pTemp[playerid][pGPS] = false;
		pTemp[playerid][GPS_CP] = -1;
	}
	return true;
}
stock EnableGPSForPlayer(playerid, Float:x, Float:y, Float:z, Float:size = 3.0, mapicon, bool: checkpoint = true)
{
	DisableGPSForPlayer(playerid);//Удяляем предыдущий GPS
	SetPlayerMapIcon(playerid, 99, x, y, z, mapicon, 0, MAPICON_GLOBAL);
	if(checkpoint)
	{
		pTemp[playerid][GPS_CP] = CreateDynamicCP(x, y, z, size, -1, -1, playerid);
	}
	TextDrawShowForPlayer(playerid,GPSDraw[playerid]);
	pTemp[playerid][GPSON] = true;
	return true;
}
stock RangeBan(playerid)
{
	new pos, oldpos, ip[15], ip2[15], tmp[21];
	GetPlayerIp(playerid, ip, sizeof(ip));
	pos = strfind(ip, ".", true);
	pos++;
	for(new i = 0; i < pos; i++)
	{
		ip2[i] = ip[pos-pos+i];
	}
	pos--;
	ip[pos] = ' ';
	oldpos = pos;
	oldpos++;
	pos = strfind(ip, ".", true);
	pos++;
	for(new i = oldpos; i < pos; i++)
	{
		ip2[i] = ip[pos-pos+i];
	}
	format(ip2, sizeof(ip2), "%s*.*", ip2);
	format(tmp, sizeof(tmp), "banip %s", ip2);
	SendRconCommand(tmp);

	mes = "";
	f(mes, "INSERT INTO `rangeban` VALUES ('', '%s', '%s')",ip2, pData[playerid][pNickname]);
	sql_query(zConn, mes); mes = "";
}
public MaskOff(playerid)
{
	if(pData[playerid][pFraction]) SetPlayerColor(playerid,gFractionColor[pData[playerid][pFraction] - 1]);
	pData[playerid][pMasked] = 0;
	SetPlayerChatBubble(playerid, "{FF9900}Снимает маску", -1, 20.0, 500);
	GameTextForPlayer(playerid, "~y~ INVISABLE OFF", 800, 4);
	PlayerPlaySound(playerid, 21001, 0.0, 0.0, 0.0);
}

stock GangObshak(playerid, var, id, bool:status)
{
	new gangid = pData[playerid][pFraction] - 3;
	mes = "";
	switch(id)
	{
	case 0:
		{
			if(status == true)
			{
				if(gGangDorm[gangid][3] < var || var < 0) return SendClientMessage(playerid,CWHITE,"» В общаке нет столько денег");
				gGangDorm[gangid][3] -= var;
				TransferMoney(-1,playerid,var,"takefromband");

				f(mes, "UPDATE `gangs` SET `money` = '%d' WHERE `id` = '%d'",gGangDorm[gangid][3],gangid+1);
				sql_query(zConn, mes); mes = "";

				SendMes(playerid, 0x6495EDFF, "Вы взяли со склада банды деньги (+%i)", var);
				f(mes, "{6BCF00}%s [id %d] взял деньги со склада банды {66CC00}(%d$)", pData[playerid][pNickname], playerid, var);
				SendFMes(pData[playerid][pFraction], -1, mes);

				WHDataUpdate();
			}
			else
			{
				if(pData[playerid][pMoney] < var || var < 0) return SendClientMessage(playerid,CWHITE,"» У Вас недостатчочно денег");
				gGangDorm[gangid][3] += var;
				TransferMoney(-1,playerid,-var,"takefromband");

				f(mes, "UPDATE `gangs` SET `money` = '%d' WHERE `id` = '%d'",gGangDorm[gangid][3],gangid+1);
				sql_query(zConn, mes); mes = "";


				SendMes(playerid, 0x6495EDFF, "Вы положили на склад банды деньги (-%i)", var);
				f(mes,  "{6BCF00}%s [id %d] положил деньги на склад банды {0096FF}(%d$)", pData[playerid][pNickname], playerid, var);
				SendFMes(pData[playerid][pFraction], -1, mes);

				WHDataUpdate();
			}
		}
	case 1:
		{
			if(status == true)
			{
				if(gGangDorm[gangid][1] < var  || var < 0) return SendClientMessage(playerid,CWHITE,"» В общаке не достаточно патрон");
				if(pData[playerid][pAmmo] + var > 500) return SendClientMessage(playerid,CWHITE,"» У вас слишком много патрон на руках");
				gGangDorm[gangid][1] -= var;
				pData[playerid][pAmmo] += var;

				f(mes, "UPDATE `gangs` SET `ammo` = '%d' WHERE `id` = '%d'",gGangDorm[gangid][1],gangid+1);
				sql_query(zConn, mes); mes = "";
				f(mes, "UPDATE `accounts` SET `ammo` = '%d' WHERE `id` = '%d'",pData[playerid][pAmmo],pData[playerid][pMysqlID]);
				sql_query(zConn, mes); mes = "";

				SendMes(playerid, 0x6495EDFF, "Вы взяли со склада банды патроны (-%i)", var);
				f(mes,  "{6BCF00}%s [id %d] взял(а) патроны со склада банды {0096FF}(%d шт.)", pData[playerid][pNickname], playerid, var);
				SendFMes(pData[playerid][pFraction], -1, mes);

				WHDataUpdate();
			}
			else
			{
				if(gGangDorm[gangid][1] + var > 25000 || var < 0) return SendClientMessage(playerid,CWHITE,"» Общак полон");
				if(pData[playerid][pAmmo] < var) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно патрон");
				gGangDorm[gangid][1] += var;
				pData[playerid][pAmmo] -= var;

				f(mes, "UPDATE `gangs` SET `ammo` = '%d' WHERE `id` = '%d'",gGangDorm[gangid][1],gangid+1);
				sql_query(zConn, mes); mes = "";
				f(mes, "UPDATE `accounts` SET `ammo` = '%d' WHERE `id` = '%d'",pData[playerid][pAmmo],pData[playerid][pMysqlID]);
				sql_query(zConn, mes); mes = "";

				SendMes(playerid, 0x6495EDFF, "Вы положили на склад банды патроны (-%i)", var);
				f(mes, "{6BCF00}%s [id %d] положил(а) патроны на склад банды {0096FF}(%d шт.)", pData[playerid][pNickname], playerid, var);
				SendFMes(pData[playerid][pFraction], -1, mes);

				WHDataUpdate();
			}
		}
	case 2:
		{
			if(status == true)
			{
				if(gGangDorm[gangid][0] < var) return SendClientMessage(playerid,CWHITE,"» В общаке не достаточно Материалы");
				if(pData[playerid][pGunAmount] + var > 45) return SendClientMessage(playerid,CWHITE,"» У вас слишком много Материалы на руках");
				gGangDorm[gangid][0] -= var;
				pData[playerid][pMaterialN] += var;

				f(mes, "UPDATE `gangs` SET `gunamount` = '%d' WHERE `id` = '%d'",gGangDorm[gangid][0],gangid+1);
				sql_query(zConn, mes); mes = "";
				f(mes, "UPDATE `accounts` SET `materialn` = '%d' WHERE `id` = '%d'",pData[playerid][pMaterialN],pData[playerid][pMysqlID]);
				sql_query(zConn, mes); mes = "";

				SendMes(playerid, 0x6495EDFF, "Вы взяли со склада банды заготовки материалов (-%i)", var);
				f(mes,  "{6BCF00}%s [id %d] взял(а) заготовки материалов со склада банды {0096FF}(%d ед.)", pData[playerid][pNickname], playerid, var);
				SendFMes(pData[playerid][pFraction], -1, mes);

				WHDataUpdate();
			}
			else
			{
				if(gGangDorm[gangid][0] + var > 10000) return SendClientMessage(playerid,CWHITE,"» Общак полон");
				if(pData[playerid][pGunAmount] < var || var < 0) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно Материалы");
				gGangDorm[gangid][0] += var;
				pData[playerid][pGunAmount] -= var;

				f(mes, "UPDATE `gangs` SET `gunamount` = '%d' WHERE `id` = '%d'",gGangDorm[gangid][0],gangid+1);
				sql_query(zConn, mes); mes = "";
				f(mes, "UPDATE `accounts` SET `gunamount` = '%d' WHERE `id` = '%d'",pData[playerid][pGunAmount],pData[playerid][pMysqlID]);
				sql_query(zConn, mes); mes = "";

				SendMes(playerid, 0x6495EDFF, "Вы положили на склад банды материалы (-%i)", var);
				f(mes,  "{6BCF00}%s [id %d] положил(а) материалы на склад банды {0096FF}(%d ед.)", pData[playerid][pNickname], playerid, var);
				SendFMes(pData[playerid][pFraction], -1, mes);

				WHDataUpdate();
			}
		}
	case 3:
		{
			if(status == true)
			{
				if(gGangDorm[gangid][2] < var) return SendClientMessage(playerid,CWHITE,"» В общаке не достаточно наркотиков");
				if(pData[playerid][pDrugs] + var > 1000) return SendClientMessage(playerid,CWHITE,"» У вас слишком много наркотиков на руках");
				gGangDorm[gangid][2] -= var;
				pData[playerid][pDrugs] += var;

				f(mes, "UPDATE `gangs` SET `drugs` = '%d' WHERE `id` = '%d'",gGangDorm[gangid][2],gangid+1);
				sql_query(zConn, mes); mes = "";
				f(mes, "UPDATE `accounts` SET `drugs` = '%d' WHERE `id` = '%d'",pData[playerid][pDrugs],pData[playerid][pMysqlID]);
				sql_query(zConn, mes); mes = "";

				SendMes(playerid, 0x6495EDFF, "Вы взяли со склада банды наркотики (-%i)", var);
				f(mes,  "{6BCF00}%s [id %d] взял(а) наркотики со склада банды {0096FF}(%d ед.)", pData[playerid][pNickname], playerid, var);
				SendFMes(pData[playerid][pFraction], -1, mes);

				WHDataUpdate();
			}
			else
			{
				if(gGangDorm[gangid][2] + var > 30000) return SendClientMessage(playerid,CWHITE,"» Общак полон");
				if(pData[playerid][pDrugs] < var || var < 0) return SendClientMessage(playerid,CWHITE,"» У Вас недостаточно наркотиков");
				gGangDorm[gangid][2] += var;
				pData[playerid][pDrugs] -= var;

				f(mes, "UPDATE `gangs` SET `drugs` = '%d' WHERE `id` = '%d'",gGangDorm[gangid][2],gangid+1);
				sql_query(zConn, mes); mes = "";
				f(mes, "UPDATE `accounts` SET `drugs` = '%d' WHERE `id` = '%d'",pData[playerid][pDrugs],pData[playerid][pMysqlID]);
				sql_query(zConn, mes); mes = "";

				SendMes(playerid, 0x6495EDFF, "Вы положили на склад банды наркотики (-%i)", var);
				f(mes, "{6BCF00}%s [id %d] положил(а) наркотики на склад банды {0096FF}(%d ед.)", pData[playerid][pNickname], playerid, var);
				SendFMes(pData[playerid][pFraction], -1, mes);

				WHDataUpdate();
			}
		}
	}
	return true;
}
stock PriceCar(vehicleid)
{
	new buycena;
	switch(GetVehicleModel(vehicleid))
	{
		case  419: buycena = 24000;
		case  481: buycena = 2000;
		case  579: buycena = 89000;
		case  535: buycena = 40000;
		case  400: buycena = 80000;
		case  429: buycena = 90000;
		case  468: buycena = 10000;
		case  517: buycena = 19000;
		case  589: buycena = 20000;
		case  507: buycena = 46000;
		case  602: buycena = 75000;
		case  402: buycena = 90000;
		case  522: buycena = 120000;
		case  401: buycena = 22000;
		case  518: buycena = 40000;
		case  580: buycena = 250000;
		case  489: buycena = 90000;
		case  587: buycena = 65000;
		case  451: buycena = 250000;
		case  410: buycena = 25000;
		case  542: buycena = 15000;
		case  567: buycena = 150000;
		case  500: buycena = 50000;
		case  559: buycena = 54000;
		case  412: buycena = 100000;
		case  543: buycena = 12000;
		case  566: buycena = 27000;
		case  496: buycena = 28000;
		case  560: buycena = 57000;
		case  509: buycena = 1100;
		case  413: buycena = 70000;
		case  545: buycena = 19000;
		case  561: buycena = 27000;
		case  475: buycena = 20000;
		case  562: buycena = 60000;
		case  510: buycena = 3000;
		case  422: buycena = 36000;
		case  549: buycena = 18000;
		case  558: buycena = 31000;
		case  445: buycena = 20000;
		case  541: buycena = 200000;
		case  462: buycena = 5000;
		case  439: buycena = 45000;
		case  575: buycena = 18000;
		case  555: buycena = 30000;
		case  426: buycena = 32000;
		case  506: buycena = 140000;
		case  461: buycena = 78000;
		case  467: buycena = 28000;
		case  576: buycena = 24000;
		case  554: buycena = 27000;
		case  421: buycena = 80000;
		case  480: buycena = 55000;
		case  521: buycena = 110000;
		case  466: buycena = 34000;
		case  600: buycena = 15000;
		case  551: buycena = 70000;
		case  405: buycena = 50000;
		case  434: buycena = 130000;
		case  463: buycena = 80000;
		case  474: buycena = 15000;
		case  585: buycena = 23000;
		case  534: buycena = 45000;
		case  526: buycena = 15000;
		case  477: buycena = 81000;
		case  586: buycena = 30000;
		case  479: buycena = 17000;
		case  603: buycena = 170000;
		case  527: buycena = 11000;
		case  533: buycena = 32000;
		case  415: buycena = 140000;
		case  471: buycena = 15000;
		case  492: buycena = 30000;
		case  411: buycena = 500000;
		case  404: buycena = 9000;
	}
	return buycena;
}

stock SpeedVehicle(playerid)
{
	new Float:ST[4];
	if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
	else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
	ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 213.3;
	return floatround(ST[3]);
}
PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return true;
		}
	}
	return false;
}

CMD:restart(playerid,params[])
{
	new bool: dostup = false;
	if(!strcmp(pData[playerid][pNickname], "Sem_Nicholson", true)) dostup = true;
	if(!strcmp(pData[playerid][pNickname], "Tim_Starker", true)) dostup = true;
	if(dostup == false) return 1;
	RestartTime = 60;
	SendClientMessageToAll(COLOR_LIGHTRED, "Рестарт сервера через 1 минуту!");
	SendClientMessageToAll(CWHITE,"» Рекомендуем закончить работу и получить зарплату перед выходом.");
	return 1;
}
CMD:bandobsse(playerid,params[])
{
	if(pData[playerid][pFraction] < 3 || pData[playerid][pFraction] > 7) return SendClientMessage(playerid,CWHITE,"» Данная функция доступна только бандам");
	ShowPlayerDialog(playerid,dObshak,2,"{ffcf00}Общак","Материалы\nДеньги\nНаркотики","Далее","Отмена");
	return 1;
}
public OnPlayerCommandReceived(playerid, cmdtext[])
{
    if(!IsPlayerConnected(playerid)) return 0;
    if(!pTemp[playerid][pLogined]) return 0;
    if(pTemp[playerid][pDialog])
	{
		SendClientMessage(playerid,CWHITE,"» Нельзя использовать команды, пока открыт диалог");
		return 0;
	}
	if(pData[playerid][pAdmin] > 0 && pTemp[playerid][admloged] != 1)
	{
		ShowPlayerDialog(playerid, dLoginAdmins, DIALOG_STYLE_INPUT, "{33AAFF}Авторизация", "{ffffff}Введите пароль от администраторской панели\nЕсли вы не знаете пароля, обратитесь к Sem_Nicholson:", "Вход", "Отмена");
		return 0;
	}
	return true;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
    if(!pData[playerid][pCar]) return 1;
	SetPVarInt(playerid, "vtuning", vehicleid);
	SetPVarInt(playerid, "vcomponent", componentid);
   	ShowPlayerDialog(playerid,dBuyTuning,0,"{ffcf00}Тюнинг","{FFFFFF}Вы уверены, что хотите приобрести данную деталь?\nНапоминаем Вам, что данный элемент сохраниться до продажи или продажи тюнинга\n\n{FFCD00}Стоимость: 5000$","Да","Нет");
	return 1;
}
public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	if(!pData[playerid][pCar]) return 1;
	for(new i; i < sizeof(gCars); i++)
	{
		if(gCars[i][carVid] != vehicleid) continue;
		gCars[i][carColor1] = color1;
		gCars[i][carColor2] = color2;
	}
    SaveServerData2(playerid, vehicleid);
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	if(!pData[playerid][pCar]) return 1;
	for(new i; i < sizeof(gCars); i++)
	{
		if(gCars[i][carVid] != vehicleid) continue;
		gCars[i][carPaintJob] = paintjobid;
	}
	SaveServerData2(playerid, vehicleid);
	return 1;
}

/*stock ShowSpeedometer(playerid)
{
    PlayerTextDrawSetPreviewModel(playerid, SpeedPlayerText[playerid][3], GetVehicleModel(GetPlayerVehicleID(playerid)));
    for(new i; i != 2; i++) TextDrawShowForPlayer(playerid, SpeedText[i]);
    for(new i; i != 4; i++) PlayerTextDrawShow(playerid, SpeedPlayerText[playerid][i]);
}
stock HideSpeedometer(playerid)
{
	for(new i; i != 2; i++) TextDrawHideForPlayer(playerid, SpeedText[i]);
	for(new i; i != 4; i++) PlayerTextDrawHide(playerid, SpeedPlayerText[playerid][i]);
}*/
forward TreeVost(i);
public TreeVost(i)
{
	DestroyDynamicObject(gTree[i]);
	gTreeHealth[i] = 100;
	gTree[i] = CreateDynamicObject(717, ObjectTree[i][0], ObjectTree[i][1], ObjectTree[i][2], 0.00000, 0.00000, 359.23209);
	gTreeCP[i] = CreateDynamicCP(ObjectTree[i][0],ObjectTree[i][1],ObjectTree[i][2]+(72.9820-69.38030),2.5);
	gTreeStatus[i] = true;
	return 1;
}
stock StartReconForPlayer(playerid, specid)
{
    if(!IsPlayerConnected(specid)) return true;
    new Float:Pos[3];
    GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
    if(GetPVarInt(playerid, "Spectrate") == 0)
    {
    	SetPVarFloat(playerid, "PosSpecX", Pos[0]); SetPVarFloat(playerid, "PosSpecY", Pos[1]); SetPVarFloat(playerid, "PosSpecZ", Pos[2]);
		SetPVarInt(playerid, "SpecInt", GetPlayerInterior(playerid)); SetPVarInt(playerid, "SpecVT", GetPlayerVirtualWorld(playerid));
    }
    TogglePlayerSpectating(playerid, 1);
    SetPVarInt(playerid, "SpecID", specid);
    SetPVarInt(playerid, "Spectrate", 1);
    SetPlayerInterior(playerid, GetPlayerInterior(specid));
    SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specid));
    if(!IsPlayerInAnyVehicle(specid)) return PlayerSpectatePlayer(playerid, specid);
    else return PlayerSpectateVehicle(playerid, GetPlayerVehicleID(specid));
}
stock StopRecon(playerid, reason[])
{
	if(GetPVarInt(playerid, "Spectrate") == 0) return true;
	SetPlayerPos(playerid, GetPVarFloat(playerid, "SPCAM_X"), GetPVarFloat(playerid, "SPCAM_Y"), GetPVarFloat(playerid, "SPCAM_Z"));
	SetPlayerInterior(playerid, GetPVarInt(playerid, "SPCAM_INT"));
	SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "SPCAM_VV"));
	SetCameraBehindPlayer(playerid);
	TogglePlayerSpectating(playerid, 0);
 	DeletePVar(playerid, "SpecID");
	GameTextForPlayer(playerid, reason, 1500, 4);
	return true;
}
stock ShowReconMenuForPlayer(playerid) return ShowMenuForPlayer(AdminRecon, playerid);

stock SlapPlayer(playerid)
{
	new Float:Pos[3];
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	SetPlayerPos(playerid, Pos[0], Pos[1], Pos[2] + 8);
	PlayerPlaySound(playerid, 1130, Pos[0], Pos[1], Pos[2] + 5);
	return true;
}

forward Posadka(playerid);  // Посадка растений на ферме
public Posadka(playerid)
{
    if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid,0);

    SetPlayerAttachedObject(playerid,0,647,1,0.156000,0.507999,-0.054000,91.200004,85.999992,0.000000,0.058000,0.086999,0.064000);
    SetPlayerAttachedObject(playerid,1,1356,1,0.119000,0.510999,-0.019999,-86.200004,92.099937,-93.000000,0.503000,0.452000,0.615000);
    SetPlayerAttachedObject(playerid,2,19059,1,0.055000,0.474999,0.160999,0.000000,0.000000,0.000000,0.037999,0.024000,0.018000);
	SetPlayerAttachedObject(playerid,3,19059,1,0.055000,0.437999,0.089999,0.000000,0.000000,0.000000,0.037999,0.024000,0.018000);
 	SetPlayerAttachedObject(playerid,4,19059,1,0.055000,0.437999,0.089999,0.000000,0.000000,0.000000,0.037999,0.024000,0.018000);
 	SetPlayerAttachedObject(playerid,5,19059,1,0.055000,0.543999,0.119999,0.000000,0.000000,0.000000,0.037999,0.024000,0.018000);
	SetPlayerAttachedObject(playerid,6,19059,1,0.055000,0.543999,0.081999,0.000000,0.000000,0.000000,0.037999,0.024000,0.018000);
	SetPlayerAttachedObject(playerid,7,19059,1,0.055000,0.475999,0.081999,0.000000,0.000000,0.000000,0.037999,0.024000,0.018000);
	SetPlayerAttachedObject(playerid,8,19059,1,0.055000,0.475999,0.147999,0.000000,0.000000,0.000000,0.037999,0.024000,0.018000);
	SetPlayerAttachedObject(playerid,9,19059,1,0.136999,0.470999,0.054999,0.000000,0.000000,0.000000,0.037999,0.024000,0.018000);
	SetPlayerCheckpoint(playerid, -48.2419,43.1337,3.1172, 10.0);
	ClearAnimations(playerid);
	ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
	SetTimerEx("AnimationDelay",700,false,"ii",playerid,1);
	new woodamount = 10;
	SetPVarInt(playerid,"woodamount",woodamount);
	return 1;
}
forward Vodka(playerid);  // Посадка растений на ферме
public Vodka(playerid)
{
    if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid,0);
 	if(ZavodInfo[2] < 2) return SendClientMessage(playerid, -1, "На заводе не достаточно винограда");
 	if(ZavodInfo[0] < 2) return SendClientMessage(playerid, -1, "На заводе не достаточно песка");

    SetPVarInt(playerid,"VODKADDD",gettime() + 10);
    SetPlayerAttachedObject( playerid, 0, 1669, 6, 0.121096, 0.064425, 0.144569, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
	SetPlayerCheckpoint(playerid, -900.8949,1869.0201,20.2616, 3.0);
	ClearAnimations(playerid);
	new woodamount = 10;
	SetPVarInt(playerid, "woodamount1",woodamount);
	SetPVarInt(playerid, "loadid", 1);
	ZavodInfo[2] -= 2;
	ZavodInfo[0] -= 2;

	return 1;
}

stock ShowDostupModel(playerid,dialogid,button1[],button2[])
{
	new mess[3000];
	for(new i;i<sizeof(AutoS); i++)
	{
		f(mess,"%s\n{FFFFFF}%d » %s Цена: %d$",mess,i+1,AutoS[i][AUTO_NAME],AutoS[i][AUTO_AREA][1]);
	}
	ShowPlayerDialog(playerid,dialogid,2,"{ffcf00}Доступные машины",mess,button1,button2);
	return 1;
}
stock IsAMafia(playerid)
{
	new member = pData[playerid][pFraction];
	switch(member)
	{
		case F_RM, F_LCN, F_YAK: return 1;
	}
	return 0;
}

Float:GetDistance(Float:x1, Float:y1, Float:z1, Float:x2, Float:y2, Float:z2)
{
	return Float:floatsqroot(floatpower(floatabs(floatsub(x2, x1)), 2) + floatpower(floatabs(floatsub(y2, y1)), 2) + floatpower(floatabs(floatsub(z2, z1)), 2));
}
forward LearnUniver(playerid, id);
public LearnUniver(playerid, id)
{
    if(GetPVarInt(playerid, "learnobject") == 1)
	{
	    switch(id)
	    {
	        case 1:
	        {
	            if(pData[playerid][pMath] >= 100
				|| GetPVarInt(playerid, "AFK_Time") >= 20) return SendClientMessage(playerid, -1, "Вы полностью выучили этот предмет или Были в AFK"), _off(playerid, "");
	            pData[playerid][pMath] += 2;
	            UpdatePlayerData(playerid, "math", pData[playerid][pMath]);
	            GameTextForPlayer(playerid, "~g~ +2%", 5000, 1);

	            switch(random(3))
				{
				    case 0: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Математический Анализ\n\nЭто — совокупность разделов математики, \nпосвящённых исследованию функций. \nВ более общей трактовке к анализу \nотносят и функциональный анализ вместе с теорией \nинтеграла Лебега, комплексный анализ, \nизучающий функции, заданные на комплексной плоскости.", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 1: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Введение\n\nВысшая математика — курс обучения в средних \nи высших учебных заведениях. Высшая математика \nвключает: \nаналитическую геометрию, элементы высшей и линейной алгебр, \nдифференциальное и интегральное исчисления, дифференциальные уравнения, \nтеорию вероятностей и элементы математической статистики.", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 2: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Общая математика\n\nЭто -  раздел математики, изучающий алгебраические системы,\n такие как группы, кольца, поля, модули, решётки, \nа также отображения между такими структурами. \nПримерами алгебраических структур с бинарной операцией \n являются полугруппы, моноиды, квазигруппы.", 0, 140, "Arial", 24, 0, -1, 0, 1);
				}
	        }
	        case 2:
	        {
	            if(pData[playerid][pInform] >= 100
	            || GetPVarInt(playerid, "AFK_Time") >= 20) return SendClientMessage(playerid, -1, "Вы полностью выучили этот предмет или Были в AFK"), _off(playerid, "");
	            pData[playerid][pInform] += 2;
	            UpdatePlayerData(playerid, "inform", pData[playerid][pInform]);
	            GameTextForPlayer(playerid, "~g~ +2%", 5000, 1);

	            switch(random(3))
				{
				    case 0: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Этимология\n\nСлово «информатика» образовано из \n«информ» от «информация» и «атика» от «автоматика». \nВ русском, английском, французском и \nнемецком языках в 1960-х годах была тенденция к замене термина словом, \nсвязанным со словом «информация».", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 1: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Введение\n\nИнформатика— наука о методах и \nпроцессах сбора, хранения, обработки, \nпередачи, анализа и оценки информации, обеспечивающих возможность \nеё использования. Она включает дисциплины, \nотносящиеся к обработке информации \nв вычислительных машинах и вычислительных сетях", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 2: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Теоретическая информатика\n\nТеоретическая информатика занимается \nтеорией формальных языков и автоматов, теориями \nвычислимости и сложности, теорией графов, криптологией, логикой, \nформальной семантикой и предлагает основы \nдля разработки Компиляторов языков программирования.", 0, 140, "Arial", 24, 0, -1, 0, 1);
				}
	        }
	        case 3:
	        {
	            if(pData[playerid][pHistory] >= 100
	            || GetPVarInt(playerid, "AFK_Time") >= 20) return SendClientMessage(playerid, -1, "Вы полностью выучили этот предмет или Были в AFK"), _off(playerid, "");
	            pData[playerid][pHistory] += 2;
	            UpdatePlayerData(playerid, "history", pData[playerid][pHistory]);
	            GameTextForPlayer(playerid, "~g~ +2%", 5000, 1);
	            switch(random(3))
				{
				    case 0: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Историография\n\nТермин историография имеет несколько значений. \nЭто наука о том, как пишется история, насколько правильно \nприменяется исторический метод и \nкак развивается историческое познание. \nТем же термином обозначают \nсовокупность исторических трудов.", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 1: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Введение\n\nИстория — область знаний, \nа также гуманитарная наука, \nзанимающаяся изучением человека в прошлом. \nЭто наука, изучающая всевозможные источники о прошлом для того, \nчтобы установить последовательность событий, \nисторический процесс, объективность описанных фактов.", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 2: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Философия истории\n\nЭто — часть философии, пытающаяся ответить \nна вопрос о конечном смысле человеческой истории. \nК этой же области философии относятся спекуляции \nо возможном телеологическом конце истории, \nто есть развивается ли история по какому-либо плану.", 0, 140, "Arial", 24, 0, -1, 0, 1);
				}
	        }
	        case 4:
        	{
        	    if(pData[playerid][pRussian] >= 100
        	    || GetPVarInt(playerid, "AFK_Time") >= 20) return SendClientMessage(playerid, -1, "Вы полностью выучили этот предмет или Были в AFK"), _off(playerid, "");
	            pData[playerid][pRussian] += 2;
	            UpdatePlayerData(playerid, "russian", pData[playerid][pRussian]);
	            GameTextForPlayer(playerid, "~g~ +2%", 5000, 1);

	            switch(random(3))
				{
				    case 0: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Лексика\n\nНа лексику современного русского языка \nнемалое влияние оказали те языки, \nс которыми русский длительное время контактировал. \n Древнейший слой заимствований — \nвосточногерманского происхождения, \nа также немногочисленные, но важные слова, \nзаимствованные из древних иранских языков.", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 1: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Введение\n\nРусский язык относится к восточной группе \nславянских языков, принадлежащих индоевропейской семье языков.\n Является восьмым языком в мире по численности \nвладеющих им как родным и пятым языком в мире \nпо общей численности говорящих", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 2: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Современный русский язык\n\nСовременный русский язык \nсформировался примерно на рубеже XVIII—XIX веков. \nИз последующих изменений следует выделить \nреформу русского правописания 1918 года, \nа также менее существенные изменения 1956 года.", 0, 140, "Arial", 24, 0, -1, 0, 1);
				}
	        }
	        case 5:
	        {
	            if(pData[playerid][pBiology] >= 100
	            || GetPVarInt(playerid, "AFK_Time") >= 20) return SendClientMessage(playerid, -1, "Вы полностью выучили этот предмет или Были в AFK"), _off(playerid, "");
	            pData[playerid][pBiology] += 2;
	            UpdatePlayerData(playerid, "biology", pData[playerid][pBiology]);
	            GameTextForPlayer(playerid, "~g~ +2%", 5000, 1);

	            switch(random(3))
				{
				    case 0: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Теория гена\n\nФорма и функции биологических объектов \nвоспроизводятся из поколения в поколение генами, которые \nявляются элементарными единицами наследственности. \nФизиологическая адаптация к окружающей среде не может быть \nзакодирована в генах и быть унаследованной в потомстве.", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 1: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Введение\n\nБиология — система наук, \nобъектами изучения \nявляются живые существа и их \nвзаимодействие с окружающей средой. Биология изучает \nвсе аспекты жизни, в частности, \nструктуру, функционирование, рост, \nпроисхождение, эволюцию и распределение \nживых организмов на Земле. ", 0, 140, "Arial", 24, 0, -1, 0, 1);
					case 2: SetPlayerObjectMaterialText(playerid, LearnObject[playerid], "Тема Лекции: Клетка\n\nЭто — базовая единица жизни. \nВсё живое вещество состоит из клеток, \nлибо из продуктов секреции этих клеток. \nНапример, кости, кожа, слюна, раковины, ДНК, вирусы. \nВсе клетки происходят из \nдругих клеток путём клеточного деления.", 0, 140, "Arial", 24, 0, -1, 0, 1);
				}
	        }
	    }
	}
	return 1;
}
stock GetHospitalCity(playerid)
{
	new Float: dist1, Float:dist2, Float:dist3;
	dist1 = GetDistance(GetPVarFloat(playerid,"Player_DeathX"), GetPVarFloat(playerid,"Player_DeathY"), GetPVarFloat(playerid,"Player_DeathZ"), 1172.6527,-1323.2075,15.4027);
	dist2 = GetDistance(GetPVarFloat(playerid,"Player_DeathX"), GetPVarFloat(playerid,"Player_DeathY"), GetPVarFloat(playerid,"Player_DeathZ"), 1607.4236,1815.2452,10.8203);//1607.4236,1815.2452,10.8203
	dist3 = GetDistance(GetPVarFloat(playerid,"Player_DeathX"), GetPVarFloat(playerid,"Player_DeathY"), GetPVarFloat(playerid,"Player_DeathZ"), -2655.0583,640.1632,14.4545);
	if(dist1 < dist2 && dist1 < dist3) return 1;
	if(dist2 < dist1 && dist2 < dist3) return 2;
	if(dist3 < dist1 && dist3 < dist2) return 3;
	return 1;
}



forward BreakDoor(Float:x,Float:y,Float:z,i);
public BreakDoor(Float:x,Float:y,Float:z,i)
{
	DestroyObject(BreakDoorObject[0]);
	DestroyObject(BreakDoorObject[1]);
	DestroyObject(BreakDoorObject[2]);
	DestroyObject(BreakDoorObject[3]);
	DestroyDynamicPickup(gBreakDoorPickup[2]);
    CreateExplosion(x,y,z,12,3.0);
    gBreakDoorPickup[0] = CreateDynamicPickup(1318,1,x,y,z,i);
	gBreakDoorPickup[1] = CreateDynamicPickup(1318,1,2144.2314,1607.9331,993.6882,i);
	ActivDetonatr1 = true;
    mes = "";
    switch(i)
	{
		case 2: f(mes, "[Внимание!] » » Была взорвана дверь в хранилище | Банк Лос-Сантос");
		case 3: f(mes, "[Внимание!] » » Была взорвана дверь в хранилище | Банк Сан-Фиерро");
		case 4: f(mes, "[Внимание!] » » Была взорвана дверь в хранилище | Банк Лос-Сантос");
	}
	CopMes(0xFFA640FF,mes);
	new slot = 0;
	SetTimerEx("UnBreakDoor",180000,false,"i",slot);
}

forward OnDetonate(Float:x,Float:y,Float:z,Float:x2,Float:y2,Float:z2,i);
public OnDetonate(Float:x,Float:y,Float:z,Float:x2,Float:y2,Float:z2,i)
{
	CreateExplosion(x,y,z,12,3.0);
	DestroyDynamicPickup(gDetonatePickup[0][0]);
	gDetonatePickup[0][0] = CreateDynamicPickup(1318,1,x,y,z,i);
	gDetonatePickup[0][1] = CreateDynamicPickup(1318,1,x2,y2,z2,i);
	gDetonateArea[0][0] = CreateDynamicSphere(x,y,z,1.0,i);
	gDetonateArea[0][1] = CreateDynamicSphere(x2,y2,z2,1.0,i);
	ActivDetonatr = true;
	mes = "";
	switch(i)
	{
		case 2: f(mes, "[Внимание!] » » Была взорвана дверь в Банке Лос-Сантос, возможно ограбление.");
		case 3: f(mes, "[Внимание!] » » Была взорвана дверь в Банке Сан-Фиерро, возможно ограбление.");
		case 4: f(mes, "[Внимание!] » » Была взорвана дверь в Банке Лас-Вентурас, возможно ограбление.");
	}
	CopMes(0xFFA640FF,mes);
	SetTimer("OnUnDetonate",180000+120000,false);
}

forward UnBreakDoor(id);
public UnBreakDoor(id)
{
	DestroyDynamicPickup(gBreakDoorPickup[0]);
	DestroyDynamicPickup(gBreakDoorPickup[1]);
    ActivDetonatr1 = false;
    gOtmiv[1] = 0;
}

forward OnUnDetonate(id);
public OnUnDetonate(id)
{
	DestroyDynamicPickup(gDetonatePickup[id][0]);
    DestroyDynamicPickup(gDetonatePickup[id][1]);
	gDetonateArea[id][0] = 0;
	gDetonateArea[id][1] = 0;
	gDetonatePickup[id][0] = 0;
	gDetonatePickup[id][1] = 0;
	ActivDetonatr = false;
}
stock UpdateFillingText(id)
{
	new mess[300];
	new ownerid = gFillings[id][fillOwnerID];
	new nickname[MAX_PLAYER_NAME];
	if(ownerid)
	{
		GetPlayerNameByID(ownerid,nickname);
		f(mess, "{ff9601}Номер заправки: {FFFFFF}№%d\n{ff9601}Владелец: {3dbc55}%s\n{ff9601}Стоимость 1 литра: {0b8fff}%d$\n\n{ff9601}Чтобы заправиться введите: {FFFFFF}/fill [кол-во литров]", id, nickname, gFillings[id][fillFuelPrice]);
	}
	else
	{
	    f(mess, "{ff9601}Номер заправки: {FFFFFF}№%d\n{ff9601}Стоимость: {FFFFFF}%d\n{ff9601}Приоберсти заправку: {FFFFFF}/buyfilling\n\n{ff9601}Чтобы заправиться введите: {FFFFFF}/fill [кол-во литров]", id, gFillings[id][fillPrice]);
	}
	UpdateDynamic3DTextLabelText(gFillingText[id], -1, mess);
	return 1;
}
stock ShowStats(id, actid)
{
	new idd = id;
	new string1[1024];
	new h,m,s; gettime(h,m,s);
	new day,month,year; getdate(year,month,day);
	new sex[12],
		fraction[42],
		job[42],
		jobb[42],
		jobs[42],
		bussiness[32],
		housenumber[32],
		zagotovka[32];
	if(pData[idd][pSex] == 2) sex = "Женский"; else sex = "Мужской";
//	if(pData[idd][pJob]) format(jobb, 32, "%s", gJobNames[pData[idd][pJob]-1]);
//	else if(!pData[idd][pJob]) jobb = "";

	if(pData[idd][pFraction])
	{
		new fractionid = pData[idd][pFraction]-1;
		new rank = pData[idd][pRank];
		strcat(fraction,gFractionName[fractionid]);
		if(pData[idd][pSubfraction] > 0)
		{
			new frid = GetSubfractionID(fractionid);
			new subid = pData[idd][pSubfraction]-1;
			strcat(jobs,gSubfractionName[frid][subid]);
			//strcat(job, " / ");
		}
		if(fractionid+1 == 8 && pData[idd][pSubfraction] == 2)
		strcat(job, gFractionVMFRankName[rank-1]);
		else strcat(job,gFractionRankName[fractionid][rank-1]);
	}
	else format(fraction, 32, "");

	if(pData[idd][pHouse]) housenumber = "{33AA33}Есть{ffffff}";
	else
	housenumber = "{FF6347}Нет{ffffff}";
	if(pData[idd][pBusiness]) bussiness = "{33AA33}Есть{ffffff}";
	else
	bussiness = "{FF6347}Нет{ffffff}";

	new number[32];
	if(pData[idd][pPhone] != 0) f(number, "%d", pData[idd][pPhone]);
	else number = "{FF6347}Нет{ffffff}";

	//Если убрать мес и сделать как на том моде будет рекурсия вроду :D
	mes = "";

	f(mes, "{ffcf00}Имя:\t\t\t\t{ffffff}%s\n",pData[idd][pNickname]);
	strcat(string1,mes);
	f(mes, "{ffcf00}Уровень:{ffffff}\t\t\t%d\n",pData[idd][pLevel]);
	strcat(string1,mes);
	f(mes, "{ffcf00}Опыт:{ffffff}\t\t\t\t%d из %d\n",pData[idd][pExp],pData[idd][pLevel]*8);
	strcat(string1,mes);
	f(mes, "{ffcf00}Уникальный ID:\t\t{ffffff}%d\n",pData[idd][pMysqlID]);
	strcat(string1,mes);
	f(mes, "Предупреждение:\t\t{ffffff}%d из 3\n\n",pData[idd][pWarnc]);
	strcat(string1,mes);

	f(mes, "Организация:{ffffff}\t\t\t%s\n",fraction);
	strcat(string1,mes);
	f(mes, "Подразделение:{ffffff}\t\t\t\t%s\n",jobs);
	strcat(string1,mes);
	f(mes, "Ранг:{ffffff}\t\t\t\t%s\n",job);
	strcat(string1,mes);
//	f(mes, "Работа:{ffffff}\t\t\t\t%s\n\n",jobb);
//	strcat(string1,mes);

	f(mes, "Ключи от дома:\t\t{ffffff}%s\n",housenumber);
	strcat(string1,mes);
	f(mes, "Ключи от бизнеса:\t\t{ffffff}%s\n\n",bussiness);
	strcat(string1,mes);
	
	f(mes, "Пол:{ffffff}\t\t\t\t%s\n",sex);
	strcat(string1,mes);
	f(mes, "Номер телефона:{ffffff}\t\t%s\n", number);
	strcat(string1,mes);
	f(mes, "Баланс телефона:{ffffff}\t\t%d$\n",pData[idd][pPhoneMoney]);
	strcat(string1,mes);
	f(mes, "Наркотики:{ffffff}\t\t\t%d\n\n",pData[idd][pDrugs]);
	strcat(string1,mes);

    f(mes, "Законопослушность:{ffffff}\t\t%d%\n",pData[idd][pZakon]);
	strcat(string1,mes);
	f(mes, "Наркозависимость:{ffffff}\t\t%d%\n",pData[idd][pNarkZav]);
	strcat(string1,mes);

	if(IsAMafia(idd))
	{
		f(mes, "Материалы:{ffffff}\t\t\t%d\n",pData[idd][pGunAmount]);
		strcat(string1,mes);
	}
	if(IsAGang(idd))
	{
		f(mes, "Заготовок материалов:{ffffff}\t%d", pData[idd][pMaterialN]);
		strcat(string1,mes);
	}
	return ShowPlayerDialog(actid,dMes,0,"{ffcf00}Статистика аккаунта",string1,"Закрыть","");
}
stock auninviteplayer(actplayerid)
{
	if(!IsPlayerConnected(actplayerid)) return -1;
	if(!pData[actplayerid][pFraction]) return -1;
	mes = "";
	f(mes, "UPDATE `accounts` SET `fraction` = '0', `rank` = '0', `fractionskin` = '0', `subfraction` = '0' WHERE `id` = '%d'",pData[actplayerid][pMysqlID]);
	sql_query(zConn, mes); mes = "";
	pData[actplayerid][pFraction] = 0;
	pData[actplayerid][pRank] = 0;
	pData[actplayerid][pFractionSkin] = 0;
	pData[actplayerid][pSubfraction] = 0;
	SetPlayerColor(actplayerid,0xFFFFFF11);
	SetPlayerSkin(actplayerid, pData[actplayerid][pSkin]);
	return 1;
}

stock LoadPick()
{
	new time = GetTickCount();
	new Result:grabbank = sql_query(zConn, "SELECT * FROM `grabbank`", QUERY_CACHED);
	new zRes[128];
	for(new i; i < sql_num_rows(grabbank); i++)
	{
		sql_fetch_row(grabbank,"|",zRes);
		sql_next_row(grabbank);
		sscanf(zRes,"p<|>e<ddddd>",GrabBank[i]);
	}
	sql_free_result(grabbank);
	printf(" [Загрузка количества ограблений]: Было загружено - потрачено %d (ms)",GetTickCount() - time);
	return true;
}
stock LoadPick1()
{
	new time = GetTickCount();
	new Result:CaptureTimes1 = sql_query(zConn, "SELECT * FROM `capturegang`", QUERY_CACHED);
	new zRes[128];
	for(new i; i < sql_num_rows(CaptureTimes1); i++)
	{
		sql_fetch_row(CaptureTimes1,"|",zRes);
		sql_next_row(CaptureTimes1);
		sscanf(zRes,"p<|>e<ddddd>",CaptureTimes[i]);
	}
	sql_free_result(CaptureTimes1);
	printf(" [Загрузка количества каптов]: Было загружено - потрачено %d (ms)",GetTickCount() - time);
	return true;
}
stock MonthText(month)
{
    new mtext[20];
    switch(month)
    {
        case 1: mtext = "Января";
        case 2: mtext = "Февраля";
        case 3: mtext = "Марта";
        case 4: mtext = "Апреля";
        case 5: mtext = "Мая";
		case 6: mtext = "Июня";
		case 7: mtext = "Июля";
		case 8: mtext = "Августа";
		case 9: mtext = "Сентября";
		case 10: mtext = "Октября";
		case 11: mtext = "Ноября";
		case 12: mtext = "Декабря";
	}
	return mtext;
}
stock DialogRegister(playerid)
{
	mes = "";
    new year, month,day;
	getdate(year, month, day);
	new hour,minuite,second;
	gettime(hour,minuite,second);
	format(mes, sizeof(mes),"{FFFFFF}Время: %02d:%02d\nДата: %d/%s/%d\n\nВаше имя: {1DBF3A}%s\n\n{FFFFFF}Добро пожаловать на сервер Dallas Role Play\nВведите пароль в строку ввода\nДанный пароль будет у вас спрашиватся при каждом заходе на сервер\n\n\t{FF9900}Примечание:\n\t-Пароль должен содержать от 6-ти до 16-ти символов\n\t-В пароле можно использовать только английские буквы.",
	hour, minuite, day, MonthText(month), year, pData[playerid][pNickname]);
	ShowPlayerDialog(playerid, dRegister, DIALOG_STYLE_INPUT, "{6699FF}Регистрация | {FFFFFF}Ввод пароля", mes, "Ввод","Выход");
	return 1;
}
stock DialogLogin(playerid)
{
	mes = "";
    new year, month,day;
	getdate(year, month, day);
	new hour,minuite,second;
	gettime(hour,minuite,second);
	strcat(mes, "{FFFFFF}Добро пожаловать на Dallas Role Play | Alpha.\n");
	strcat(mes, "Рады Вас видеть на сервере.\n");
	new accauntinfo[150];
	f(accauntinfo, "{27C400}Сегодня %d %s %d | Время: %02d:%02d\n\n", day, MonthText(month), year, hour, minuite);
	strcat(mes, accauntinfo);
	f(accauntinfo, "{FFFFFF}Аккаунт с именем {4F94CD}%s {FFFFFF}зарегистрирован,введите пароль:\n", pData[playerid][pNickname]);
	strcat(mes, accauntinfo);
	ShowPlayerDialog(playerid,dLogin,DIALOG_STYLE_PASSWORD,"{FFFF00}Авторизация",mes,"ОК","Выход");
	return 1;
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	new gt = GetTickCount();
	if(((weaponid == 24 && ADG[playerid][0] == 25) || (weaponid == 25 && ADG[playerid][0] == 24)) && ((gt - ADG[playerid][1]) < 500))
 	{
		SendClientMessage(playerid,COLOR_LIGHTRED,"» Вы кикнуты по подозрению в читерстве (#DubleGun)");
		NewKick(playerid);
		return 0;
	}
	ADG[playerid][0] = weaponid;
	ADG[playerid][1] = gt;
	return 1;
}
stock TunningGarages(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid,20.0,2065.3801,-1832.5280,13.68)||IsPlayerInRangeOfPoint(playerid,20.0,-99.7154,1117.5011,19.88)||IsPlayerInRangeOfPoint(playerid,20.0,719.8336,-456.7990,16.47)||IsPlayerInRangeOfPoint(playerid,20.0,-1420.4562,2583.2180,55.98)||IsPlayerInRangeOfPoint(playerid,20.0,-2424.8093,1021.1127,50.53)||IsPlayerInRangeOfPoint(playerid,20.0,1975.0587,2161.9456,11.21)||
    IsPlayerInRangeOfPoint(playerid,20.0,487.9699,-1741.5265,11.28)||IsPlayerInRangeOfPoint(playerid,20.0,1025.7683,-1023.8249,32.24)||IsPlayerInRangeOfPoint(playerid,20.0,-1904.9709,285.8506,41.18)||IsPlayerInRangeOfPoint(playerid,20.0,615.2845,-124.2390,997.7112)||IsPlayerInRangeOfPoint(playerid,20.0,616.7787,-74.8150,997.6274)||IsPlayerInRangeOfPoint(playerid,20.0,617.5302,-1.9900,1001.06))return true;
    return false;
}
CMD:universetyy(playerid, params[])
{
	mes = "";
	new veher[50];
	veher = (pData[playerid][pDiplom]) ? ("{33AAFF}Есть") : ("{FF5030}Нет");
	f(mes, "{FFFFFF}Математика » %d\nИнформатика » %d\nИстория » %d\nРусский язык » %d\nБиология » %d\n\nДиплом: %s", pData[playerid][pMath], pData[playerid][pInform], pData[playerid][pHistory], pData[playerid][pRussian], pData[playerid][pBiology], veher);
	ShowPlayerDialog(playerid, dMes, DIALOG_STYLE_MSGBOX, "{ffcf00}Изученно предметов", mes, "Закрыть", "");
	return 1;
}

HideSpeedometr(playerid)
{
	UpdateSpeed[playerid] = false;
	DestroyDynamicObject(SpdObj[playerid][0]);
	DestroyDynamicObject(SpdObj[playerid][1]);
	DestroyDynamicObject(SpdObj[playerid][2]);
	DestroyDynamicObject(SpdObj[playerid][3]);
	SpdObj[playerid][0] = INVALID_OBJECT_ID;
	SpdObj[playerid][1] = INVALID_OBJECT_ID;
	SpdObj[playerid][2] = INVALID_OBJECT_ID;
	SpdObj[playerid][3] = INVALID_OBJECT_ID;
	//--------------------------------------
}



stock SpeedoUpdate(playerid)
{
	if(UpdateSpeed[playerid])
	{
		new veh = GetPlayerVehicleID(playerid), Float:health;
		//if(IsVelo(veh)) return 1;проверка на велики
		new spe[64];//км/ч
		format(spe,sizeof(spe),"%d КМ/Ч", SpeedVehicle(playerid)/2);
		SetDynamicObjectMaterialText(SpdObj[playerid][0],0,spe,OBJECT_MATERIAL_SIZE_512x256,"Arial",64,false,0xffffffff,0,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);//Сверху первая 0xC0C0C0FF
		//----------------------------------------------------------------------
		GetVehicleHealth(veh, health);
		new hea[32];//хп
		format(hea,sizeof(hea),"%.1f%", health/10);  // 0xFF0000FF - синий,   C0C0C0FF - светлый, 0xC0C0C071 светл желтый
		SetDynamicObjectMaterialText(SpdObj[playerid][1],0,hea,OBJECT_MATERIAL_SIZE_512x256,"Arial",64,false,0xff888888,0,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);//Нижняя первая 0xC0C0C090
		//----------------------------------------------------------------------
		new fue[32];//бензин
		format(fue,sizeof(fue),"%.1f/100 Л.", gVehicles[veh-1][vFuel]);  //переменная которая хранит бензин авто// 0xFF0000FF - синий,   C0C0C0FF - светлый, 0xC0C0C071 светл желтый
		SetDynamicObjectMaterialText(SpdObj[playerid][3],0,fue,OBJECT_MATERIAL_SIZE_512x256,"Arial",64,false,0xff888888,0,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);//Нижняя вторая 0xC0C0C090
		//----------------------------------------------------------------------
		new engine,lights,alarm,doors,bonnet,boot,objective;
		GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
		//------------------------------------------------------------------
		if(engine == VEHICLE_PARAMS_ON)
		{
			new tCarModel[MAX_PLAYERS];
			tCarModel[playerid] = GetVehicleModel(veh);
			SetDynamicObjectMaterialText(SpdObj[playerid][2],0,GetVehicleName(tCarModel[playerid]),OBJECT_MATERIAL_SIZE_512x256,"Arial",64,false,0xffffffff,0,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);//Верхняя вторая 0xC0C0C0FF
			//------------------------------------------------------------------
			if(health < 400 || gVehicles[veh-1][vFuel] <= 0)
			{
				SetVehicleParamsEx(veh,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
				SetDynamicObjectMaterialText(SpdObj[playerid][2],0,"  Заглохла",OBJECT_MATERIAL_SIZE_512x256,"Arial",64,false,0xffff0000,0,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);//Верхняя вторая 0xFF0000FF
			}
		}
		else
		{
			if(health < 400 || gVehicles[veh-1][vFuel] <= 0) SetDynamicObjectMaterialText(SpdObj[playerid][2],0,"  Заглохла",OBJECT_MATERIAL_SIZE_512x256,"Arial",64,false,0xffff0000,0,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);//Верхняя вторая 0xFF0000FF
			else SetDynamicObjectMaterialText(SpdObj[playerid][2],0,"  Нажмите CTRL",OBJECT_MATERIAL_SIZE_512x256,"Arial",64,false,0xffffff00,0,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);//Верхняя вторая
		}
		//------------------------------------------------------------------
	}
	return 1;
}

stock BuyCarAuto(playerid, listitem)
{
    new color1 = 1;
	new color2 = 1;
	new houseid = pData[playerid][pHouse]-1;
	SetPlayerVirtualWorld(playerid,0);
	SetPlayerInterior(playerid,0);
	if(!pData[playerid][pHouse] && !pData[playerid][pHotel]) return SendClientMessage(playerid,CWHITE,"» У Вас нет дома");
	new modelid = AutoS[listitem][AUTO_AREA][0];//model - 400;
	new price = AutoS[listitem][AUTO_AREA][1];//gTransport[modelid][trPrice];
	if(GetPlayerMoneyEx(playerid) < price) return SendClientMessage(playerid,CWHITE,"» У вас недостаточно денег");
	mes = "";
	f(mes, "INSERT INTO `cars` VALUES ('','%d','%d','GoodCar','%.0f','0.0','1000','%d','%d','0|0|0|0|0|0|0|0|0|0|0|0|0|0','0','%d')",pData[playerid][pMysqlID],modelid,250+0.0,color1,color2,AutoS[listitem][AUTO_AREA][1]);
	new Result:r = sql_query(zConn, mes); mes = "";
	new id = sql_insert_id(r);
	sql_free_result(r);
	UpdatePlayerData(playerid,"car",id);
	mes = "";
	new slot = -1;
	for(new i;i<MAX_VEHICLES;i++)
	{
		if(gCars[i][carOwnerid] == 0) {slot = i; break;}
	}
	if(slot == -1)
	{
		f(mes, "DELETE FROM `cars` WHERE `id` = '%d'",id);
		sql_query(zConn, mes); mes = "";
		SendClientMessage(playerid,CRED,"Ошибка слота (#01)");
	}
	pData[playerid][pCar] = id;
	gCars[slot][carMysqlID] = id;
	gCars[slot][carOwnerid] = pData[playerid][pMysqlID];
	gCars[slot][carModelid] = modelid;
	gCars[slot][carSell] = AutoS[listitem][AUTO_AREA][1];
	gCars[slot][carFuel] = 100;
	gCars[slot][carDrived] = 0.0;
	gCars[slot][carHealth] = 1000.0;
	gCars[slot][carColor1] = color1;
	gCars[slot][carColor2] = color2;
	strcat(gCars[slot][carPlate],"GoodCar");
	if(houseid >= 0)
	{
		new vehicleid = CreateVehicle(AutoS[listitem][AUTO_AREA][0], gHouses[houseid][houseParkX],gHouses[houseid][houseParkY],gHouses[houseid][houseParkZ],gHouses[houseid][houseParkR],gCars[slot][carColor1],gCars[slot][carColor2],-1);
		gCars[slot][carVid] = vehicleid;
		gVehicles[vehicleid-1][vLock] = 1;
		gVehicles[vehicleid-1][vFuel] = gCars[slot][carFuel];
		gVehicles[vehicleid-1][vDrived] = gCars[slot][carDrived];
		gVehicles[vehicleid-1][vHealth] = gCars[slot][carHealth];
		gVehicles[vehicleid-1][vOwnerid] = gCars[slot][carOwnerid];
		gVehicles[vehicleid-1][vX] = gHouses[houseid][houseParkX];
		gVehicles[vehicleid-1][vY] = gHouses[houseid][houseParkY];
		gVehicles[vehicleid-1][vZ] = gHouses[houseid][houseParkZ];
		gVehicles[vehicleid-1][vProbability] = 0;
	}
	SendClientMessage(playerid,0x7FC0E3FF,"Поздравляем Вы купили т/с. Оно доставлено к вашему дому");
	TransferMoney(playerid,-1,price,"buycar");
	return 1;
}

stock hideDialog( playerid ) return ShowPlayerDialogEx( playerid, dMes, 0, "","","", " ");


PutPlayerInSlotMachine(playerid, firstBet)
{
	if(Gambling[playerid] != G_STATE_NOT_GAMBLING) return true;
	Gambling[playerid] = G_STATE_READY;
	Slots[playerid][0] = random(5);
	Slots[playerid][1] = random(5);
	Slots[playerid][2] = random(5);
	ShowPlayerSlots(playerid,Slots[playerid][0],Slots[playerid][1],Slots[playerid][2]);
	Bet[playerid] = firstBet;
	TogglePlayerControllable(playerid,0);
	SlotCounter[playerid] = 30+random(18);
    SlotTimer[playerid] = SetTimerEx("Gambler",100,1,"d",playerid);
    Gambling[playerid] = G_STATE_GAMBLING;
 	CancelSelectTextDraw(playerid);
 	SetPVarInt(playerid, "GangCasino", -1);
	return true;
}

ShowPlayerSlots(playerid,slot1,slot2,slot3)
{
    TextDrawHideForPlayer(playerid,Digit1[0]);
	TextDrawHideForPlayer(playerid,Digit2[0]);
	TextDrawHideForPlayer(playerid,Digit3[0]);

	TextDrawHideForPlayer(playerid,Digit1[1]);
	TextDrawHideForPlayer(playerid,Digit2[1]);
	TextDrawHideForPlayer(playerid,Digit3[1]);

	TextDrawHideForPlayer(playerid,Digit1[2]);
	TextDrawHideForPlayer(playerid,Digit2[2]);
	TextDrawHideForPlayer(playerid,Digit3[2]);

	TextDrawHideForPlayer(playerid,Digit1[3]);
	TextDrawHideForPlayer(playerid,Digit2[3]);
	TextDrawHideForPlayer(playerid,Digit3[3]);

	TextDrawHideForPlayer(playerid,Digit1[4]);
	TextDrawHideForPlayer(playerid,Digit2[4]);
	TextDrawHideForPlayer(playerid,Digit3[4]);

	TextDrawHideForPlayer(playerid,Digit1[5]);
	TextDrawHideForPlayer(playerid,Digit2[5]);
	TextDrawHideForPlayer(playerid,Digit3[5]);


	TextDrawShowForPlayer(playerid,Digit1[slot1]);
	TextDrawShowForPlayer(playerid,Digit2[slot2]);
	TextDrawShowForPlayer(playerid,Digit3[slot3]);


}

GangUpdateBalanceTextDraw(playerid, balance)
{
    mes = "";
	f(mes, "Balance: %d$", balance);
	PlayerTextDrawSetString(playerid, CasinoStavka, mes);
	Balance[playerid] = balance;
}

GangShowForTextDraw(playerid)
{
	Slots[playerid][0] = random(5);
	Slots[playerid][1] = random(5);
	Slots[playerid][2] = random(5);
	ShowPlayerSlots(playerid,Slots[playerid][0],Slots[playerid][1],Slots[playerid][2]);

	TextDrawShowForPlayer(playerid, Box);
	TextDrawShowForPlayer(playerid, KasinoGangBox);

	TextDrawShowForPlayer(playerid, KeyStartGang);
	TextDrawShowForPlayer(playerid, KeyMoneyGang);
	TextDrawShowForPlayer(playerid, KeyExitGang);

	CasinoStavka = CreatePlayerTextDraw(playerid, 234.333374, 183.348159, "Balance: 0$");
	PlayerTextDrawLetterSize(playerid, CasinoStavka, 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, CasinoStavka, 1);
	PlayerTextDrawColor(playerid, CasinoStavka, -65281);
	PlayerTextDrawSetShadow(playerid, CasinoStavka, 0);
	PlayerTextDrawSetOutline(playerid, CasinoStavka, 1);
	PlayerTextDrawBackgroundColor(playerid, CasinoStavka, 51);
	PlayerTextDrawFont(playerid, CasinoStavka, 2);
	PlayerTextDrawSetProportional(playerid, CasinoStavka, 1);


	f(mes, "Money: %d$", GetPlayerMoneyEx(playerid));
	CasinoAllMoney = CreatePlayerTextDraw(playerid, 234.000030, 197.451736, mes);
	PlayerTextDrawLetterSize(playerid, CasinoAllMoney, 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, CasinoAllMoney, 1);
	PlayerTextDrawColor(playerid, CasinoAllMoney, -1);
	PlayerTextDrawSetShadow(playerid, CasinoAllMoney, 0);
	PlayerTextDrawSetOutline(playerid, CasinoAllMoney, 1);
	PlayerTextDrawBackgroundColor(playerid, CasinoAllMoney, 51);
	PlayerTextDrawFont(playerid, CasinoAllMoney, 2);
	PlayerTextDrawSetProportional(playerid, CasinoAllMoney, 1);

	PlayerTextDrawShow(playerid,CasinoStavka);
	PlayerTextDrawShow(playerid,CasinoAllMoney);

	SetPVarInt(playerid, "GangCasino", 1);

}

HideSlotsForPlayer(playerid)
{
    TextDrawHideForPlayer(playerid,Digit1[0]);
	TextDrawHideForPlayer(playerid,Digit2[0]);
	TextDrawHideForPlayer(playerid,Digit3[0]);

	TextDrawHideForPlayer(playerid,Digit1[1]);
	TextDrawHideForPlayer(playerid,Digit2[1]);
	TextDrawHideForPlayer(playerid,Digit3[1]);

	TextDrawHideForPlayer(playerid,Digit1[2]);
	TextDrawHideForPlayer(playerid,Digit2[2]);
	TextDrawHideForPlayer(playerid,Digit3[2]);

	TextDrawHideForPlayer(playerid,Digit1[3]);
	TextDrawHideForPlayer(playerid,Digit2[3]);
	TextDrawHideForPlayer(playerid,Digit3[3]);

	TextDrawHideForPlayer(playerid,Digit1[4]);
	TextDrawHideForPlayer(playerid,Digit2[4]);
	TextDrawHideForPlayer(playerid,Digit3[4]);

	TextDrawHideForPlayer(playerid,Digit1[5]);
	TextDrawHideForPlayer(playerid,Digit2[5]);
	TextDrawHideForPlayer(playerid,Digit3[5]);

	TextDrawHideForPlayer(playerid, Box);
	TextDrawHideForPlayer(playerid, KasinoGangBox);

	TextDrawHideForPlayer(playerid, KeyStartGang);
	TextDrawHideForPlayer(playerid, KeyMoneyGang);
	TextDrawHideForPlayer(playerid, KeyExitGang);

	PlayerTextDrawHide(playerid,CasinoStavka);
	PlayerTextDrawHide(playerid,CasinoAllMoney);
	PlayerTextDrawDestroy(playerid,CasinoStavka);
	PlayerTextDrawDestroy(playerid,CasinoAllMoney);

	SetPVarInt(playerid, "GangCasino", -1);
	SetPVarInt(playerid, "StartCasino", 0);

	CancelSelectTextDraw(playerid);
}
ExitPlayerFromSlotMachine(playerid)
{
	HideSlotsForPlayer(playerid);
	Gambling[playerid] = G_STATE_NOT_GAMBLING;
	TogglePlayerControllable(playerid,1);
    return true;
}
forward Gambler(playerid);
public Gambler(playerid)
{
	if(Gambling[playerid] != G_STATE_GAMBLING)
	{
	    print("error: 15. (Ivan_Budko => Форум)");
	    KillTimer(SlotTimer[playerid]);
	    SlotTimer[playerid] = -1;
	    Gambling[playerid] = G_STATE_NOT_GAMBLING;
	    return false;
	}
	SlotCounter[playerid] -= 1;

	new slot = SlotCounter[playerid];
	if(slot < 10) Slots[playerid][2]+=random(3)+1;
	else if(slot < 20)
	{
	    Slots[playerid][1]+=random(3)+1;
	    Slots[playerid][2]+=random(3)+1;
	}
	else
	{
	    Slots[playerid][0]+=random(3)+1;
	    Slots[playerid][1]+=random(3)+1;
	    Slots[playerid][2]+=random(3)+1;
	}
	if(Slots[playerid][0] >= 6) Slots[playerid][0] = 0;
	if(Slots[playerid][1] >= 6) Slots[playerid][1] = 0;
	if(Slots[playerid][2] >= 6) Slots[playerid][2] = 0;

	ShowPlayerSlots(playerid,Slots[playerid][0],Slots[playerid][1],Slots[playerid][2]);

	if(SlotCounter[playerid] == 0)
	{
	    KillTimer(SlotTimer[playerid]);
	    SlotTimer[playerid] = -1;
		Gambling[playerid] = G_STATE_DISPLAY;

	    if(Slots[playerid][0] == Slots[playerid][1] && Slots[playerid][0] == Slots[playerid][2])
	    {
	        new Multiplier=1;

	        switch(Slots[playerid][0])
	        {
	            case 0: Multiplier = Balance[playerid]*2;    // Cherries
	            case 1: Multiplier = Balance[playerid]*3;   // Grapes
	            case 2: Multiplier = Balance[playerid]*4;   // 69's
	            case 3: Multiplier = Balance[playerid]*5;   // Bells
	            case 4: Multiplier = Balance[playerid]*6;  // Bar
	            case 5: Multiplier = Balance[playerid]*7;  // Double Bars
	        }

	        new money = Multiplier;
	        SendMes(playerid, COLOR_LIME, "Поздравляем! Вы выиграли: %d$", money);
	        GameTextForPlayer(playerid,"~g~Great!",5000,1);
	        TransferMoney(-1,playerid, money, "sellcar");
	        Slots[playerid][0] = random(5);
			Slots[playerid][1] = random(5);
			Slots[playerid][2] = random(5);
	    }
	    else
	    {
	        if(Slots[playerid][0] == Slots[playerid][1]
			|| Slots[playerid][1] == Slots[playerid][2]
			|| Slots[playerid][0] == Slots[playerid][2])
			{
			 	GameTextForPlayer(playerid,"~r~Loss!",5000,1);
		 		Balance[playerid] = 0;
		 		GangUpdateBalanceTextDraw(playerid, 0);
			}
	        else { GameTextForPlayer(playerid,"~r~Loss!",5000,1);  Balance[playerid] = 0; GangUpdateBalanceTextDraw(playerid, 0); }
	    }
	    Gambling[playerid] = G_STATE_NOT_GAMBLING;
	    SelectTextDraw(playerid,0x4169e1FF);
	    SetPVarInt(playerid, "GangCasino", 1);
	    TogglePlayerControllable(playerid, 1);
	    return true;
	}
	return false;
}

forward PlayAgainTimer(playerid);
public PlayAgainTimer(playerid) ExitPlayerFromSlotMachine(playerid);


stock IsPlayerNearStol(playerid)
{
	for(new i;i<sizeof(StolCoor);i++)
	{
		if(GetPlayerDistanceFromPoint(playerid,StolCoor[i][0],StolCoor[i][1],StolCoor[i][2]) < 4.0) return i;
	}
	return -1;
}
stock SetNameStol(playerid,stolid)
{
	SetPVarInt(playerid,"StolReg",stolid);
	StolInfo[stolid][Igrokov]++;
	if(StolInfo[stolid][Gamer][0] == INVALID_PLAYER_ID) {StolInfo[stolid][Gamer][0] = playerid; return 1;}
	if(StolInfo[stolid][Gamer][1] == INVALID_PLAYER_ID) {StolInfo[stolid][Gamer][1] = playerid; return 1;}
	if(StolInfo[stolid][Gamer][2] == INVALID_PLAYER_ID) {StolInfo[stolid][Gamer][2] = playerid; return 1;}
	if(StolInfo[stolid][Gamer][3] == INVALID_PLAYER_ID) {StolInfo[stolid][Gamer][3] = playerid; return 1;}
	if(StolInfo[stolid][Gamer][4] == INVALID_PLAYER_ID) {StolInfo[stolid][Gamer][4] = playerid; return 1;}
	return 0;
}
stock DelName(playerid,stolid)
{
	if(StolInfo[stolid][Gamer][0] == playerid) {StolInfo[stolid][Gamer][0] = INVALID_PLAYER_ID; StolInfo[stolid][Igrokov]--; return 1;}
	if(StolInfo[stolid][Gamer][1] == playerid) {StolInfo[stolid][Gamer][1] = INVALID_PLAYER_ID; StolInfo[stolid][Igrokov]--;  return 1;}
	if(StolInfo[stolid][Gamer][2] == playerid) {StolInfo[stolid][Gamer][2] = INVALID_PLAYER_ID; StolInfo[stolid][Igrokov]--;  return 1;}
	if(StolInfo[stolid][Gamer][3] == playerid) {StolInfo[stolid][Gamer][3] = INVALID_PLAYER_ID; StolInfo[stolid][Igrokov]--;  return 1;}
	if(StolInfo[stolid][Gamer][4] == playerid) {StolInfo[stolid][Gamer][4] = INVALID_PLAYER_ID; StolInfo[stolid][Igrokov]--;  return 1;}
	return 0;
}
stock GetCasinName(id)
{
	new name[64];
	if(id == INVALID_PLAYER_ID) name = "~w~--____________________";
	else
	{
		GetPlayerName(id,name,sizeof(name));
		new v = 20 - strlen(name);
		for(new g;g<v;g++)
		{
			strcat(name,"_",sizeof(name));
		}
	}
	return name;
}
stock ShowItog(stolid)
{
	new maxx = 0, id = -1;
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	   	i = cvector_get(PLAYERS, idx);
		if(GetPVarInt(i, "GameStol") == stolid && GetPVarInt(i, "Crupe") != 1)
		{
			if(GetPVarInt(i, "Ochki") > maxx)
			{
			 	maxx = GetPVarInt(i, "Ochki");
		 		id = i;
			}
		}
	}
	mes = "";
	f(mes, "Победителем становится: {FFCD00}%s{33AAFF}, у него {FFCD00}%d{33AAFF} очков", pData[id][pNickname], maxx);
	SendMes(id, COLOR_LIME,"Поздравляем! Вы выиграли %d$", StolInfo[stolid][Bank]/100*70);
	TransferMoney(-1, id, StolInfo[stolid][Bank]/100*70, "gamena4");
	for(new idx=0, i=0; idx<cvector_size(PLAYERS); idx++)
	{
	   	i = cvector_get(PLAYERS, idx);
		if(GetPVarInt(i,"GameStol") == stolid && GetPVarInt(i, "Crupe") != 1)
		{
			SendClientMessage(i,COLOR_GREEN,mes);
			SetPVarInt(i,"Ochki", -1);
			SetPVarInt(i,"StolReg",-1);
			SetPVarInt(i,"RegCasino",0);
		}
	}
 	for(new i;i<5;i++) StolInfo[stolid][Gamer][i] = INVALID_PLAYER_ID;
	StolInfo[stolid][Stavka] = 0;
	StolInfo[stolid][Bank] = 0;
	StolInfo[stolid][Igrokov] = 0;
	StolInfo[stolid][GameStart] = 0;
	mes = "";
	format(mes,sizeof(mes),"Игровой стол %d",stolid+1);
	UpdateDynamic3DTextLabelText(StolCoorText[stolid], -1, mes);
	return 1;
}

